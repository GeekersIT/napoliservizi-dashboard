import { gql } from 'apollo-angular';
import { Injectable } from '@angular/core';
import * as Apollo from 'apollo-angular';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  bigint: any;
  float8: any;
  geography: any;
  geometry: any;
  json: any;
  jsonb: any;
  numeric: any;
  timestamp: any;
  timestamptz: any;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: Maybe<Scalars['Boolean']>;
  _gt?: Maybe<Scalars['Boolean']>;
  _gte?: Maybe<Scalars['Boolean']>;
  _in?: Maybe<Array<Scalars['Boolean']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Boolean']>;
  _lte?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Scalars['Boolean']>;
  _nin?: Maybe<Array<Scalars['Boolean']>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: Maybe<Scalars['Int']>;
  _gt?: Maybe<Scalars['Int']>;
  _gte?: Maybe<Scalars['Int']>;
  _in?: Maybe<Array<Scalars['Int']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Int']>;
  _lte?: Maybe<Scalars['Int']>;
  _neq?: Maybe<Scalars['Int']>;
  _nin?: Maybe<Array<Scalars['Int']>>;
};

export type ProtocolloInput = {
  destinatariEsterni: Array<Maybe<ProtocolloUtenteEsterno>>;
  destinatariInterni: Array<Maybe<ProtocolloUtenteInterno>>;
  mittenteEsterno?: Maybe<ProtocolloUtenteEsterno>;
  mittenteInterno?: Maybe<ProtocolloUtenteInterno>;
  note: Scalars['String'];
  oggetto: Scalars['String'];
};

export type ProtocolloOutput = {
  __typename?: 'ProtocolloOutput';
  datetime?: Maybe<Scalars['timestamptz']>;
  error: Scalars['Boolean'];
  message?: Maybe<Scalars['String']>;
  number?: Maybe<Scalars['String']>;
};

export type ProtocolloUtenteEsterno = {
  cf?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
};

export type ProtocolloUtenteInterno = {
  codice?: Maybe<Scalars['String']>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: Maybe<Scalars['String']>;
  _gt?: Maybe<Scalars['String']>;
  _gte?: Maybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: Maybe<Scalars['String']>;
  _in?: Maybe<Array<Scalars['String']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: Maybe<Scalars['String']>;
  _is_null?: Maybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: Maybe<Scalars['String']>;
  _lt?: Maybe<Scalars['String']>;
  _lte?: Maybe<Scalars['String']>;
  _neq?: Maybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: Maybe<Scalars['String']>;
  _nin?: Maybe<Array<Scalars['String']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: Maybe<Scalars['String']>;
  /** does the column NOT match the given pattern */
  _nlike?: Maybe<Scalars['String']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: Maybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: Maybe<Scalars['String']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: Maybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: Maybe<Scalars['String']>;
};

/** columns and relationships of "_citta" */
export type _Citta = {
  __typename?: '_citta';
  citta?: Maybe<Scalars['String']>;
  codice?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ordine?: Maybe<Scalars['Int']>;
  p_abbreviazione?: Maybe<Scalars['String']>;
  provincia?: Maybe<Scalars['String']>;
  regione?: Maybe<Scalars['String']>;
};

/** aggregated selection of "_citta" */
export type _Citta_Aggregate = {
  __typename?: '_citta_aggregate';
  aggregate?: Maybe<_Citta_Aggregate_Fields>;
  nodes: Array<_Citta>;
};

/** aggregate fields of "_citta" */
export type _Citta_Aggregate_Fields = {
  __typename?: '_citta_aggregate_fields';
  avg?: Maybe<_Citta_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<_Citta_Max_Fields>;
  min?: Maybe<_Citta_Min_Fields>;
  stddev?: Maybe<_Citta_Stddev_Fields>;
  stddev_pop?: Maybe<_Citta_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<_Citta_Stddev_Samp_Fields>;
  sum?: Maybe<_Citta_Sum_Fields>;
  var_pop?: Maybe<_Citta_Var_Pop_Fields>;
  var_samp?: Maybe<_Citta_Var_Samp_Fields>;
  variance?: Maybe<_Citta_Variance_Fields>;
};


/** aggregate fields of "_citta" */
export type _Citta_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<_Citta_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type _Citta_Avg_Fields = {
  __typename?: '_citta_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "_citta". All fields are combined with a logical 'AND'. */
export type _Citta_Bool_Exp = {
  _and?: Maybe<Array<_Citta_Bool_Exp>>;
  _not?: Maybe<_Citta_Bool_Exp>;
  _or?: Maybe<Array<_Citta_Bool_Exp>>;
  citta?: Maybe<String_Comparison_Exp>;
  codice?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ordine?: Maybe<Int_Comparison_Exp>;
  p_abbreviazione?: Maybe<String_Comparison_Exp>;
  provincia?: Maybe<String_Comparison_Exp>;
  regione?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "_citta" */
export enum _Citta_Constraint {
  /** unique or primary key constraint */
  CittaPkey = '_citta_pkey'
}

/** input type for incrementing numeric columns in table "_citta" */
export type _Citta_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "_citta" */
export type _Citta_Insert_Input = {
  citta?: Maybe<Scalars['String']>;
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
  p_abbreviazione?: Maybe<Scalars['String']>;
  provincia?: Maybe<Scalars['String']>;
  regione?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type _Citta_Max_Fields = {
  __typename?: '_citta_max_fields';
  citta?: Maybe<Scalars['String']>;
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
  p_abbreviazione?: Maybe<Scalars['String']>;
  provincia?: Maybe<Scalars['String']>;
  regione?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type _Citta_Min_Fields = {
  __typename?: '_citta_min_fields';
  citta?: Maybe<Scalars['String']>;
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
  p_abbreviazione?: Maybe<Scalars['String']>;
  provincia?: Maybe<Scalars['String']>;
  regione?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "_citta" */
export type _Citta_Mutation_Response = {
  __typename?: '_citta_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<_Citta>;
};

/** input type for inserting object relation for remote table "_citta" */
export type _Citta_Obj_Rel_Insert_Input = {
  data: _Citta_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<_Citta_On_Conflict>;
};

/** on_conflict condition type for table "_citta" */
export type _Citta_On_Conflict = {
  constraint: _Citta_Constraint;
  update_columns?: Array<_Citta_Update_Column>;
  where?: Maybe<_Citta_Bool_Exp>;
};

/** Ordering options when selecting data from "_citta". */
export type _Citta_Order_By = {
  citta?: Maybe<Order_By>;
  codice?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ordine?: Maybe<Order_By>;
  p_abbreviazione?: Maybe<Order_By>;
  provincia?: Maybe<Order_By>;
  regione?: Maybe<Order_By>;
};

/** primary key columns input for table: _citta */
export type _Citta_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "_citta" */
export enum _Citta_Select_Column {
  /** column name */
  Citta = 'citta',
  /** column name */
  Codice = 'codice',
  /** column name */
  Id = 'id',
  /** column name */
  Ordine = 'ordine',
  /** column name */
  PAbbreviazione = 'p_abbreviazione',
  /** column name */
  Provincia = 'provincia',
  /** column name */
  Regione = 'regione'
}

/** input type for updating data in table "_citta" */
export type _Citta_Set_Input = {
  citta?: Maybe<Scalars['String']>;
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
  p_abbreviazione?: Maybe<Scalars['String']>;
  provincia?: Maybe<Scalars['String']>;
  regione?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type _Citta_Stddev_Fields = {
  __typename?: '_citta_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type _Citta_Stddev_Pop_Fields = {
  __typename?: '_citta_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type _Citta_Stddev_Samp_Fields = {
  __typename?: '_citta_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type _Citta_Sum_Fields = {
  __typename?: '_citta_sum_fields';
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
};

/** update columns of table "_citta" */
export enum _Citta_Update_Column {
  /** column name */
  Citta = 'citta',
  /** column name */
  Codice = 'codice',
  /** column name */
  Id = 'id',
  /** column name */
  Ordine = 'ordine',
  /** column name */
  PAbbreviazione = 'p_abbreviazione',
  /** column name */
  Provincia = 'provincia',
  /** column name */
  Regione = 'regione'
}

/** aggregate var_pop on columns */
export type _Citta_Var_Pop_Fields = {
  __typename?: '_citta_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type _Citta_Var_Samp_Fields = {
  __typename?: '_citta_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type _Citta_Variance_Fields = {
  __typename?: '_citta_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "_nazione" */
export type _Nazione = {
  __typename?: '_nazione';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "_nazione" */
export type _Nazione_Aggregate = {
  __typename?: '_nazione_aggregate';
  aggregate?: Maybe<_Nazione_Aggregate_Fields>;
  nodes: Array<_Nazione>;
};

/** aggregate fields of "_nazione" */
export type _Nazione_Aggregate_Fields = {
  __typename?: '_nazione_aggregate_fields';
  avg?: Maybe<_Nazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<_Nazione_Max_Fields>;
  min?: Maybe<_Nazione_Min_Fields>;
  stddev?: Maybe<_Nazione_Stddev_Fields>;
  stddev_pop?: Maybe<_Nazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<_Nazione_Stddev_Samp_Fields>;
  sum?: Maybe<_Nazione_Sum_Fields>;
  var_pop?: Maybe<_Nazione_Var_Pop_Fields>;
  var_samp?: Maybe<_Nazione_Var_Samp_Fields>;
  variance?: Maybe<_Nazione_Variance_Fields>;
};


/** aggregate fields of "_nazione" */
export type _Nazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<_Nazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type _Nazione_Avg_Fields = {
  __typename?: '_nazione_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "_nazione". All fields are combined with a logical 'AND'. */
export type _Nazione_Bool_Exp = {
  _and?: Maybe<Array<_Nazione_Bool_Exp>>;
  _not?: Maybe<_Nazione_Bool_Exp>;
  _or?: Maybe<Array<_Nazione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "_nazione" */
export enum _Nazione_Constraint {
  /** unique or primary key constraint */
  NazionePkey = '_nazione_pkey'
}

/** input type for incrementing numeric columns in table "_nazione" */
export type _Nazione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "_nazione" */
export type _Nazione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type _Nazione_Max_Fields = {
  __typename?: '_nazione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type _Nazione_Min_Fields = {
  __typename?: '_nazione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "_nazione" */
export type _Nazione_Mutation_Response = {
  __typename?: '_nazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<_Nazione>;
};

/** input type for inserting object relation for remote table "_nazione" */
export type _Nazione_Obj_Rel_Insert_Input = {
  data: _Nazione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<_Nazione_On_Conflict>;
};

/** on_conflict condition type for table "_nazione" */
export type _Nazione_On_Conflict = {
  constraint: _Nazione_Constraint;
  update_columns?: Array<_Nazione_Update_Column>;
  where?: Maybe<_Nazione_Bool_Exp>;
};

/** Ordering options when selecting data from "_nazione". */
export type _Nazione_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: _nazione */
export type _Nazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "_nazione" */
export enum _Nazione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "_nazione" */
export type _Nazione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type _Nazione_Stddev_Fields = {
  __typename?: '_nazione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type _Nazione_Stddev_Pop_Fields = {
  __typename?: '_nazione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type _Nazione_Stddev_Samp_Fields = {
  __typename?: '_nazione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type _Nazione_Sum_Fields = {
  __typename?: '_nazione_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "_nazione" */
export enum _Nazione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type _Nazione_Var_Pop_Fields = {
  __typename?: '_nazione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type _Nazione_Var_Samp_Fields = {
  __typename?: '_nazione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type _Nazione_Variance_Fields = {
  __typename?: '_nazione_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "_sesso" */
export type _Sesso = {
  __typename?: '_sesso';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "_sesso" */
export type _Sesso_Aggregate = {
  __typename?: '_sesso_aggregate';
  aggregate?: Maybe<_Sesso_Aggregate_Fields>;
  nodes: Array<_Sesso>;
};

/** aggregate fields of "_sesso" */
export type _Sesso_Aggregate_Fields = {
  __typename?: '_sesso_aggregate_fields';
  avg?: Maybe<_Sesso_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<_Sesso_Max_Fields>;
  min?: Maybe<_Sesso_Min_Fields>;
  stddev?: Maybe<_Sesso_Stddev_Fields>;
  stddev_pop?: Maybe<_Sesso_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<_Sesso_Stddev_Samp_Fields>;
  sum?: Maybe<_Sesso_Sum_Fields>;
  var_pop?: Maybe<_Sesso_Var_Pop_Fields>;
  var_samp?: Maybe<_Sesso_Var_Samp_Fields>;
  variance?: Maybe<_Sesso_Variance_Fields>;
};


/** aggregate fields of "_sesso" */
export type _Sesso_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<_Sesso_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type _Sesso_Avg_Fields = {
  __typename?: '_sesso_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "_sesso". All fields are combined with a logical 'AND'. */
export type _Sesso_Bool_Exp = {
  _and?: Maybe<Array<_Sesso_Bool_Exp>>;
  _not?: Maybe<_Sesso_Bool_Exp>;
  _or?: Maybe<Array<_Sesso_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "_sesso" */
export enum _Sesso_Constraint {
  /** unique or primary key constraint */
  SessoPkey = '_sesso_pkey'
}

/** input type for incrementing numeric columns in table "_sesso" */
export type _Sesso_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "_sesso" */
export type _Sesso_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type _Sesso_Max_Fields = {
  __typename?: '_sesso_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type _Sesso_Min_Fields = {
  __typename?: '_sesso_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "_sesso" */
export type _Sesso_Mutation_Response = {
  __typename?: '_sesso_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<_Sesso>;
};

/** input type for inserting object relation for remote table "_sesso" */
export type _Sesso_Obj_Rel_Insert_Input = {
  data: _Sesso_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<_Sesso_On_Conflict>;
};

/** on_conflict condition type for table "_sesso" */
export type _Sesso_On_Conflict = {
  constraint: _Sesso_Constraint;
  update_columns?: Array<_Sesso_Update_Column>;
  where?: Maybe<_Sesso_Bool_Exp>;
};

/** Ordering options when selecting data from "_sesso". */
export type _Sesso_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: _sesso */
export type _Sesso_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "_sesso" */
export enum _Sesso_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "_sesso" */
export type _Sesso_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type _Sesso_Stddev_Fields = {
  __typename?: '_sesso_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type _Sesso_Stddev_Pop_Fields = {
  __typename?: '_sesso_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type _Sesso_Stddev_Samp_Fields = {
  __typename?: '_sesso_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type _Sesso_Sum_Fields = {
  __typename?: '_sesso_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "_sesso" */
export enum _Sesso_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type _Sesso_Var_Pop_Fields = {
  __typename?: '_sesso_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type _Sesso_Var_Samp_Fields = {
  __typename?: '_sesso_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type _Sesso_Variance_Fields = {
  __typename?: '_sesso_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "_sinoaltro" */
export type _Sinoaltro = {
  __typename?: '_sinoaltro';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "_sinoaltro" */
export type _Sinoaltro_Aggregate = {
  __typename?: '_sinoaltro_aggregate';
  aggregate?: Maybe<_Sinoaltro_Aggregate_Fields>;
  nodes: Array<_Sinoaltro>;
};

/** aggregate fields of "_sinoaltro" */
export type _Sinoaltro_Aggregate_Fields = {
  __typename?: '_sinoaltro_aggregate_fields';
  avg?: Maybe<_Sinoaltro_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<_Sinoaltro_Max_Fields>;
  min?: Maybe<_Sinoaltro_Min_Fields>;
  stddev?: Maybe<_Sinoaltro_Stddev_Fields>;
  stddev_pop?: Maybe<_Sinoaltro_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<_Sinoaltro_Stddev_Samp_Fields>;
  sum?: Maybe<_Sinoaltro_Sum_Fields>;
  var_pop?: Maybe<_Sinoaltro_Var_Pop_Fields>;
  var_samp?: Maybe<_Sinoaltro_Var_Samp_Fields>;
  variance?: Maybe<_Sinoaltro_Variance_Fields>;
};


/** aggregate fields of "_sinoaltro" */
export type _Sinoaltro_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<_Sinoaltro_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type _Sinoaltro_Avg_Fields = {
  __typename?: '_sinoaltro_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "_sinoaltro". All fields are combined with a logical 'AND'. */
export type _Sinoaltro_Bool_Exp = {
  _and?: Maybe<Array<_Sinoaltro_Bool_Exp>>;
  _not?: Maybe<_Sinoaltro_Bool_Exp>;
  _or?: Maybe<Array<_Sinoaltro_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "_sinoaltro" */
export enum _Sinoaltro_Constraint {
  /** unique or primary key constraint */
  SinoaltroPkey = '_sinoaltro_pkey'
}

/** input type for incrementing numeric columns in table "_sinoaltro" */
export type _Sinoaltro_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "_sinoaltro" */
export type _Sinoaltro_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type _Sinoaltro_Max_Fields = {
  __typename?: '_sinoaltro_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type _Sinoaltro_Min_Fields = {
  __typename?: '_sinoaltro_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "_sinoaltro" */
export type _Sinoaltro_Mutation_Response = {
  __typename?: '_sinoaltro_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<_Sinoaltro>;
};

/** input type for inserting object relation for remote table "_sinoaltro" */
export type _Sinoaltro_Obj_Rel_Insert_Input = {
  data: _Sinoaltro_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<_Sinoaltro_On_Conflict>;
};

/** on_conflict condition type for table "_sinoaltro" */
export type _Sinoaltro_On_Conflict = {
  constraint: _Sinoaltro_Constraint;
  update_columns?: Array<_Sinoaltro_Update_Column>;
  where?: Maybe<_Sinoaltro_Bool_Exp>;
};

/** Ordering options when selecting data from "_sinoaltro". */
export type _Sinoaltro_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: _sinoaltro */
export type _Sinoaltro_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "_sinoaltro" */
export enum _Sinoaltro_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "_sinoaltro" */
export type _Sinoaltro_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type _Sinoaltro_Stddev_Fields = {
  __typename?: '_sinoaltro_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type _Sinoaltro_Stddev_Pop_Fields = {
  __typename?: '_sinoaltro_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type _Sinoaltro_Stddev_Samp_Fields = {
  __typename?: '_sinoaltro_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type _Sinoaltro_Sum_Fields = {
  __typename?: '_sinoaltro_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "_sinoaltro" */
export enum _Sinoaltro_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type _Sinoaltro_Var_Pop_Fields = {
  __typename?: '_sinoaltro_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type _Sinoaltro_Var_Samp_Fields = {
  __typename?: '_sinoaltro_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type _Sinoaltro_Variance_Fields = {
  __typename?: '_sinoaltro_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "_titolo" */
export type _Titolo = {
  __typename?: '_titolo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "_titolo" */
export type _Titolo_Aggregate = {
  __typename?: '_titolo_aggregate';
  aggregate?: Maybe<_Titolo_Aggregate_Fields>;
  nodes: Array<_Titolo>;
};

/** aggregate fields of "_titolo" */
export type _Titolo_Aggregate_Fields = {
  __typename?: '_titolo_aggregate_fields';
  avg?: Maybe<_Titolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<_Titolo_Max_Fields>;
  min?: Maybe<_Titolo_Min_Fields>;
  stddev?: Maybe<_Titolo_Stddev_Fields>;
  stddev_pop?: Maybe<_Titolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<_Titolo_Stddev_Samp_Fields>;
  sum?: Maybe<_Titolo_Sum_Fields>;
  var_pop?: Maybe<_Titolo_Var_Pop_Fields>;
  var_samp?: Maybe<_Titolo_Var_Samp_Fields>;
  variance?: Maybe<_Titolo_Variance_Fields>;
};


/** aggregate fields of "_titolo" */
export type _Titolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<_Titolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type _Titolo_Avg_Fields = {
  __typename?: '_titolo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "_titolo". All fields are combined with a logical 'AND'. */
export type _Titolo_Bool_Exp = {
  _and?: Maybe<Array<_Titolo_Bool_Exp>>;
  _not?: Maybe<_Titolo_Bool_Exp>;
  _or?: Maybe<Array<_Titolo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "_titolo" */
export enum _Titolo_Constraint {
  /** unique or primary key constraint */
  TitoloPkey = '_titolo_pkey'
}

/** input type for incrementing numeric columns in table "_titolo" */
export type _Titolo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "_titolo" */
export type _Titolo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type _Titolo_Max_Fields = {
  __typename?: '_titolo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type _Titolo_Min_Fields = {
  __typename?: '_titolo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "_titolo" */
export type _Titolo_Mutation_Response = {
  __typename?: '_titolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<_Titolo>;
};

/** input type for inserting object relation for remote table "_titolo" */
export type _Titolo_Obj_Rel_Insert_Input = {
  data: _Titolo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<_Titolo_On_Conflict>;
};

/** on_conflict condition type for table "_titolo" */
export type _Titolo_On_Conflict = {
  constraint: _Titolo_Constraint;
  update_columns?: Array<_Titolo_Update_Column>;
  where?: Maybe<_Titolo_Bool_Exp>;
};

/** Ordering options when selecting data from "_titolo". */
export type _Titolo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: _titolo */
export type _Titolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "_titolo" */
export enum _Titolo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "_titolo" */
export type _Titolo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type _Titolo_Stddev_Fields = {
  __typename?: '_titolo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type _Titolo_Stddev_Pop_Fields = {
  __typename?: '_titolo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type _Titolo_Stddev_Samp_Fields = {
  __typename?: '_titolo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type _Titolo_Sum_Fields = {
  __typename?: '_titolo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "_titolo" */
export enum _Titolo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type _Titolo_Var_Pop_Fields = {
  __typename?: '_titolo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type _Titolo_Var_Samp_Fields = {
  __typename?: '_titolo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type _Titolo_Variance_Fields = {
  __typename?: '_titolo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "agcos.agcos" */
export type Agcos_Agcos = {
  __typename?: 'agcos_agcos';
  altro?: Maybe<Scalars['String']>;
  causa?: Maybe<Scalars['String']>;
  civico?: Maybe<Scalars['String']>;
  codice_strada?: Maybe<Scalars['String']>;
  costi_sostenuti?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  danno_cose?: Maybe<Scalars['Boolean']>;
  danno_persone?: Maybe<Scalars['Boolean']>;
  data_sinistro?: Maybe<Scalars['timestamptz']>;
  elemento?: Maybe<Scalars['String']>;
  esiste_citazione?: Maybe<Scalars['Boolean']>;
  esiste_risarcimento?: Maybe<Scalars['Boolean']>;
  esiste_sentenza?: Maybe<Scalars['Boolean']>;
  esito_sentenza?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  indicazione_approssimativa?: Maybe<Scalars['String']>;
  inter?: Maybe<Scalars['String']>;
  latitudine?: Maybe<Scalars['float8']>;
  longitudine?: Maybe<Scalars['float8']>;
  presenza_acqua?: Maybe<Scalars['Boolean']>;
  presenza_foglie?: Maybe<Scalars['Boolean']>;
  scarsa_illuminazione_naturale?: Maybe<Scalars['Boolean']>;
  scarsa_illuminazione_pubblica?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  toponimo?: Maybe<Toponomastica_Toponimo>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "agcos.agcos" */
export type Agcos_Agcos_Aggregate = {
  __typename?: 'agcos_agcos_aggregate';
  aggregate?: Maybe<Agcos_Agcos_Aggregate_Fields>;
  nodes: Array<Agcos_Agcos>;
};

/** aggregate fields of "agcos.agcos" */
export type Agcos_Agcos_Aggregate_Fields = {
  __typename?: 'agcos_agcos_aggregate_fields';
  avg?: Maybe<Agcos_Agcos_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Agcos_Agcos_Max_Fields>;
  min?: Maybe<Agcos_Agcos_Min_Fields>;
  stddev?: Maybe<Agcos_Agcos_Stddev_Fields>;
  stddev_pop?: Maybe<Agcos_Agcos_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Agcos_Agcos_Stddev_Samp_Fields>;
  sum?: Maybe<Agcos_Agcos_Sum_Fields>;
  var_pop?: Maybe<Agcos_Agcos_Var_Pop_Fields>;
  var_samp?: Maybe<Agcos_Agcos_Var_Samp_Fields>;
  variance?: Maybe<Agcos_Agcos_Variance_Fields>;
};


/** aggregate fields of "agcos.agcos" */
export type Agcos_Agcos_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Agcos_Agcos_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Agcos_Agcos_Avg_Fields = {
  __typename?: 'agcos_agcos_avg_fields';
  id?: Maybe<Scalars['Float']>;
  latitudine?: Maybe<Scalars['Float']>;
  longitudine?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "agcos.agcos". All fields are combined with a logical 'AND'. */
export type Agcos_Agcos_Bool_Exp = {
  _and?: Maybe<Array<Agcos_Agcos_Bool_Exp>>;
  _not?: Maybe<Agcos_Agcos_Bool_Exp>;
  _or?: Maybe<Array<Agcos_Agcos_Bool_Exp>>;
  altro?: Maybe<String_Comparison_Exp>;
  causa?: Maybe<String_Comparison_Exp>;
  civico?: Maybe<String_Comparison_Exp>;
  codice_strada?: Maybe<String_Comparison_Exp>;
  costi_sostenuti?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  danno_cose?: Maybe<Boolean_Comparison_Exp>;
  danno_persone?: Maybe<Boolean_Comparison_Exp>;
  data_sinistro?: Maybe<Timestamptz_Comparison_Exp>;
  elemento?: Maybe<String_Comparison_Exp>;
  esiste_citazione?: Maybe<Boolean_Comparison_Exp>;
  esiste_risarcimento?: Maybe<Boolean_Comparison_Exp>;
  esiste_sentenza?: Maybe<Boolean_Comparison_Exp>;
  esito_sentenza?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  indicazione_approssimativa?: Maybe<String_Comparison_Exp>;
  inter?: Maybe<String_Comparison_Exp>;
  latitudine?: Maybe<Float8_Comparison_Exp>;
  longitudine?: Maybe<Float8_Comparison_Exp>;
  presenza_acqua?: Maybe<Boolean_Comparison_Exp>;
  presenza_foglie?: Maybe<Boolean_Comparison_Exp>;
  scarsa_illuminazione_naturale?: Maybe<Boolean_Comparison_Exp>;
  scarsa_illuminazione_pubblica?: Maybe<Boolean_Comparison_Exp>;
  toponimo?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "agcos.agcos" */
export enum Agcos_Agcos_Constraint {
  /** unique or primary key constraint */
  AgcosPkey = 'agcos_pkey'
}

/** input type for incrementing numeric columns in table "agcos.agcos" */
export type Agcos_Agcos_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  latitudine?: Maybe<Scalars['float8']>;
  longitudine?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "agcos.agcos" */
export type Agcos_Agcos_Insert_Input = {
  altro?: Maybe<Scalars['String']>;
  causa?: Maybe<Scalars['String']>;
  civico?: Maybe<Scalars['String']>;
  codice_strada?: Maybe<Scalars['String']>;
  costi_sostenuti?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  danno_cose?: Maybe<Scalars['Boolean']>;
  danno_persone?: Maybe<Scalars['Boolean']>;
  data_sinistro?: Maybe<Scalars['timestamptz']>;
  elemento?: Maybe<Scalars['String']>;
  esiste_citazione?: Maybe<Scalars['Boolean']>;
  esiste_risarcimento?: Maybe<Scalars['Boolean']>;
  esiste_sentenza?: Maybe<Scalars['Boolean']>;
  esito_sentenza?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  indicazione_approssimativa?: Maybe<Scalars['String']>;
  inter?: Maybe<Scalars['String']>;
  latitudine?: Maybe<Scalars['float8']>;
  longitudine?: Maybe<Scalars['float8']>;
  presenza_acqua?: Maybe<Scalars['Boolean']>;
  presenza_foglie?: Maybe<Scalars['Boolean']>;
  scarsa_illuminazione_naturale?: Maybe<Scalars['Boolean']>;
  scarsa_illuminazione_pubblica?: Maybe<Scalars['Boolean']>;
  toponimo?: Maybe<Toponomastica_Toponimo_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Agcos_Agcos_Max_Fields = {
  __typename?: 'agcos_agcos_max_fields';
  altro?: Maybe<Scalars['String']>;
  causa?: Maybe<Scalars['String']>;
  civico?: Maybe<Scalars['String']>;
  codice_strada?: Maybe<Scalars['String']>;
  costi_sostenuti?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_sinistro?: Maybe<Scalars['timestamptz']>;
  elemento?: Maybe<Scalars['String']>;
  esito_sentenza?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  indicazione_approssimativa?: Maybe<Scalars['String']>;
  inter?: Maybe<Scalars['String']>;
  latitudine?: Maybe<Scalars['float8']>;
  longitudine?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Agcos_Agcos_Min_Fields = {
  __typename?: 'agcos_agcos_min_fields';
  altro?: Maybe<Scalars['String']>;
  causa?: Maybe<Scalars['String']>;
  civico?: Maybe<Scalars['String']>;
  codice_strada?: Maybe<Scalars['String']>;
  costi_sostenuti?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_sinistro?: Maybe<Scalars['timestamptz']>;
  elemento?: Maybe<Scalars['String']>;
  esito_sentenza?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  indicazione_approssimativa?: Maybe<Scalars['String']>;
  inter?: Maybe<Scalars['String']>;
  latitudine?: Maybe<Scalars['float8']>;
  longitudine?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "agcos.agcos" */
export type Agcos_Agcos_Mutation_Response = {
  __typename?: 'agcos_agcos_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Agcos_Agcos>;
};

/** on_conflict condition type for table "agcos.agcos" */
export type Agcos_Agcos_On_Conflict = {
  constraint: Agcos_Agcos_Constraint;
  update_columns?: Array<Agcos_Agcos_Update_Column>;
  where?: Maybe<Agcos_Agcos_Bool_Exp>;
};

/** Ordering options when selecting data from "agcos.agcos". */
export type Agcos_Agcos_Order_By = {
  altro?: Maybe<Order_By>;
  causa?: Maybe<Order_By>;
  civico?: Maybe<Order_By>;
  codice_strada?: Maybe<Order_By>;
  costi_sostenuti?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  danno_cose?: Maybe<Order_By>;
  danno_persone?: Maybe<Order_By>;
  data_sinistro?: Maybe<Order_By>;
  elemento?: Maybe<Order_By>;
  esiste_citazione?: Maybe<Order_By>;
  esiste_risarcimento?: Maybe<Order_By>;
  esiste_sentenza?: Maybe<Order_By>;
  esito_sentenza?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  indicazione_approssimativa?: Maybe<Order_By>;
  inter?: Maybe<Order_By>;
  latitudine?: Maybe<Order_By>;
  longitudine?: Maybe<Order_By>;
  presenza_acqua?: Maybe<Order_By>;
  presenza_foglie?: Maybe<Order_By>;
  scarsa_illuminazione_naturale?: Maybe<Order_By>;
  scarsa_illuminazione_pubblica?: Maybe<Order_By>;
  toponimo?: Maybe<Toponomastica_Toponimo_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: agcos_agcos */
export type Agcos_Agcos_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "agcos.agcos" */
export enum Agcos_Agcos_Select_Column {
  /** column name */
  Altro = 'altro',
  /** column name */
  Causa = 'causa',
  /** column name */
  Civico = 'civico',
  /** column name */
  CodiceStrada = 'codice_strada',
  /** column name */
  CostiSostenuti = 'costi_sostenuti',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DannoCose = 'danno_cose',
  /** column name */
  DannoPersone = 'danno_persone',
  /** column name */
  DataSinistro = 'data_sinistro',
  /** column name */
  Elemento = 'elemento',
  /** column name */
  EsisteCitazione = 'esiste_citazione',
  /** column name */
  EsisteRisarcimento = 'esiste_risarcimento',
  /** column name */
  EsisteSentenza = 'esiste_sentenza',
  /** column name */
  EsitoSentenza = 'esito_sentenza',
  /** column name */
  Id = 'id',
  /** column name */
  IndicazioneApprossimativa = 'indicazione_approssimativa',
  /** column name */
  Inter = 'inter',
  /** column name */
  Latitudine = 'latitudine',
  /** column name */
  Longitudine = 'longitudine',
  /** column name */
  PresenzaAcqua = 'presenza_acqua',
  /** column name */
  PresenzaFoglie = 'presenza_foglie',
  /** column name */
  ScarsaIlluminazioneNaturale = 'scarsa_illuminazione_naturale',
  /** column name */
  ScarsaIlluminazionePubblica = 'scarsa_illuminazione_pubblica',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "agcos.agcos" */
export type Agcos_Agcos_Set_Input = {
  altro?: Maybe<Scalars['String']>;
  causa?: Maybe<Scalars['String']>;
  civico?: Maybe<Scalars['String']>;
  codice_strada?: Maybe<Scalars['String']>;
  costi_sostenuti?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  danno_cose?: Maybe<Scalars['Boolean']>;
  danno_persone?: Maybe<Scalars['Boolean']>;
  data_sinistro?: Maybe<Scalars['timestamptz']>;
  elemento?: Maybe<Scalars['String']>;
  esiste_citazione?: Maybe<Scalars['Boolean']>;
  esiste_risarcimento?: Maybe<Scalars['Boolean']>;
  esiste_sentenza?: Maybe<Scalars['Boolean']>;
  esito_sentenza?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  indicazione_approssimativa?: Maybe<Scalars['String']>;
  inter?: Maybe<Scalars['String']>;
  latitudine?: Maybe<Scalars['float8']>;
  longitudine?: Maybe<Scalars['float8']>;
  presenza_acqua?: Maybe<Scalars['Boolean']>;
  presenza_foglie?: Maybe<Scalars['Boolean']>;
  scarsa_illuminazione_naturale?: Maybe<Scalars['Boolean']>;
  scarsa_illuminazione_pubblica?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Agcos_Agcos_Stddev_Fields = {
  __typename?: 'agcos_agcos_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  latitudine?: Maybe<Scalars['Float']>;
  longitudine?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Agcos_Agcos_Stddev_Pop_Fields = {
  __typename?: 'agcos_agcos_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  latitudine?: Maybe<Scalars['Float']>;
  longitudine?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Agcos_Agcos_Stddev_Samp_Fields = {
  __typename?: 'agcos_agcos_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  latitudine?: Maybe<Scalars['Float']>;
  longitudine?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Agcos_Agcos_Sum_Fields = {
  __typename?: 'agcos_agcos_sum_fields';
  id?: Maybe<Scalars['Int']>;
  latitudine?: Maybe<Scalars['float8']>;
  longitudine?: Maybe<Scalars['float8']>;
};

/** update columns of table "agcos.agcos" */
export enum Agcos_Agcos_Update_Column {
  /** column name */
  Altro = 'altro',
  /** column name */
  Causa = 'causa',
  /** column name */
  Civico = 'civico',
  /** column name */
  CodiceStrada = 'codice_strada',
  /** column name */
  CostiSostenuti = 'costi_sostenuti',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DannoCose = 'danno_cose',
  /** column name */
  DannoPersone = 'danno_persone',
  /** column name */
  DataSinistro = 'data_sinistro',
  /** column name */
  Elemento = 'elemento',
  /** column name */
  EsisteCitazione = 'esiste_citazione',
  /** column name */
  EsisteRisarcimento = 'esiste_risarcimento',
  /** column name */
  EsisteSentenza = 'esiste_sentenza',
  /** column name */
  EsitoSentenza = 'esito_sentenza',
  /** column name */
  Id = 'id',
  /** column name */
  IndicazioneApprossimativa = 'indicazione_approssimativa',
  /** column name */
  Inter = 'inter',
  /** column name */
  Latitudine = 'latitudine',
  /** column name */
  Longitudine = 'longitudine',
  /** column name */
  PresenzaAcqua = 'presenza_acqua',
  /** column name */
  PresenzaFoglie = 'presenza_foglie',
  /** column name */
  ScarsaIlluminazioneNaturale = 'scarsa_illuminazione_naturale',
  /** column name */
  ScarsaIlluminazionePubblica = 'scarsa_illuminazione_pubblica',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Agcos_Agcos_Var_Pop_Fields = {
  __typename?: 'agcos_agcos_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  latitudine?: Maybe<Scalars['Float']>;
  longitudine?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Agcos_Agcos_Var_Samp_Fields = {
  __typename?: 'agcos_agcos_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  latitudine?: Maybe<Scalars['Float']>;
  longitudine?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Agcos_Agcos_Variance_Fields = {
  __typename?: 'agcos_agcos_variance_fields';
  id?: Maybe<Scalars['Float']>;
  latitudine?: Maybe<Scalars['Float']>;
  longitudine?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "agcos.import" */
export type Agcos_Import = {
  __typename?: 'agcos_import';
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "agcos.import" */
export type Agcos_Import_Aggregate = {
  __typename?: 'agcos_import_aggregate';
  aggregate?: Maybe<Agcos_Import_Aggregate_Fields>;
  nodes: Array<Agcos_Import>;
};

/** aggregate fields of "agcos.import" */
export type Agcos_Import_Aggregate_Fields = {
  __typename?: 'agcos_import_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Agcos_Import_Max_Fields>;
  min?: Maybe<Agcos_Import_Min_Fields>;
};


/** aggregate fields of "agcos.import" */
export type Agcos_Import_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Agcos_Import_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "agcos.import". All fields are combined with a logical 'AND'. */
export type Agcos_Import_Bool_Exp = {
  _and?: Maybe<Array<Agcos_Import_Bool_Exp>>;
  _not?: Maybe<Agcos_Import_Bool_Exp>;
  _or?: Maybe<Array<Agcos_Import_Bool_Exp>>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "agcos.import" */
export enum Agcos_Import_Constraint {
  /** unique or primary key constraint */
  ImportPkey = 'import_pkey'
}

/** input type for inserting data into table "agcos.import" */
export type Agcos_Import_Insert_Input = {
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Agcos_Import_Max_Fields = {
  __typename?: 'agcos_import_max_fields';
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Agcos_Import_Min_Fields = {
  __typename?: 'agcos_import_min_fields';
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "agcos.import" */
export type Agcos_Import_Mutation_Response = {
  __typename?: 'agcos_import_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Agcos_Import>;
};

/** on_conflict condition type for table "agcos.import" */
export type Agcos_Import_On_Conflict = {
  constraint: Agcos_Import_Constraint;
  update_columns?: Array<Agcos_Import_Update_Column>;
  where?: Maybe<Agcos_Import_Bool_Exp>;
};

/** Ordering options when selecting data from "agcos.import". */
export type Agcos_Import_Order_By = {
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: agcos_import */
export type Agcos_Import_Pk_Columns_Input = {
  updated_at: Scalars['timestamptz'];
};

/** select columns of table "agcos.import" */
export enum Agcos_Import_Select_Column {
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "agcos.import" */
export type Agcos_Import_Set_Input = {
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "agcos.import" */
export enum Agcos_Import_Update_Column {
  /** column name */
  UpdatedAt = 'updated_at'
}

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: Maybe<Scalars['bigint']>;
  _gt?: Maybe<Scalars['bigint']>;
  _gte?: Maybe<Scalars['bigint']>;
  _in?: Maybe<Array<Scalars['bigint']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['bigint']>;
  _lte?: Maybe<Scalars['bigint']>;
  _neq?: Maybe<Scalars['bigint']>;
  _nin?: Maybe<Array<Scalars['bigint']>>;
};

export type Custom_Insert_Intervento_Straordinario_Output = {
  __typename?: 'custom_insert_intervento_straordinario_output';
  /** An object relationship */
  intervento_straordinario: Pis_Intervento_Straordinario;
  intervento_straordinario_id?: Maybe<Scalars['Int']>;
};

export type Custom_Insert_Ris_Output = {
  __typename?: 'custom_insert_ris_output';
  /** An object relationship */
  ris: Sis_Ris;
  ris_id?: Maybe<Scalars['Int']>;
};

export type Custom_Insert_Segnalazione_Output = {
  __typename?: 'custom_insert_segnalazione_output';
  /** An object relationship */
  segnalazione: Pis_Segnalazione;
  segnalazione_id?: Maybe<Scalars['Int']>;
};

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
  _eq?: Maybe<Scalars['float8']>;
  _gt?: Maybe<Scalars['float8']>;
  _gte?: Maybe<Scalars['float8']>;
  _in?: Maybe<Array<Scalars['float8']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['float8']>;
  _lte?: Maybe<Scalars['float8']>;
  _neq?: Maybe<Scalars['float8']>;
  _nin?: Maybe<Array<Scalars['float8']>>;
};

export type Geography_Cast_Exp = {
  geometry?: Maybe<Geometry_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "geography". All fields are combined with logical 'AND'. */
export type Geography_Comparison_Exp = {
  _cast?: Maybe<Geography_Cast_Exp>;
  _eq?: Maybe<Scalars['geography']>;
  _gt?: Maybe<Scalars['geography']>;
  _gte?: Maybe<Scalars['geography']>;
  _in?: Maybe<Array<Scalars['geography']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['geography']>;
  _lte?: Maybe<Scalars['geography']>;
  _neq?: Maybe<Scalars['geography']>;
  _nin?: Maybe<Array<Scalars['geography']>>;
  /** is the column within a given distance from the given geography value */
  _st_d_within?: Maybe<St_D_Within_Geography_Input>;
  /** does the column spatially intersect the given geography value */
  _st_intersects?: Maybe<Scalars['geography']>;
};

export type Geometry_Cast_Exp = {
  geography?: Maybe<Geography_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "geometry". All fields are combined with logical 'AND'. */
export type Geometry_Comparison_Exp = {
  _cast?: Maybe<Geometry_Cast_Exp>;
  _eq?: Maybe<Scalars['geometry']>;
  _gt?: Maybe<Scalars['geometry']>;
  _gte?: Maybe<Scalars['geometry']>;
  _in?: Maybe<Array<Scalars['geometry']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['geometry']>;
  _lte?: Maybe<Scalars['geometry']>;
  _neq?: Maybe<Scalars['geometry']>;
  _nin?: Maybe<Array<Scalars['geometry']>>;
  /** is the column within a given 3D distance from the given geometry value */
  _st_3d_d_within?: Maybe<St_D_Within_Input>;
  /** does the column spatially intersect the given geometry value in 3D */
  _st_3d_intersects?: Maybe<Scalars['geometry']>;
  /** does the column contain the given geometry value */
  _st_contains?: Maybe<Scalars['geometry']>;
  /** does the column cross the given geometry value */
  _st_crosses?: Maybe<Scalars['geometry']>;
  /** is the column within a given distance from the given geometry value */
  _st_d_within?: Maybe<St_D_Within_Input>;
  /** is the column equal to given geometry value (directionality is ignored) */
  _st_equals?: Maybe<Scalars['geometry']>;
  /** does the column spatially intersect the given geometry value */
  _st_intersects?: Maybe<Scalars['geometry']>;
  /** does the column 'spatially overlap' (intersect but not completely contain) the given geometry value */
  _st_overlaps?: Maybe<Scalars['geometry']>;
  /** does the column have atleast one point in common with the given geometry value */
  _st_touches?: Maybe<Scalars['geometry']>;
  /** is the column contained in the given geometry value */
  _st_within?: Maybe<Scalars['geometry']>;
};

/** columns and relationships of "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo = {
  __typename?: 'gis__specifica_posizionamento_toponimo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Aggregate = {
  __typename?: 'gis__specifica_posizionamento_toponimo_aggregate';
  aggregate?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Aggregate_Fields>;
  nodes: Array<Gis__Specifica_Posizionamento_Toponimo>;
};

/** aggregate fields of "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Aggregate_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_aggregate_fields';
  avg?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Max_Fields>;
  min?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Min_Fields>;
  stddev?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Stddev_Fields>;
  stddev_pop?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Stddev_Samp_Fields>;
  sum?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Sum_Fields>;
  var_pop?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Var_Pop_Fields>;
  var_samp?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Var_Samp_Fields>;
  variance?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Variance_Fields>;
};


/** aggregate fields of "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Avg_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "gis._specifica_posizionamento_toponimo". All fields are combined with a logical 'AND'. */
export type Gis__Specifica_Posizionamento_Toponimo_Bool_Exp = {
  _and?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>>;
  _not?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>;
  _or?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "gis._specifica_posizionamento_toponimo" */
export enum Gis__Specifica_Posizionamento_Toponimo_Constraint {
  /** unique or primary key constraint */
  SpecificaPosizionamentoToponimoPkey = '_specifica_posizionamento_toponimo_pkey'
}

/** input type for incrementing numeric columns in table "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Max_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Min_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Mutation_Response = {
  __typename?: 'gis__specifica_posizionamento_toponimo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Gis__Specifica_Posizionamento_Toponimo>;
};

/** input type for inserting object relation for remote table "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Obj_Rel_Insert_Input = {
  data: Gis__Specifica_Posizionamento_Toponimo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Gis__Specifica_Posizionamento_Toponimo_On_Conflict>;
};

/** on_conflict condition type for table "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_On_Conflict = {
  constraint: Gis__Specifica_Posizionamento_Toponimo_Constraint;
  update_columns?: Array<Gis__Specifica_Posizionamento_Toponimo_Update_Column>;
  where?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>;
};

/** Ordering options when selecting data from "gis._specifica_posizionamento_toponimo". */
export type Gis__Specifica_Posizionamento_Toponimo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: gis__specifica_posizionamento_toponimo */
export type Gis__Specifica_Posizionamento_Toponimo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "gis._specifica_posizionamento_toponimo" */
export enum Gis__Specifica_Posizionamento_Toponimo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "gis._specifica_posizionamento_toponimo" */
export type Gis__Specifica_Posizionamento_Toponimo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Stddev_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Stddev_Pop_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Stddev_Samp_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Sum_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "gis._specifica_posizionamento_toponimo" */
export enum Gis__Specifica_Posizionamento_Toponimo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Var_Pop_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Var_Samp_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Gis__Specifica_Posizionamento_Toponimo_Variance_Fields = {
  __typename?: 'gis__specifica_posizionamento_toponimo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo = {
  __typename?: 'gis__tipologia_posizionamento_toponimo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Aggregate = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_aggregate';
  aggregate?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Aggregate_Fields>;
  nodes: Array<Gis__Tipologia_Posizionamento_Toponimo>;
};

/** aggregate fields of "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Aggregate_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_aggregate_fields';
  avg?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Max_Fields>;
  min?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Min_Fields>;
  stddev?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Stddev_Fields>;
  stddev_pop?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Stddev_Samp_Fields>;
  sum?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Sum_Fields>;
  var_pop?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Var_Pop_Fields>;
  var_samp?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Var_Samp_Fields>;
  variance?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Variance_Fields>;
};


/** aggregate fields of "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Avg_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "gis._tipologia_posizionamento_toponimo". All fields are combined with a logical 'AND'. */
export type Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp = {
  _and?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>>;
  _not?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>;
  _or?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "gis._tipologia_posizionamento_toponimo" */
export enum Gis__Tipologia_Posizionamento_Toponimo_Constraint {
  /** unique or primary key constraint */
  TipologiaPosizionamentoToponimoPkey = '_tipologia_posizionamento_toponimo_pkey'
}

/** input type for incrementing numeric columns in table "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Max_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Min_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Mutation_Response = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Gis__Tipologia_Posizionamento_Toponimo>;
};

/** input type for inserting object relation for remote table "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Obj_Rel_Insert_Input = {
  data: Gis__Tipologia_Posizionamento_Toponimo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_On_Conflict>;
};

/** on_conflict condition type for table "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_On_Conflict = {
  constraint: Gis__Tipologia_Posizionamento_Toponimo_Constraint;
  update_columns?: Array<Gis__Tipologia_Posizionamento_Toponimo_Update_Column>;
  where?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>;
};

/** Ordering options when selecting data from "gis._tipologia_posizionamento_toponimo". */
export type Gis__Tipologia_Posizionamento_Toponimo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: gis__tipologia_posizionamento_toponimo */
export type Gis__Tipologia_Posizionamento_Toponimo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "gis._tipologia_posizionamento_toponimo" */
export enum Gis__Tipologia_Posizionamento_Toponimo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "gis._tipologia_posizionamento_toponimo" */
export type Gis__Tipologia_Posizionamento_Toponimo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Stddev_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Stddev_Pop_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Stddev_Samp_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Sum_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "gis._tipologia_posizionamento_toponimo" */
export enum Gis__Tipologia_Posizionamento_Toponimo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Var_Pop_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Var_Samp_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Gis__Tipologia_Posizionamento_Toponimo_Variance_Fields = {
  __typename?: 'gis__tipologia_posizionamento_toponimo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "gis.civico" */
export type Gis_Civico = {
  __typename?: 'gis_civico';
  civico1?: Maybe<Scalars['String']>;
  cs1?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id: Scalars['bigint'];
  mix1?: Maybe<Scalars['String']>;
  nomestrada?: Maybe<Scalars['String']>;
  sezione1?: Maybe<Scalars['String']>;
};

/** aggregated selection of "gis.civico" */
export type Gis_Civico_Aggregate = {
  __typename?: 'gis_civico_aggregate';
  aggregate?: Maybe<Gis_Civico_Aggregate_Fields>;
  nodes: Array<Gis_Civico>;
};

/** aggregate fields of "gis.civico" */
export type Gis_Civico_Aggregate_Fields = {
  __typename?: 'gis_civico_aggregate_fields';
  avg?: Maybe<Gis_Civico_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Gis_Civico_Max_Fields>;
  min?: Maybe<Gis_Civico_Min_Fields>;
  stddev?: Maybe<Gis_Civico_Stddev_Fields>;
  stddev_pop?: Maybe<Gis_Civico_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Gis_Civico_Stddev_Samp_Fields>;
  sum?: Maybe<Gis_Civico_Sum_Fields>;
  var_pop?: Maybe<Gis_Civico_Var_Pop_Fields>;
  var_samp?: Maybe<Gis_Civico_Var_Samp_Fields>;
  variance?: Maybe<Gis_Civico_Variance_Fields>;
};


/** aggregate fields of "gis.civico" */
export type Gis_Civico_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Gis_Civico_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Gis_Civico_Avg_Fields = {
  __typename?: 'gis_civico_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "gis.civico". All fields are combined with a logical 'AND'. */
export type Gis_Civico_Bool_Exp = {
  _and?: Maybe<Array<Gis_Civico_Bool_Exp>>;
  _not?: Maybe<Gis_Civico_Bool_Exp>;
  _or?: Maybe<Array<Gis_Civico_Bool_Exp>>;
  civico1?: Maybe<String_Comparison_Exp>;
  cs1?: Maybe<String_Comparison_Exp>;
  fk_color?: Maybe<String_Comparison_Exp>;
  fk_t_code?: Maybe<String_Comparison_Exp>;
  fk_text?: Maybe<String_Comparison_Exp>;
  geom?: Maybe<Geometry_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  mix1?: Maybe<String_Comparison_Exp>;
  nomestrada?: Maybe<String_Comparison_Exp>;
  sezione1?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "gis.civico" */
export enum Gis_Civico_Constraint {
  /** unique or primary key constraint */
  CivicoPkey = 'civico_pkey'
}

/** input type for incrementing numeric columns in table "gis.civico" */
export type Gis_Civico_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "gis.civico" */
export type Gis_Civico_Insert_Input = {
  civico1?: Maybe<Scalars['String']>;
  cs1?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['bigint']>;
  mix1?: Maybe<Scalars['String']>;
  nomestrada?: Maybe<Scalars['String']>;
  sezione1?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Gis_Civico_Max_Fields = {
  __typename?: 'gis_civico_max_fields';
  civico1?: Maybe<Scalars['String']>;
  cs1?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  mix1?: Maybe<Scalars['String']>;
  nomestrada?: Maybe<Scalars['String']>;
  sezione1?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Gis_Civico_Min_Fields = {
  __typename?: 'gis_civico_min_fields';
  civico1?: Maybe<Scalars['String']>;
  cs1?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  mix1?: Maybe<Scalars['String']>;
  nomestrada?: Maybe<Scalars['String']>;
  sezione1?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "gis.civico" */
export type Gis_Civico_Mutation_Response = {
  __typename?: 'gis_civico_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Gis_Civico>;
};

/** on_conflict condition type for table "gis.civico" */
export type Gis_Civico_On_Conflict = {
  constraint: Gis_Civico_Constraint;
  update_columns?: Array<Gis_Civico_Update_Column>;
  where?: Maybe<Gis_Civico_Bool_Exp>;
};

/** Ordering options when selecting data from "gis.civico". */
export type Gis_Civico_Order_By = {
  civico1?: Maybe<Order_By>;
  cs1?: Maybe<Order_By>;
  fk_color?: Maybe<Order_By>;
  fk_t_code?: Maybe<Order_By>;
  fk_text?: Maybe<Order_By>;
  geom?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  mix1?: Maybe<Order_By>;
  nomestrada?: Maybe<Order_By>;
  sezione1?: Maybe<Order_By>;
};

/** primary key columns input for table: gis_civico */
export type Gis_Civico_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "gis.civico" */
export enum Gis_Civico_Select_Column {
  /** column name */
  Civico1 = 'civico1',
  /** column name */
  Cs1 = 'cs1',
  /** column name */
  FkColor = 'fk_color',
  /** column name */
  FkTCode = 'fk_t_code',
  /** column name */
  FkText = 'fk_text',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Mix1 = 'mix1',
  /** column name */
  Nomestrada = 'nomestrada',
  /** column name */
  Sezione1 = 'sezione1'
}

/** input type for updating data in table "gis.civico" */
export type Gis_Civico_Set_Input = {
  civico1?: Maybe<Scalars['String']>;
  cs1?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['bigint']>;
  mix1?: Maybe<Scalars['String']>;
  nomestrada?: Maybe<Scalars['String']>;
  sezione1?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Gis_Civico_Stddev_Fields = {
  __typename?: 'gis_civico_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Gis_Civico_Stddev_Pop_Fields = {
  __typename?: 'gis_civico_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Gis_Civico_Stddev_Samp_Fields = {
  __typename?: 'gis_civico_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Gis_Civico_Sum_Fields = {
  __typename?: 'gis_civico_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "gis.civico" */
export enum Gis_Civico_Update_Column {
  /** column name */
  Civico1 = 'civico1',
  /** column name */
  Cs1 = 'cs1',
  /** column name */
  FkColor = 'fk_color',
  /** column name */
  FkTCode = 'fk_t_code',
  /** column name */
  FkText = 'fk_text',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Mix1 = 'mix1',
  /** column name */
  Nomestrada = 'nomestrada',
  /** column name */
  Sezione1 = 'sezione1'
}

/** aggregate var_pop on columns */
export type Gis_Civico_Var_Pop_Fields = {
  __typename?: 'gis_civico_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Gis_Civico_Var_Samp_Fields = {
  __typename?: 'gis_civico_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Gis_Civico_Variance_Fields = {
  __typename?: 'gis_civico_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "gis.connessione_grafo" */
export type Gis_Connessione_Grafo = {
  __typename?: 'gis_connessione_grafo';
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id: Scalars['bigint'];
  x?: Maybe<Scalars['numeric']>;
  y?: Maybe<Scalars['numeric']>;
};

/** aggregated selection of "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_Aggregate = {
  __typename?: 'gis_connessione_grafo_aggregate';
  aggregate?: Maybe<Gis_Connessione_Grafo_Aggregate_Fields>;
  nodes: Array<Gis_Connessione_Grafo>;
};

/** aggregate fields of "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_Aggregate_Fields = {
  __typename?: 'gis_connessione_grafo_aggregate_fields';
  avg?: Maybe<Gis_Connessione_Grafo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Gis_Connessione_Grafo_Max_Fields>;
  min?: Maybe<Gis_Connessione_Grafo_Min_Fields>;
  stddev?: Maybe<Gis_Connessione_Grafo_Stddev_Fields>;
  stddev_pop?: Maybe<Gis_Connessione_Grafo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Gis_Connessione_Grafo_Stddev_Samp_Fields>;
  sum?: Maybe<Gis_Connessione_Grafo_Sum_Fields>;
  var_pop?: Maybe<Gis_Connessione_Grafo_Var_Pop_Fields>;
  var_samp?: Maybe<Gis_Connessione_Grafo_Var_Samp_Fields>;
  variance?: Maybe<Gis_Connessione_Grafo_Variance_Fields>;
};


/** aggregate fields of "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Gis_Connessione_Grafo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Gis_Connessione_Grafo_Avg_Fields = {
  __typename?: 'gis_connessione_grafo_avg_fields';
  id?: Maybe<Scalars['Float']>;
  x?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "gis.connessione_grafo". All fields are combined with a logical 'AND'. */
export type Gis_Connessione_Grafo_Bool_Exp = {
  _and?: Maybe<Array<Gis_Connessione_Grafo_Bool_Exp>>;
  _not?: Maybe<Gis_Connessione_Grafo_Bool_Exp>;
  _or?: Maybe<Array<Gis_Connessione_Grafo_Bool_Exp>>;
  fk_color?: Maybe<String_Comparison_Exp>;
  fk_t_code?: Maybe<String_Comparison_Exp>;
  fk_text?: Maybe<String_Comparison_Exp>;
  geom?: Maybe<Geometry_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  x?: Maybe<Numeric_Comparison_Exp>;
  y?: Maybe<Numeric_Comparison_Exp>;
};

/** unique or primary key constraints on table "gis.connessione_grafo" */
export enum Gis_Connessione_Grafo_Constraint {
  /** unique or primary key constraint */
  ConnessioneGrafoPkey = 'connessione_grafo_pkey'
}

/** input type for incrementing numeric columns in table "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  x?: Maybe<Scalars['numeric']>;
  y?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_Insert_Input = {
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['bigint']>;
  x?: Maybe<Scalars['numeric']>;
  y?: Maybe<Scalars['numeric']>;
};

/** aggregate max on columns */
export type Gis_Connessione_Grafo_Max_Fields = {
  __typename?: 'gis_connessione_grafo_max_fields';
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  x?: Maybe<Scalars['numeric']>;
  y?: Maybe<Scalars['numeric']>;
};

/** aggregate min on columns */
export type Gis_Connessione_Grafo_Min_Fields = {
  __typename?: 'gis_connessione_grafo_min_fields';
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  x?: Maybe<Scalars['numeric']>;
  y?: Maybe<Scalars['numeric']>;
};

/** response of any mutation on the table "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_Mutation_Response = {
  __typename?: 'gis_connessione_grafo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Gis_Connessione_Grafo>;
};

/** on_conflict condition type for table "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_On_Conflict = {
  constraint: Gis_Connessione_Grafo_Constraint;
  update_columns?: Array<Gis_Connessione_Grafo_Update_Column>;
  where?: Maybe<Gis_Connessione_Grafo_Bool_Exp>;
};

/** Ordering options when selecting data from "gis.connessione_grafo". */
export type Gis_Connessione_Grafo_Order_By = {
  fk_color?: Maybe<Order_By>;
  fk_t_code?: Maybe<Order_By>;
  fk_text?: Maybe<Order_By>;
  geom?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  x?: Maybe<Order_By>;
  y?: Maybe<Order_By>;
};

/** primary key columns input for table: gis_connessione_grafo */
export type Gis_Connessione_Grafo_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "gis.connessione_grafo" */
export enum Gis_Connessione_Grafo_Select_Column {
  /** column name */
  FkColor = 'fk_color',
  /** column name */
  FkTCode = 'fk_t_code',
  /** column name */
  FkText = 'fk_text',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  X = 'x',
  /** column name */
  Y = 'y'
}

/** input type for updating data in table "gis.connessione_grafo" */
export type Gis_Connessione_Grafo_Set_Input = {
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['bigint']>;
  x?: Maybe<Scalars['numeric']>;
  y?: Maybe<Scalars['numeric']>;
};

/** aggregate stddev on columns */
export type Gis_Connessione_Grafo_Stddev_Fields = {
  __typename?: 'gis_connessione_grafo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  x?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Gis_Connessione_Grafo_Stddev_Pop_Fields = {
  __typename?: 'gis_connessione_grafo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  x?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Gis_Connessione_Grafo_Stddev_Samp_Fields = {
  __typename?: 'gis_connessione_grafo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  x?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Gis_Connessione_Grafo_Sum_Fields = {
  __typename?: 'gis_connessione_grafo_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  x?: Maybe<Scalars['numeric']>;
  y?: Maybe<Scalars['numeric']>;
};

/** update columns of table "gis.connessione_grafo" */
export enum Gis_Connessione_Grafo_Update_Column {
  /** column name */
  FkColor = 'fk_color',
  /** column name */
  FkTCode = 'fk_t_code',
  /** column name */
  FkText = 'fk_text',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  X = 'x',
  /** column name */
  Y = 'y'
}

/** aggregate var_pop on columns */
export type Gis_Connessione_Grafo_Var_Pop_Fields = {
  __typename?: 'gis_connessione_grafo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  x?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Gis_Connessione_Grafo_Var_Samp_Fields = {
  __typename?: 'gis_connessione_grafo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  x?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Gis_Connessione_Grafo_Variance_Fields = {
  __typename?: 'gis_connessione_grafo_variance_fields';
  id?: Maybe<Scalars['Float']>;
  x?: Maybe<Scalars['Float']>;
  y?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo = {
  __typename?: 'gis_posizionamento_toponimo';
  civico?: Maybe<Scalars['String']>;
  connessione?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  geoloc?: Maybe<Scalars['geography']>;
  id: Scalars['Int'];
  ipi?: Maybe<Scalars['String']>;
  km?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  /** An object relationship */
  specifica?: Maybe<Gis__Specifica_Posizionamento_Toponimo>;
  specifica_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  tipologia?: Maybe<Gis__Tipologia_Posizionamento_Toponimo>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Aggregate = {
  __typename?: 'gis_posizionamento_toponimo_aggregate';
  aggregate?: Maybe<Gis_Posizionamento_Toponimo_Aggregate_Fields>;
  nodes: Array<Gis_Posizionamento_Toponimo>;
};

/** aggregate fields of "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Aggregate_Fields = {
  __typename?: 'gis_posizionamento_toponimo_aggregate_fields';
  avg?: Maybe<Gis_Posizionamento_Toponimo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Gis_Posizionamento_Toponimo_Max_Fields>;
  min?: Maybe<Gis_Posizionamento_Toponimo_Min_Fields>;
  stddev?: Maybe<Gis_Posizionamento_Toponimo_Stddev_Fields>;
  stddev_pop?: Maybe<Gis_Posizionamento_Toponimo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Gis_Posizionamento_Toponimo_Stddev_Samp_Fields>;
  sum?: Maybe<Gis_Posizionamento_Toponimo_Sum_Fields>;
  var_pop?: Maybe<Gis_Posizionamento_Toponimo_Var_Pop_Fields>;
  var_samp?: Maybe<Gis_Posizionamento_Toponimo_Var_Samp_Fields>;
  variance?: Maybe<Gis_Posizionamento_Toponimo_Variance_Fields>;
};


/** aggregate fields of "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Gis_Posizionamento_Toponimo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Gis_Posizionamento_Toponimo_Avg_Fields = {
  __typename?: 'gis_posizionamento_toponimo_avg_fields';
  id?: Maybe<Scalars['Float']>;
  specifica_id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "gis.posizionamento_toponimo". All fields are combined with a logical 'AND'. */
export type Gis_Posizionamento_Toponimo_Bool_Exp = {
  _and?: Maybe<Array<Gis_Posizionamento_Toponimo_Bool_Exp>>;
  _not?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
  _or?: Maybe<Array<Gis_Posizionamento_Toponimo_Bool_Exp>>;
  civico?: Maybe<String_Comparison_Exp>;
  connessione?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  geoloc?: Maybe<Geography_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ipi?: Maybe<String_Comparison_Exp>;
  km?: Maybe<String_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  specifica?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>;
  specifica_id?: Maybe<Int_Comparison_Exp>;
  tipologia?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>;
  tipologia_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "gis.posizionamento_toponimo" */
export enum Gis_Posizionamento_Toponimo_Constraint {
  /** unique or primary key constraint */
  PosizionamentoToponimoPkey = 'posizionamento_toponimo_pkey'
}

/** input type for incrementing numeric columns in table "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  specifica_id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Insert_Input = {
  civico?: Maybe<Scalars['String']>;
  connessione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  geoloc?: Maybe<Scalars['geography']>;
  id?: Maybe<Scalars['Int']>;
  ipi?: Maybe<Scalars['String']>;
  km?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  specifica?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Obj_Rel_Insert_Input>;
  specifica_id?: Maybe<Scalars['Int']>;
  tipologia?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Obj_Rel_Insert_Input>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Gis_Posizionamento_Toponimo_Max_Fields = {
  __typename?: 'gis_posizionamento_toponimo_max_fields';
  civico?: Maybe<Scalars['String']>;
  connessione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ipi?: Maybe<Scalars['String']>;
  km?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  specifica_id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Gis_Posizionamento_Toponimo_Min_Fields = {
  __typename?: 'gis_posizionamento_toponimo_min_fields';
  civico?: Maybe<Scalars['String']>;
  connessione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ipi?: Maybe<Scalars['String']>;
  km?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  specifica_id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Mutation_Response = {
  __typename?: 'gis_posizionamento_toponimo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Gis_Posizionamento_Toponimo>;
};

/** input type for inserting object relation for remote table "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Obj_Rel_Insert_Input = {
  data: Gis_Posizionamento_Toponimo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Gis_Posizionamento_Toponimo_On_Conflict>;
};

/** on_conflict condition type for table "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_On_Conflict = {
  constraint: Gis_Posizionamento_Toponimo_Constraint;
  update_columns?: Array<Gis_Posizionamento_Toponimo_Update_Column>;
  where?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
};

/** Ordering options when selecting data from "gis.posizionamento_toponimo". */
export type Gis_Posizionamento_Toponimo_Order_By = {
  civico?: Maybe<Order_By>;
  connessione?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  geoloc?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ipi?: Maybe<Order_By>;
  km?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  specifica?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Order_By>;
  specifica_id?: Maybe<Order_By>;
  tipologia?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Order_By>;
  tipologia_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: gis_posizionamento_toponimo */
export type Gis_Posizionamento_Toponimo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "gis.posizionamento_toponimo" */
export enum Gis_Posizionamento_Toponimo_Select_Column {
  /** column name */
  Civico = 'civico',
  /** column name */
  Connessione = 'connessione',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Geoloc = 'geoloc',
  /** column name */
  Id = 'id',
  /** column name */
  Ipi = 'ipi',
  /** column name */
  Km = 'km',
  /** column name */
  Note = 'note',
  /** column name */
  SpecificaId = 'specifica_id',
  /** column name */
  TipologiaId = 'tipologia_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "gis.posizionamento_toponimo" */
export type Gis_Posizionamento_Toponimo_Set_Input = {
  civico?: Maybe<Scalars['String']>;
  connessione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  geoloc?: Maybe<Scalars['geography']>;
  id?: Maybe<Scalars['Int']>;
  ipi?: Maybe<Scalars['String']>;
  km?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  specifica_id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Gis_Posizionamento_Toponimo_Stddev_Fields = {
  __typename?: 'gis_posizionamento_toponimo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  specifica_id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Gis_Posizionamento_Toponimo_Stddev_Pop_Fields = {
  __typename?: 'gis_posizionamento_toponimo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  specifica_id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Gis_Posizionamento_Toponimo_Stddev_Samp_Fields = {
  __typename?: 'gis_posizionamento_toponimo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  specifica_id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Gis_Posizionamento_Toponimo_Sum_Fields = {
  __typename?: 'gis_posizionamento_toponimo_sum_fields';
  id?: Maybe<Scalars['Int']>;
  specifica_id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
};

/** update columns of table "gis.posizionamento_toponimo" */
export enum Gis_Posizionamento_Toponimo_Update_Column {
  /** column name */
  Civico = 'civico',
  /** column name */
  Connessione = 'connessione',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Geoloc = 'geoloc',
  /** column name */
  Id = 'id',
  /** column name */
  Ipi = 'ipi',
  /** column name */
  Km = 'km',
  /** column name */
  Note = 'note',
  /** column name */
  SpecificaId = 'specifica_id',
  /** column name */
  TipologiaId = 'tipologia_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Gis_Posizionamento_Toponimo_Var_Pop_Fields = {
  __typename?: 'gis_posizionamento_toponimo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  specifica_id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Gis_Posizionamento_Toponimo_Var_Samp_Fields = {
  __typename?: 'gis_posizionamento_toponimo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  specifica_id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Gis_Posizionamento_Toponimo_Variance_Fields = {
  __typename?: 'gis_posizionamento_toponimo_variance_fields';
  id?: Maybe<Scalars['Float']>;
  specifica_id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi = {
  __typename?: 'gis_sostegno_ipi';
  armatura1?: Maybe<Scalars['String']>;
  armatura2?: Maybe<Scalars['String']>;
  braccio?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id: Scalars['bigint'];
  id_cavo?: Maybe<Scalars['String']>;
  lampada1?: Maybe<Scalars['String']>;
  lampada2?: Maybe<Scalars['String']>;
  linea?: Maybe<Scalars['String']>;
  matricola?: Maybe<Scalars['String']>;
  sostegno?: Maybe<Scalars['String']>;
  sostegno_a?: Maybe<Scalars['String']>;
  ubicazione?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['String']>;
};

/** aggregated selection of "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_Aggregate = {
  __typename?: 'gis_sostegno_ipi_aggregate';
  aggregate?: Maybe<Gis_Sostegno_Ipi_Aggregate_Fields>;
  nodes: Array<Gis_Sostegno_Ipi>;
};

/** aggregate fields of "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_Aggregate_Fields = {
  __typename?: 'gis_sostegno_ipi_aggregate_fields';
  avg?: Maybe<Gis_Sostegno_Ipi_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Gis_Sostegno_Ipi_Max_Fields>;
  min?: Maybe<Gis_Sostegno_Ipi_Min_Fields>;
  stddev?: Maybe<Gis_Sostegno_Ipi_Stddev_Fields>;
  stddev_pop?: Maybe<Gis_Sostegno_Ipi_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Gis_Sostegno_Ipi_Stddev_Samp_Fields>;
  sum?: Maybe<Gis_Sostegno_Ipi_Sum_Fields>;
  var_pop?: Maybe<Gis_Sostegno_Ipi_Var_Pop_Fields>;
  var_samp?: Maybe<Gis_Sostegno_Ipi_Var_Samp_Fields>;
  variance?: Maybe<Gis_Sostegno_Ipi_Variance_Fields>;
};


/** aggregate fields of "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Gis_Sostegno_Ipi_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Gis_Sostegno_Ipi_Avg_Fields = {
  __typename?: 'gis_sostegno_ipi_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "gis.sostegno_ipi". All fields are combined with a logical 'AND'. */
export type Gis_Sostegno_Ipi_Bool_Exp = {
  _and?: Maybe<Array<Gis_Sostegno_Ipi_Bool_Exp>>;
  _not?: Maybe<Gis_Sostegno_Ipi_Bool_Exp>;
  _or?: Maybe<Array<Gis_Sostegno_Ipi_Bool_Exp>>;
  armatura1?: Maybe<String_Comparison_Exp>;
  armatura2?: Maybe<String_Comparison_Exp>;
  braccio?: Maybe<String_Comparison_Exp>;
  fk_color?: Maybe<String_Comparison_Exp>;
  fk_t_code?: Maybe<String_Comparison_Exp>;
  fk_text?: Maybe<String_Comparison_Exp>;
  geom?: Maybe<Geometry_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  id_cavo?: Maybe<String_Comparison_Exp>;
  lampada1?: Maybe<String_Comparison_Exp>;
  lampada2?: Maybe<String_Comparison_Exp>;
  linea?: Maybe<String_Comparison_Exp>;
  matricola?: Maybe<String_Comparison_Exp>;
  sostegno?: Maybe<String_Comparison_Exp>;
  sostegno_a?: Maybe<String_Comparison_Exp>;
  ubicazione?: Maybe<String_Comparison_Exp>;
  x?: Maybe<String_Comparison_Exp>;
  y?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "gis.sostegno_ipi" */
export enum Gis_Sostegno_Ipi_Constraint {
  /** unique or primary key constraint */
  SostegnoIpiPkey = 'sostegno_ipi_pkey'
}

/** input type for incrementing numeric columns in table "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_Insert_Input = {
  armatura1?: Maybe<Scalars['String']>;
  armatura2?: Maybe<Scalars['String']>;
  braccio?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['bigint']>;
  id_cavo?: Maybe<Scalars['String']>;
  lampada1?: Maybe<Scalars['String']>;
  lampada2?: Maybe<Scalars['String']>;
  linea?: Maybe<Scalars['String']>;
  matricola?: Maybe<Scalars['String']>;
  sostegno?: Maybe<Scalars['String']>;
  sostegno_a?: Maybe<Scalars['String']>;
  ubicazione?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Gis_Sostegno_Ipi_Max_Fields = {
  __typename?: 'gis_sostegno_ipi_max_fields';
  armatura1?: Maybe<Scalars['String']>;
  armatura2?: Maybe<Scalars['String']>;
  braccio?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  id_cavo?: Maybe<Scalars['String']>;
  lampada1?: Maybe<Scalars['String']>;
  lampada2?: Maybe<Scalars['String']>;
  linea?: Maybe<Scalars['String']>;
  matricola?: Maybe<Scalars['String']>;
  sostegno?: Maybe<Scalars['String']>;
  sostegno_a?: Maybe<Scalars['String']>;
  ubicazione?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Gis_Sostegno_Ipi_Min_Fields = {
  __typename?: 'gis_sostegno_ipi_min_fields';
  armatura1?: Maybe<Scalars['String']>;
  armatura2?: Maybe<Scalars['String']>;
  braccio?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  id_cavo?: Maybe<Scalars['String']>;
  lampada1?: Maybe<Scalars['String']>;
  lampada2?: Maybe<Scalars['String']>;
  linea?: Maybe<Scalars['String']>;
  matricola?: Maybe<Scalars['String']>;
  sostegno?: Maybe<Scalars['String']>;
  sostegno_a?: Maybe<Scalars['String']>;
  ubicazione?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_Mutation_Response = {
  __typename?: 'gis_sostegno_ipi_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Gis_Sostegno_Ipi>;
};

/** on_conflict condition type for table "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_On_Conflict = {
  constraint: Gis_Sostegno_Ipi_Constraint;
  update_columns?: Array<Gis_Sostegno_Ipi_Update_Column>;
  where?: Maybe<Gis_Sostegno_Ipi_Bool_Exp>;
};

/** Ordering options when selecting data from "gis.sostegno_ipi". */
export type Gis_Sostegno_Ipi_Order_By = {
  armatura1?: Maybe<Order_By>;
  armatura2?: Maybe<Order_By>;
  braccio?: Maybe<Order_By>;
  fk_color?: Maybe<Order_By>;
  fk_t_code?: Maybe<Order_By>;
  fk_text?: Maybe<Order_By>;
  geom?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  id_cavo?: Maybe<Order_By>;
  lampada1?: Maybe<Order_By>;
  lampada2?: Maybe<Order_By>;
  linea?: Maybe<Order_By>;
  matricola?: Maybe<Order_By>;
  sostegno?: Maybe<Order_By>;
  sostegno_a?: Maybe<Order_By>;
  ubicazione?: Maybe<Order_By>;
  x?: Maybe<Order_By>;
  y?: Maybe<Order_By>;
};

/** primary key columns input for table: gis_sostegno_ipi */
export type Gis_Sostegno_Ipi_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "gis.sostegno_ipi" */
export enum Gis_Sostegno_Ipi_Select_Column {
  /** column name */
  Armatura1 = 'armatura1',
  /** column name */
  Armatura2 = 'armatura2',
  /** column name */
  Braccio = 'braccio',
  /** column name */
  FkColor = 'fk_color',
  /** column name */
  FkTCode = 'fk_t_code',
  /** column name */
  FkText = 'fk_text',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  IdCavo = 'id_cavo',
  /** column name */
  Lampada1 = 'lampada1',
  /** column name */
  Lampada2 = 'lampada2',
  /** column name */
  Linea = 'linea',
  /** column name */
  Matricola = 'matricola',
  /** column name */
  Sostegno = 'sostegno',
  /** column name */
  SostegnoA = 'sostegno_a',
  /** column name */
  Ubicazione = 'ubicazione',
  /** column name */
  X = 'x',
  /** column name */
  Y = 'y'
}

/** input type for updating data in table "gis.sostegno_ipi" */
export type Gis_Sostegno_Ipi_Set_Input = {
  armatura1?: Maybe<Scalars['String']>;
  armatura2?: Maybe<Scalars['String']>;
  braccio?: Maybe<Scalars['String']>;
  fk_color?: Maybe<Scalars['String']>;
  fk_t_code?: Maybe<Scalars['String']>;
  fk_text?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['bigint']>;
  id_cavo?: Maybe<Scalars['String']>;
  lampada1?: Maybe<Scalars['String']>;
  lampada2?: Maybe<Scalars['String']>;
  linea?: Maybe<Scalars['String']>;
  matricola?: Maybe<Scalars['String']>;
  sostegno?: Maybe<Scalars['String']>;
  sostegno_a?: Maybe<Scalars['String']>;
  ubicazione?: Maybe<Scalars['String']>;
  x?: Maybe<Scalars['String']>;
  y?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Gis_Sostegno_Ipi_Stddev_Fields = {
  __typename?: 'gis_sostegno_ipi_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Gis_Sostegno_Ipi_Stddev_Pop_Fields = {
  __typename?: 'gis_sostegno_ipi_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Gis_Sostegno_Ipi_Stddev_Samp_Fields = {
  __typename?: 'gis_sostegno_ipi_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Gis_Sostegno_Ipi_Sum_Fields = {
  __typename?: 'gis_sostegno_ipi_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "gis.sostegno_ipi" */
export enum Gis_Sostegno_Ipi_Update_Column {
  /** column name */
  Armatura1 = 'armatura1',
  /** column name */
  Armatura2 = 'armatura2',
  /** column name */
  Braccio = 'braccio',
  /** column name */
  FkColor = 'fk_color',
  /** column name */
  FkTCode = 'fk_t_code',
  /** column name */
  FkText = 'fk_text',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  IdCavo = 'id_cavo',
  /** column name */
  Lampada1 = 'lampada1',
  /** column name */
  Lampada2 = 'lampada2',
  /** column name */
  Linea = 'linea',
  /** column name */
  Matricola = 'matricola',
  /** column name */
  Sostegno = 'sostegno',
  /** column name */
  SostegnoA = 'sostegno_a',
  /** column name */
  Ubicazione = 'ubicazione',
  /** column name */
  X = 'x',
  /** column name */
  Y = 'y'
}

/** aggregate var_pop on columns */
export type Gis_Sostegno_Ipi_Var_Pop_Fields = {
  __typename?: 'gis_sostegno_ipi_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Gis_Sostegno_Ipi_Var_Samp_Fields = {
  __typename?: 'gis_sostegno_ipi_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Gis_Sostegno_Ipi_Variance_Fields = {
  __typename?: 'gis_sostegno_ipi_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

export type Insert_Allegato_Diario_Output = {
  __typename?: 'insert_allegato_diario_output';
  affected_rows?: Maybe<Scalars['Int']>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: Maybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: Maybe<Scalars['jsonb']>;
  _eq?: Maybe<Scalars['jsonb']>;
  _gt?: Maybe<Scalars['jsonb']>;
  _gte?: Maybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: Maybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: Maybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: Maybe<Array<Scalars['String']>>;
  _in?: Maybe<Array<Scalars['jsonb']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['jsonb']>;
  _lte?: Maybe<Scalars['jsonb']>;
  _neq?: Maybe<Scalars['jsonb']>;
  _nin?: Maybe<Array<Scalars['jsonb']>>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  custom_insert_intervento_straordinario?: Maybe<Custom_Insert_Intervento_Straordinario_Output>;
  custom_insert_ris?: Maybe<Custom_Insert_Ris_Output>;
  custom_insert_segnalazione?: Maybe<Custom_Insert_Segnalazione_Output>;
  /** delete data from the table: "_citta" */
  delete__citta?: Maybe<_Citta_Mutation_Response>;
  /** delete single row from the table: "_citta" */
  delete__citta_by_pk?: Maybe<_Citta>;
  /** delete data from the table: "_nazione" */
  delete__nazione?: Maybe<_Nazione_Mutation_Response>;
  /** delete single row from the table: "_nazione" */
  delete__nazione_by_pk?: Maybe<_Nazione>;
  /** delete data from the table: "_sesso" */
  delete__sesso?: Maybe<_Sesso_Mutation_Response>;
  /** delete single row from the table: "_sesso" */
  delete__sesso_by_pk?: Maybe<_Sesso>;
  /** delete data from the table: "_sinoaltro" */
  delete__sinoaltro?: Maybe<_Sinoaltro_Mutation_Response>;
  /** delete single row from the table: "_sinoaltro" */
  delete__sinoaltro_by_pk?: Maybe<_Sinoaltro>;
  /** delete data from the table: "_titolo" */
  delete__titolo?: Maybe<_Titolo_Mutation_Response>;
  /** delete single row from the table: "_titolo" */
  delete__titolo_by_pk?: Maybe<_Titolo>;
  /** delete data from the table: "agcos.agcos" */
  delete_agcos_agcos?: Maybe<Agcos_Agcos_Mutation_Response>;
  /** delete single row from the table: "agcos.agcos" */
  delete_agcos_agcos_by_pk?: Maybe<Agcos_Agcos>;
  /** delete data from the table: "agcos.import" */
  delete_agcos_import?: Maybe<Agcos_Import_Mutation_Response>;
  /** delete single row from the table: "agcos.import" */
  delete_agcos_import_by_pk?: Maybe<Agcos_Import>;
  /** delete data from the table: "gis._specifica_posizionamento_toponimo" */
  delete_gis__specifica_posizionamento_toponimo?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Mutation_Response>;
  /** delete single row from the table: "gis._specifica_posizionamento_toponimo" */
  delete_gis__specifica_posizionamento_toponimo_by_pk?: Maybe<Gis__Specifica_Posizionamento_Toponimo>;
  /** delete data from the table: "gis._tipologia_posizionamento_toponimo" */
  delete_gis__tipologia_posizionamento_toponimo?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Mutation_Response>;
  /** delete single row from the table: "gis._tipologia_posizionamento_toponimo" */
  delete_gis__tipologia_posizionamento_toponimo_by_pk?: Maybe<Gis__Tipologia_Posizionamento_Toponimo>;
  /** delete data from the table: "gis.civico" */
  delete_gis_civico?: Maybe<Gis_Civico_Mutation_Response>;
  /** delete single row from the table: "gis.civico" */
  delete_gis_civico_by_pk?: Maybe<Gis_Civico>;
  /** delete data from the table: "gis.connessione_grafo" */
  delete_gis_connessione_grafo?: Maybe<Gis_Connessione_Grafo_Mutation_Response>;
  /** delete single row from the table: "gis.connessione_grafo" */
  delete_gis_connessione_grafo_by_pk?: Maybe<Gis_Connessione_Grafo>;
  /** delete data from the table: "gis.posizionamento_toponimo" */
  delete_gis_posizionamento_toponimo?: Maybe<Gis_Posizionamento_Toponimo_Mutation_Response>;
  /** delete single row from the table: "gis.posizionamento_toponimo" */
  delete_gis_posizionamento_toponimo_by_pk?: Maybe<Gis_Posizionamento_Toponimo>;
  /** delete data from the table: "gis.sostegno_ipi" */
  delete_gis_sostegno_ipi?: Maybe<Gis_Sostegno_Ipi_Mutation_Response>;
  /** delete single row from the table: "gis.sostegno_ipi" */
  delete_gis_sostegno_ipi_by_pk?: Maybe<Gis_Sostegno_Ipi>;
  /** delete data from the table: "pis._condizioni_traffico" */
  delete_pis__condizioni_traffico?: Maybe<Pis__Condizioni_Traffico_Mutation_Response>;
  /** delete single row from the table: "pis._condizioni_traffico" */
  delete_pis__condizioni_traffico_by_pk?: Maybe<Pis__Condizioni_Traffico>;
  /** delete data from the table: "pis._forma_dissesto" */
  delete_pis__forma_dissesto?: Maybe<Pis__Forma_Dissesto_Mutation_Response>;
  /** delete single row from the table: "pis._forma_dissesto" */
  delete_pis__forma_dissesto_by_pk?: Maybe<Pis__Forma_Dissesto>;
  /** delete data from the table: "pis._giorni_trascorsi" */
  delete_pis__giorni_trascorsi?: Maybe<Pis__Giorni_Trascorsi_Mutation_Response>;
  /** delete single row from the table: "pis._giorni_trascorsi" */
  delete_pis__giorni_trascorsi_by_pk?: Maybe<Pis__Giorni_Trascorsi>;
  /** delete data from the table: "pis._materiale" */
  delete_pis__materiale?: Maybe<Pis__Materiale_Mutation_Response>;
  /** delete single row from the table: "pis._materiale" */
  delete_pis__materiale_by_pk?: Maybe<Pis__Materiale>;
  /** delete data from the table: "pis._priorita" */
  delete_pis__priorita?: Maybe<Pis__Priorita_Mutation_Response>;
  /** delete single row from the table: "pis._priorita" */
  delete_pis__priorita_by_pk?: Maybe<Pis__Priorita>;
  /** delete data from the table: "pis._stato_segnalazione" */
  delete_pis__stato_segnalazione?: Maybe<Pis__Stato_Segnalazione_Mutation_Response>;
  /** delete single row from the table: "pis._stato_segnalazione" */
  delete_pis__stato_segnalazione_by_pk?: Maybe<Pis__Stato_Segnalazione>;
  /** delete data from the table: "pis._tipologia_dissesto" */
  delete_pis__tipologia_dissesto?: Maybe<Pis__Tipologia_Dissesto_Mutation_Response>;
  /** delete single row from the table: "pis._tipologia_dissesto" */
  delete_pis__tipologia_dissesto_by_pk?: Maybe<Pis__Tipologia_Dissesto>;
  /** delete data from the table: "pis.assegnazione_squadra" */
  delete_pis_assegnazione_squadra?: Maybe<Pis_Assegnazione_Squadra_Mutation_Response>;
  /** delete single row from the table: "pis.assegnazione_squadra" */
  delete_pis_assegnazione_squadra_by_pk?: Maybe<Pis_Assegnazione_Squadra>;
  /** delete data from the table: "pis.attrezzature_impiegate" */
  delete_pis_attrezzature_impiegate?: Maybe<Pis_Attrezzature_Impiegate_Mutation_Response>;
  /** delete single row from the table: "pis.attrezzature_impiegate" */
  delete_pis_attrezzature_impiegate_by_pk?: Maybe<Pis_Attrezzature_Impiegate>;
  /** delete data from the table: "pis.diario" */
  delete_pis_diario?: Maybe<Pis_Diario_Mutation_Response>;
  /** delete single row from the table: "pis.diario" */
  delete_pis_diario_by_pk?: Maybe<Pis_Diario>;
  /** delete data from the table: "pis.dissesto" */
  delete_pis_dissesto?: Maybe<Pis_Dissesto_Mutation_Response>;
  /** delete single row from the table: "pis.dissesto" */
  delete_pis_dissesto_by_pk?: Maybe<Pis_Dissesto>;
  /** delete data from the table: "pis.evento" */
  delete_pis_evento?: Maybe<Pis_Evento_Mutation_Response>;
  /** delete single row from the table: "pis.evento" */
  delete_pis_evento_by_pk?: Maybe<Pis_Evento>;
  /** delete data from the table: "pis.intervento" */
  delete_pis_intervento?: Maybe<Pis_Intervento_Mutation_Response>;
  /** delete single row from the table: "pis.intervento" */
  delete_pis_intervento_by_pk?: Maybe<Pis_Intervento>;
  /** delete data from the table: "pis.intervento_straordinario" */
  delete_pis_intervento_straordinario?: Maybe<Pis_Intervento_Straordinario_Mutation_Response>;
  /** delete single row from the table: "pis.intervento_straordinario" */
  delete_pis_intervento_straordinario_by_pk?: Maybe<Pis_Intervento_Straordinario>;
  /** delete data from the table: "pis.materiale_dissesto" */
  delete_pis_materiale_dissesto?: Maybe<Pis_Materiale_Dissesto_Mutation_Response>;
  /** delete single row from the table: "pis.materiale_dissesto" */
  delete_pis_materiale_dissesto_by_pk?: Maybe<Pis_Materiale_Dissesto>;
  /** delete data from the table: "pis.segnalazione" */
  delete_pis_segnalazione?: Maybe<Pis_Segnalazione_Mutation_Response>;
  /** delete single row from the table: "pis.segnalazione" */
  delete_pis_segnalazione_by_pk?: Maybe<Pis_Segnalazione>;
  /** delete data from the table: "pis.segnalazione_collegata" */
  delete_pis_segnalazione_collegata?: Maybe<Pis_Segnalazione_Collegata_Mutation_Response>;
  /** delete single row from the table: "pis.segnalazione_collegata" */
  delete_pis_segnalazione_collegata_by_pk?: Maybe<Pis_Segnalazione_Collegata>;
  /** delete data from the table: "pis.segnaletica_lasciata" */
  delete_pis_segnaletica_lasciata?: Maybe<Pis_Segnaletica_Lasciata_Mutation_Response>;
  /** delete single row from the table: "pis.segnaletica_lasciata" */
  delete_pis_segnaletica_lasciata_by_pk?: Maybe<Pis_Segnaletica_Lasciata>;
  /** delete data from the table: "pis.squadra" */
  delete_pis_squadra?: Maybe<Pis_Squadra_Mutation_Response>;
  /** delete single row from the table: "pis.squadra" */
  delete_pis_squadra_by_pk?: Maybe<Pis_Squadra>;
  /** delete data from the table: "pis.tecnico_referente" */
  delete_pis_tecnico_referente?: Maybe<Pis_Tecnico_Referente_Mutation_Response>;
  /** delete single row from the table: "pis.tecnico_referente" */
  delete_pis_tecnico_referente_by_pk?: Maybe<Pis_Tecnico_Referente>;
  /** delete data from the table: "pis.vecchia_squadra" */
  delete_pis_vecchia_squadra?: Maybe<Pis_Vecchia_Squadra_Mutation_Response>;
  /** delete single row from the table: "pis.vecchia_squadra" */
  delete_pis_vecchia_squadra_by_pk?: Maybe<Pis_Vecchia_Squadra>;
  /** delete data from the table: "pis.veicoli_impiegati" */
  delete_pis_veicoli_impiegati?: Maybe<Pis_Veicoli_Impiegati_Mutation_Response>;
  /** delete single row from the table: "pis.veicoli_impiegati" */
  delete_pis_veicoli_impiegati_by_pk?: Maybe<Pis_Veicoli_Impiegati>;
  /** delete data from the table: "protocollo._sezione_protocollo" */
  delete_protocollo__sezione_protocollo?: Maybe<Protocollo__Sezione_Protocollo_Mutation_Response>;
  /** delete single row from the table: "protocollo._sezione_protocollo" */
  delete_protocollo__sezione_protocollo_by_pk?: Maybe<Protocollo__Sezione_Protocollo>;
  /** delete data from the table: "protocollo.protocollo" */
  delete_protocollo_protocollo?: Maybe<Protocollo_Protocollo_Mutation_Response>;
  /** delete single row from the table: "protocollo.protocollo" */
  delete_protocollo_protocollo_by_pk?: Maybe<Protocollo_Protocollo>;
  /** delete data from the table: "protocollo.protocollo_destinatario" */
  delete_protocollo_protocollo_destinatario?: Maybe<Protocollo_Protocollo_Destinatario_Mutation_Response>;
  /** delete single row from the table: "protocollo.protocollo_destinatario" */
  delete_protocollo_protocollo_destinatario_by_pk?: Maybe<Protocollo_Protocollo_Destinatario>;
  /** delete data from the table: "protocollo.protocollo_destinatario_esterno" */
  delete_protocollo_protocollo_destinatario_esterno?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Mutation_Response>;
  /** delete single row from the table: "protocollo.protocollo_destinatario_esterno" */
  delete_protocollo_protocollo_destinatario_esterno_by_pk?: Maybe<Protocollo_Protocollo_Destinatario_Esterno>;
  /** delete data from the table: "sis._alimentazione_veicolo" */
  delete_sis__alimentazione_veicolo?: Maybe<Sis__Alimentazione_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis._alimentazione_veicolo" */
  delete_sis__alimentazione_veicolo_by_pk?: Maybe<Sis__Alimentazione_Veicolo>;
  /** delete data from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  delete_sis__condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  delete_sis__condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** delete data from the table: "sis._conseguenza_veicolo" */
  delete_sis__conseguenza_veicolo?: Maybe<Sis__Conseguenza_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis._conseguenza_veicolo" */
  delete_sis__conseguenza_veicolo_by_pk?: Maybe<Sis__Conseguenza_Veicolo>;
  /** delete data from the table: "sis._decessi_tipologia" */
  delete_sis__decessi_tipologia?: Maybe<Sis__Decessi_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis._decessi_tipologia" */
  delete_sis__decessi_tipologia_by_pk?: Maybe<Sis__Decessi_Tipologia>;
  /** delete data from the table: "sis._destinazione_decisione" */
  delete_sis__destinazione_decisione?: Maybe<Sis__Destinazione_Decisione_Mutation_Response>;
  /** delete single row from the table: "sis._destinazione_decisione" */
  delete_sis__destinazione_decisione_by_pk?: Maybe<Sis__Destinazione_Decisione>;
  /** delete data from the table: "sis._ente" */
  delete_sis__ente?: Maybe<Sis__Ente_Mutation_Response>;
  /** delete single row from the table: "sis._ente" */
  delete_sis__ente_by_pk?: Maybe<Sis__Ente>;
  /** delete data from the table: "sis._ente_secondario" */
  delete_sis__ente_secondario?: Maybe<Sis__Ente_Secondario_Mutation_Response>;
  /** delete single row from the table: "sis._ente_secondario" */
  delete_sis__ente_secondario_by_pk?: Maybe<Sis__Ente_Secondario>;
  /** delete data from the table: "sis._impianto_semaforico" */
  delete_sis__impianto_semaforico?: Maybe<Sis__Impianto_Semaforico_Mutation_Response>;
  /** delete single row from the table: "sis._impianto_semaforico" */
  delete_sis__impianto_semaforico_by_pk?: Maybe<Sis__Impianto_Semaforico>;
  /** delete data from the table: "sis._infortunato_informazione" */
  delete_sis__infortunato_informazione?: Maybe<Sis__Infortunato_Informazione_Mutation_Response>;
  /** delete single row from the table: "sis._infortunato_informazione" */
  delete_sis__infortunato_informazione_by_pk?: Maybe<Sis__Infortunato_Informazione>;
  /** delete data from the table: "sis._intortunato_tasportato" */
  delete_sis__intortunato_tasportato?: Maybe<Sis__Intortunato_Tasportato_Mutation_Response>;
  /** delete single row from the table: "sis._intortunato_tasportato" */
  delete_sis__intortunato_tasportato_by_pk?: Maybe<Sis__Intortunato_Tasportato>;
  /** delete data from the table: "sis._localizzazione_altro" */
  delete_sis__localizzazione_altro?: Maybe<Sis__Localizzazione_Altro_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_altro" */
  delete_sis__localizzazione_altro_by_pk?: Maybe<Sis__Localizzazione_Altro>;
  /** delete data from the table: "sis._localizzazione_condizioni_atmosferiche" */
  delete_sis__localizzazione_condizioni_atmosferiche?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_condizioni_atmosferiche" */
  delete_sis__localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche>;
  /** delete data from the table: "sis._localizzazione_condizioni_traffico" */
  delete_sis__localizzazione_condizioni_traffico?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_condizioni_traffico" */
  delete_sis__localizzazione_condizioni_traffico_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Traffico>;
  /** delete data from the table: "sis._localizzazione_extra_abitato" */
  delete_sis__localizzazione_extra_abitato?: Maybe<Sis__Localizzazione_Extra_Abitato_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_extra_abitato" */
  delete_sis__localizzazione_extra_abitato_by_pk?: Maybe<Sis__Localizzazione_Extra_Abitato>;
  /** delete data from the table: "sis._localizzazione_fondo_stradale" */
  delete_sis__localizzazione_fondo_stradale?: Maybe<Sis__Localizzazione_Fondo_Stradale_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_fondo_stradale" */
  delete_sis__localizzazione_fondo_stradale_by_pk?: Maybe<Sis__Localizzazione_Fondo_Stradale>;
  /** delete data from the table: "sis._localizzazione_illuminazione" */
  delete_sis__localizzazione_illuminazione?: Maybe<Sis__Localizzazione_Illuminazione_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_illuminazione" */
  delete_sis__localizzazione_illuminazione_by_pk?: Maybe<Sis__Localizzazione_Illuminazione>;
  /** delete data from the table: "sis._localizzazione_particolarita_strada" */
  delete_sis__localizzazione_particolarita_strada?: Maybe<Sis__Localizzazione_Particolarita_Strada_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_particolarita_strada" */
  delete_sis__localizzazione_particolarita_strada_by_pk?: Maybe<Sis__Localizzazione_Particolarita_Strada>;
  /** delete data from the table: "sis._localizzazione_pavimentazione" */
  delete_sis__localizzazione_pavimentazione?: Maybe<Sis__Localizzazione_Pavimentazione_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_pavimentazione" */
  delete_sis__localizzazione_pavimentazione_by_pk?: Maybe<Sis__Localizzazione_Pavimentazione>;
  /** delete data from the table: "sis._localizzazione_tipo_strada" */
  delete_sis__localizzazione_tipo_strada?: Maybe<Sis__Localizzazione_Tipo_Strada_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_tipo_strada" */
  delete_sis__localizzazione_tipo_strada_by_pk?: Maybe<Sis__Localizzazione_Tipo_Strada>;
  /** delete data from the table: "sis._localizzazione_visibilita" */
  delete_sis__localizzazione_visibilita?: Maybe<Sis__Localizzazione_Visibilita_Mutation_Response>;
  /** delete single row from the table: "sis._localizzazione_visibilita" */
  delete_sis__localizzazione_visibilita_by_pk?: Maybe<Sis__Localizzazione_Visibilita>;
  /** delete data from the table: "sis._natura_incidente" */
  delete_sis__natura_incidente?: Maybe<Sis__Natura_Incidente_Mutation_Response>;
  /** delete single row from the table: "sis._natura_incidente" */
  delete_sis__natura_incidente_by_pk?: Maybe<Sis__Natura_Incidente>;
  /** delete data from the table: "sis._patente_categoria" */
  delete_sis__patente_categoria?: Maybe<Sis__Patente_Categoria_Mutation_Response>;
  /** delete single row from the table: "sis._patente_categoria" */
  delete_sis__patente_categoria_by_pk?: Maybe<Sis__Patente_Categoria>;
  /** delete data from the table: "sis._posizione_finale_veicolo_carreggiata" */
  delete_sis__posizione_finale_veicolo_carreggiata?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Mutation_Response>;
  /** delete single row from the table: "sis._posizione_finale_veicolo_carreggiata" */
  delete_sis__posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata>;
  /** delete data from the table: "sis._posizione_finale_veicolo_fuori_sede" */
  delete_sis__posizione_finale_veicolo_fuori_sede?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response>;
  /** delete single row from the table: "sis._posizione_finale_veicolo_fuori_sede" */
  delete_sis__posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
  /** delete data from the table: "sis._posizione_finale_veicolo_margini" */
  delete_sis__posizione_finale_veicolo_margini?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Mutation_Response>;
  /** delete single row from the table: "sis._posizione_finale_veicolo_margini" */
  delete_sis__posizione_finale_veicolo_margini_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Margini>;
  /** delete data from the table: "sis._punti_rilievi_no_tipologia" */
  delete_sis__punti_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis._punti_rilievi_no_tipologia" */
  delete_sis__punti_rilievi_no_tipologia_by_pk?: Maybe<Sis__Punti_Rilievi_No_Tipologia>;
  /** delete data from the table: "sis._retrovisore_esterno" */
  delete_sis__retrovisore_esterno?: Maybe<Sis__Retrovisore_Esterno_Mutation_Response>;
  /** delete single row from the table: "sis._retrovisore_esterno" */
  delete_sis__retrovisore_esterno_by_pk?: Maybe<Sis__Retrovisore_Esterno>;
  /** delete data from the table: "sis._ris_consegnato_a" */
  delete_sis__ris_consegnato_a?: Maybe<Sis__Ris_Consegnato_A_Mutation_Response>;
  /** delete single row from the table: "sis._ris_consegnato_a" */
  delete_sis__ris_consegnato_a_by_pk?: Maybe<Sis__Ris_Consegnato_A>;
  /** delete data from the table: "sis._stato_ris" */
  delete_sis__stato_ris?: Maybe<Sis__Stato_Ris_Mutation_Response>;
  /** delete single row from the table: "sis._stato_ris" */
  delete_sis__stato_ris_by_pk?: Maybe<Sis__Stato_Ris>;
  /** delete data from the table: "sis._stato_veicolo" */
  delete_sis__stato_veicolo?: Maybe<Sis__Stato_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis._stato_veicolo" */
  delete_sis__stato_veicolo_by_pk?: Maybe<Sis__Stato_Veicolo>;
  /** delete data from the table: "sis._tipologia_ris" */
  delete_sis__tipologia_ris?: Maybe<Sis__Tipologia_Ris_Mutation_Response>;
  /** delete single row from the table: "sis._tipologia_ris" */
  delete_sis__tipologia_ris_by_pk?: Maybe<Sis__Tipologia_Ris>;
  /** delete data from the table: "sis._tipologia_veicolo" */
  delete_sis__tipologia_veicolo?: Maybe<Sis__Tipologia_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis._tipologia_veicolo" */
  delete_sis__tipologia_veicolo_by_pk?: Maybe<Sis__Tipologia_Veicolo>;
  /** delete data from the table: "sis._tipologia_verbale" */
  delete_sis__tipologia_verbale?: Maybe<Sis__Tipologia_Verbale_Mutation_Response>;
  /** delete single row from the table: "sis._tipologia_verbale" */
  delete_sis__tipologia_verbale_by_pk?: Maybe<Sis__Tipologia_Verbale>;
  /** delete data from the table: "sis._traccia_suolo_frenata_tipologia" */
  delete_sis__traccia_suolo_frenata_tipologia?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis._traccia_suolo_frenata_tipologia" */
  delete_sis__traccia_suolo_frenata_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia>;
  /** delete data from the table: "sis._traccia_suolo_terminazione" */
  delete_sis__traccia_suolo_terminazione?: Maybe<Sis__Traccia_Suolo_Terminazione_Mutation_Response>;
  /** delete data from the table: "sis._traccia_suolo_terminazione_andamento" */
  delete_sis__traccia_suolo_terminazione_andamento?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Mutation_Response>;
  /** delete single row from the table: "sis._traccia_suolo_terminazione_andamento" */
  delete_sis__traccia_suolo_terminazione_andamento_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento>;
  /** delete single row from the table: "sis._traccia_suolo_terminazione" */
  delete_sis__traccia_suolo_terminazione_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione>;
  /** delete data from the table: "sis._traccia_suolo_terminazione_forma" */
  delete_sis__traccia_suolo_terminazione_forma?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Mutation_Response>;
  /** delete single row from the table: "sis._traccia_suolo_terminazione_forma" */
  delete_sis__traccia_suolo_terminazione_forma_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma>;
  /** delete data from the table: "sis._traccia_suolo_terminazione_intensita" */
  delete_sis__traccia_suolo_terminazione_intensita?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Mutation_Response>;
  /** delete single row from the table: "sis._traccia_suolo_terminazione_intensita" */
  delete_sis__traccia_suolo_terminazione_intensita_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita>;
  /** delete data from the table: "sis._traccia_suolo_terminazione_tipologia" */
  delete_sis__traccia_suolo_terminazione_tipologia?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis._traccia_suolo_terminazione_tipologia" */
  delete_sis__traccia_suolo_terminazione_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  /** delete data from the table: "sis._traccia_suolo_tipologia" */
  delete_sis__traccia_suolo_tipologia?: Maybe<Sis__Traccia_Suolo_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis._traccia_suolo_tipologia" */
  delete_sis__traccia_suolo_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Tipologia>;
  /** delete data from the table: "sis._trasportato_posizione" */
  delete_sis__trasportato_posizione?: Maybe<Sis__Trasportato_Posizione_Mutation_Response>;
  /** delete single row from the table: "sis._trasportato_posizione" */
  delete_sis__trasportato_posizione_by_pk?: Maybe<Sis__Trasportato_Posizione>;
  /** delete data from the table: "sis._trasportato_stato" */
  delete_sis__trasportato_stato?: Maybe<Sis__Trasportato_Stato_Mutation_Response>;
  /** delete single row from the table: "sis._trasportato_stato" */
  delete_sis__trasportato_stato_by_pk?: Maybe<Sis__Trasportato_Stato>;
  /** delete data from the table: "sis._uso_veicolo" */
  delete_sis__uso_veicolo?: Maybe<Sis__Uso_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis._uso_veicolo" */
  delete_sis__uso_veicolo_by_pk?: Maybe<Sis__Uso_Veicolo>;
  /** delete data from the table: "sis._visibilita_limitata_tipologia" */
  delete_sis__visibilita_limitata_tipologia?: Maybe<Sis__Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis._visibilita_limitata_tipologia" */
  delete_sis__visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Visibilita_Limitata_Tipologia>;
  /** delete data from the table: "sis.accertamento" */
  delete_sis_accertamento?: Maybe<Sis_Accertamento_Mutation_Response>;
  /** delete single row from the table: "sis.accertamento" */
  delete_sis_accertamento_by_pk?: Maybe<Sis_Accertamento>;
  /** delete data from the table: "sis.agente_accertatore" */
  delete_sis_agente_accertatore?: Maybe<Sis_Agente_Accertatore_Mutation_Response>;
  /** delete single row from the table: "sis.agente_accertatore" */
  delete_sis_agente_accertatore_by_pk?: Maybe<Sis_Agente_Accertatore>;
  /** delete data from the table: "sis.altro" */
  delete_sis_altro?: Maybe<Sis_Altro_Mutation_Response>;
  /** delete single row from the table: "sis.altro" */
  delete_sis_altro_by_pk?: Maybe<Sis_Altro>;
  /** delete data from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  delete_sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** delete single row from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  delete_sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** delete data from the table: "sis.assegnazione_unita_operativa" */
  delete_sis_assegnazione_unita_operativa?: Maybe<Sis_Assegnazione_Unita_Operativa_Mutation_Response>;
  /** delete single row from the table: "sis.assegnazione_unita_operativa" */
  delete_sis_assegnazione_unita_operativa_by_pk?: Maybe<Sis_Assegnazione_Unita_Operativa>;
  /** delete data from the table: "sis.associazione_conseguenza_veicolo" */
  delete_sis_associazione_conseguenza_veicolo?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_conseguenza_veicolo" */
  delete_sis_associazione_conseguenza_veicolo_by_pk?: Maybe<Sis_Associazione_Conseguenza_Veicolo>;
  /** delete data from the table: "sis.associazione_decessi_tipologie" */
  delete_sis_associazione_decessi_tipologie?: Maybe<Sis_Associazione_Decessi_Tipologie_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_decessi_tipologie" */
  delete_sis_associazione_decessi_tipologie_by_pk?: Maybe<Sis_Associazione_Decessi_Tipologie>;
  /** delete data from the table: "sis.associazione_ente_primo_intervento" */
  delete_sis_associazione_ente_primo_intervento?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_ente_primo_intervento" */
  delete_sis_associazione_ente_primo_intervento_by_pk?: Maybe<Sis_Associazione_Ente_Primo_Intervento>;
  /** delete data from the table: "sis.associazione_ente_secondario_intervenuti" */
  delete_sis_associazione_ente_secondario_intervenuti?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_ente_secondario_intervenuti" */
  delete_sis_associazione_ente_secondario_intervenuti_by_pk?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** delete data from the table: "sis.associazione_ente_segnalatore" */
  delete_sis_associazione_ente_segnalatore?: Maybe<Sis_Associazione_Ente_Segnalatore_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_ente_segnalatore" */
  delete_sis_associazione_ente_segnalatore_by_pk?: Maybe<Sis_Associazione_Ente_Segnalatore>;
  /** delete data from the table: "sis.associazione_impianto_semaforico" */
  delete_sis_associazione_impianto_semaforico?: Maybe<Sis_Associazione_Impianto_Semaforico_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_impianto_semaforico" */
  delete_sis_associazione_impianto_semaforico_by_pk?: Maybe<Sis_Associazione_Impianto_Semaforico>;
  /** delete data from the table: "sis.associazione_informazioni_infortunato" */
  delete_sis_associazione_informazioni_infortunato?: Maybe<Sis_Associazione_Informazioni_Infortunato_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_informazioni_infortunato" */
  delete_sis_associazione_informazioni_infortunato_by_pk?: Maybe<Sis_Associazione_Informazioni_Infortunato>;
  /** delete data from the table: "sis.associazione_localizzazione_altro" */
  delete_sis_associazione_localizzazione_altro?: Maybe<Sis_Associazione_Localizzazione_Altro_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_altro" */
  delete_sis_associazione_localizzazione_altro_by_pk?: Maybe<Sis_Associazione_Localizzazione_Altro>;
  /** delete data from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  delete_sis_associazione_localizzazione_condizioni_atmosferiche?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  delete_sis_associazione_localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** delete data from the table: "sis.associazione_localizzazione_extra_abitato" */
  delete_sis_associazione_localizzazione_extra_abitato?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_extra_abitato" */
  delete_sis_associazione_localizzazione_extra_abitato_by_pk?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** delete data from the table: "sis.associazione_localizzazione_fondo_stradale" */
  delete_sis_associazione_localizzazione_fondo_stradale?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_fondo_stradale" */
  delete_sis_associazione_localizzazione_fondo_stradale_by_pk?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** delete data from the table: "sis.associazione_localizzazione_illuminazione" */
  delete_sis_associazione_localizzazione_illuminazione?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_illuminazione" */
  delete_sis_associazione_localizzazione_illuminazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Illuminazione>;
  /** delete data from the table: "sis.associazione_localizzazione_particolarita_strada" */
  delete_sis_associazione_localizzazione_particolarita_strada?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_particolarita_strada" */
  delete_sis_associazione_localizzazione_particolarita_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** delete data from the table: "sis.associazione_localizzazione_pavimentazione" */
  delete_sis_associazione_localizzazione_pavimentazione?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_pavimentazione" */
  delete_sis_associazione_localizzazione_pavimentazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** delete data from the table: "sis.associazione_localizzazione_tipo_strada" */
  delete_sis_associazione_localizzazione_tipo_strada?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_tipo_strada" */
  delete_sis_associazione_localizzazione_tipo_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** delete data from the table: "sis.associazione_localizzazione_visibilita" */
  delete_sis_associazione_localizzazione_visibilita?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_localizzazione_visibilita" */
  delete_sis_associazione_localizzazione_visibilita_by_pk?: Maybe<Sis_Associazione_Localizzazione_Visibilita>;
  /** delete data from the table: "sis.associazione_natura_incidente" */
  delete_sis_associazione_natura_incidente?: Maybe<Sis_Associazione_Natura_Incidente_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_natura_incidente" */
  delete_sis_associazione_natura_incidente_by_pk?: Maybe<Sis_Associazione_Natura_Incidente>;
  /** delete data from the table: "sis.associazione_patente" */
  delete_sis_associazione_patente?: Maybe<Sis_Associazione_Patente_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_patente" */
  delete_sis_associazione_patente_by_pk?: Maybe<Sis_Associazione_Patente>;
  /** delete data from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  delete_sis_associazione_posizione_finale_veicolo_carreggiata?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  delete_sis_associazione_posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** delete data from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  delete_sis_associazione_posizione_finale_veicolo_fuori_sede?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  delete_sis_associazione_posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** delete data from the table: "sis.associazione_posizione_finale_veicolo_margini" */
  delete_sis_associazione_posizione_finale_veicolo_margini?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_posizione_finale_veicolo_margini" */
  delete_sis_associazione_posizione_finale_veicolo_margini_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** delete data from the table: "sis.associazione_tipologia_ris" */
  delete_sis_associazione_tipologia_ris?: Maybe<Sis_Associazione_Tipologia_Ris_Mutation_Response>;
  /** delete single row from the table: "sis.associazione_tipologia_ris" */
  delete_sis_associazione_tipologia_ris_by_pk?: Maybe<Sis_Associazione_Tipologia_Ris>;
  /** delete data from the table: "sis.associzione_localizzazione_condizioni_traffico" */
  delete_sis_associzione_localizzazione_condizioni_traffico?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Mutation_Response>;
  /** delete single row from the table: "sis.associzione_localizzazione_condizioni_traffico" */
  delete_sis_associzione_localizzazione_condizioni_traffico_by_pk?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** delete data from the table: "sis.conducente" */
  delete_sis_conducente?: Maybe<Sis_Conducente_Mutation_Response>;
  /** delete single row from the table: "sis.conducente" */
  delete_sis_conducente_by_pk?: Maybe<Sis_Conducente>;
  /** delete data from the table: "sis.evento_sis" */
  delete_sis_evento_sis?: Maybe<Sis_Evento_Sis_Mutation_Response>;
  /** delete single row from the table: "sis.evento_sis" */
  delete_sis_evento_sis_by_pk?: Maybe<Sis_Evento_Sis>;
  /** delete data from the table: "sis.infortunato" */
  delete_sis_infortunato?: Maybe<Sis_Infortunato_Mutation_Response>;
  /** delete single row from the table: "sis.infortunato" */
  delete_sis_infortunato_by_pk?: Maybe<Sis_Infortunato>;
  /** delete data from the table: "sis.infrazione" */
  delete_sis_infrazione?: Maybe<Sis_Infrazione_Mutation_Response>;
  /** delete single row from the table: "sis.infrazione" */
  delete_sis_infrazione_by_pk?: Maybe<Sis_Infrazione>;
  /** delete data from the table: "sis.locatario" */
  delete_sis_locatario?: Maybe<Sis_Locatario_Mutation_Response>;
  /** delete single row from the table: "sis.locatario" */
  delete_sis_locatario_by_pk?: Maybe<Sis_Locatario>;
  /** delete data from the table: "sis.pedone" */
  delete_sis_pedone?: Maybe<Sis_Pedone_Mutation_Response>;
  /** delete single row from the table: "sis.pedone" */
  delete_sis_pedone_by_pk?: Maybe<Sis_Pedone>;
  /** delete data from the table: "sis.proprietario" */
  delete_sis_proprietario?: Maybe<Sis_Proprietario_Mutation_Response>;
  /** delete single row from the table: "sis.proprietario" */
  delete_sis_proprietario_by_pk?: Maybe<Sis_Proprietario>;
  /** delete data from the table: "sis.proprietario_giuridico" */
  delete_sis_proprietario_giuridico?: Maybe<Sis_Proprietario_Giuridico_Mutation_Response>;
  /** delete single row from the table: "sis.proprietario_giuridico" */
  delete_sis_proprietario_giuridico_by_pk?: Maybe<Sis_Proprietario_Giuridico>;
  /** delete data from the table: "sis.ris" */
  delete_sis_ris?: Maybe<Sis_Ris_Mutation_Response>;
  /** delete single row from the table: "sis.ris" */
  delete_sis_ris_by_pk?: Maybe<Sis_Ris>;
  /** delete data from the table: "sis.testimone" */
  delete_sis_testimone?: Maybe<Sis_Testimone_Mutation_Response>;
  /** delete single row from the table: "sis.testimone" */
  delete_sis_testimone_by_pk?: Maybe<Sis_Testimone>;
  /** delete data from the table: "sis.trasportati_veicolo" */
  delete_sis_trasportati_veicolo?: Maybe<Sis_Trasportati_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis.trasportati_veicolo" */
  delete_sis_trasportati_veicolo_by_pk?: Maybe<Sis_Trasportati_Veicolo>;
  /** delete data from the table: "sis.trasportato" */
  delete_sis_trasportato?: Maybe<Sis_Trasportato_Mutation_Response>;
  /** delete single row from the table: "sis.trasportato" */
  delete_sis_trasportato_by_pk?: Maybe<Sis_Trasportato>;
  /** delete data from the table: "sis.unita_operativa" */
  delete_sis_unita_operativa?: Maybe<Sis_Unita_Operativa_Mutation_Response>;
  /** delete single row from the table: "sis.unita_operativa" */
  delete_sis_unita_operativa_by_pk?: Maybe<Sis_Unita_Operativa>;
  /** delete data from the table: "sis.vecchia_unita_operativa" */
  delete_sis_vecchia_unita_operativa?: Maybe<Sis_Vecchia_Unita_Operativa_Mutation_Response>;
  /** delete single row from the table: "sis.vecchia_unita_operativa" */
  delete_sis_vecchia_unita_operativa_by_pk?: Maybe<Sis_Vecchia_Unita_Operativa>;
  /** delete data from the table: "sis.veicolo" */
  delete_sis_veicolo?: Maybe<Sis_Veicolo_Mutation_Response>;
  /** delete single row from the table: "sis.veicolo" */
  delete_sis_veicolo_by_pk?: Maybe<Sis_Veicolo>;
  /** delete data from the table: "sis.verbale" */
  delete_sis_verbale?: Maybe<Sis_Verbale_Mutation_Response>;
  /** delete single row from the table: "sis.verbale" */
  delete_sis_verbale_by_pk?: Maybe<Sis_Verbale>;
  /** delete data from the table: "toponomastica.assegnazione_quartiere" */
  delete_toponomastica_assegnazione_quartiere?: Maybe<Toponomastica_Assegnazione_Quartiere_Mutation_Response>;
  /** delete single row from the table: "toponomastica.assegnazione_quartiere" */
  delete_toponomastica_assegnazione_quartiere_by_pk?: Maybe<Toponomastica_Assegnazione_Quartiere>;
  /** delete data from the table: "toponomastica.assegnazione_toponimo" */
  delete_toponomastica_assegnazione_toponimo?: Maybe<Toponomastica_Assegnazione_Toponimo_Mutation_Response>;
  /** delete single row from the table: "toponomastica.assegnazione_toponimo" */
  delete_toponomastica_assegnazione_toponimo_by_pk?: Maybe<Toponomastica_Assegnazione_Toponimo>;
  /** delete data from the table: "toponomastica.dug" */
  delete_toponomastica_dug?: Maybe<Toponomastica_Dug_Mutation_Response>;
  /** delete single row from the table: "toponomastica.dug" */
  delete_toponomastica_dug_by_pk?: Maybe<Toponomastica_Dug>;
  /** delete data from the table: "toponomastica.municipalita" */
  delete_toponomastica_municipalita?: Maybe<Toponomastica_Municipalita_Mutation_Response>;
  /** delete single row from the table: "toponomastica.municipalita" */
  delete_toponomastica_municipalita_by_pk?: Maybe<Toponomastica_Municipalita>;
  /** delete data from the table: "toponomastica.quartiere" */
  delete_toponomastica_quartiere?: Maybe<Toponomastica_Quartiere_Mutation_Response>;
  /** delete single row from the table: "toponomastica.quartiere" */
  delete_toponomastica_quartiere_by_pk?: Maybe<Toponomastica_Quartiere>;
  /** delete data from the table: "toponomastica.tipologia" */
  delete_toponomastica_tipologia?: Maybe<Toponomastica_Tipologia_Mutation_Response>;
  /** delete single row from the table: "toponomastica.tipologia" */
  delete_toponomastica_tipologia_by_pk?: Maybe<Toponomastica_Tipologia>;
  /** delete data from the table: "toponomastica.toponimo" */
  delete_toponomastica_toponimo?: Maybe<Toponomastica_Toponimo_Mutation_Response>;
  /** delete single row from the table: "toponomastica.toponimo" */
  delete_toponomastica_toponimo_by_pk?: Maybe<Toponomastica_Toponimo>;
  /** delete data from the table: "toponomastica.vecchia_municipalita" */
  delete_toponomastica_vecchia_municipalita?: Maybe<Toponomastica_Vecchia_Municipalita_Mutation_Response>;
  /** delete single row from the table: "toponomastica.vecchia_municipalita" */
  delete_toponomastica_vecchia_municipalita_by_pk?: Maybe<Toponomastica_Vecchia_Municipalita>;
  /** delete data from the table: "toponomastica.vecchio_quartiere" */
  delete_toponomastica_vecchio_quartiere?: Maybe<Toponomastica_Vecchio_Quartiere_Mutation_Response>;
  /** delete single row from the table: "toponomastica.vecchio_quartiere" */
  delete_toponomastica_vecchio_quartiere_by_pk?: Maybe<Toponomastica_Vecchio_Quartiere>;
  /** delete data from the table: "toponomastica.vecchio_toponimo" */
  delete_toponomastica_vecchio_toponimo?: Maybe<Toponomastica_Vecchio_Toponimo_Mutation_Response>;
  /** delete single row from the table: "toponomastica.vecchio_toponimo" */
  delete_toponomastica_vecchio_toponimo_by_pk?: Maybe<Toponomastica_Vecchio_Toponimo>;
  genera_protocollo: ProtocolloOutput;
  /** insert data into the table: "_citta" */
  insert__citta?: Maybe<_Citta_Mutation_Response>;
  /** insert a single row into the table: "_citta" */
  insert__citta_one?: Maybe<_Citta>;
  /** insert data into the table: "_nazione" */
  insert__nazione?: Maybe<_Nazione_Mutation_Response>;
  /** insert a single row into the table: "_nazione" */
  insert__nazione_one?: Maybe<_Nazione>;
  /** insert data into the table: "_sesso" */
  insert__sesso?: Maybe<_Sesso_Mutation_Response>;
  /** insert a single row into the table: "_sesso" */
  insert__sesso_one?: Maybe<_Sesso>;
  /** insert data into the table: "_sinoaltro" */
  insert__sinoaltro?: Maybe<_Sinoaltro_Mutation_Response>;
  /** insert a single row into the table: "_sinoaltro" */
  insert__sinoaltro_one?: Maybe<_Sinoaltro>;
  /** insert data into the table: "_titolo" */
  insert__titolo?: Maybe<_Titolo_Mutation_Response>;
  /** insert a single row into the table: "_titolo" */
  insert__titolo_one?: Maybe<_Titolo>;
  /** insert data into the table: "agcos.agcos" */
  insert_agcos_agcos?: Maybe<Agcos_Agcos_Mutation_Response>;
  /** insert a single row into the table: "agcos.agcos" */
  insert_agcos_agcos_one?: Maybe<Agcos_Agcos>;
  /** insert data into the table: "agcos.import" */
  insert_agcos_import?: Maybe<Agcos_Import_Mutation_Response>;
  /** insert a single row into the table: "agcos.import" */
  insert_agcos_import_one?: Maybe<Agcos_Import>;
  insert_allegato_diario?: Maybe<Insert_Allegato_Diario_Output>;
  /** insert data into the table: "gis._specifica_posizionamento_toponimo" */
  insert_gis__specifica_posizionamento_toponimo?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Mutation_Response>;
  /** insert a single row into the table: "gis._specifica_posizionamento_toponimo" */
  insert_gis__specifica_posizionamento_toponimo_one?: Maybe<Gis__Specifica_Posizionamento_Toponimo>;
  /** insert data into the table: "gis._tipologia_posizionamento_toponimo" */
  insert_gis__tipologia_posizionamento_toponimo?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Mutation_Response>;
  /** insert a single row into the table: "gis._tipologia_posizionamento_toponimo" */
  insert_gis__tipologia_posizionamento_toponimo_one?: Maybe<Gis__Tipologia_Posizionamento_Toponimo>;
  /** insert data into the table: "gis.civico" */
  insert_gis_civico?: Maybe<Gis_Civico_Mutation_Response>;
  /** insert a single row into the table: "gis.civico" */
  insert_gis_civico_one?: Maybe<Gis_Civico>;
  /** insert data into the table: "gis.connessione_grafo" */
  insert_gis_connessione_grafo?: Maybe<Gis_Connessione_Grafo_Mutation_Response>;
  /** insert a single row into the table: "gis.connessione_grafo" */
  insert_gis_connessione_grafo_one?: Maybe<Gis_Connessione_Grafo>;
  /** insert data into the table: "gis.posizionamento_toponimo" */
  insert_gis_posizionamento_toponimo?: Maybe<Gis_Posizionamento_Toponimo_Mutation_Response>;
  /** insert a single row into the table: "gis.posizionamento_toponimo" */
  insert_gis_posizionamento_toponimo_one?: Maybe<Gis_Posizionamento_Toponimo>;
  /** insert data into the table: "gis.sostegno_ipi" */
  insert_gis_sostegno_ipi?: Maybe<Gis_Sostegno_Ipi_Mutation_Response>;
  /** insert a single row into the table: "gis.sostegno_ipi" */
  insert_gis_sostegno_ipi_one?: Maybe<Gis_Sostegno_Ipi>;
  /** insert data into the table: "pis._condizioni_traffico" */
  insert_pis__condizioni_traffico?: Maybe<Pis__Condizioni_Traffico_Mutation_Response>;
  /** insert a single row into the table: "pis._condizioni_traffico" */
  insert_pis__condizioni_traffico_one?: Maybe<Pis__Condizioni_Traffico>;
  /** insert data into the table: "pis._forma_dissesto" */
  insert_pis__forma_dissesto?: Maybe<Pis__Forma_Dissesto_Mutation_Response>;
  /** insert a single row into the table: "pis._forma_dissesto" */
  insert_pis__forma_dissesto_one?: Maybe<Pis__Forma_Dissesto>;
  /** insert data into the table: "pis._giorni_trascorsi" */
  insert_pis__giorni_trascorsi?: Maybe<Pis__Giorni_Trascorsi_Mutation_Response>;
  /** insert a single row into the table: "pis._giorni_trascorsi" */
  insert_pis__giorni_trascorsi_one?: Maybe<Pis__Giorni_Trascorsi>;
  /** insert data into the table: "pis._materiale" */
  insert_pis__materiale?: Maybe<Pis__Materiale_Mutation_Response>;
  /** insert a single row into the table: "pis._materiale" */
  insert_pis__materiale_one?: Maybe<Pis__Materiale>;
  /** insert data into the table: "pis._priorita" */
  insert_pis__priorita?: Maybe<Pis__Priorita_Mutation_Response>;
  /** insert a single row into the table: "pis._priorita" */
  insert_pis__priorita_one?: Maybe<Pis__Priorita>;
  /** insert data into the table: "pis._stato_segnalazione" */
  insert_pis__stato_segnalazione?: Maybe<Pis__Stato_Segnalazione_Mutation_Response>;
  /** insert a single row into the table: "pis._stato_segnalazione" */
  insert_pis__stato_segnalazione_one?: Maybe<Pis__Stato_Segnalazione>;
  /** insert data into the table: "pis._tipologia_dissesto" */
  insert_pis__tipologia_dissesto?: Maybe<Pis__Tipologia_Dissesto_Mutation_Response>;
  /** insert a single row into the table: "pis._tipologia_dissesto" */
  insert_pis__tipologia_dissesto_one?: Maybe<Pis__Tipologia_Dissesto>;
  /** insert data into the table: "pis.assegnazione_squadra" */
  insert_pis_assegnazione_squadra?: Maybe<Pis_Assegnazione_Squadra_Mutation_Response>;
  /** insert a single row into the table: "pis.assegnazione_squadra" */
  insert_pis_assegnazione_squadra_one?: Maybe<Pis_Assegnazione_Squadra>;
  /** insert data into the table: "pis.attrezzature_impiegate" */
  insert_pis_attrezzature_impiegate?: Maybe<Pis_Attrezzature_Impiegate_Mutation_Response>;
  /** insert a single row into the table: "pis.attrezzature_impiegate" */
  insert_pis_attrezzature_impiegate_one?: Maybe<Pis_Attrezzature_Impiegate>;
  /** insert data into the table: "pis.diario" */
  insert_pis_diario?: Maybe<Pis_Diario_Mutation_Response>;
  /** insert a single row into the table: "pis.diario" */
  insert_pis_diario_one?: Maybe<Pis_Diario>;
  /** insert data into the table: "pis.dissesto" */
  insert_pis_dissesto?: Maybe<Pis_Dissesto_Mutation_Response>;
  /** insert a single row into the table: "pis.dissesto" */
  insert_pis_dissesto_one?: Maybe<Pis_Dissesto>;
  /** insert data into the table: "pis.evento" */
  insert_pis_evento?: Maybe<Pis_Evento_Mutation_Response>;
  /** insert a single row into the table: "pis.evento" */
  insert_pis_evento_one?: Maybe<Pis_Evento>;
  /** insert data into the table: "pis.intervento" */
  insert_pis_intervento?: Maybe<Pis_Intervento_Mutation_Response>;
  /** insert a single row into the table: "pis.intervento" */
  insert_pis_intervento_one?: Maybe<Pis_Intervento>;
  /** insert data into the table: "pis.intervento_straordinario" */
  insert_pis_intervento_straordinario?: Maybe<Pis_Intervento_Straordinario_Mutation_Response>;
  /** insert a single row into the table: "pis.intervento_straordinario" */
  insert_pis_intervento_straordinario_one?: Maybe<Pis_Intervento_Straordinario>;
  /** insert data into the table: "pis.materiale_dissesto" */
  insert_pis_materiale_dissesto?: Maybe<Pis_Materiale_Dissesto_Mutation_Response>;
  /** insert a single row into the table: "pis.materiale_dissesto" */
  insert_pis_materiale_dissesto_one?: Maybe<Pis_Materiale_Dissesto>;
  /** insert data into the table: "pis.segnalazione" */
  insert_pis_segnalazione?: Maybe<Pis_Segnalazione_Mutation_Response>;
  /** insert data into the table: "pis.segnalazione_collegata" */
  insert_pis_segnalazione_collegata?: Maybe<Pis_Segnalazione_Collegata_Mutation_Response>;
  /** insert a single row into the table: "pis.segnalazione_collegata" */
  insert_pis_segnalazione_collegata_one?: Maybe<Pis_Segnalazione_Collegata>;
  /** insert a single row into the table: "pis.segnalazione" */
  insert_pis_segnalazione_one?: Maybe<Pis_Segnalazione>;
  /** insert data into the table: "pis.segnaletica_lasciata" */
  insert_pis_segnaletica_lasciata?: Maybe<Pis_Segnaletica_Lasciata_Mutation_Response>;
  /** insert a single row into the table: "pis.segnaletica_lasciata" */
  insert_pis_segnaletica_lasciata_one?: Maybe<Pis_Segnaletica_Lasciata>;
  /** insert data into the table: "pis.squadra" */
  insert_pis_squadra?: Maybe<Pis_Squadra_Mutation_Response>;
  /** insert a single row into the table: "pis.squadra" */
  insert_pis_squadra_one?: Maybe<Pis_Squadra>;
  /** insert data into the table: "pis.tecnico_referente" */
  insert_pis_tecnico_referente?: Maybe<Pis_Tecnico_Referente_Mutation_Response>;
  /** insert a single row into the table: "pis.tecnico_referente" */
  insert_pis_tecnico_referente_one?: Maybe<Pis_Tecnico_Referente>;
  /** insert data into the table: "pis.vecchia_squadra" */
  insert_pis_vecchia_squadra?: Maybe<Pis_Vecchia_Squadra_Mutation_Response>;
  /** insert a single row into the table: "pis.vecchia_squadra" */
  insert_pis_vecchia_squadra_one?: Maybe<Pis_Vecchia_Squadra>;
  /** insert data into the table: "pis.veicoli_impiegati" */
  insert_pis_veicoli_impiegati?: Maybe<Pis_Veicoli_Impiegati_Mutation_Response>;
  /** insert a single row into the table: "pis.veicoli_impiegati" */
  insert_pis_veicoli_impiegati_one?: Maybe<Pis_Veicoli_Impiegati>;
  /** insert data into the table: "protocollo._sezione_protocollo" */
  insert_protocollo__sezione_protocollo?: Maybe<Protocollo__Sezione_Protocollo_Mutation_Response>;
  /** insert a single row into the table: "protocollo._sezione_protocollo" */
  insert_protocollo__sezione_protocollo_one?: Maybe<Protocollo__Sezione_Protocollo>;
  /** insert data into the table: "protocollo.protocollo" */
  insert_protocollo_protocollo?: Maybe<Protocollo_Protocollo_Mutation_Response>;
  /** insert data into the table: "protocollo.protocollo_destinatario" */
  insert_protocollo_protocollo_destinatario?: Maybe<Protocollo_Protocollo_Destinatario_Mutation_Response>;
  /** insert data into the table: "protocollo.protocollo_destinatario_esterno" */
  insert_protocollo_protocollo_destinatario_esterno?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Mutation_Response>;
  /** insert a single row into the table: "protocollo.protocollo_destinatario_esterno" */
  insert_protocollo_protocollo_destinatario_esterno_one?: Maybe<Protocollo_Protocollo_Destinatario_Esterno>;
  /** insert a single row into the table: "protocollo.protocollo_destinatario" */
  insert_protocollo_protocollo_destinatario_one?: Maybe<Protocollo_Protocollo_Destinatario>;
  /** insert a single row into the table: "protocollo.protocollo" */
  insert_protocollo_protocollo_one?: Maybe<Protocollo_Protocollo>;
  /** insert data into the table: "sis._alimentazione_veicolo" */
  insert_sis__alimentazione_veicolo?: Maybe<Sis__Alimentazione_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis._alimentazione_veicolo" */
  insert_sis__alimentazione_veicolo_one?: Maybe<Sis__Alimentazione_Veicolo>;
  /** insert data into the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  insert_sis__condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  insert_sis__condizioni_meteo_visibilita_limitata_tipologia_one?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** insert data into the table: "sis._conseguenza_veicolo" */
  insert_sis__conseguenza_veicolo?: Maybe<Sis__Conseguenza_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis._conseguenza_veicolo" */
  insert_sis__conseguenza_veicolo_one?: Maybe<Sis__Conseguenza_Veicolo>;
  /** insert data into the table: "sis._decessi_tipologia" */
  insert_sis__decessi_tipologia?: Maybe<Sis__Decessi_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis._decessi_tipologia" */
  insert_sis__decessi_tipologia_one?: Maybe<Sis__Decessi_Tipologia>;
  /** insert data into the table: "sis._destinazione_decisione" */
  insert_sis__destinazione_decisione?: Maybe<Sis__Destinazione_Decisione_Mutation_Response>;
  /** insert a single row into the table: "sis._destinazione_decisione" */
  insert_sis__destinazione_decisione_one?: Maybe<Sis__Destinazione_Decisione>;
  /** insert data into the table: "sis._ente" */
  insert_sis__ente?: Maybe<Sis__Ente_Mutation_Response>;
  /** insert a single row into the table: "sis._ente" */
  insert_sis__ente_one?: Maybe<Sis__Ente>;
  /** insert data into the table: "sis._ente_secondario" */
  insert_sis__ente_secondario?: Maybe<Sis__Ente_Secondario_Mutation_Response>;
  /** insert a single row into the table: "sis._ente_secondario" */
  insert_sis__ente_secondario_one?: Maybe<Sis__Ente_Secondario>;
  /** insert data into the table: "sis._impianto_semaforico" */
  insert_sis__impianto_semaforico?: Maybe<Sis__Impianto_Semaforico_Mutation_Response>;
  /** insert a single row into the table: "sis._impianto_semaforico" */
  insert_sis__impianto_semaforico_one?: Maybe<Sis__Impianto_Semaforico>;
  /** insert data into the table: "sis._infortunato_informazione" */
  insert_sis__infortunato_informazione?: Maybe<Sis__Infortunato_Informazione_Mutation_Response>;
  /** insert a single row into the table: "sis._infortunato_informazione" */
  insert_sis__infortunato_informazione_one?: Maybe<Sis__Infortunato_Informazione>;
  /** insert data into the table: "sis._intortunato_tasportato" */
  insert_sis__intortunato_tasportato?: Maybe<Sis__Intortunato_Tasportato_Mutation_Response>;
  /** insert a single row into the table: "sis._intortunato_tasportato" */
  insert_sis__intortunato_tasportato_one?: Maybe<Sis__Intortunato_Tasportato>;
  /** insert data into the table: "sis._localizzazione_altro" */
  insert_sis__localizzazione_altro?: Maybe<Sis__Localizzazione_Altro_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_altro" */
  insert_sis__localizzazione_altro_one?: Maybe<Sis__Localizzazione_Altro>;
  /** insert data into the table: "sis._localizzazione_condizioni_atmosferiche" */
  insert_sis__localizzazione_condizioni_atmosferiche?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_condizioni_atmosferiche" */
  insert_sis__localizzazione_condizioni_atmosferiche_one?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche>;
  /** insert data into the table: "sis._localizzazione_condizioni_traffico" */
  insert_sis__localizzazione_condizioni_traffico?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_condizioni_traffico" */
  insert_sis__localizzazione_condizioni_traffico_one?: Maybe<Sis__Localizzazione_Condizioni_Traffico>;
  /** insert data into the table: "sis._localizzazione_extra_abitato" */
  insert_sis__localizzazione_extra_abitato?: Maybe<Sis__Localizzazione_Extra_Abitato_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_extra_abitato" */
  insert_sis__localizzazione_extra_abitato_one?: Maybe<Sis__Localizzazione_Extra_Abitato>;
  /** insert data into the table: "sis._localizzazione_fondo_stradale" */
  insert_sis__localizzazione_fondo_stradale?: Maybe<Sis__Localizzazione_Fondo_Stradale_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_fondo_stradale" */
  insert_sis__localizzazione_fondo_stradale_one?: Maybe<Sis__Localizzazione_Fondo_Stradale>;
  /** insert data into the table: "sis._localizzazione_illuminazione" */
  insert_sis__localizzazione_illuminazione?: Maybe<Sis__Localizzazione_Illuminazione_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_illuminazione" */
  insert_sis__localizzazione_illuminazione_one?: Maybe<Sis__Localizzazione_Illuminazione>;
  /** insert data into the table: "sis._localizzazione_particolarita_strada" */
  insert_sis__localizzazione_particolarita_strada?: Maybe<Sis__Localizzazione_Particolarita_Strada_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_particolarita_strada" */
  insert_sis__localizzazione_particolarita_strada_one?: Maybe<Sis__Localizzazione_Particolarita_Strada>;
  /** insert data into the table: "sis._localizzazione_pavimentazione" */
  insert_sis__localizzazione_pavimentazione?: Maybe<Sis__Localizzazione_Pavimentazione_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_pavimentazione" */
  insert_sis__localizzazione_pavimentazione_one?: Maybe<Sis__Localizzazione_Pavimentazione>;
  /** insert data into the table: "sis._localizzazione_tipo_strada" */
  insert_sis__localizzazione_tipo_strada?: Maybe<Sis__Localizzazione_Tipo_Strada_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_tipo_strada" */
  insert_sis__localizzazione_tipo_strada_one?: Maybe<Sis__Localizzazione_Tipo_Strada>;
  /** insert data into the table: "sis._localizzazione_visibilita" */
  insert_sis__localizzazione_visibilita?: Maybe<Sis__Localizzazione_Visibilita_Mutation_Response>;
  /** insert a single row into the table: "sis._localizzazione_visibilita" */
  insert_sis__localizzazione_visibilita_one?: Maybe<Sis__Localizzazione_Visibilita>;
  /** insert data into the table: "sis._natura_incidente" */
  insert_sis__natura_incidente?: Maybe<Sis__Natura_Incidente_Mutation_Response>;
  /** insert a single row into the table: "sis._natura_incidente" */
  insert_sis__natura_incidente_one?: Maybe<Sis__Natura_Incidente>;
  /** insert data into the table: "sis._patente_categoria" */
  insert_sis__patente_categoria?: Maybe<Sis__Patente_Categoria_Mutation_Response>;
  /** insert a single row into the table: "sis._patente_categoria" */
  insert_sis__patente_categoria_one?: Maybe<Sis__Patente_Categoria>;
  /** insert data into the table: "sis._posizione_finale_veicolo_carreggiata" */
  insert_sis__posizione_finale_veicolo_carreggiata?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Mutation_Response>;
  /** insert a single row into the table: "sis._posizione_finale_veicolo_carreggiata" */
  insert_sis__posizione_finale_veicolo_carreggiata_one?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata>;
  /** insert data into the table: "sis._posizione_finale_veicolo_fuori_sede" */
  insert_sis__posizione_finale_veicolo_fuori_sede?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response>;
  /** insert a single row into the table: "sis._posizione_finale_veicolo_fuori_sede" */
  insert_sis__posizione_finale_veicolo_fuori_sede_one?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
  /** insert data into the table: "sis._posizione_finale_veicolo_margini" */
  insert_sis__posizione_finale_veicolo_margini?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Mutation_Response>;
  /** insert a single row into the table: "sis._posizione_finale_veicolo_margini" */
  insert_sis__posizione_finale_veicolo_margini_one?: Maybe<Sis__Posizione_Finale_Veicolo_Margini>;
  /** insert data into the table: "sis._punti_rilievi_no_tipologia" */
  insert_sis__punti_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis._punti_rilievi_no_tipologia" */
  insert_sis__punti_rilievi_no_tipologia_one?: Maybe<Sis__Punti_Rilievi_No_Tipologia>;
  /** insert data into the table: "sis._retrovisore_esterno" */
  insert_sis__retrovisore_esterno?: Maybe<Sis__Retrovisore_Esterno_Mutation_Response>;
  /** insert a single row into the table: "sis._retrovisore_esterno" */
  insert_sis__retrovisore_esterno_one?: Maybe<Sis__Retrovisore_Esterno>;
  /** insert data into the table: "sis._ris_consegnato_a" */
  insert_sis__ris_consegnato_a?: Maybe<Sis__Ris_Consegnato_A_Mutation_Response>;
  /** insert a single row into the table: "sis._ris_consegnato_a" */
  insert_sis__ris_consegnato_a_one?: Maybe<Sis__Ris_Consegnato_A>;
  /** insert data into the table: "sis._stato_ris" */
  insert_sis__stato_ris?: Maybe<Sis__Stato_Ris_Mutation_Response>;
  /** insert a single row into the table: "sis._stato_ris" */
  insert_sis__stato_ris_one?: Maybe<Sis__Stato_Ris>;
  /** insert data into the table: "sis._stato_veicolo" */
  insert_sis__stato_veicolo?: Maybe<Sis__Stato_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis._stato_veicolo" */
  insert_sis__stato_veicolo_one?: Maybe<Sis__Stato_Veicolo>;
  /** insert data into the table: "sis._tipologia_ris" */
  insert_sis__tipologia_ris?: Maybe<Sis__Tipologia_Ris_Mutation_Response>;
  /** insert a single row into the table: "sis._tipologia_ris" */
  insert_sis__tipologia_ris_one?: Maybe<Sis__Tipologia_Ris>;
  /** insert data into the table: "sis._tipologia_veicolo" */
  insert_sis__tipologia_veicolo?: Maybe<Sis__Tipologia_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis._tipologia_veicolo" */
  insert_sis__tipologia_veicolo_one?: Maybe<Sis__Tipologia_Veicolo>;
  /** insert data into the table: "sis._tipologia_verbale" */
  insert_sis__tipologia_verbale?: Maybe<Sis__Tipologia_Verbale_Mutation_Response>;
  /** insert a single row into the table: "sis._tipologia_verbale" */
  insert_sis__tipologia_verbale_one?: Maybe<Sis__Tipologia_Verbale>;
  /** insert data into the table: "sis._traccia_suolo_frenata_tipologia" */
  insert_sis__traccia_suolo_frenata_tipologia?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis._traccia_suolo_frenata_tipologia" */
  insert_sis__traccia_suolo_frenata_tipologia_one?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia>;
  /** insert data into the table: "sis._traccia_suolo_terminazione" */
  insert_sis__traccia_suolo_terminazione?: Maybe<Sis__Traccia_Suolo_Terminazione_Mutation_Response>;
  /** insert data into the table: "sis._traccia_suolo_terminazione_andamento" */
  insert_sis__traccia_suolo_terminazione_andamento?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Mutation_Response>;
  /** insert a single row into the table: "sis._traccia_suolo_terminazione_andamento" */
  insert_sis__traccia_suolo_terminazione_andamento_one?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento>;
  /** insert data into the table: "sis._traccia_suolo_terminazione_forma" */
  insert_sis__traccia_suolo_terminazione_forma?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Mutation_Response>;
  /** insert a single row into the table: "sis._traccia_suolo_terminazione_forma" */
  insert_sis__traccia_suolo_terminazione_forma_one?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma>;
  /** insert data into the table: "sis._traccia_suolo_terminazione_intensita" */
  insert_sis__traccia_suolo_terminazione_intensita?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Mutation_Response>;
  /** insert a single row into the table: "sis._traccia_suolo_terminazione_intensita" */
  insert_sis__traccia_suolo_terminazione_intensita_one?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita>;
  /** insert a single row into the table: "sis._traccia_suolo_terminazione" */
  insert_sis__traccia_suolo_terminazione_one?: Maybe<Sis__Traccia_Suolo_Terminazione>;
  /** insert data into the table: "sis._traccia_suolo_terminazione_tipologia" */
  insert_sis__traccia_suolo_terminazione_tipologia?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis._traccia_suolo_terminazione_tipologia" */
  insert_sis__traccia_suolo_terminazione_tipologia_one?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  /** insert data into the table: "sis._traccia_suolo_tipologia" */
  insert_sis__traccia_suolo_tipologia?: Maybe<Sis__Traccia_Suolo_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis._traccia_suolo_tipologia" */
  insert_sis__traccia_suolo_tipologia_one?: Maybe<Sis__Traccia_Suolo_Tipologia>;
  /** insert data into the table: "sis._trasportato_posizione" */
  insert_sis__trasportato_posizione?: Maybe<Sis__Trasportato_Posizione_Mutation_Response>;
  /** insert a single row into the table: "sis._trasportato_posizione" */
  insert_sis__trasportato_posizione_one?: Maybe<Sis__Trasportato_Posizione>;
  /** insert data into the table: "sis._trasportato_stato" */
  insert_sis__trasportato_stato?: Maybe<Sis__Trasportato_Stato_Mutation_Response>;
  /** insert a single row into the table: "sis._trasportato_stato" */
  insert_sis__trasportato_stato_one?: Maybe<Sis__Trasportato_Stato>;
  /** insert data into the table: "sis._uso_veicolo" */
  insert_sis__uso_veicolo?: Maybe<Sis__Uso_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis._uso_veicolo" */
  insert_sis__uso_veicolo_one?: Maybe<Sis__Uso_Veicolo>;
  /** insert data into the table: "sis._visibilita_limitata_tipologia" */
  insert_sis__visibilita_limitata_tipologia?: Maybe<Sis__Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis._visibilita_limitata_tipologia" */
  insert_sis__visibilita_limitata_tipologia_one?: Maybe<Sis__Visibilita_Limitata_Tipologia>;
  /** insert data into the table: "sis.accertamento" */
  insert_sis_accertamento?: Maybe<Sis_Accertamento_Mutation_Response>;
  /** insert a single row into the table: "sis.accertamento" */
  insert_sis_accertamento_one?: Maybe<Sis_Accertamento>;
  /** insert data into the table: "sis.agente_accertatore" */
  insert_sis_agente_accertatore?: Maybe<Sis_Agente_Accertatore_Mutation_Response>;
  /** insert a single row into the table: "sis.agente_accertatore" */
  insert_sis_agente_accertatore_one?: Maybe<Sis_Agente_Accertatore>;
  /** insert data into the table: "sis.altro" */
  insert_sis_altro?: Maybe<Sis_Altro_Mutation_Response>;
  /** insert a single row into the table: "sis.altro" */
  insert_sis_altro_one?: Maybe<Sis_Altro>;
  /** insert data into the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  insert_sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  insert_sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_one?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** insert data into the table: "sis.assegnazione_unita_operativa" */
  insert_sis_assegnazione_unita_operativa?: Maybe<Sis_Assegnazione_Unita_Operativa_Mutation_Response>;
  /** insert a single row into the table: "sis.assegnazione_unita_operativa" */
  insert_sis_assegnazione_unita_operativa_one?: Maybe<Sis_Assegnazione_Unita_Operativa>;
  /** insert data into the table: "sis.associazione_conseguenza_veicolo" */
  insert_sis_associazione_conseguenza_veicolo?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_conseguenza_veicolo" */
  insert_sis_associazione_conseguenza_veicolo_one?: Maybe<Sis_Associazione_Conseguenza_Veicolo>;
  /** insert data into the table: "sis.associazione_decessi_tipologie" */
  insert_sis_associazione_decessi_tipologie?: Maybe<Sis_Associazione_Decessi_Tipologie_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_decessi_tipologie" */
  insert_sis_associazione_decessi_tipologie_one?: Maybe<Sis_Associazione_Decessi_Tipologie>;
  /** insert data into the table: "sis.associazione_ente_primo_intervento" */
  insert_sis_associazione_ente_primo_intervento?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_ente_primo_intervento" */
  insert_sis_associazione_ente_primo_intervento_one?: Maybe<Sis_Associazione_Ente_Primo_Intervento>;
  /** insert data into the table: "sis.associazione_ente_secondario_intervenuti" */
  insert_sis_associazione_ente_secondario_intervenuti?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_ente_secondario_intervenuti" */
  insert_sis_associazione_ente_secondario_intervenuti_one?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** insert data into the table: "sis.associazione_ente_segnalatore" */
  insert_sis_associazione_ente_segnalatore?: Maybe<Sis_Associazione_Ente_Segnalatore_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_ente_segnalatore" */
  insert_sis_associazione_ente_segnalatore_one?: Maybe<Sis_Associazione_Ente_Segnalatore>;
  /** insert data into the table: "sis.associazione_impianto_semaforico" */
  insert_sis_associazione_impianto_semaforico?: Maybe<Sis_Associazione_Impianto_Semaforico_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_impianto_semaforico" */
  insert_sis_associazione_impianto_semaforico_one?: Maybe<Sis_Associazione_Impianto_Semaforico>;
  /** insert data into the table: "sis.associazione_informazioni_infortunato" */
  insert_sis_associazione_informazioni_infortunato?: Maybe<Sis_Associazione_Informazioni_Infortunato_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_informazioni_infortunato" */
  insert_sis_associazione_informazioni_infortunato_one?: Maybe<Sis_Associazione_Informazioni_Infortunato>;
  /** insert data into the table: "sis.associazione_localizzazione_altro" */
  insert_sis_associazione_localizzazione_altro?: Maybe<Sis_Associazione_Localizzazione_Altro_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_altro" */
  insert_sis_associazione_localizzazione_altro_one?: Maybe<Sis_Associazione_Localizzazione_Altro>;
  /** insert data into the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  insert_sis_associazione_localizzazione_condizioni_atmosferiche?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  insert_sis_associazione_localizzazione_condizioni_atmosferiche_one?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** insert data into the table: "sis.associazione_localizzazione_extra_abitato" */
  insert_sis_associazione_localizzazione_extra_abitato?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_extra_abitato" */
  insert_sis_associazione_localizzazione_extra_abitato_one?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** insert data into the table: "sis.associazione_localizzazione_fondo_stradale" */
  insert_sis_associazione_localizzazione_fondo_stradale?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_fondo_stradale" */
  insert_sis_associazione_localizzazione_fondo_stradale_one?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** insert data into the table: "sis.associazione_localizzazione_illuminazione" */
  insert_sis_associazione_localizzazione_illuminazione?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_illuminazione" */
  insert_sis_associazione_localizzazione_illuminazione_one?: Maybe<Sis_Associazione_Localizzazione_Illuminazione>;
  /** insert data into the table: "sis.associazione_localizzazione_particolarita_strada" */
  insert_sis_associazione_localizzazione_particolarita_strada?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_particolarita_strada" */
  insert_sis_associazione_localizzazione_particolarita_strada_one?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** insert data into the table: "sis.associazione_localizzazione_pavimentazione" */
  insert_sis_associazione_localizzazione_pavimentazione?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_pavimentazione" */
  insert_sis_associazione_localizzazione_pavimentazione_one?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** insert data into the table: "sis.associazione_localizzazione_tipo_strada" */
  insert_sis_associazione_localizzazione_tipo_strada?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_tipo_strada" */
  insert_sis_associazione_localizzazione_tipo_strada_one?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** insert data into the table: "sis.associazione_localizzazione_visibilita" */
  insert_sis_associazione_localizzazione_visibilita?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_localizzazione_visibilita" */
  insert_sis_associazione_localizzazione_visibilita_one?: Maybe<Sis_Associazione_Localizzazione_Visibilita>;
  /** insert data into the table: "sis.associazione_natura_incidente" */
  insert_sis_associazione_natura_incidente?: Maybe<Sis_Associazione_Natura_Incidente_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_natura_incidente" */
  insert_sis_associazione_natura_incidente_one?: Maybe<Sis_Associazione_Natura_Incidente>;
  /** insert data into the table: "sis.associazione_patente" */
  insert_sis_associazione_patente?: Maybe<Sis_Associazione_Patente_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_patente" */
  insert_sis_associazione_patente_one?: Maybe<Sis_Associazione_Patente>;
  /** insert data into the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  insert_sis_associazione_posizione_finale_veicolo_carreggiata?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  insert_sis_associazione_posizione_finale_veicolo_carreggiata_one?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** insert data into the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  insert_sis_associazione_posizione_finale_veicolo_fuori_sede?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  insert_sis_associazione_posizione_finale_veicolo_fuori_sede_one?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** insert data into the table: "sis.associazione_posizione_finale_veicolo_margini" */
  insert_sis_associazione_posizione_finale_veicolo_margini?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_posizione_finale_veicolo_margini" */
  insert_sis_associazione_posizione_finale_veicolo_margini_one?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** insert data into the table: "sis.associazione_tipologia_ris" */
  insert_sis_associazione_tipologia_ris?: Maybe<Sis_Associazione_Tipologia_Ris_Mutation_Response>;
  /** insert a single row into the table: "sis.associazione_tipologia_ris" */
  insert_sis_associazione_tipologia_ris_one?: Maybe<Sis_Associazione_Tipologia_Ris>;
  /** insert data into the table: "sis.associzione_localizzazione_condizioni_traffico" */
  insert_sis_associzione_localizzazione_condizioni_traffico?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Mutation_Response>;
  /** insert a single row into the table: "sis.associzione_localizzazione_condizioni_traffico" */
  insert_sis_associzione_localizzazione_condizioni_traffico_one?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** insert data into the table: "sis.conducente" */
  insert_sis_conducente?: Maybe<Sis_Conducente_Mutation_Response>;
  /** insert a single row into the table: "sis.conducente" */
  insert_sis_conducente_one?: Maybe<Sis_Conducente>;
  /** insert data into the table: "sis.evento_sis" */
  insert_sis_evento_sis?: Maybe<Sis_Evento_Sis_Mutation_Response>;
  /** insert a single row into the table: "sis.evento_sis" */
  insert_sis_evento_sis_one?: Maybe<Sis_Evento_Sis>;
  /** insert data into the table: "sis.infortunato" */
  insert_sis_infortunato?: Maybe<Sis_Infortunato_Mutation_Response>;
  /** insert a single row into the table: "sis.infortunato" */
  insert_sis_infortunato_one?: Maybe<Sis_Infortunato>;
  /** insert data into the table: "sis.infrazione" */
  insert_sis_infrazione?: Maybe<Sis_Infrazione_Mutation_Response>;
  /** insert a single row into the table: "sis.infrazione" */
  insert_sis_infrazione_one?: Maybe<Sis_Infrazione>;
  /** insert data into the table: "sis.locatario" */
  insert_sis_locatario?: Maybe<Sis_Locatario_Mutation_Response>;
  /** insert a single row into the table: "sis.locatario" */
  insert_sis_locatario_one?: Maybe<Sis_Locatario>;
  /** insert data into the table: "sis.pedone" */
  insert_sis_pedone?: Maybe<Sis_Pedone_Mutation_Response>;
  /** insert a single row into the table: "sis.pedone" */
  insert_sis_pedone_one?: Maybe<Sis_Pedone>;
  /** insert data into the table: "sis.proprietario" */
  insert_sis_proprietario?: Maybe<Sis_Proprietario_Mutation_Response>;
  /** insert data into the table: "sis.proprietario_giuridico" */
  insert_sis_proprietario_giuridico?: Maybe<Sis_Proprietario_Giuridico_Mutation_Response>;
  /** insert a single row into the table: "sis.proprietario_giuridico" */
  insert_sis_proprietario_giuridico_one?: Maybe<Sis_Proprietario_Giuridico>;
  /** insert a single row into the table: "sis.proprietario" */
  insert_sis_proprietario_one?: Maybe<Sis_Proprietario>;
  /** insert data into the table: "sis.ris" */
  insert_sis_ris?: Maybe<Sis_Ris_Mutation_Response>;
  /** insert a single row into the table: "sis.ris" */
  insert_sis_ris_one?: Maybe<Sis_Ris>;
  /** insert data into the table: "sis.testimone" */
  insert_sis_testimone?: Maybe<Sis_Testimone_Mutation_Response>;
  /** insert a single row into the table: "sis.testimone" */
  insert_sis_testimone_one?: Maybe<Sis_Testimone>;
  /** insert data into the table: "sis.trasportati_veicolo" */
  insert_sis_trasportati_veicolo?: Maybe<Sis_Trasportati_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis.trasportati_veicolo" */
  insert_sis_trasportati_veicolo_one?: Maybe<Sis_Trasportati_Veicolo>;
  /** insert data into the table: "sis.trasportato" */
  insert_sis_trasportato?: Maybe<Sis_Trasportato_Mutation_Response>;
  /** insert a single row into the table: "sis.trasportato" */
  insert_sis_trasportato_one?: Maybe<Sis_Trasportato>;
  /** insert data into the table: "sis.unita_operativa" */
  insert_sis_unita_operativa?: Maybe<Sis_Unita_Operativa_Mutation_Response>;
  /** insert a single row into the table: "sis.unita_operativa" */
  insert_sis_unita_operativa_one?: Maybe<Sis_Unita_Operativa>;
  /** insert data into the table: "sis.vecchia_unita_operativa" */
  insert_sis_vecchia_unita_operativa?: Maybe<Sis_Vecchia_Unita_Operativa_Mutation_Response>;
  /** insert a single row into the table: "sis.vecchia_unita_operativa" */
  insert_sis_vecchia_unita_operativa_one?: Maybe<Sis_Vecchia_Unita_Operativa>;
  /** insert data into the table: "sis.veicolo" */
  insert_sis_veicolo?: Maybe<Sis_Veicolo_Mutation_Response>;
  /** insert a single row into the table: "sis.veicolo" */
  insert_sis_veicolo_one?: Maybe<Sis_Veicolo>;
  /** insert data into the table: "sis.verbale" */
  insert_sis_verbale?: Maybe<Sis_Verbale_Mutation_Response>;
  /** insert a single row into the table: "sis.verbale" */
  insert_sis_verbale_one?: Maybe<Sis_Verbale>;
  /** insert data into the table: "toponomastica.assegnazione_quartiere" */
  insert_toponomastica_assegnazione_quartiere?: Maybe<Toponomastica_Assegnazione_Quartiere_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.assegnazione_quartiere" */
  insert_toponomastica_assegnazione_quartiere_one?: Maybe<Toponomastica_Assegnazione_Quartiere>;
  /** insert data into the table: "toponomastica.assegnazione_toponimo" */
  insert_toponomastica_assegnazione_toponimo?: Maybe<Toponomastica_Assegnazione_Toponimo_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.assegnazione_toponimo" */
  insert_toponomastica_assegnazione_toponimo_one?: Maybe<Toponomastica_Assegnazione_Toponimo>;
  /** insert data into the table: "toponomastica.dug" */
  insert_toponomastica_dug?: Maybe<Toponomastica_Dug_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.dug" */
  insert_toponomastica_dug_one?: Maybe<Toponomastica_Dug>;
  /** insert data into the table: "toponomastica.municipalita" */
  insert_toponomastica_municipalita?: Maybe<Toponomastica_Municipalita_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.municipalita" */
  insert_toponomastica_municipalita_one?: Maybe<Toponomastica_Municipalita>;
  /** insert data into the table: "toponomastica.quartiere" */
  insert_toponomastica_quartiere?: Maybe<Toponomastica_Quartiere_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.quartiere" */
  insert_toponomastica_quartiere_one?: Maybe<Toponomastica_Quartiere>;
  /** insert data into the table: "toponomastica.tipologia" */
  insert_toponomastica_tipologia?: Maybe<Toponomastica_Tipologia_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.tipologia" */
  insert_toponomastica_tipologia_one?: Maybe<Toponomastica_Tipologia>;
  /** insert data into the table: "toponomastica.toponimo" */
  insert_toponomastica_toponimo?: Maybe<Toponomastica_Toponimo_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.toponimo" */
  insert_toponomastica_toponimo_one?: Maybe<Toponomastica_Toponimo>;
  /** insert data into the table: "toponomastica.vecchia_municipalita" */
  insert_toponomastica_vecchia_municipalita?: Maybe<Toponomastica_Vecchia_Municipalita_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.vecchia_municipalita" */
  insert_toponomastica_vecchia_municipalita_one?: Maybe<Toponomastica_Vecchia_Municipalita>;
  /** insert data into the table: "toponomastica.vecchio_quartiere" */
  insert_toponomastica_vecchio_quartiere?: Maybe<Toponomastica_Vecchio_Quartiere_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.vecchio_quartiere" */
  insert_toponomastica_vecchio_quartiere_one?: Maybe<Toponomastica_Vecchio_Quartiere>;
  /** insert data into the table: "toponomastica.vecchio_toponimo" */
  insert_toponomastica_vecchio_toponimo?: Maybe<Toponomastica_Vecchio_Toponimo_Mutation_Response>;
  /** insert a single row into the table: "toponomastica.vecchio_toponimo" */
  insert_toponomastica_vecchio_toponimo_one?: Maybe<Toponomastica_Vecchio_Toponimo>;
  /** update data of the table: "_citta" */
  update__citta?: Maybe<_Citta_Mutation_Response>;
  /** update single row of the table: "_citta" */
  update__citta_by_pk?: Maybe<_Citta>;
  /** update data of the table: "_nazione" */
  update__nazione?: Maybe<_Nazione_Mutation_Response>;
  /** update single row of the table: "_nazione" */
  update__nazione_by_pk?: Maybe<_Nazione>;
  /** update data of the table: "_sesso" */
  update__sesso?: Maybe<_Sesso_Mutation_Response>;
  /** update single row of the table: "_sesso" */
  update__sesso_by_pk?: Maybe<_Sesso>;
  /** update data of the table: "_sinoaltro" */
  update__sinoaltro?: Maybe<_Sinoaltro_Mutation_Response>;
  /** update single row of the table: "_sinoaltro" */
  update__sinoaltro_by_pk?: Maybe<_Sinoaltro>;
  /** update data of the table: "_titolo" */
  update__titolo?: Maybe<_Titolo_Mutation_Response>;
  /** update single row of the table: "_titolo" */
  update__titolo_by_pk?: Maybe<_Titolo>;
  /** update data of the table: "agcos.agcos" */
  update_agcos_agcos?: Maybe<Agcos_Agcos_Mutation_Response>;
  /** update single row of the table: "agcos.agcos" */
  update_agcos_agcos_by_pk?: Maybe<Agcos_Agcos>;
  /** update data of the table: "agcos.import" */
  update_agcos_import?: Maybe<Agcos_Import_Mutation_Response>;
  /** update single row of the table: "agcos.import" */
  update_agcos_import_by_pk?: Maybe<Agcos_Import>;
  /** update data of the table: "gis._specifica_posizionamento_toponimo" */
  update_gis__specifica_posizionamento_toponimo?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Mutation_Response>;
  /** update single row of the table: "gis._specifica_posizionamento_toponimo" */
  update_gis__specifica_posizionamento_toponimo_by_pk?: Maybe<Gis__Specifica_Posizionamento_Toponimo>;
  /** update data of the table: "gis._tipologia_posizionamento_toponimo" */
  update_gis__tipologia_posizionamento_toponimo?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Mutation_Response>;
  /** update single row of the table: "gis._tipologia_posizionamento_toponimo" */
  update_gis__tipologia_posizionamento_toponimo_by_pk?: Maybe<Gis__Tipologia_Posizionamento_Toponimo>;
  /** update data of the table: "gis.civico" */
  update_gis_civico?: Maybe<Gis_Civico_Mutation_Response>;
  /** update single row of the table: "gis.civico" */
  update_gis_civico_by_pk?: Maybe<Gis_Civico>;
  /** update data of the table: "gis.connessione_grafo" */
  update_gis_connessione_grafo?: Maybe<Gis_Connessione_Grafo_Mutation_Response>;
  /** update single row of the table: "gis.connessione_grafo" */
  update_gis_connessione_grafo_by_pk?: Maybe<Gis_Connessione_Grafo>;
  /** update data of the table: "gis.posizionamento_toponimo" */
  update_gis_posizionamento_toponimo?: Maybe<Gis_Posizionamento_Toponimo_Mutation_Response>;
  /** update single row of the table: "gis.posizionamento_toponimo" */
  update_gis_posizionamento_toponimo_by_pk?: Maybe<Gis_Posizionamento_Toponimo>;
  /** update data of the table: "gis.sostegno_ipi" */
  update_gis_sostegno_ipi?: Maybe<Gis_Sostegno_Ipi_Mutation_Response>;
  /** update single row of the table: "gis.sostegno_ipi" */
  update_gis_sostegno_ipi_by_pk?: Maybe<Gis_Sostegno_Ipi>;
  /** update data of the table: "pis._condizioni_traffico" */
  update_pis__condizioni_traffico?: Maybe<Pis__Condizioni_Traffico_Mutation_Response>;
  /** update single row of the table: "pis._condizioni_traffico" */
  update_pis__condizioni_traffico_by_pk?: Maybe<Pis__Condizioni_Traffico>;
  /** update data of the table: "pis._forma_dissesto" */
  update_pis__forma_dissesto?: Maybe<Pis__Forma_Dissesto_Mutation_Response>;
  /** update single row of the table: "pis._forma_dissesto" */
  update_pis__forma_dissesto_by_pk?: Maybe<Pis__Forma_Dissesto>;
  /** update data of the table: "pis._giorni_trascorsi" */
  update_pis__giorni_trascorsi?: Maybe<Pis__Giorni_Trascorsi_Mutation_Response>;
  /** update single row of the table: "pis._giorni_trascorsi" */
  update_pis__giorni_trascorsi_by_pk?: Maybe<Pis__Giorni_Trascorsi>;
  /** update data of the table: "pis._materiale" */
  update_pis__materiale?: Maybe<Pis__Materiale_Mutation_Response>;
  /** update single row of the table: "pis._materiale" */
  update_pis__materiale_by_pk?: Maybe<Pis__Materiale>;
  /** update data of the table: "pis._priorita" */
  update_pis__priorita?: Maybe<Pis__Priorita_Mutation_Response>;
  /** update single row of the table: "pis._priorita" */
  update_pis__priorita_by_pk?: Maybe<Pis__Priorita>;
  /** update data of the table: "pis._stato_segnalazione" */
  update_pis__stato_segnalazione?: Maybe<Pis__Stato_Segnalazione_Mutation_Response>;
  /** update single row of the table: "pis._stato_segnalazione" */
  update_pis__stato_segnalazione_by_pk?: Maybe<Pis__Stato_Segnalazione>;
  /** update data of the table: "pis._tipologia_dissesto" */
  update_pis__tipologia_dissesto?: Maybe<Pis__Tipologia_Dissesto_Mutation_Response>;
  /** update single row of the table: "pis._tipologia_dissesto" */
  update_pis__tipologia_dissesto_by_pk?: Maybe<Pis__Tipologia_Dissesto>;
  /** update data of the table: "pis.assegnazione_squadra" */
  update_pis_assegnazione_squadra?: Maybe<Pis_Assegnazione_Squadra_Mutation_Response>;
  /** update single row of the table: "pis.assegnazione_squadra" */
  update_pis_assegnazione_squadra_by_pk?: Maybe<Pis_Assegnazione_Squadra>;
  /** update data of the table: "pis.attrezzature_impiegate" */
  update_pis_attrezzature_impiegate?: Maybe<Pis_Attrezzature_Impiegate_Mutation_Response>;
  /** update single row of the table: "pis.attrezzature_impiegate" */
  update_pis_attrezzature_impiegate_by_pk?: Maybe<Pis_Attrezzature_Impiegate>;
  /** update data of the table: "pis.diario" */
  update_pis_diario?: Maybe<Pis_Diario_Mutation_Response>;
  /** update single row of the table: "pis.diario" */
  update_pis_diario_by_pk?: Maybe<Pis_Diario>;
  /** update data of the table: "pis.dissesto" */
  update_pis_dissesto?: Maybe<Pis_Dissesto_Mutation_Response>;
  /** update single row of the table: "pis.dissesto" */
  update_pis_dissesto_by_pk?: Maybe<Pis_Dissesto>;
  /** update data of the table: "pis.evento" */
  update_pis_evento?: Maybe<Pis_Evento_Mutation_Response>;
  /** update single row of the table: "pis.evento" */
  update_pis_evento_by_pk?: Maybe<Pis_Evento>;
  /** update data of the table: "pis.intervento" */
  update_pis_intervento?: Maybe<Pis_Intervento_Mutation_Response>;
  /** update single row of the table: "pis.intervento" */
  update_pis_intervento_by_pk?: Maybe<Pis_Intervento>;
  /** update data of the table: "pis.intervento_straordinario" */
  update_pis_intervento_straordinario?: Maybe<Pis_Intervento_Straordinario_Mutation_Response>;
  /** update single row of the table: "pis.intervento_straordinario" */
  update_pis_intervento_straordinario_by_pk?: Maybe<Pis_Intervento_Straordinario>;
  /** update data of the table: "pis.materiale_dissesto" */
  update_pis_materiale_dissesto?: Maybe<Pis_Materiale_Dissesto_Mutation_Response>;
  /** update single row of the table: "pis.materiale_dissesto" */
  update_pis_materiale_dissesto_by_pk?: Maybe<Pis_Materiale_Dissesto>;
  /** update data of the table: "pis.segnalazione" */
  update_pis_segnalazione?: Maybe<Pis_Segnalazione_Mutation_Response>;
  /** update single row of the table: "pis.segnalazione" */
  update_pis_segnalazione_by_pk?: Maybe<Pis_Segnalazione>;
  /** update data of the table: "pis.segnalazione_collegata" */
  update_pis_segnalazione_collegata?: Maybe<Pis_Segnalazione_Collegata_Mutation_Response>;
  /** update single row of the table: "pis.segnalazione_collegata" */
  update_pis_segnalazione_collegata_by_pk?: Maybe<Pis_Segnalazione_Collegata>;
  /** update data of the table: "pis.segnaletica_lasciata" */
  update_pis_segnaletica_lasciata?: Maybe<Pis_Segnaletica_Lasciata_Mutation_Response>;
  /** update single row of the table: "pis.segnaletica_lasciata" */
  update_pis_segnaletica_lasciata_by_pk?: Maybe<Pis_Segnaletica_Lasciata>;
  /** update data of the table: "pis.squadra" */
  update_pis_squadra?: Maybe<Pis_Squadra_Mutation_Response>;
  /** update single row of the table: "pis.squadra" */
  update_pis_squadra_by_pk?: Maybe<Pis_Squadra>;
  /** update data of the table: "pis.tecnico_referente" */
  update_pis_tecnico_referente?: Maybe<Pis_Tecnico_Referente_Mutation_Response>;
  /** update single row of the table: "pis.tecnico_referente" */
  update_pis_tecnico_referente_by_pk?: Maybe<Pis_Tecnico_Referente>;
  /** update data of the table: "pis.vecchia_squadra" */
  update_pis_vecchia_squadra?: Maybe<Pis_Vecchia_Squadra_Mutation_Response>;
  /** update single row of the table: "pis.vecchia_squadra" */
  update_pis_vecchia_squadra_by_pk?: Maybe<Pis_Vecchia_Squadra>;
  /** update data of the table: "pis.veicoli_impiegati" */
  update_pis_veicoli_impiegati?: Maybe<Pis_Veicoli_Impiegati_Mutation_Response>;
  /** update single row of the table: "pis.veicoli_impiegati" */
  update_pis_veicoli_impiegati_by_pk?: Maybe<Pis_Veicoli_Impiegati>;
  /** update data of the table: "protocollo._sezione_protocollo" */
  update_protocollo__sezione_protocollo?: Maybe<Protocollo__Sezione_Protocollo_Mutation_Response>;
  /** update single row of the table: "protocollo._sezione_protocollo" */
  update_protocollo__sezione_protocollo_by_pk?: Maybe<Protocollo__Sezione_Protocollo>;
  /** update data of the table: "protocollo.protocollo" */
  update_protocollo_protocollo?: Maybe<Protocollo_Protocollo_Mutation_Response>;
  /** update single row of the table: "protocollo.protocollo" */
  update_protocollo_protocollo_by_pk?: Maybe<Protocollo_Protocollo>;
  /** update data of the table: "protocollo.protocollo_destinatario" */
  update_protocollo_protocollo_destinatario?: Maybe<Protocollo_Protocollo_Destinatario_Mutation_Response>;
  /** update single row of the table: "protocollo.protocollo_destinatario" */
  update_protocollo_protocollo_destinatario_by_pk?: Maybe<Protocollo_Protocollo_Destinatario>;
  /** update data of the table: "protocollo.protocollo_destinatario_esterno" */
  update_protocollo_protocollo_destinatario_esterno?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Mutation_Response>;
  /** update single row of the table: "protocollo.protocollo_destinatario_esterno" */
  update_protocollo_protocollo_destinatario_esterno_by_pk?: Maybe<Protocollo_Protocollo_Destinatario_Esterno>;
  /** update data of the table: "sis._alimentazione_veicolo" */
  update_sis__alimentazione_veicolo?: Maybe<Sis__Alimentazione_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis._alimentazione_veicolo" */
  update_sis__alimentazione_veicolo_by_pk?: Maybe<Sis__Alimentazione_Veicolo>;
  /** update data of the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  update_sis__condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  update_sis__condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** update data of the table: "sis._conseguenza_veicolo" */
  update_sis__conseguenza_veicolo?: Maybe<Sis__Conseguenza_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis._conseguenza_veicolo" */
  update_sis__conseguenza_veicolo_by_pk?: Maybe<Sis__Conseguenza_Veicolo>;
  /** update data of the table: "sis._decessi_tipologia" */
  update_sis__decessi_tipologia?: Maybe<Sis__Decessi_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis._decessi_tipologia" */
  update_sis__decessi_tipologia_by_pk?: Maybe<Sis__Decessi_Tipologia>;
  /** update data of the table: "sis._destinazione_decisione" */
  update_sis__destinazione_decisione?: Maybe<Sis__Destinazione_Decisione_Mutation_Response>;
  /** update single row of the table: "sis._destinazione_decisione" */
  update_sis__destinazione_decisione_by_pk?: Maybe<Sis__Destinazione_Decisione>;
  /** update data of the table: "sis._ente" */
  update_sis__ente?: Maybe<Sis__Ente_Mutation_Response>;
  /** update single row of the table: "sis._ente" */
  update_sis__ente_by_pk?: Maybe<Sis__Ente>;
  /** update data of the table: "sis._ente_secondario" */
  update_sis__ente_secondario?: Maybe<Sis__Ente_Secondario_Mutation_Response>;
  /** update single row of the table: "sis._ente_secondario" */
  update_sis__ente_secondario_by_pk?: Maybe<Sis__Ente_Secondario>;
  /** update data of the table: "sis._impianto_semaforico" */
  update_sis__impianto_semaforico?: Maybe<Sis__Impianto_Semaforico_Mutation_Response>;
  /** update single row of the table: "sis._impianto_semaforico" */
  update_sis__impianto_semaforico_by_pk?: Maybe<Sis__Impianto_Semaforico>;
  /** update data of the table: "sis._infortunato_informazione" */
  update_sis__infortunato_informazione?: Maybe<Sis__Infortunato_Informazione_Mutation_Response>;
  /** update single row of the table: "sis._infortunato_informazione" */
  update_sis__infortunato_informazione_by_pk?: Maybe<Sis__Infortunato_Informazione>;
  /** update data of the table: "sis._intortunato_tasportato" */
  update_sis__intortunato_tasportato?: Maybe<Sis__Intortunato_Tasportato_Mutation_Response>;
  /** update single row of the table: "sis._intortunato_tasportato" */
  update_sis__intortunato_tasportato_by_pk?: Maybe<Sis__Intortunato_Tasportato>;
  /** update data of the table: "sis._localizzazione_altro" */
  update_sis__localizzazione_altro?: Maybe<Sis__Localizzazione_Altro_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_altro" */
  update_sis__localizzazione_altro_by_pk?: Maybe<Sis__Localizzazione_Altro>;
  /** update data of the table: "sis._localizzazione_condizioni_atmosferiche" */
  update_sis__localizzazione_condizioni_atmosferiche?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_condizioni_atmosferiche" */
  update_sis__localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche>;
  /** update data of the table: "sis._localizzazione_condizioni_traffico" */
  update_sis__localizzazione_condizioni_traffico?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_condizioni_traffico" */
  update_sis__localizzazione_condizioni_traffico_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Traffico>;
  /** update data of the table: "sis._localizzazione_extra_abitato" */
  update_sis__localizzazione_extra_abitato?: Maybe<Sis__Localizzazione_Extra_Abitato_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_extra_abitato" */
  update_sis__localizzazione_extra_abitato_by_pk?: Maybe<Sis__Localizzazione_Extra_Abitato>;
  /** update data of the table: "sis._localizzazione_fondo_stradale" */
  update_sis__localizzazione_fondo_stradale?: Maybe<Sis__Localizzazione_Fondo_Stradale_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_fondo_stradale" */
  update_sis__localizzazione_fondo_stradale_by_pk?: Maybe<Sis__Localizzazione_Fondo_Stradale>;
  /** update data of the table: "sis._localizzazione_illuminazione" */
  update_sis__localizzazione_illuminazione?: Maybe<Sis__Localizzazione_Illuminazione_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_illuminazione" */
  update_sis__localizzazione_illuminazione_by_pk?: Maybe<Sis__Localizzazione_Illuminazione>;
  /** update data of the table: "sis._localizzazione_particolarita_strada" */
  update_sis__localizzazione_particolarita_strada?: Maybe<Sis__Localizzazione_Particolarita_Strada_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_particolarita_strada" */
  update_sis__localizzazione_particolarita_strada_by_pk?: Maybe<Sis__Localizzazione_Particolarita_Strada>;
  /** update data of the table: "sis._localizzazione_pavimentazione" */
  update_sis__localizzazione_pavimentazione?: Maybe<Sis__Localizzazione_Pavimentazione_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_pavimentazione" */
  update_sis__localizzazione_pavimentazione_by_pk?: Maybe<Sis__Localizzazione_Pavimentazione>;
  /** update data of the table: "sis._localizzazione_tipo_strada" */
  update_sis__localizzazione_tipo_strada?: Maybe<Sis__Localizzazione_Tipo_Strada_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_tipo_strada" */
  update_sis__localizzazione_tipo_strada_by_pk?: Maybe<Sis__Localizzazione_Tipo_Strada>;
  /** update data of the table: "sis._localizzazione_visibilita" */
  update_sis__localizzazione_visibilita?: Maybe<Sis__Localizzazione_Visibilita_Mutation_Response>;
  /** update single row of the table: "sis._localizzazione_visibilita" */
  update_sis__localizzazione_visibilita_by_pk?: Maybe<Sis__Localizzazione_Visibilita>;
  /** update data of the table: "sis._natura_incidente" */
  update_sis__natura_incidente?: Maybe<Sis__Natura_Incidente_Mutation_Response>;
  /** update single row of the table: "sis._natura_incidente" */
  update_sis__natura_incidente_by_pk?: Maybe<Sis__Natura_Incidente>;
  /** update data of the table: "sis._patente_categoria" */
  update_sis__patente_categoria?: Maybe<Sis__Patente_Categoria_Mutation_Response>;
  /** update single row of the table: "sis._patente_categoria" */
  update_sis__patente_categoria_by_pk?: Maybe<Sis__Patente_Categoria>;
  /** update data of the table: "sis._posizione_finale_veicolo_carreggiata" */
  update_sis__posizione_finale_veicolo_carreggiata?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Mutation_Response>;
  /** update single row of the table: "sis._posizione_finale_veicolo_carreggiata" */
  update_sis__posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata>;
  /** update data of the table: "sis._posizione_finale_veicolo_fuori_sede" */
  update_sis__posizione_finale_veicolo_fuori_sede?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response>;
  /** update single row of the table: "sis._posizione_finale_veicolo_fuori_sede" */
  update_sis__posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
  /** update data of the table: "sis._posizione_finale_veicolo_margini" */
  update_sis__posizione_finale_veicolo_margini?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Mutation_Response>;
  /** update single row of the table: "sis._posizione_finale_veicolo_margini" */
  update_sis__posizione_finale_veicolo_margini_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Margini>;
  /** update data of the table: "sis._punti_rilievi_no_tipologia" */
  update_sis__punti_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis._punti_rilievi_no_tipologia" */
  update_sis__punti_rilievi_no_tipologia_by_pk?: Maybe<Sis__Punti_Rilievi_No_Tipologia>;
  /** update data of the table: "sis._retrovisore_esterno" */
  update_sis__retrovisore_esterno?: Maybe<Sis__Retrovisore_Esterno_Mutation_Response>;
  /** update single row of the table: "sis._retrovisore_esterno" */
  update_sis__retrovisore_esterno_by_pk?: Maybe<Sis__Retrovisore_Esterno>;
  /** update data of the table: "sis._ris_consegnato_a" */
  update_sis__ris_consegnato_a?: Maybe<Sis__Ris_Consegnato_A_Mutation_Response>;
  /** update single row of the table: "sis._ris_consegnato_a" */
  update_sis__ris_consegnato_a_by_pk?: Maybe<Sis__Ris_Consegnato_A>;
  /** update data of the table: "sis._stato_ris" */
  update_sis__stato_ris?: Maybe<Sis__Stato_Ris_Mutation_Response>;
  /** update single row of the table: "sis._stato_ris" */
  update_sis__stato_ris_by_pk?: Maybe<Sis__Stato_Ris>;
  /** update data of the table: "sis._stato_veicolo" */
  update_sis__stato_veicolo?: Maybe<Sis__Stato_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis._stato_veicolo" */
  update_sis__stato_veicolo_by_pk?: Maybe<Sis__Stato_Veicolo>;
  /** update data of the table: "sis._tipologia_ris" */
  update_sis__tipologia_ris?: Maybe<Sis__Tipologia_Ris_Mutation_Response>;
  /** update single row of the table: "sis._tipologia_ris" */
  update_sis__tipologia_ris_by_pk?: Maybe<Sis__Tipologia_Ris>;
  /** update data of the table: "sis._tipologia_veicolo" */
  update_sis__tipologia_veicolo?: Maybe<Sis__Tipologia_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis._tipologia_veicolo" */
  update_sis__tipologia_veicolo_by_pk?: Maybe<Sis__Tipologia_Veicolo>;
  /** update data of the table: "sis._tipologia_verbale" */
  update_sis__tipologia_verbale?: Maybe<Sis__Tipologia_Verbale_Mutation_Response>;
  /** update single row of the table: "sis._tipologia_verbale" */
  update_sis__tipologia_verbale_by_pk?: Maybe<Sis__Tipologia_Verbale>;
  /** update data of the table: "sis._traccia_suolo_frenata_tipologia" */
  update_sis__traccia_suolo_frenata_tipologia?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis._traccia_suolo_frenata_tipologia" */
  update_sis__traccia_suolo_frenata_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia>;
  /** update data of the table: "sis._traccia_suolo_terminazione" */
  update_sis__traccia_suolo_terminazione?: Maybe<Sis__Traccia_Suolo_Terminazione_Mutation_Response>;
  /** update data of the table: "sis._traccia_suolo_terminazione_andamento" */
  update_sis__traccia_suolo_terminazione_andamento?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Mutation_Response>;
  /** update single row of the table: "sis._traccia_suolo_terminazione_andamento" */
  update_sis__traccia_suolo_terminazione_andamento_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento>;
  /** update single row of the table: "sis._traccia_suolo_terminazione" */
  update_sis__traccia_suolo_terminazione_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione>;
  /** update data of the table: "sis._traccia_suolo_terminazione_forma" */
  update_sis__traccia_suolo_terminazione_forma?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Mutation_Response>;
  /** update single row of the table: "sis._traccia_suolo_terminazione_forma" */
  update_sis__traccia_suolo_terminazione_forma_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma>;
  /** update data of the table: "sis._traccia_suolo_terminazione_intensita" */
  update_sis__traccia_suolo_terminazione_intensita?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Mutation_Response>;
  /** update single row of the table: "sis._traccia_suolo_terminazione_intensita" */
  update_sis__traccia_suolo_terminazione_intensita_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita>;
  /** update data of the table: "sis._traccia_suolo_terminazione_tipologia" */
  update_sis__traccia_suolo_terminazione_tipologia?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis._traccia_suolo_terminazione_tipologia" */
  update_sis__traccia_suolo_terminazione_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  /** update data of the table: "sis._traccia_suolo_tipologia" */
  update_sis__traccia_suolo_tipologia?: Maybe<Sis__Traccia_Suolo_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis._traccia_suolo_tipologia" */
  update_sis__traccia_suolo_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Tipologia>;
  /** update data of the table: "sis._trasportato_posizione" */
  update_sis__trasportato_posizione?: Maybe<Sis__Trasportato_Posizione_Mutation_Response>;
  /** update single row of the table: "sis._trasportato_posizione" */
  update_sis__trasportato_posizione_by_pk?: Maybe<Sis__Trasportato_Posizione>;
  /** update data of the table: "sis._trasportato_stato" */
  update_sis__trasportato_stato?: Maybe<Sis__Trasportato_Stato_Mutation_Response>;
  /** update single row of the table: "sis._trasportato_stato" */
  update_sis__trasportato_stato_by_pk?: Maybe<Sis__Trasportato_Stato>;
  /** update data of the table: "sis._uso_veicolo" */
  update_sis__uso_veicolo?: Maybe<Sis__Uso_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis._uso_veicolo" */
  update_sis__uso_veicolo_by_pk?: Maybe<Sis__Uso_Veicolo>;
  /** update data of the table: "sis._visibilita_limitata_tipologia" */
  update_sis__visibilita_limitata_tipologia?: Maybe<Sis__Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis._visibilita_limitata_tipologia" */
  update_sis__visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Visibilita_Limitata_Tipologia>;
  /** update data of the table: "sis.accertamento" */
  update_sis_accertamento?: Maybe<Sis_Accertamento_Mutation_Response>;
  /** update single row of the table: "sis.accertamento" */
  update_sis_accertamento_by_pk?: Maybe<Sis_Accertamento>;
  /** update data of the table: "sis.agente_accertatore" */
  update_sis_agente_accertatore?: Maybe<Sis_Agente_Accertatore_Mutation_Response>;
  /** update single row of the table: "sis.agente_accertatore" */
  update_sis_agente_accertatore_by_pk?: Maybe<Sis_Agente_Accertatore>;
  /** update data of the table: "sis.altro" */
  update_sis_altro?: Maybe<Sis_Altro_Mutation_Response>;
  /** update single row of the table: "sis.altro" */
  update_sis_altro_by_pk?: Maybe<Sis_Altro>;
  /** update data of the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  update_sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response>;
  /** update single row of the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  update_sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** update data of the table: "sis.assegnazione_unita_operativa" */
  update_sis_assegnazione_unita_operativa?: Maybe<Sis_Assegnazione_Unita_Operativa_Mutation_Response>;
  /** update single row of the table: "sis.assegnazione_unita_operativa" */
  update_sis_assegnazione_unita_operativa_by_pk?: Maybe<Sis_Assegnazione_Unita_Operativa>;
  /** update data of the table: "sis.associazione_conseguenza_veicolo" */
  update_sis_associazione_conseguenza_veicolo?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis.associazione_conseguenza_veicolo" */
  update_sis_associazione_conseguenza_veicolo_by_pk?: Maybe<Sis_Associazione_Conseguenza_Veicolo>;
  /** update data of the table: "sis.associazione_decessi_tipologie" */
  update_sis_associazione_decessi_tipologie?: Maybe<Sis_Associazione_Decessi_Tipologie_Mutation_Response>;
  /** update single row of the table: "sis.associazione_decessi_tipologie" */
  update_sis_associazione_decessi_tipologie_by_pk?: Maybe<Sis_Associazione_Decessi_Tipologie>;
  /** update data of the table: "sis.associazione_ente_primo_intervento" */
  update_sis_associazione_ente_primo_intervento?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Mutation_Response>;
  /** update single row of the table: "sis.associazione_ente_primo_intervento" */
  update_sis_associazione_ente_primo_intervento_by_pk?: Maybe<Sis_Associazione_Ente_Primo_Intervento>;
  /** update data of the table: "sis.associazione_ente_secondario_intervenuti" */
  update_sis_associazione_ente_secondario_intervenuti?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Mutation_Response>;
  /** update single row of the table: "sis.associazione_ente_secondario_intervenuti" */
  update_sis_associazione_ente_secondario_intervenuti_by_pk?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** update data of the table: "sis.associazione_ente_segnalatore" */
  update_sis_associazione_ente_segnalatore?: Maybe<Sis_Associazione_Ente_Segnalatore_Mutation_Response>;
  /** update single row of the table: "sis.associazione_ente_segnalatore" */
  update_sis_associazione_ente_segnalatore_by_pk?: Maybe<Sis_Associazione_Ente_Segnalatore>;
  /** update data of the table: "sis.associazione_impianto_semaforico" */
  update_sis_associazione_impianto_semaforico?: Maybe<Sis_Associazione_Impianto_Semaforico_Mutation_Response>;
  /** update single row of the table: "sis.associazione_impianto_semaforico" */
  update_sis_associazione_impianto_semaforico_by_pk?: Maybe<Sis_Associazione_Impianto_Semaforico>;
  /** update data of the table: "sis.associazione_informazioni_infortunato" */
  update_sis_associazione_informazioni_infortunato?: Maybe<Sis_Associazione_Informazioni_Infortunato_Mutation_Response>;
  /** update single row of the table: "sis.associazione_informazioni_infortunato" */
  update_sis_associazione_informazioni_infortunato_by_pk?: Maybe<Sis_Associazione_Informazioni_Infortunato>;
  /** update data of the table: "sis.associazione_localizzazione_altro" */
  update_sis_associazione_localizzazione_altro?: Maybe<Sis_Associazione_Localizzazione_Altro_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_altro" */
  update_sis_associazione_localizzazione_altro_by_pk?: Maybe<Sis_Associazione_Localizzazione_Altro>;
  /** update data of the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  update_sis_associazione_localizzazione_condizioni_atmosferiche?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  update_sis_associazione_localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** update data of the table: "sis.associazione_localizzazione_extra_abitato" */
  update_sis_associazione_localizzazione_extra_abitato?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_extra_abitato" */
  update_sis_associazione_localizzazione_extra_abitato_by_pk?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** update data of the table: "sis.associazione_localizzazione_fondo_stradale" */
  update_sis_associazione_localizzazione_fondo_stradale?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_fondo_stradale" */
  update_sis_associazione_localizzazione_fondo_stradale_by_pk?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** update data of the table: "sis.associazione_localizzazione_illuminazione" */
  update_sis_associazione_localizzazione_illuminazione?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_illuminazione" */
  update_sis_associazione_localizzazione_illuminazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Illuminazione>;
  /** update data of the table: "sis.associazione_localizzazione_particolarita_strada" */
  update_sis_associazione_localizzazione_particolarita_strada?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_particolarita_strada" */
  update_sis_associazione_localizzazione_particolarita_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** update data of the table: "sis.associazione_localizzazione_pavimentazione" */
  update_sis_associazione_localizzazione_pavimentazione?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_pavimentazione" */
  update_sis_associazione_localizzazione_pavimentazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** update data of the table: "sis.associazione_localizzazione_tipo_strada" */
  update_sis_associazione_localizzazione_tipo_strada?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_tipo_strada" */
  update_sis_associazione_localizzazione_tipo_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** update data of the table: "sis.associazione_localizzazione_visibilita" */
  update_sis_associazione_localizzazione_visibilita?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Mutation_Response>;
  /** update single row of the table: "sis.associazione_localizzazione_visibilita" */
  update_sis_associazione_localizzazione_visibilita_by_pk?: Maybe<Sis_Associazione_Localizzazione_Visibilita>;
  /** update data of the table: "sis.associazione_natura_incidente" */
  update_sis_associazione_natura_incidente?: Maybe<Sis_Associazione_Natura_Incidente_Mutation_Response>;
  /** update single row of the table: "sis.associazione_natura_incidente" */
  update_sis_associazione_natura_incidente_by_pk?: Maybe<Sis_Associazione_Natura_Incidente>;
  /** update data of the table: "sis.associazione_patente" */
  update_sis_associazione_patente?: Maybe<Sis_Associazione_Patente_Mutation_Response>;
  /** update single row of the table: "sis.associazione_patente" */
  update_sis_associazione_patente_by_pk?: Maybe<Sis_Associazione_Patente>;
  /** update data of the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  update_sis_associazione_posizione_finale_veicolo_carreggiata?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Mutation_Response>;
  /** update single row of the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  update_sis_associazione_posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** update data of the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  update_sis_associazione_posizione_finale_veicolo_fuori_sede?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response>;
  /** update single row of the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  update_sis_associazione_posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** update data of the table: "sis.associazione_posizione_finale_veicolo_margini" */
  update_sis_associazione_posizione_finale_veicolo_margini?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Mutation_Response>;
  /** update single row of the table: "sis.associazione_posizione_finale_veicolo_margini" */
  update_sis_associazione_posizione_finale_veicolo_margini_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** update data of the table: "sis.associazione_tipologia_ris" */
  update_sis_associazione_tipologia_ris?: Maybe<Sis_Associazione_Tipologia_Ris_Mutation_Response>;
  /** update single row of the table: "sis.associazione_tipologia_ris" */
  update_sis_associazione_tipologia_ris_by_pk?: Maybe<Sis_Associazione_Tipologia_Ris>;
  /** update data of the table: "sis.associzione_localizzazione_condizioni_traffico" */
  update_sis_associzione_localizzazione_condizioni_traffico?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Mutation_Response>;
  /** update single row of the table: "sis.associzione_localizzazione_condizioni_traffico" */
  update_sis_associzione_localizzazione_condizioni_traffico_by_pk?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** update data of the table: "sis.conducente" */
  update_sis_conducente?: Maybe<Sis_Conducente_Mutation_Response>;
  /** update single row of the table: "sis.conducente" */
  update_sis_conducente_by_pk?: Maybe<Sis_Conducente>;
  /** update data of the table: "sis.evento_sis" */
  update_sis_evento_sis?: Maybe<Sis_Evento_Sis_Mutation_Response>;
  /** update single row of the table: "sis.evento_sis" */
  update_sis_evento_sis_by_pk?: Maybe<Sis_Evento_Sis>;
  /** update data of the table: "sis.infortunato" */
  update_sis_infortunato?: Maybe<Sis_Infortunato_Mutation_Response>;
  /** update single row of the table: "sis.infortunato" */
  update_sis_infortunato_by_pk?: Maybe<Sis_Infortunato>;
  /** update data of the table: "sis.infrazione" */
  update_sis_infrazione?: Maybe<Sis_Infrazione_Mutation_Response>;
  /** update single row of the table: "sis.infrazione" */
  update_sis_infrazione_by_pk?: Maybe<Sis_Infrazione>;
  /** update data of the table: "sis.locatario" */
  update_sis_locatario?: Maybe<Sis_Locatario_Mutation_Response>;
  /** update single row of the table: "sis.locatario" */
  update_sis_locatario_by_pk?: Maybe<Sis_Locatario>;
  /** update data of the table: "sis.pedone" */
  update_sis_pedone?: Maybe<Sis_Pedone_Mutation_Response>;
  /** update single row of the table: "sis.pedone" */
  update_sis_pedone_by_pk?: Maybe<Sis_Pedone>;
  /** update data of the table: "sis.proprietario" */
  update_sis_proprietario?: Maybe<Sis_Proprietario_Mutation_Response>;
  /** update single row of the table: "sis.proprietario" */
  update_sis_proprietario_by_pk?: Maybe<Sis_Proprietario>;
  /** update data of the table: "sis.proprietario_giuridico" */
  update_sis_proprietario_giuridico?: Maybe<Sis_Proprietario_Giuridico_Mutation_Response>;
  /** update single row of the table: "sis.proprietario_giuridico" */
  update_sis_proprietario_giuridico_by_pk?: Maybe<Sis_Proprietario_Giuridico>;
  /** update data of the table: "sis.ris" */
  update_sis_ris?: Maybe<Sis_Ris_Mutation_Response>;
  /** update single row of the table: "sis.ris" */
  update_sis_ris_by_pk?: Maybe<Sis_Ris>;
  /** update data of the table: "sis.testimone" */
  update_sis_testimone?: Maybe<Sis_Testimone_Mutation_Response>;
  /** update single row of the table: "sis.testimone" */
  update_sis_testimone_by_pk?: Maybe<Sis_Testimone>;
  /** update data of the table: "sis.trasportati_veicolo" */
  update_sis_trasportati_veicolo?: Maybe<Sis_Trasportati_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis.trasportati_veicolo" */
  update_sis_trasportati_veicolo_by_pk?: Maybe<Sis_Trasportati_Veicolo>;
  /** update data of the table: "sis.trasportato" */
  update_sis_trasportato?: Maybe<Sis_Trasportato_Mutation_Response>;
  /** update single row of the table: "sis.trasportato" */
  update_sis_trasportato_by_pk?: Maybe<Sis_Trasportato>;
  /** update data of the table: "sis.unita_operativa" */
  update_sis_unita_operativa?: Maybe<Sis_Unita_Operativa_Mutation_Response>;
  /** update single row of the table: "sis.unita_operativa" */
  update_sis_unita_operativa_by_pk?: Maybe<Sis_Unita_Operativa>;
  /** update data of the table: "sis.vecchia_unita_operativa" */
  update_sis_vecchia_unita_operativa?: Maybe<Sis_Vecchia_Unita_Operativa_Mutation_Response>;
  /** update single row of the table: "sis.vecchia_unita_operativa" */
  update_sis_vecchia_unita_operativa_by_pk?: Maybe<Sis_Vecchia_Unita_Operativa>;
  /** update data of the table: "sis.veicolo" */
  update_sis_veicolo?: Maybe<Sis_Veicolo_Mutation_Response>;
  /** update single row of the table: "sis.veicolo" */
  update_sis_veicolo_by_pk?: Maybe<Sis_Veicolo>;
  /** update data of the table: "sis.verbale" */
  update_sis_verbale?: Maybe<Sis_Verbale_Mutation_Response>;
  /** update single row of the table: "sis.verbale" */
  update_sis_verbale_by_pk?: Maybe<Sis_Verbale>;
  /** update data of the table: "toponomastica.assegnazione_quartiere" */
  update_toponomastica_assegnazione_quartiere?: Maybe<Toponomastica_Assegnazione_Quartiere_Mutation_Response>;
  /** update single row of the table: "toponomastica.assegnazione_quartiere" */
  update_toponomastica_assegnazione_quartiere_by_pk?: Maybe<Toponomastica_Assegnazione_Quartiere>;
  /** update data of the table: "toponomastica.assegnazione_toponimo" */
  update_toponomastica_assegnazione_toponimo?: Maybe<Toponomastica_Assegnazione_Toponimo_Mutation_Response>;
  /** update single row of the table: "toponomastica.assegnazione_toponimo" */
  update_toponomastica_assegnazione_toponimo_by_pk?: Maybe<Toponomastica_Assegnazione_Toponimo>;
  /** update data of the table: "toponomastica.dug" */
  update_toponomastica_dug?: Maybe<Toponomastica_Dug_Mutation_Response>;
  /** update single row of the table: "toponomastica.dug" */
  update_toponomastica_dug_by_pk?: Maybe<Toponomastica_Dug>;
  /** update data of the table: "toponomastica.municipalita" */
  update_toponomastica_municipalita?: Maybe<Toponomastica_Municipalita_Mutation_Response>;
  /** update single row of the table: "toponomastica.municipalita" */
  update_toponomastica_municipalita_by_pk?: Maybe<Toponomastica_Municipalita>;
  /** update data of the table: "toponomastica.quartiere" */
  update_toponomastica_quartiere?: Maybe<Toponomastica_Quartiere_Mutation_Response>;
  /** update single row of the table: "toponomastica.quartiere" */
  update_toponomastica_quartiere_by_pk?: Maybe<Toponomastica_Quartiere>;
  /** update data of the table: "toponomastica.tipologia" */
  update_toponomastica_tipologia?: Maybe<Toponomastica_Tipologia_Mutation_Response>;
  /** update single row of the table: "toponomastica.tipologia" */
  update_toponomastica_tipologia_by_pk?: Maybe<Toponomastica_Tipologia>;
  /** update data of the table: "toponomastica.toponimo" */
  update_toponomastica_toponimo?: Maybe<Toponomastica_Toponimo_Mutation_Response>;
  /** update single row of the table: "toponomastica.toponimo" */
  update_toponomastica_toponimo_by_pk?: Maybe<Toponomastica_Toponimo>;
  /** update data of the table: "toponomastica.vecchia_municipalita" */
  update_toponomastica_vecchia_municipalita?: Maybe<Toponomastica_Vecchia_Municipalita_Mutation_Response>;
  /** update single row of the table: "toponomastica.vecchia_municipalita" */
  update_toponomastica_vecchia_municipalita_by_pk?: Maybe<Toponomastica_Vecchia_Municipalita>;
  /** update data of the table: "toponomastica.vecchio_quartiere" */
  update_toponomastica_vecchio_quartiere?: Maybe<Toponomastica_Vecchio_Quartiere_Mutation_Response>;
  /** update single row of the table: "toponomastica.vecchio_quartiere" */
  update_toponomastica_vecchio_quartiere_by_pk?: Maybe<Toponomastica_Vecchio_Quartiere>;
  /** update data of the table: "toponomastica.vecchio_toponimo" */
  update_toponomastica_vecchio_toponimo?: Maybe<Toponomastica_Vecchio_Toponimo_Mutation_Response>;
  /** update single row of the table: "toponomastica.vecchio_toponimo" */
  update_toponomastica_vecchio_toponimo_by_pk?: Maybe<Toponomastica_Vecchio_Toponimo>;
};


/** mutation root */
export type Mutation_RootCustom_Insert_Intervento_StraordinarioArgs = {
  intervento_straordinario: Scalars['json'];
  on_conflict: Scalars['json'];
};


/** mutation root */
export type Mutation_RootCustom_Insert_RisArgs = {
  on_conflict: Scalars['json'];
  ris: Scalars['json'];
};


/** mutation root */
export type Mutation_RootCustom_Insert_SegnalazioneArgs = {
  on_conflict: Scalars['json'];
  segnalazione: Scalars['json'];
};


/** mutation root */
export type Mutation_RootDelete__CittaArgs = {
  where: _Citta_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete__Citta_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete__NazioneArgs = {
  where: _Nazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete__Nazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete__SessoArgs = {
  where: _Sesso_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete__Sesso_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete__SinoaltroArgs = {
  where: _Sinoaltro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete__Sinoaltro_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete__TitoloArgs = {
  where: _Titolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete__Titolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Agcos_AgcosArgs = {
  where: Agcos_Agcos_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Agcos_Agcos_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Agcos_ImportArgs = {
  where: Agcos_Import_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Agcos_Import_By_PkArgs = {
  updated_at: Scalars['timestamptz'];
};


/** mutation root */
export type Mutation_RootDelete_Gis__Specifica_Posizionamento_ToponimoArgs = {
  where: Gis__Specifica_Posizionamento_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Gis__Specifica_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Gis__Tipologia_Posizionamento_ToponimoArgs = {
  where: Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Gis__Tipologia_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Gis_CivicoArgs = {
  where: Gis_Civico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Gis_Civico_By_PkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_Gis_Connessione_GrafoArgs = {
  where: Gis_Connessione_Grafo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Gis_Connessione_Grafo_By_PkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_Gis_Posizionamento_ToponimoArgs = {
  where: Gis_Posizionamento_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Gis_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Gis_Sostegno_IpiArgs = {
  where: Gis_Sostegno_Ipi_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Gis_Sostegno_Ipi_By_PkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_Pis__Condizioni_TrafficoArgs = {
  where: Pis__Condizioni_Traffico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis__Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis__Forma_DissestoArgs = {
  where: Pis__Forma_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis__Forma_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis__Giorni_TrascorsiArgs = {
  where: Pis__Giorni_Trascorsi_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis__Giorni_Trascorsi_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis__MaterialeArgs = {
  where: Pis__Materiale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis__Materiale_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis__PrioritaArgs = {
  where: Pis__Priorita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis__Priorita_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis__Stato_SegnalazioneArgs = {
  where: Pis__Stato_Segnalazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis__Stato_Segnalazione_By_PkArgs = {
  text: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Pis__Tipologia_DissestoArgs = {
  where: Pis__Tipologia_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis__Tipologia_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Assegnazione_SquadraArgs = {
  where: Pis_Assegnazione_Squadra_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Assegnazione_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Attrezzature_ImpiegateArgs = {
  where: Pis_Attrezzature_Impiegate_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Attrezzature_Impiegate_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_DiarioArgs = {
  where: Pis_Diario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Diario_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_DissestoArgs = {
  where: Pis_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_EventoArgs = {
  where: Pis_Evento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Evento_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_InterventoArgs = {
  where: Pis_Intervento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Intervento_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Intervento_StraordinarioArgs = {
  where: Pis_Intervento_Straordinario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Intervento_Straordinario_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Materiale_DissestoArgs = {
  where: Pis_Materiale_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Materiale_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_SegnalazioneArgs = {
  where: Pis_Segnalazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Segnalazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Segnalazione_CollegataArgs = {
  where: Pis_Segnalazione_Collegata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Segnalazione_Collegata_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Segnaletica_LasciataArgs = {
  where: Pis_Segnaletica_Lasciata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Segnaletica_Lasciata_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_SquadraArgs = {
  where: Pis_Squadra_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Tecnico_ReferenteArgs = {
  where: Pis_Tecnico_Referente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Tecnico_Referente_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Vecchia_SquadraArgs = {
  where: Pis_Vecchia_Squadra_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Vecchia_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Pis_Veicoli_ImpiegatiArgs = {
  where: Pis_Veicoli_Impiegati_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Pis_Veicoli_Impiegati_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Protocollo__Sezione_ProtocolloArgs = {
  where: Protocollo__Sezione_Protocollo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Protocollo__Sezione_Protocollo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Protocollo_ProtocolloArgs = {
  where: Protocollo_Protocollo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Protocollo_Protocollo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Protocollo_Protocollo_DestinatarioArgs = {
  where: Protocollo_Protocollo_Destinatario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Protocollo_Protocollo_Destinatario_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Protocollo_Protocollo_Destinatario_EsternoArgs = {
  where: Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Protocollo_Protocollo_Destinatario_Esterno_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Alimentazione_VeicoloArgs = {
  where: Sis__Alimentazione_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Alimentazione_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  where: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Conseguenza_VeicoloArgs = {
  where: Sis__Conseguenza_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Conseguenza_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Decessi_TipologiaArgs = {
  where: Sis__Decessi_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Decessi_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Destinazione_DecisioneArgs = {
  where: Sis__Destinazione_Decisione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Destinazione_Decisione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__EnteArgs = {
  where: Sis__Ente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Ente_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Ente_SecondarioArgs = {
  where: Sis__Ente_Secondario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Ente_Secondario_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Impianto_SemaforicoArgs = {
  where: Sis__Impianto_Semaforico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Impianto_Semaforico_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Infortunato_InformazioneArgs = {
  where: Sis__Infortunato_Informazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Infortunato_Informazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Intortunato_TasportatoArgs = {
  where: Sis__Intortunato_Tasportato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Intortunato_Tasportato_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_AltroArgs = {
  where: Sis__Localizzazione_Altro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Condizioni_AtmosfericheArgs = {
  where: Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Condizioni_TrafficoArgs = {
  where: Sis__Localizzazione_Condizioni_Traffico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Extra_AbitatoArgs = {
  where: Sis__Localizzazione_Extra_Abitato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Extra_Abitato_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Fondo_StradaleArgs = {
  where: Sis__Localizzazione_Fondo_Stradale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Fondo_Stradale_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_IlluminazioneArgs = {
  where: Sis__Localizzazione_Illuminazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Illuminazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Particolarita_StradaArgs = {
  where: Sis__Localizzazione_Particolarita_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Particolarita_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_PavimentazioneArgs = {
  where: Sis__Localizzazione_Pavimentazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Pavimentazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Tipo_StradaArgs = {
  where: Sis__Localizzazione_Tipo_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Tipo_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_VisibilitaArgs = {
  where: Sis__Localizzazione_Visibilita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Localizzazione_Visibilita_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Natura_IncidenteArgs = {
  where: Sis__Natura_Incidente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Natura_Incidente_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Patente_CategoriaArgs = {
  where: Sis__Patente_Categoria_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Patente_Categoria_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Posizione_Finale_Veicolo_CarreggiataArgs = {
  where: Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  where: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Posizione_Finale_Veicolo_MarginiArgs = {
  where: Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Punti_Rilievi_No_TipologiaArgs = {
  where: Sis__Punti_Rilievi_No_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Punti_Rilievi_No_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Retrovisore_EsternoArgs = {
  where: Sis__Retrovisore_Esterno_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Retrovisore_Esterno_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Ris_Consegnato_AArgs = {
  where: Sis__Ris_Consegnato_A_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Ris_Consegnato_A_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Stato_RisArgs = {
  where: Sis__Stato_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Stato_Ris_By_PkArgs = {
  text: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Stato_VeicoloArgs = {
  where: Sis__Stato_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Stato_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Tipologia_RisArgs = {
  where: Sis__Tipologia_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Tipologia_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Tipologia_VeicoloArgs = {
  where: Sis__Tipologia_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Tipologia_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Tipologia_VerbaleArgs = {
  where: Sis__Tipologia_Verbale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Tipologia_Verbale_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Frenata_TipologiaArgs = {
  where: Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Frenata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_TerminazioneArgs = {
  where: Sis__Traccia_Suolo_Terminazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_AndamentoArgs = {
  where: Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_Andamento_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_FormaArgs = {
  where: Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_Forma_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_IntensitaArgs = {
  where: Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_Intensita_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_TipologiaArgs = {
  where: Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Terminazione_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_TipologiaArgs = {
  where: Sis__Traccia_Suolo_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Traccia_Suolo_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Trasportato_PosizioneArgs = {
  where: Sis__Trasportato_Posizione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Trasportato_Posizione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Trasportato_StatoArgs = {
  where: Sis__Trasportato_Stato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Trasportato_Stato_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Uso_VeicoloArgs = {
  where: Sis__Uso_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Uso_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis__Visibilita_Limitata_TipologiaArgs = {
  where: Sis__Visibilita_Limitata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis__Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_AccertamentoArgs = {
  where: Sis_Accertamento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Accertamento_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Agente_AccertatoreArgs = {
  where: Sis_Agente_Accertatore_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Agente_Accertatore_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_AltroArgs = {
  where: Sis_Altro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  where: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Assegnazione_Unita_OperativaArgs = {
  where: Sis_Assegnazione_Unita_Operativa_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Assegnazione_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Conseguenza_VeicoloArgs = {
  where: Sis_Associazione_Conseguenza_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Conseguenza_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Decessi_TipologieArgs = {
  where: Sis_Associazione_Decessi_Tipologie_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Decessi_Tipologie_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Ente_Primo_InterventoArgs = {
  where: Sis_Associazione_Ente_Primo_Intervento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Ente_Primo_Intervento_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Ente_Secondario_IntervenutiArgs = {
  where: Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Ente_Secondario_Intervenuti_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Ente_SegnalatoreArgs = {
  where: Sis_Associazione_Ente_Segnalatore_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Ente_Segnalatore_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Impianto_SemaforicoArgs = {
  where: Sis_Associazione_Impianto_Semaforico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Impianto_Semaforico_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Informazioni_InfortunatoArgs = {
  where: Sis_Associazione_Informazioni_Infortunato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Informazioni_Infortunato_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_AltroArgs = {
  where: Sis_Associazione_Localizzazione_Altro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Condizioni_AtmosfericheArgs = {
  where: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Extra_AbitatoArgs = {
  where: Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Extra_Abitato_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Fondo_StradaleArgs = {
  where: Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Fondo_Stradale_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_IlluminazioneArgs = {
  where: Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Illuminazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Particolarita_StradaArgs = {
  where: Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Particolarita_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_PavimentazioneArgs = {
  where: Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Pavimentazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Tipo_StradaArgs = {
  where: Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Tipo_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_VisibilitaArgs = {
  where: Sis_Associazione_Localizzazione_Visibilita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Localizzazione_Visibilita_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Natura_IncidenteArgs = {
  where: Sis_Associazione_Natura_Incidente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Natura_Incidente_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_PatenteArgs = {
  where: Sis_Associazione_Patente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Patente_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Posizione_Finale_Veicolo_CarreggiataArgs = {
  where: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  where: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Posizione_Finale_Veicolo_MarginiArgs = {
  where: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Tipologia_RisArgs = {
  where: Sis_Associazione_Tipologia_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associazione_Tipologia_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associzione_Localizzazione_Condizioni_TrafficoArgs = {
  where: Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Associzione_Localizzazione_Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_ConducenteArgs = {
  where: Sis_Conducente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Conducente_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Evento_SisArgs = {
  where: Sis_Evento_Sis_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Evento_Sis_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_InfortunatoArgs = {
  where: Sis_Infortunato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Infortunato_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_InfrazioneArgs = {
  where: Sis_Infrazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Infrazione_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_LocatarioArgs = {
  where: Sis_Locatario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Locatario_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_PedoneArgs = {
  where: Sis_Pedone_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Pedone_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_ProprietarioArgs = {
  where: Sis_Proprietario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Proprietario_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Proprietario_GiuridicoArgs = {
  where: Sis_Proprietario_Giuridico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Proprietario_Giuridico_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_RisArgs = {
  where: Sis_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_TestimoneArgs = {
  where: Sis_Testimone_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Testimone_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Trasportati_VeicoloArgs = {
  where: Sis_Trasportati_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Trasportati_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_TrasportatoArgs = {
  where: Sis_Trasportato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Trasportato_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Unita_OperativaArgs = {
  where: Sis_Unita_Operativa_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_Vecchia_Unita_OperativaArgs = {
  where: Sis_Vecchia_Unita_Operativa_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Vecchia_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_VeicoloArgs = {
  where: Sis_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Sis_VerbaleArgs = {
  where: Sis_Verbale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sis_Verbale_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Assegnazione_QuartiereArgs = {
  where: Toponomastica_Assegnazione_Quartiere_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Assegnazione_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Assegnazione_ToponimoArgs = {
  where: Toponomastica_Assegnazione_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Assegnazione_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_DugArgs = {
  where: Toponomastica_Dug_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Dug_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_MunicipalitaArgs = {
  where: Toponomastica_Municipalita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Municipalita_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_QuartiereArgs = {
  where: Toponomastica_Quartiere_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_TipologiaArgs = {
  where: Toponomastica_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_ToponimoArgs = {
  where: Toponomastica_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Vecchia_MunicipalitaArgs = {
  where: Toponomastica_Vecchia_Municipalita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Vecchia_Municipalita_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Vecchio_QuartiereArgs = {
  where: Toponomastica_Vecchio_Quartiere_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Vecchio_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Vecchio_ToponimoArgs = {
  where: Toponomastica_Vecchio_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Toponomastica_Vecchio_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootGenera_ProtocolloArgs = {
  data: ProtocolloInput;
};


/** mutation root */
export type Mutation_RootInsert__CittaArgs = {
  objects: Array<_Citta_Insert_Input>;
  on_conflict?: Maybe<_Citta_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__Citta_OneArgs = {
  object: _Citta_Insert_Input;
  on_conflict?: Maybe<_Citta_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__NazioneArgs = {
  objects: Array<_Nazione_Insert_Input>;
  on_conflict?: Maybe<_Nazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__Nazione_OneArgs = {
  object: _Nazione_Insert_Input;
  on_conflict?: Maybe<_Nazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__SessoArgs = {
  objects: Array<_Sesso_Insert_Input>;
  on_conflict?: Maybe<_Sesso_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__Sesso_OneArgs = {
  object: _Sesso_Insert_Input;
  on_conflict?: Maybe<_Sesso_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__SinoaltroArgs = {
  objects: Array<_Sinoaltro_Insert_Input>;
  on_conflict?: Maybe<_Sinoaltro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__Sinoaltro_OneArgs = {
  object: _Sinoaltro_Insert_Input;
  on_conflict?: Maybe<_Sinoaltro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__TitoloArgs = {
  objects: Array<_Titolo_Insert_Input>;
  on_conflict?: Maybe<_Titolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert__Titolo_OneArgs = {
  object: _Titolo_Insert_Input;
  on_conflict?: Maybe<_Titolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Agcos_AgcosArgs = {
  objects: Array<Agcos_Agcos_Insert_Input>;
  on_conflict?: Maybe<Agcos_Agcos_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Agcos_Agcos_OneArgs = {
  object: Agcos_Agcos_Insert_Input;
  on_conflict?: Maybe<Agcos_Agcos_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Agcos_ImportArgs = {
  objects: Array<Agcos_Import_Insert_Input>;
  on_conflict?: Maybe<Agcos_Import_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Agcos_Import_OneArgs = {
  object: Agcos_Import_Insert_Input;
  on_conflict?: Maybe<Agcos_Import_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Allegato_DiarioArgs = {
  objects: Scalars['json'];
};


/** mutation root */
export type Mutation_RootInsert_Gis__Specifica_Posizionamento_ToponimoArgs = {
  objects: Array<Gis__Specifica_Posizionamento_Toponimo_Insert_Input>;
  on_conflict?: Maybe<Gis__Specifica_Posizionamento_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis__Specifica_Posizionamento_Toponimo_OneArgs = {
  object: Gis__Specifica_Posizionamento_Toponimo_Insert_Input;
  on_conflict?: Maybe<Gis__Specifica_Posizionamento_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis__Tipologia_Posizionamento_ToponimoArgs = {
  objects: Array<Gis__Tipologia_Posizionamento_Toponimo_Insert_Input>;
  on_conflict?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis__Tipologia_Posizionamento_Toponimo_OneArgs = {
  object: Gis__Tipologia_Posizionamento_Toponimo_Insert_Input;
  on_conflict?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_CivicoArgs = {
  objects: Array<Gis_Civico_Insert_Input>;
  on_conflict?: Maybe<Gis_Civico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_Civico_OneArgs = {
  object: Gis_Civico_Insert_Input;
  on_conflict?: Maybe<Gis_Civico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_Connessione_GrafoArgs = {
  objects: Array<Gis_Connessione_Grafo_Insert_Input>;
  on_conflict?: Maybe<Gis_Connessione_Grafo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_Connessione_Grafo_OneArgs = {
  object: Gis_Connessione_Grafo_Insert_Input;
  on_conflict?: Maybe<Gis_Connessione_Grafo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_Posizionamento_ToponimoArgs = {
  objects: Array<Gis_Posizionamento_Toponimo_Insert_Input>;
  on_conflict?: Maybe<Gis_Posizionamento_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_Posizionamento_Toponimo_OneArgs = {
  object: Gis_Posizionamento_Toponimo_Insert_Input;
  on_conflict?: Maybe<Gis_Posizionamento_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_Sostegno_IpiArgs = {
  objects: Array<Gis_Sostegno_Ipi_Insert_Input>;
  on_conflict?: Maybe<Gis_Sostegno_Ipi_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Gis_Sostegno_Ipi_OneArgs = {
  object: Gis_Sostegno_Ipi_Insert_Input;
  on_conflict?: Maybe<Gis_Sostegno_Ipi_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Condizioni_TrafficoArgs = {
  objects: Array<Pis__Condizioni_Traffico_Insert_Input>;
  on_conflict?: Maybe<Pis__Condizioni_Traffico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Condizioni_Traffico_OneArgs = {
  object: Pis__Condizioni_Traffico_Insert_Input;
  on_conflict?: Maybe<Pis__Condizioni_Traffico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Forma_DissestoArgs = {
  objects: Array<Pis__Forma_Dissesto_Insert_Input>;
  on_conflict?: Maybe<Pis__Forma_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Forma_Dissesto_OneArgs = {
  object: Pis__Forma_Dissesto_Insert_Input;
  on_conflict?: Maybe<Pis__Forma_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Giorni_TrascorsiArgs = {
  objects: Array<Pis__Giorni_Trascorsi_Insert_Input>;
  on_conflict?: Maybe<Pis__Giorni_Trascorsi_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Giorni_Trascorsi_OneArgs = {
  object: Pis__Giorni_Trascorsi_Insert_Input;
  on_conflict?: Maybe<Pis__Giorni_Trascorsi_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__MaterialeArgs = {
  objects: Array<Pis__Materiale_Insert_Input>;
  on_conflict?: Maybe<Pis__Materiale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Materiale_OneArgs = {
  object: Pis__Materiale_Insert_Input;
  on_conflict?: Maybe<Pis__Materiale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__PrioritaArgs = {
  objects: Array<Pis__Priorita_Insert_Input>;
  on_conflict?: Maybe<Pis__Priorita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Priorita_OneArgs = {
  object: Pis__Priorita_Insert_Input;
  on_conflict?: Maybe<Pis__Priorita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Stato_SegnalazioneArgs = {
  objects: Array<Pis__Stato_Segnalazione_Insert_Input>;
  on_conflict?: Maybe<Pis__Stato_Segnalazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Stato_Segnalazione_OneArgs = {
  object: Pis__Stato_Segnalazione_Insert_Input;
  on_conflict?: Maybe<Pis__Stato_Segnalazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Tipologia_DissestoArgs = {
  objects: Array<Pis__Tipologia_Dissesto_Insert_Input>;
  on_conflict?: Maybe<Pis__Tipologia_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis__Tipologia_Dissesto_OneArgs = {
  object: Pis__Tipologia_Dissesto_Insert_Input;
  on_conflict?: Maybe<Pis__Tipologia_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Assegnazione_SquadraArgs = {
  objects: Array<Pis_Assegnazione_Squadra_Insert_Input>;
  on_conflict?: Maybe<Pis_Assegnazione_Squadra_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Assegnazione_Squadra_OneArgs = {
  object: Pis_Assegnazione_Squadra_Insert_Input;
  on_conflict?: Maybe<Pis_Assegnazione_Squadra_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Attrezzature_ImpiegateArgs = {
  objects: Array<Pis_Attrezzature_Impiegate_Insert_Input>;
  on_conflict?: Maybe<Pis_Attrezzature_Impiegate_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Attrezzature_Impiegate_OneArgs = {
  object: Pis_Attrezzature_Impiegate_Insert_Input;
  on_conflict?: Maybe<Pis_Attrezzature_Impiegate_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_DiarioArgs = {
  objects: Array<Pis_Diario_Insert_Input>;
  on_conflict?: Maybe<Pis_Diario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Diario_OneArgs = {
  object: Pis_Diario_Insert_Input;
  on_conflict?: Maybe<Pis_Diario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_DissestoArgs = {
  objects: Array<Pis_Dissesto_Insert_Input>;
  on_conflict?: Maybe<Pis_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Dissesto_OneArgs = {
  object: Pis_Dissesto_Insert_Input;
  on_conflict?: Maybe<Pis_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_EventoArgs = {
  objects: Array<Pis_Evento_Insert_Input>;
  on_conflict?: Maybe<Pis_Evento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Evento_OneArgs = {
  object: Pis_Evento_Insert_Input;
  on_conflict?: Maybe<Pis_Evento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_InterventoArgs = {
  objects: Array<Pis_Intervento_Insert_Input>;
  on_conflict?: Maybe<Pis_Intervento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Intervento_OneArgs = {
  object: Pis_Intervento_Insert_Input;
  on_conflict?: Maybe<Pis_Intervento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Intervento_StraordinarioArgs = {
  objects: Array<Pis_Intervento_Straordinario_Insert_Input>;
  on_conflict?: Maybe<Pis_Intervento_Straordinario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Intervento_Straordinario_OneArgs = {
  object: Pis_Intervento_Straordinario_Insert_Input;
  on_conflict?: Maybe<Pis_Intervento_Straordinario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Materiale_DissestoArgs = {
  objects: Array<Pis_Materiale_Dissesto_Insert_Input>;
  on_conflict?: Maybe<Pis_Materiale_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Materiale_Dissesto_OneArgs = {
  object: Pis_Materiale_Dissesto_Insert_Input;
  on_conflict?: Maybe<Pis_Materiale_Dissesto_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_SegnalazioneArgs = {
  objects: Array<Pis_Segnalazione_Insert_Input>;
  on_conflict?: Maybe<Pis_Segnalazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Segnalazione_CollegataArgs = {
  objects: Array<Pis_Segnalazione_Collegata_Insert_Input>;
  on_conflict?: Maybe<Pis_Segnalazione_Collegata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Segnalazione_Collegata_OneArgs = {
  object: Pis_Segnalazione_Collegata_Insert_Input;
  on_conflict?: Maybe<Pis_Segnalazione_Collegata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Segnalazione_OneArgs = {
  object: Pis_Segnalazione_Insert_Input;
  on_conflict?: Maybe<Pis_Segnalazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Segnaletica_LasciataArgs = {
  objects: Array<Pis_Segnaletica_Lasciata_Insert_Input>;
  on_conflict?: Maybe<Pis_Segnaletica_Lasciata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Segnaletica_Lasciata_OneArgs = {
  object: Pis_Segnaletica_Lasciata_Insert_Input;
  on_conflict?: Maybe<Pis_Segnaletica_Lasciata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_SquadraArgs = {
  objects: Array<Pis_Squadra_Insert_Input>;
  on_conflict?: Maybe<Pis_Squadra_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Squadra_OneArgs = {
  object: Pis_Squadra_Insert_Input;
  on_conflict?: Maybe<Pis_Squadra_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Tecnico_ReferenteArgs = {
  objects: Array<Pis_Tecnico_Referente_Insert_Input>;
  on_conflict?: Maybe<Pis_Tecnico_Referente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Tecnico_Referente_OneArgs = {
  object: Pis_Tecnico_Referente_Insert_Input;
  on_conflict?: Maybe<Pis_Tecnico_Referente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Vecchia_SquadraArgs = {
  objects: Array<Pis_Vecchia_Squadra_Insert_Input>;
  on_conflict?: Maybe<Pis_Vecchia_Squadra_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Vecchia_Squadra_OneArgs = {
  object: Pis_Vecchia_Squadra_Insert_Input;
  on_conflict?: Maybe<Pis_Vecchia_Squadra_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Veicoli_ImpiegatiArgs = {
  objects: Array<Pis_Veicoli_Impiegati_Insert_Input>;
  on_conflict?: Maybe<Pis_Veicoli_Impiegati_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Pis_Veicoli_Impiegati_OneArgs = {
  object: Pis_Veicoli_Impiegati_Insert_Input;
  on_conflict?: Maybe<Pis_Veicoli_Impiegati_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo__Sezione_ProtocolloArgs = {
  objects: Array<Protocollo__Sezione_Protocollo_Insert_Input>;
  on_conflict?: Maybe<Protocollo__Sezione_Protocollo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo__Sezione_Protocollo_OneArgs = {
  object: Protocollo__Sezione_Protocollo_Insert_Input;
  on_conflict?: Maybe<Protocollo__Sezione_Protocollo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo_ProtocolloArgs = {
  objects: Array<Protocollo_Protocollo_Insert_Input>;
  on_conflict?: Maybe<Protocollo_Protocollo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo_Protocollo_DestinatarioArgs = {
  objects: Array<Protocollo_Protocollo_Destinatario_Insert_Input>;
  on_conflict?: Maybe<Protocollo_Protocollo_Destinatario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo_Protocollo_Destinatario_EsternoArgs = {
  objects: Array<Protocollo_Protocollo_Destinatario_Esterno_Insert_Input>;
  on_conflict?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo_Protocollo_Destinatario_Esterno_OneArgs = {
  object: Protocollo_Protocollo_Destinatario_Esterno_Insert_Input;
  on_conflict?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo_Protocollo_Destinatario_OneArgs = {
  object: Protocollo_Protocollo_Destinatario_Insert_Input;
  on_conflict?: Maybe<Protocollo_Protocollo_Destinatario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Protocollo_Protocollo_OneArgs = {
  object: Protocollo_Protocollo_Insert_Input;
  on_conflict?: Maybe<Protocollo_Protocollo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Alimentazione_VeicoloArgs = {
  objects: Array<Sis__Alimentazione_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis__Alimentazione_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Alimentazione_Veicolo_OneArgs = {
  object: Sis__Alimentazione_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis__Alimentazione_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  objects: Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_OneArgs = {
  object: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Conseguenza_VeicoloArgs = {
  objects: Array<Sis__Conseguenza_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis__Conseguenza_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Conseguenza_Veicolo_OneArgs = {
  object: Sis__Conseguenza_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis__Conseguenza_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Decessi_TipologiaArgs = {
  objects: Array<Sis__Decessi_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis__Decessi_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Decessi_Tipologia_OneArgs = {
  object: Sis__Decessi_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis__Decessi_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Destinazione_DecisioneArgs = {
  objects: Array<Sis__Destinazione_Decisione_Insert_Input>;
  on_conflict?: Maybe<Sis__Destinazione_Decisione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Destinazione_Decisione_OneArgs = {
  object: Sis__Destinazione_Decisione_Insert_Input;
  on_conflict?: Maybe<Sis__Destinazione_Decisione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__EnteArgs = {
  objects: Array<Sis__Ente_Insert_Input>;
  on_conflict?: Maybe<Sis__Ente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Ente_OneArgs = {
  object: Sis__Ente_Insert_Input;
  on_conflict?: Maybe<Sis__Ente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Ente_SecondarioArgs = {
  objects: Array<Sis__Ente_Secondario_Insert_Input>;
  on_conflict?: Maybe<Sis__Ente_Secondario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Ente_Secondario_OneArgs = {
  object: Sis__Ente_Secondario_Insert_Input;
  on_conflict?: Maybe<Sis__Ente_Secondario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Impianto_SemaforicoArgs = {
  objects: Array<Sis__Impianto_Semaforico_Insert_Input>;
  on_conflict?: Maybe<Sis__Impianto_Semaforico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Impianto_Semaforico_OneArgs = {
  object: Sis__Impianto_Semaforico_Insert_Input;
  on_conflict?: Maybe<Sis__Impianto_Semaforico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Infortunato_InformazioneArgs = {
  objects: Array<Sis__Infortunato_Informazione_Insert_Input>;
  on_conflict?: Maybe<Sis__Infortunato_Informazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Infortunato_Informazione_OneArgs = {
  object: Sis__Infortunato_Informazione_Insert_Input;
  on_conflict?: Maybe<Sis__Infortunato_Informazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Intortunato_TasportatoArgs = {
  objects: Array<Sis__Intortunato_Tasportato_Insert_Input>;
  on_conflict?: Maybe<Sis__Intortunato_Tasportato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Intortunato_Tasportato_OneArgs = {
  object: Sis__Intortunato_Tasportato_Insert_Input;
  on_conflict?: Maybe<Sis__Intortunato_Tasportato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_AltroArgs = {
  objects: Array<Sis__Localizzazione_Altro_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Altro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Altro_OneArgs = {
  object: Sis__Localizzazione_Altro_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Altro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Condizioni_AtmosfericheArgs = {
  objects: Array<Sis__Localizzazione_Condizioni_Atmosferiche_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Condizioni_Atmosferiche_OneArgs = {
  object: Sis__Localizzazione_Condizioni_Atmosferiche_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Condizioni_TrafficoArgs = {
  objects: Array<Sis__Localizzazione_Condizioni_Traffico_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Condizioni_Traffico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Condizioni_Traffico_OneArgs = {
  object: Sis__Localizzazione_Condizioni_Traffico_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Condizioni_Traffico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Extra_AbitatoArgs = {
  objects: Array<Sis__Localizzazione_Extra_Abitato_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Extra_Abitato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Extra_Abitato_OneArgs = {
  object: Sis__Localizzazione_Extra_Abitato_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Extra_Abitato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Fondo_StradaleArgs = {
  objects: Array<Sis__Localizzazione_Fondo_Stradale_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Fondo_Stradale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Fondo_Stradale_OneArgs = {
  object: Sis__Localizzazione_Fondo_Stradale_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Fondo_Stradale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_IlluminazioneArgs = {
  objects: Array<Sis__Localizzazione_Illuminazione_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Illuminazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Illuminazione_OneArgs = {
  object: Sis__Localizzazione_Illuminazione_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Illuminazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Particolarita_StradaArgs = {
  objects: Array<Sis__Localizzazione_Particolarita_Strada_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Particolarita_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Particolarita_Strada_OneArgs = {
  object: Sis__Localizzazione_Particolarita_Strada_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Particolarita_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_PavimentazioneArgs = {
  objects: Array<Sis__Localizzazione_Pavimentazione_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Pavimentazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Pavimentazione_OneArgs = {
  object: Sis__Localizzazione_Pavimentazione_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Pavimentazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Tipo_StradaArgs = {
  objects: Array<Sis__Localizzazione_Tipo_Strada_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Tipo_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Tipo_Strada_OneArgs = {
  object: Sis__Localizzazione_Tipo_Strada_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Tipo_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_VisibilitaArgs = {
  objects: Array<Sis__Localizzazione_Visibilita_Insert_Input>;
  on_conflict?: Maybe<Sis__Localizzazione_Visibilita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Localizzazione_Visibilita_OneArgs = {
  object: Sis__Localizzazione_Visibilita_Insert_Input;
  on_conflict?: Maybe<Sis__Localizzazione_Visibilita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Natura_IncidenteArgs = {
  objects: Array<Sis__Natura_Incidente_Insert_Input>;
  on_conflict?: Maybe<Sis__Natura_Incidente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Natura_Incidente_OneArgs = {
  object: Sis__Natura_Incidente_Insert_Input;
  on_conflict?: Maybe<Sis__Natura_Incidente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Patente_CategoriaArgs = {
  objects: Array<Sis__Patente_Categoria_Insert_Input>;
  on_conflict?: Maybe<Sis__Patente_Categoria_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Patente_Categoria_OneArgs = {
  object: Sis__Patente_Categoria_Insert_Input;
  on_conflict?: Maybe<Sis__Patente_Categoria_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Posizione_Finale_Veicolo_CarreggiataArgs = {
  objects: Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Insert_Input>;
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Posizione_Finale_Veicolo_Carreggiata_OneArgs = {
  object: Sis__Posizione_Finale_Veicolo_Carreggiata_Insert_Input;
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  objects: Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input>;
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Posizione_Finale_Veicolo_Fuori_Sede_OneArgs = {
  object: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input;
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Posizione_Finale_Veicolo_MarginiArgs = {
  objects: Array<Sis__Posizione_Finale_Veicolo_Margini_Insert_Input>;
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Posizione_Finale_Veicolo_Margini_OneArgs = {
  object: Sis__Posizione_Finale_Veicolo_Margini_Insert_Input;
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Punti_Rilievi_No_TipologiaArgs = {
  objects: Array<Sis__Punti_Rilievi_No_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis__Punti_Rilievi_No_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Punti_Rilievi_No_Tipologia_OneArgs = {
  object: Sis__Punti_Rilievi_No_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis__Punti_Rilievi_No_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Retrovisore_EsternoArgs = {
  objects: Array<Sis__Retrovisore_Esterno_Insert_Input>;
  on_conflict?: Maybe<Sis__Retrovisore_Esterno_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Retrovisore_Esterno_OneArgs = {
  object: Sis__Retrovisore_Esterno_Insert_Input;
  on_conflict?: Maybe<Sis__Retrovisore_Esterno_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Ris_Consegnato_AArgs = {
  objects: Array<Sis__Ris_Consegnato_A_Insert_Input>;
  on_conflict?: Maybe<Sis__Ris_Consegnato_A_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Ris_Consegnato_A_OneArgs = {
  object: Sis__Ris_Consegnato_A_Insert_Input;
  on_conflict?: Maybe<Sis__Ris_Consegnato_A_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Stato_RisArgs = {
  objects: Array<Sis__Stato_Ris_Insert_Input>;
  on_conflict?: Maybe<Sis__Stato_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Stato_Ris_OneArgs = {
  object: Sis__Stato_Ris_Insert_Input;
  on_conflict?: Maybe<Sis__Stato_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Stato_VeicoloArgs = {
  objects: Array<Sis__Stato_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis__Stato_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Stato_Veicolo_OneArgs = {
  object: Sis__Stato_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis__Stato_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Tipologia_RisArgs = {
  objects: Array<Sis__Tipologia_Ris_Insert_Input>;
  on_conflict?: Maybe<Sis__Tipologia_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Tipologia_Ris_OneArgs = {
  object: Sis__Tipologia_Ris_Insert_Input;
  on_conflict?: Maybe<Sis__Tipologia_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Tipologia_VeicoloArgs = {
  objects: Array<Sis__Tipologia_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis__Tipologia_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Tipologia_Veicolo_OneArgs = {
  object: Sis__Tipologia_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis__Tipologia_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Tipologia_VerbaleArgs = {
  objects: Array<Sis__Tipologia_Verbale_Insert_Input>;
  on_conflict?: Maybe<Sis__Tipologia_Verbale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Tipologia_Verbale_OneArgs = {
  object: Sis__Tipologia_Verbale_Insert_Input;
  on_conflict?: Maybe<Sis__Tipologia_Verbale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Frenata_TipologiaArgs = {
  objects: Array<Sis__Traccia_Suolo_Frenata_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Frenata_Tipologia_OneArgs = {
  object: Sis__Traccia_Suolo_Frenata_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_TerminazioneArgs = {
  objects: Array<Sis__Traccia_Suolo_Terminazione_Insert_Input>;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_AndamentoArgs = {
  objects: Array<Sis__Traccia_Suolo_Terminazione_Andamento_Insert_Input>;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_Andamento_OneArgs = {
  object: Sis__Traccia_Suolo_Terminazione_Andamento_Insert_Input;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_FormaArgs = {
  objects: Array<Sis__Traccia_Suolo_Terminazione_Forma_Insert_Input>;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_Forma_OneArgs = {
  object: Sis__Traccia_Suolo_Terminazione_Forma_Insert_Input;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_IntensitaArgs = {
  objects: Array<Sis__Traccia_Suolo_Terminazione_Intensita_Insert_Input>;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_Intensita_OneArgs = {
  object: Sis__Traccia_Suolo_Terminazione_Intensita_Insert_Input;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_OneArgs = {
  object: Sis__Traccia_Suolo_Terminazione_Insert_Input;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_TipologiaArgs = {
  objects: Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Terminazione_Tipologia_OneArgs = {
  object: Sis__Traccia_Suolo_Terminazione_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_TipologiaArgs = {
  objects: Array<Sis__Traccia_Suolo_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Traccia_Suolo_Tipologia_OneArgs = {
  object: Sis__Traccia_Suolo_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis__Traccia_Suolo_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Trasportato_PosizioneArgs = {
  objects: Array<Sis__Trasportato_Posizione_Insert_Input>;
  on_conflict?: Maybe<Sis__Trasportato_Posizione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Trasportato_Posizione_OneArgs = {
  object: Sis__Trasportato_Posizione_Insert_Input;
  on_conflict?: Maybe<Sis__Trasportato_Posizione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Trasportato_StatoArgs = {
  objects: Array<Sis__Trasportato_Stato_Insert_Input>;
  on_conflict?: Maybe<Sis__Trasportato_Stato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Trasportato_Stato_OneArgs = {
  object: Sis__Trasportato_Stato_Insert_Input;
  on_conflict?: Maybe<Sis__Trasportato_Stato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Uso_VeicoloArgs = {
  objects: Array<Sis__Uso_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis__Uso_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Uso_Veicolo_OneArgs = {
  object: Sis__Uso_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis__Uso_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Visibilita_Limitata_TipologiaArgs = {
  objects: Array<Sis__Visibilita_Limitata_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis__Visibilita_Limitata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis__Visibilita_Limitata_Tipologia_OneArgs = {
  object: Sis__Visibilita_Limitata_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis__Visibilita_Limitata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_AccertamentoArgs = {
  objects: Array<Sis_Accertamento_Insert_Input>;
  on_conflict?: Maybe<Sis_Accertamento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Accertamento_OneArgs = {
  object: Sis_Accertamento_Insert_Input;
  on_conflict?: Maybe<Sis_Accertamento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Agente_AccertatoreArgs = {
  objects: Array<Sis_Agente_Accertatore_Insert_Input>;
  on_conflict?: Maybe<Sis_Agente_Accertatore_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Agente_Accertatore_OneArgs = {
  object: Sis_Agente_Accertatore_Insert_Input;
  on_conflict?: Maybe<Sis_Agente_Accertatore_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_AltroArgs = {
  objects: Array<Sis_Altro_Insert_Input>;
  on_conflict?: Maybe<Sis_Altro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Altro_OneArgs = {
  object: Sis_Altro_Insert_Input;
  on_conflict?: Maybe<Sis_Altro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  objects: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_OneArgs = {
  object: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input;
  on_conflict?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Assegnazione_Unita_OperativaArgs = {
  objects: Array<Sis_Assegnazione_Unita_Operativa_Insert_Input>;
  on_conflict?: Maybe<Sis_Assegnazione_Unita_Operativa_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Assegnazione_Unita_Operativa_OneArgs = {
  object: Sis_Assegnazione_Unita_Operativa_Insert_Input;
  on_conflict?: Maybe<Sis_Assegnazione_Unita_Operativa_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Conseguenza_VeicoloArgs = {
  objects: Array<Sis_Associazione_Conseguenza_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Conseguenza_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Conseguenza_Veicolo_OneArgs = {
  object: Sis_Associazione_Conseguenza_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Conseguenza_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Decessi_TipologieArgs = {
  objects: Array<Sis_Associazione_Decessi_Tipologie_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Decessi_Tipologie_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Decessi_Tipologie_OneArgs = {
  object: Sis_Associazione_Decessi_Tipologie_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Decessi_Tipologie_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Ente_Primo_InterventoArgs = {
  objects: Array<Sis_Associazione_Ente_Primo_Intervento_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Ente_Primo_Intervento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Ente_Primo_Intervento_OneArgs = {
  object: Sis_Associazione_Ente_Primo_Intervento_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Ente_Primo_Intervento_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Ente_Secondario_IntervenutiArgs = {
  objects: Array<Sis_Associazione_Ente_Secondario_Intervenuti_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Ente_Secondario_Intervenuti_OneArgs = {
  object: Sis_Associazione_Ente_Secondario_Intervenuti_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Ente_SegnalatoreArgs = {
  objects: Array<Sis_Associazione_Ente_Segnalatore_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Ente_Segnalatore_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Ente_Segnalatore_OneArgs = {
  object: Sis_Associazione_Ente_Segnalatore_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Ente_Segnalatore_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Impianto_SemaforicoArgs = {
  objects: Array<Sis_Associazione_Impianto_Semaforico_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Impianto_Semaforico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Impianto_Semaforico_OneArgs = {
  object: Sis_Associazione_Impianto_Semaforico_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Impianto_Semaforico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Informazioni_InfortunatoArgs = {
  objects: Array<Sis_Associazione_Informazioni_Infortunato_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Informazioni_Infortunato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Informazioni_Infortunato_OneArgs = {
  object: Sis_Associazione_Informazioni_Infortunato_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Informazioni_Infortunato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_AltroArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Altro_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Altro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Altro_OneArgs = {
  object: Sis_Associazione_Localizzazione_Altro_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Altro_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Condizioni_AtmosfericheArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_OneArgs = {
  object: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Extra_AbitatoArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Extra_Abitato_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Extra_Abitato_OneArgs = {
  object: Sis_Associazione_Localizzazione_Extra_Abitato_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Fondo_StradaleArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Fondo_Stradale_OneArgs = {
  object: Sis_Associazione_Localizzazione_Fondo_Stradale_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_IlluminazioneArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Illuminazione_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Illuminazione_OneArgs = {
  object: Sis_Associazione_Localizzazione_Illuminazione_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Particolarita_StradaArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Particolarita_Strada_OneArgs = {
  object: Sis_Associazione_Localizzazione_Particolarita_Strada_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_PavimentazioneArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Pavimentazione_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Pavimentazione_OneArgs = {
  object: Sis_Associazione_Localizzazione_Pavimentazione_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Tipo_StradaArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Tipo_Strada_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Tipo_Strada_OneArgs = {
  object: Sis_Associazione_Localizzazione_Tipo_Strada_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_VisibilitaArgs = {
  objects: Array<Sis_Associazione_Localizzazione_Visibilita_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Visibilita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Localizzazione_Visibilita_OneArgs = {
  object: Sis_Associazione_Localizzazione_Visibilita_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Visibilita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Natura_IncidenteArgs = {
  objects: Array<Sis_Associazione_Natura_Incidente_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Natura_Incidente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Natura_Incidente_OneArgs = {
  object: Sis_Associazione_Natura_Incidente_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Natura_Incidente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_PatenteArgs = {
  objects: Array<Sis_Associazione_Patente_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Patente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Patente_OneArgs = {
  object: Sis_Associazione_Patente_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Patente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Posizione_Finale_Veicolo_CarreggiataArgs = {
  objects: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_OneArgs = {
  object: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  objects: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_OneArgs = {
  object: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Posizione_Finale_Veicolo_MarginiArgs = {
  objects: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Posizione_Finale_Veicolo_Margini_OneArgs = {
  object: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Tipologia_RisArgs = {
  objects: Array<Sis_Associazione_Tipologia_Ris_Insert_Input>;
  on_conflict?: Maybe<Sis_Associazione_Tipologia_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associazione_Tipologia_Ris_OneArgs = {
  object: Sis_Associazione_Tipologia_Ris_Insert_Input;
  on_conflict?: Maybe<Sis_Associazione_Tipologia_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associzione_Localizzazione_Condizioni_TrafficoArgs = {
  objects: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Insert_Input>;
  on_conflict?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Associzione_Localizzazione_Condizioni_Traffico_OneArgs = {
  object: Sis_Associzione_Localizzazione_Condizioni_Traffico_Insert_Input;
  on_conflict?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_ConducenteArgs = {
  objects: Array<Sis_Conducente_Insert_Input>;
  on_conflict?: Maybe<Sis_Conducente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Conducente_OneArgs = {
  object: Sis_Conducente_Insert_Input;
  on_conflict?: Maybe<Sis_Conducente_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Evento_SisArgs = {
  objects: Array<Sis_Evento_Sis_Insert_Input>;
  on_conflict?: Maybe<Sis_Evento_Sis_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Evento_Sis_OneArgs = {
  object: Sis_Evento_Sis_Insert_Input;
  on_conflict?: Maybe<Sis_Evento_Sis_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_InfortunatoArgs = {
  objects: Array<Sis_Infortunato_Insert_Input>;
  on_conflict?: Maybe<Sis_Infortunato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Infortunato_OneArgs = {
  object: Sis_Infortunato_Insert_Input;
  on_conflict?: Maybe<Sis_Infortunato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_InfrazioneArgs = {
  objects: Array<Sis_Infrazione_Insert_Input>;
  on_conflict?: Maybe<Sis_Infrazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Infrazione_OneArgs = {
  object: Sis_Infrazione_Insert_Input;
  on_conflict?: Maybe<Sis_Infrazione_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_LocatarioArgs = {
  objects: Array<Sis_Locatario_Insert_Input>;
  on_conflict?: Maybe<Sis_Locatario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Locatario_OneArgs = {
  object: Sis_Locatario_Insert_Input;
  on_conflict?: Maybe<Sis_Locatario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_PedoneArgs = {
  objects: Array<Sis_Pedone_Insert_Input>;
  on_conflict?: Maybe<Sis_Pedone_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Pedone_OneArgs = {
  object: Sis_Pedone_Insert_Input;
  on_conflict?: Maybe<Sis_Pedone_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_ProprietarioArgs = {
  objects: Array<Sis_Proprietario_Insert_Input>;
  on_conflict?: Maybe<Sis_Proprietario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Proprietario_GiuridicoArgs = {
  objects: Array<Sis_Proprietario_Giuridico_Insert_Input>;
  on_conflict?: Maybe<Sis_Proprietario_Giuridico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Proprietario_Giuridico_OneArgs = {
  object: Sis_Proprietario_Giuridico_Insert_Input;
  on_conflict?: Maybe<Sis_Proprietario_Giuridico_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Proprietario_OneArgs = {
  object: Sis_Proprietario_Insert_Input;
  on_conflict?: Maybe<Sis_Proprietario_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_RisArgs = {
  objects: Array<Sis_Ris_Insert_Input>;
  on_conflict?: Maybe<Sis_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Ris_OneArgs = {
  object: Sis_Ris_Insert_Input;
  on_conflict?: Maybe<Sis_Ris_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_TestimoneArgs = {
  objects: Array<Sis_Testimone_Insert_Input>;
  on_conflict?: Maybe<Sis_Testimone_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Testimone_OneArgs = {
  object: Sis_Testimone_Insert_Input;
  on_conflict?: Maybe<Sis_Testimone_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Trasportati_VeicoloArgs = {
  objects: Array<Sis_Trasportati_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis_Trasportati_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Trasportati_Veicolo_OneArgs = {
  object: Sis_Trasportati_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis_Trasportati_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_TrasportatoArgs = {
  objects: Array<Sis_Trasportato_Insert_Input>;
  on_conflict?: Maybe<Sis_Trasportato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Trasportato_OneArgs = {
  object: Sis_Trasportato_Insert_Input;
  on_conflict?: Maybe<Sis_Trasportato_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Unita_OperativaArgs = {
  objects: Array<Sis_Unita_Operativa_Insert_Input>;
  on_conflict?: Maybe<Sis_Unita_Operativa_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Unita_Operativa_OneArgs = {
  object: Sis_Unita_Operativa_Insert_Input;
  on_conflict?: Maybe<Sis_Unita_Operativa_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Vecchia_Unita_OperativaArgs = {
  objects: Array<Sis_Vecchia_Unita_Operativa_Insert_Input>;
  on_conflict?: Maybe<Sis_Vecchia_Unita_Operativa_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Vecchia_Unita_Operativa_OneArgs = {
  object: Sis_Vecchia_Unita_Operativa_Insert_Input;
  on_conflict?: Maybe<Sis_Vecchia_Unita_Operativa_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_VeicoloArgs = {
  objects: Array<Sis_Veicolo_Insert_Input>;
  on_conflict?: Maybe<Sis_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Veicolo_OneArgs = {
  object: Sis_Veicolo_Insert_Input;
  on_conflict?: Maybe<Sis_Veicolo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_VerbaleArgs = {
  objects: Array<Sis_Verbale_Insert_Input>;
  on_conflict?: Maybe<Sis_Verbale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sis_Verbale_OneArgs = {
  object: Sis_Verbale_Insert_Input;
  on_conflict?: Maybe<Sis_Verbale_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Assegnazione_QuartiereArgs = {
  objects: Array<Toponomastica_Assegnazione_Quartiere_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Assegnazione_Quartiere_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Assegnazione_Quartiere_OneArgs = {
  object: Toponomastica_Assegnazione_Quartiere_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Assegnazione_Quartiere_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Assegnazione_ToponimoArgs = {
  objects: Array<Toponomastica_Assegnazione_Toponimo_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Assegnazione_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Assegnazione_Toponimo_OneArgs = {
  object: Toponomastica_Assegnazione_Toponimo_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Assegnazione_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_DugArgs = {
  objects: Array<Toponomastica_Dug_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Dug_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Dug_OneArgs = {
  object: Toponomastica_Dug_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Dug_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_MunicipalitaArgs = {
  objects: Array<Toponomastica_Municipalita_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Municipalita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Municipalita_OneArgs = {
  object: Toponomastica_Municipalita_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Municipalita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_QuartiereArgs = {
  objects: Array<Toponomastica_Quartiere_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Quartiere_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Quartiere_OneArgs = {
  object: Toponomastica_Quartiere_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Quartiere_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_TipologiaArgs = {
  objects: Array<Toponomastica_Tipologia_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Tipologia_OneArgs = {
  object: Toponomastica_Tipologia_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Tipologia_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_ToponimoArgs = {
  objects: Array<Toponomastica_Toponimo_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Toponimo_OneArgs = {
  object: Toponomastica_Toponimo_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Vecchia_MunicipalitaArgs = {
  objects: Array<Toponomastica_Vecchia_Municipalita_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Vecchia_Municipalita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Vecchia_Municipalita_OneArgs = {
  object: Toponomastica_Vecchia_Municipalita_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Vecchia_Municipalita_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Vecchio_QuartiereArgs = {
  objects: Array<Toponomastica_Vecchio_Quartiere_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Vecchio_Quartiere_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Vecchio_Quartiere_OneArgs = {
  object: Toponomastica_Vecchio_Quartiere_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Vecchio_Quartiere_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Vecchio_ToponimoArgs = {
  objects: Array<Toponomastica_Vecchio_Toponimo_Insert_Input>;
  on_conflict?: Maybe<Toponomastica_Vecchio_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Toponomastica_Vecchio_Toponimo_OneArgs = {
  object: Toponomastica_Vecchio_Toponimo_Insert_Input;
  on_conflict?: Maybe<Toponomastica_Vecchio_Toponimo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootUpdate__CittaArgs = {
  _inc?: Maybe<_Citta_Inc_Input>;
  _set?: Maybe<_Citta_Set_Input>;
  where: _Citta_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate__Citta_By_PkArgs = {
  _inc?: Maybe<_Citta_Inc_Input>;
  _set?: Maybe<_Citta_Set_Input>;
  pk_columns: _Citta_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate__NazioneArgs = {
  _inc?: Maybe<_Nazione_Inc_Input>;
  _set?: Maybe<_Nazione_Set_Input>;
  where: _Nazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate__Nazione_By_PkArgs = {
  _inc?: Maybe<_Nazione_Inc_Input>;
  _set?: Maybe<_Nazione_Set_Input>;
  pk_columns: _Nazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate__SessoArgs = {
  _inc?: Maybe<_Sesso_Inc_Input>;
  _set?: Maybe<_Sesso_Set_Input>;
  where: _Sesso_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate__Sesso_By_PkArgs = {
  _inc?: Maybe<_Sesso_Inc_Input>;
  _set?: Maybe<_Sesso_Set_Input>;
  pk_columns: _Sesso_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate__SinoaltroArgs = {
  _inc?: Maybe<_Sinoaltro_Inc_Input>;
  _set?: Maybe<_Sinoaltro_Set_Input>;
  where: _Sinoaltro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate__Sinoaltro_By_PkArgs = {
  _inc?: Maybe<_Sinoaltro_Inc_Input>;
  _set?: Maybe<_Sinoaltro_Set_Input>;
  pk_columns: _Sinoaltro_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate__TitoloArgs = {
  _inc?: Maybe<_Titolo_Inc_Input>;
  _set?: Maybe<_Titolo_Set_Input>;
  where: _Titolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate__Titolo_By_PkArgs = {
  _inc?: Maybe<_Titolo_Inc_Input>;
  _set?: Maybe<_Titolo_Set_Input>;
  pk_columns: _Titolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Agcos_AgcosArgs = {
  _inc?: Maybe<Agcos_Agcos_Inc_Input>;
  _set?: Maybe<Agcos_Agcos_Set_Input>;
  where: Agcos_Agcos_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Agcos_Agcos_By_PkArgs = {
  _inc?: Maybe<Agcos_Agcos_Inc_Input>;
  _set?: Maybe<Agcos_Agcos_Set_Input>;
  pk_columns: Agcos_Agcos_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Agcos_ImportArgs = {
  _set?: Maybe<Agcos_Import_Set_Input>;
  where: Agcos_Import_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Agcos_Import_By_PkArgs = {
  _set?: Maybe<Agcos_Import_Set_Input>;
  pk_columns: Agcos_Import_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Gis__Specifica_Posizionamento_ToponimoArgs = {
  _inc?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Inc_Input>;
  _set?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Set_Input>;
  where: Gis__Specifica_Posizionamento_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Gis__Specifica_Posizionamento_Toponimo_By_PkArgs = {
  _inc?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Inc_Input>;
  _set?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Set_Input>;
  pk_columns: Gis__Specifica_Posizionamento_Toponimo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Gis__Tipologia_Posizionamento_ToponimoArgs = {
  _inc?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Inc_Input>;
  _set?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Set_Input>;
  where: Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Gis__Tipologia_Posizionamento_Toponimo_By_PkArgs = {
  _inc?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Inc_Input>;
  _set?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Set_Input>;
  pk_columns: Gis__Tipologia_Posizionamento_Toponimo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_CivicoArgs = {
  _inc?: Maybe<Gis_Civico_Inc_Input>;
  _set?: Maybe<Gis_Civico_Set_Input>;
  where: Gis_Civico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_Civico_By_PkArgs = {
  _inc?: Maybe<Gis_Civico_Inc_Input>;
  _set?: Maybe<Gis_Civico_Set_Input>;
  pk_columns: Gis_Civico_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_Connessione_GrafoArgs = {
  _inc?: Maybe<Gis_Connessione_Grafo_Inc_Input>;
  _set?: Maybe<Gis_Connessione_Grafo_Set_Input>;
  where: Gis_Connessione_Grafo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_Connessione_Grafo_By_PkArgs = {
  _inc?: Maybe<Gis_Connessione_Grafo_Inc_Input>;
  _set?: Maybe<Gis_Connessione_Grafo_Set_Input>;
  pk_columns: Gis_Connessione_Grafo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_Posizionamento_ToponimoArgs = {
  _inc?: Maybe<Gis_Posizionamento_Toponimo_Inc_Input>;
  _set?: Maybe<Gis_Posizionamento_Toponimo_Set_Input>;
  where: Gis_Posizionamento_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_Posizionamento_Toponimo_By_PkArgs = {
  _inc?: Maybe<Gis_Posizionamento_Toponimo_Inc_Input>;
  _set?: Maybe<Gis_Posizionamento_Toponimo_Set_Input>;
  pk_columns: Gis_Posizionamento_Toponimo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_Sostegno_IpiArgs = {
  _inc?: Maybe<Gis_Sostegno_Ipi_Inc_Input>;
  _set?: Maybe<Gis_Sostegno_Ipi_Set_Input>;
  where: Gis_Sostegno_Ipi_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Gis_Sostegno_Ipi_By_PkArgs = {
  _inc?: Maybe<Gis_Sostegno_Ipi_Inc_Input>;
  _set?: Maybe<Gis_Sostegno_Ipi_Set_Input>;
  pk_columns: Gis_Sostegno_Ipi_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Condizioni_TrafficoArgs = {
  _inc?: Maybe<Pis__Condizioni_Traffico_Inc_Input>;
  _set?: Maybe<Pis__Condizioni_Traffico_Set_Input>;
  where: Pis__Condizioni_Traffico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Condizioni_Traffico_By_PkArgs = {
  _inc?: Maybe<Pis__Condizioni_Traffico_Inc_Input>;
  _set?: Maybe<Pis__Condizioni_Traffico_Set_Input>;
  pk_columns: Pis__Condizioni_Traffico_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Forma_DissestoArgs = {
  _inc?: Maybe<Pis__Forma_Dissesto_Inc_Input>;
  _set?: Maybe<Pis__Forma_Dissesto_Set_Input>;
  where: Pis__Forma_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Forma_Dissesto_By_PkArgs = {
  _inc?: Maybe<Pis__Forma_Dissesto_Inc_Input>;
  _set?: Maybe<Pis__Forma_Dissesto_Set_Input>;
  pk_columns: Pis__Forma_Dissesto_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Giorni_TrascorsiArgs = {
  _inc?: Maybe<Pis__Giorni_Trascorsi_Inc_Input>;
  _set?: Maybe<Pis__Giorni_Trascorsi_Set_Input>;
  where: Pis__Giorni_Trascorsi_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Giorni_Trascorsi_By_PkArgs = {
  _inc?: Maybe<Pis__Giorni_Trascorsi_Inc_Input>;
  _set?: Maybe<Pis__Giorni_Trascorsi_Set_Input>;
  pk_columns: Pis__Giorni_Trascorsi_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__MaterialeArgs = {
  _inc?: Maybe<Pis__Materiale_Inc_Input>;
  _set?: Maybe<Pis__Materiale_Set_Input>;
  where: Pis__Materiale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Materiale_By_PkArgs = {
  _inc?: Maybe<Pis__Materiale_Inc_Input>;
  _set?: Maybe<Pis__Materiale_Set_Input>;
  pk_columns: Pis__Materiale_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__PrioritaArgs = {
  _inc?: Maybe<Pis__Priorita_Inc_Input>;
  _set?: Maybe<Pis__Priorita_Set_Input>;
  where: Pis__Priorita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Priorita_By_PkArgs = {
  _inc?: Maybe<Pis__Priorita_Inc_Input>;
  _set?: Maybe<Pis__Priorita_Set_Input>;
  pk_columns: Pis__Priorita_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Stato_SegnalazioneArgs = {
  _set?: Maybe<Pis__Stato_Segnalazione_Set_Input>;
  where: Pis__Stato_Segnalazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Stato_Segnalazione_By_PkArgs = {
  _set?: Maybe<Pis__Stato_Segnalazione_Set_Input>;
  pk_columns: Pis__Stato_Segnalazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Tipologia_DissestoArgs = {
  _inc?: Maybe<Pis__Tipologia_Dissesto_Inc_Input>;
  _set?: Maybe<Pis__Tipologia_Dissesto_Set_Input>;
  where: Pis__Tipologia_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis__Tipologia_Dissesto_By_PkArgs = {
  _inc?: Maybe<Pis__Tipologia_Dissesto_Inc_Input>;
  _set?: Maybe<Pis__Tipologia_Dissesto_Set_Input>;
  pk_columns: Pis__Tipologia_Dissesto_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Assegnazione_SquadraArgs = {
  _append?: Maybe<Pis_Assegnazione_Squadra_Append_Input>;
  _delete_at_path?: Maybe<Pis_Assegnazione_Squadra_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Assegnazione_Squadra_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Assegnazione_Squadra_Delete_Key_Input>;
  _inc?: Maybe<Pis_Assegnazione_Squadra_Inc_Input>;
  _prepend?: Maybe<Pis_Assegnazione_Squadra_Prepend_Input>;
  _set?: Maybe<Pis_Assegnazione_Squadra_Set_Input>;
  where: Pis_Assegnazione_Squadra_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Assegnazione_Squadra_By_PkArgs = {
  _append?: Maybe<Pis_Assegnazione_Squadra_Append_Input>;
  _delete_at_path?: Maybe<Pis_Assegnazione_Squadra_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Assegnazione_Squadra_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Assegnazione_Squadra_Delete_Key_Input>;
  _inc?: Maybe<Pis_Assegnazione_Squadra_Inc_Input>;
  _prepend?: Maybe<Pis_Assegnazione_Squadra_Prepend_Input>;
  _set?: Maybe<Pis_Assegnazione_Squadra_Set_Input>;
  pk_columns: Pis_Assegnazione_Squadra_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Attrezzature_ImpiegateArgs = {
  _inc?: Maybe<Pis_Attrezzature_Impiegate_Inc_Input>;
  _set?: Maybe<Pis_Attrezzature_Impiegate_Set_Input>;
  where: Pis_Attrezzature_Impiegate_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Attrezzature_Impiegate_By_PkArgs = {
  _inc?: Maybe<Pis_Attrezzature_Impiegate_Inc_Input>;
  _set?: Maybe<Pis_Attrezzature_Impiegate_Set_Input>;
  pk_columns: Pis_Attrezzature_Impiegate_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_DiarioArgs = {
  _append?: Maybe<Pis_Diario_Append_Input>;
  _delete_at_path?: Maybe<Pis_Diario_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Diario_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Diario_Delete_Key_Input>;
  _inc?: Maybe<Pis_Diario_Inc_Input>;
  _prepend?: Maybe<Pis_Diario_Prepend_Input>;
  _set?: Maybe<Pis_Diario_Set_Input>;
  where: Pis_Diario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Diario_By_PkArgs = {
  _append?: Maybe<Pis_Diario_Append_Input>;
  _delete_at_path?: Maybe<Pis_Diario_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Diario_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Diario_Delete_Key_Input>;
  _inc?: Maybe<Pis_Diario_Inc_Input>;
  _prepend?: Maybe<Pis_Diario_Prepend_Input>;
  _set?: Maybe<Pis_Diario_Set_Input>;
  pk_columns: Pis_Diario_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_DissestoArgs = {
  _inc?: Maybe<Pis_Dissesto_Inc_Input>;
  _set?: Maybe<Pis_Dissesto_Set_Input>;
  where: Pis_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Dissesto_By_PkArgs = {
  _inc?: Maybe<Pis_Dissesto_Inc_Input>;
  _set?: Maybe<Pis_Dissesto_Set_Input>;
  pk_columns: Pis_Dissesto_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_EventoArgs = {
  _inc?: Maybe<Pis_Evento_Inc_Input>;
  _set?: Maybe<Pis_Evento_Set_Input>;
  where: Pis_Evento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Evento_By_PkArgs = {
  _inc?: Maybe<Pis_Evento_Inc_Input>;
  _set?: Maybe<Pis_Evento_Set_Input>;
  pk_columns: Pis_Evento_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_InterventoArgs = {
  _inc?: Maybe<Pis_Intervento_Inc_Input>;
  _set?: Maybe<Pis_Intervento_Set_Input>;
  where: Pis_Intervento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Intervento_By_PkArgs = {
  _inc?: Maybe<Pis_Intervento_Inc_Input>;
  _set?: Maybe<Pis_Intervento_Set_Input>;
  pk_columns: Pis_Intervento_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Intervento_StraordinarioArgs = {
  _append?: Maybe<Pis_Intervento_Straordinario_Append_Input>;
  _delete_at_path?: Maybe<Pis_Intervento_Straordinario_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Intervento_Straordinario_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Intervento_Straordinario_Delete_Key_Input>;
  _inc?: Maybe<Pis_Intervento_Straordinario_Inc_Input>;
  _prepend?: Maybe<Pis_Intervento_Straordinario_Prepend_Input>;
  _set?: Maybe<Pis_Intervento_Straordinario_Set_Input>;
  where: Pis_Intervento_Straordinario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Intervento_Straordinario_By_PkArgs = {
  _append?: Maybe<Pis_Intervento_Straordinario_Append_Input>;
  _delete_at_path?: Maybe<Pis_Intervento_Straordinario_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Intervento_Straordinario_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Intervento_Straordinario_Delete_Key_Input>;
  _inc?: Maybe<Pis_Intervento_Straordinario_Inc_Input>;
  _prepend?: Maybe<Pis_Intervento_Straordinario_Prepend_Input>;
  _set?: Maybe<Pis_Intervento_Straordinario_Set_Input>;
  pk_columns: Pis_Intervento_Straordinario_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Materiale_DissestoArgs = {
  _inc?: Maybe<Pis_Materiale_Dissesto_Inc_Input>;
  _set?: Maybe<Pis_Materiale_Dissesto_Set_Input>;
  where: Pis_Materiale_Dissesto_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Materiale_Dissesto_By_PkArgs = {
  _inc?: Maybe<Pis_Materiale_Dissesto_Inc_Input>;
  _set?: Maybe<Pis_Materiale_Dissesto_Set_Input>;
  pk_columns: Pis_Materiale_Dissesto_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_SegnalazioneArgs = {
  _append?: Maybe<Pis_Segnalazione_Append_Input>;
  _delete_at_path?: Maybe<Pis_Segnalazione_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Segnalazione_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Segnalazione_Delete_Key_Input>;
  _inc?: Maybe<Pis_Segnalazione_Inc_Input>;
  _prepend?: Maybe<Pis_Segnalazione_Prepend_Input>;
  _set?: Maybe<Pis_Segnalazione_Set_Input>;
  where: Pis_Segnalazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Segnalazione_By_PkArgs = {
  _append?: Maybe<Pis_Segnalazione_Append_Input>;
  _delete_at_path?: Maybe<Pis_Segnalazione_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Pis_Segnalazione_Delete_Elem_Input>;
  _delete_key?: Maybe<Pis_Segnalazione_Delete_Key_Input>;
  _inc?: Maybe<Pis_Segnalazione_Inc_Input>;
  _prepend?: Maybe<Pis_Segnalazione_Prepend_Input>;
  _set?: Maybe<Pis_Segnalazione_Set_Input>;
  pk_columns: Pis_Segnalazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Segnalazione_CollegataArgs = {
  _inc?: Maybe<Pis_Segnalazione_Collegata_Inc_Input>;
  _set?: Maybe<Pis_Segnalazione_Collegata_Set_Input>;
  where: Pis_Segnalazione_Collegata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Segnalazione_Collegata_By_PkArgs = {
  _inc?: Maybe<Pis_Segnalazione_Collegata_Inc_Input>;
  _set?: Maybe<Pis_Segnalazione_Collegata_Set_Input>;
  pk_columns: Pis_Segnalazione_Collegata_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Segnaletica_LasciataArgs = {
  _inc?: Maybe<Pis_Segnaletica_Lasciata_Inc_Input>;
  _set?: Maybe<Pis_Segnaletica_Lasciata_Set_Input>;
  where: Pis_Segnaletica_Lasciata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Segnaletica_Lasciata_By_PkArgs = {
  _inc?: Maybe<Pis_Segnaletica_Lasciata_Inc_Input>;
  _set?: Maybe<Pis_Segnaletica_Lasciata_Set_Input>;
  pk_columns: Pis_Segnaletica_Lasciata_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_SquadraArgs = {
  _inc?: Maybe<Pis_Squadra_Inc_Input>;
  _set?: Maybe<Pis_Squadra_Set_Input>;
  where: Pis_Squadra_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Squadra_By_PkArgs = {
  _inc?: Maybe<Pis_Squadra_Inc_Input>;
  _set?: Maybe<Pis_Squadra_Set_Input>;
  pk_columns: Pis_Squadra_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Tecnico_ReferenteArgs = {
  _inc?: Maybe<Pis_Tecnico_Referente_Inc_Input>;
  _set?: Maybe<Pis_Tecnico_Referente_Set_Input>;
  where: Pis_Tecnico_Referente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Tecnico_Referente_By_PkArgs = {
  _inc?: Maybe<Pis_Tecnico_Referente_Inc_Input>;
  _set?: Maybe<Pis_Tecnico_Referente_Set_Input>;
  pk_columns: Pis_Tecnico_Referente_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Vecchia_SquadraArgs = {
  _inc?: Maybe<Pis_Vecchia_Squadra_Inc_Input>;
  _set?: Maybe<Pis_Vecchia_Squadra_Set_Input>;
  where: Pis_Vecchia_Squadra_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Vecchia_Squadra_By_PkArgs = {
  _inc?: Maybe<Pis_Vecchia_Squadra_Inc_Input>;
  _set?: Maybe<Pis_Vecchia_Squadra_Set_Input>;
  pk_columns: Pis_Vecchia_Squadra_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Veicoli_ImpiegatiArgs = {
  _inc?: Maybe<Pis_Veicoli_Impiegati_Inc_Input>;
  _set?: Maybe<Pis_Veicoli_Impiegati_Set_Input>;
  where: Pis_Veicoli_Impiegati_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Pis_Veicoli_Impiegati_By_PkArgs = {
  _inc?: Maybe<Pis_Veicoli_Impiegati_Inc_Input>;
  _set?: Maybe<Pis_Veicoli_Impiegati_Set_Input>;
  pk_columns: Pis_Veicoli_Impiegati_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo__Sezione_ProtocolloArgs = {
  _inc?: Maybe<Protocollo__Sezione_Protocollo_Inc_Input>;
  _set?: Maybe<Protocollo__Sezione_Protocollo_Set_Input>;
  where: Protocollo__Sezione_Protocollo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo__Sezione_Protocollo_By_PkArgs = {
  _inc?: Maybe<Protocollo__Sezione_Protocollo_Inc_Input>;
  _set?: Maybe<Protocollo__Sezione_Protocollo_Set_Input>;
  pk_columns: Protocollo__Sezione_Protocollo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo_ProtocolloArgs = {
  _inc?: Maybe<Protocollo_Protocollo_Inc_Input>;
  _set?: Maybe<Protocollo_Protocollo_Set_Input>;
  where: Protocollo_Protocollo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo_Protocollo_By_PkArgs = {
  _inc?: Maybe<Protocollo_Protocollo_Inc_Input>;
  _set?: Maybe<Protocollo_Protocollo_Set_Input>;
  pk_columns: Protocollo_Protocollo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo_Protocollo_DestinatarioArgs = {
  _inc?: Maybe<Protocollo_Protocollo_Destinatario_Inc_Input>;
  _set?: Maybe<Protocollo_Protocollo_Destinatario_Set_Input>;
  where: Protocollo_Protocollo_Destinatario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo_Protocollo_Destinatario_By_PkArgs = {
  _inc?: Maybe<Protocollo_Protocollo_Destinatario_Inc_Input>;
  _set?: Maybe<Protocollo_Protocollo_Destinatario_Set_Input>;
  pk_columns: Protocollo_Protocollo_Destinatario_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo_Protocollo_Destinatario_EsternoArgs = {
  _inc?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Inc_Input>;
  _set?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Set_Input>;
  where: Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Protocollo_Protocollo_Destinatario_Esterno_By_PkArgs = {
  _inc?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Inc_Input>;
  _set?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Set_Input>;
  pk_columns: Protocollo_Protocollo_Destinatario_Esterno_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Alimentazione_VeicoloArgs = {
  _inc?: Maybe<Sis__Alimentazione_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Alimentazione_Veicolo_Set_Input>;
  where: Sis__Alimentazione_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Alimentazione_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis__Alimentazione_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Alimentazione_Veicolo_Set_Input>;
  pk_columns: Sis__Alimentazione_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  _inc?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Set_Input>;
  where: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Set_Input>;
  pk_columns: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Conseguenza_VeicoloArgs = {
  _inc?: Maybe<Sis__Conseguenza_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Conseguenza_Veicolo_Set_Input>;
  where: Sis__Conseguenza_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Conseguenza_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis__Conseguenza_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Conseguenza_Veicolo_Set_Input>;
  pk_columns: Sis__Conseguenza_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Decessi_TipologiaArgs = {
  _inc?: Maybe<Sis__Decessi_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Decessi_Tipologia_Set_Input>;
  where: Sis__Decessi_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Decessi_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis__Decessi_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Decessi_Tipologia_Set_Input>;
  pk_columns: Sis__Decessi_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Destinazione_DecisioneArgs = {
  _inc?: Maybe<Sis__Destinazione_Decisione_Inc_Input>;
  _set?: Maybe<Sis__Destinazione_Decisione_Set_Input>;
  where: Sis__Destinazione_Decisione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Destinazione_Decisione_By_PkArgs = {
  _inc?: Maybe<Sis__Destinazione_Decisione_Inc_Input>;
  _set?: Maybe<Sis__Destinazione_Decisione_Set_Input>;
  pk_columns: Sis__Destinazione_Decisione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__EnteArgs = {
  _inc?: Maybe<Sis__Ente_Inc_Input>;
  _set?: Maybe<Sis__Ente_Set_Input>;
  where: Sis__Ente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Ente_By_PkArgs = {
  _inc?: Maybe<Sis__Ente_Inc_Input>;
  _set?: Maybe<Sis__Ente_Set_Input>;
  pk_columns: Sis__Ente_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Ente_SecondarioArgs = {
  _inc?: Maybe<Sis__Ente_Secondario_Inc_Input>;
  _set?: Maybe<Sis__Ente_Secondario_Set_Input>;
  where: Sis__Ente_Secondario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Ente_Secondario_By_PkArgs = {
  _inc?: Maybe<Sis__Ente_Secondario_Inc_Input>;
  _set?: Maybe<Sis__Ente_Secondario_Set_Input>;
  pk_columns: Sis__Ente_Secondario_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Impianto_SemaforicoArgs = {
  _inc?: Maybe<Sis__Impianto_Semaforico_Inc_Input>;
  _set?: Maybe<Sis__Impianto_Semaforico_Set_Input>;
  where: Sis__Impianto_Semaforico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Impianto_Semaforico_By_PkArgs = {
  _inc?: Maybe<Sis__Impianto_Semaforico_Inc_Input>;
  _set?: Maybe<Sis__Impianto_Semaforico_Set_Input>;
  pk_columns: Sis__Impianto_Semaforico_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Infortunato_InformazioneArgs = {
  _inc?: Maybe<Sis__Infortunato_Informazione_Inc_Input>;
  _set?: Maybe<Sis__Infortunato_Informazione_Set_Input>;
  where: Sis__Infortunato_Informazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Infortunato_Informazione_By_PkArgs = {
  _inc?: Maybe<Sis__Infortunato_Informazione_Inc_Input>;
  _set?: Maybe<Sis__Infortunato_Informazione_Set_Input>;
  pk_columns: Sis__Infortunato_Informazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Intortunato_TasportatoArgs = {
  _inc?: Maybe<Sis__Intortunato_Tasportato_Inc_Input>;
  _set?: Maybe<Sis__Intortunato_Tasportato_Set_Input>;
  where: Sis__Intortunato_Tasportato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Intortunato_Tasportato_By_PkArgs = {
  _inc?: Maybe<Sis__Intortunato_Tasportato_Inc_Input>;
  _set?: Maybe<Sis__Intortunato_Tasportato_Set_Input>;
  pk_columns: Sis__Intortunato_Tasportato_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_AltroArgs = {
  _inc?: Maybe<Sis__Localizzazione_Altro_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Altro_Set_Input>;
  where: Sis__Localizzazione_Altro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Altro_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Altro_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Altro_Set_Input>;
  pk_columns: Sis__Localizzazione_Altro_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Condizioni_AtmosfericheArgs = {
  _inc?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Set_Input>;
  where: Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Set_Input>;
  pk_columns: Sis__Localizzazione_Condizioni_Atmosferiche_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Condizioni_TrafficoArgs = {
  _inc?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Set_Input>;
  where: Sis__Localizzazione_Condizioni_Traffico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Condizioni_Traffico_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Set_Input>;
  pk_columns: Sis__Localizzazione_Condizioni_Traffico_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Extra_AbitatoArgs = {
  _inc?: Maybe<Sis__Localizzazione_Extra_Abitato_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Extra_Abitato_Set_Input>;
  where: Sis__Localizzazione_Extra_Abitato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Extra_Abitato_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Extra_Abitato_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Extra_Abitato_Set_Input>;
  pk_columns: Sis__Localizzazione_Extra_Abitato_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Fondo_StradaleArgs = {
  _inc?: Maybe<Sis__Localizzazione_Fondo_Stradale_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Fondo_Stradale_Set_Input>;
  where: Sis__Localizzazione_Fondo_Stradale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Fondo_Stradale_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Fondo_Stradale_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Fondo_Stradale_Set_Input>;
  pk_columns: Sis__Localizzazione_Fondo_Stradale_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_IlluminazioneArgs = {
  _inc?: Maybe<Sis__Localizzazione_Illuminazione_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Illuminazione_Set_Input>;
  where: Sis__Localizzazione_Illuminazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Illuminazione_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Illuminazione_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Illuminazione_Set_Input>;
  pk_columns: Sis__Localizzazione_Illuminazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Particolarita_StradaArgs = {
  _inc?: Maybe<Sis__Localizzazione_Particolarita_Strada_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Particolarita_Strada_Set_Input>;
  where: Sis__Localizzazione_Particolarita_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Particolarita_Strada_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Particolarita_Strada_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Particolarita_Strada_Set_Input>;
  pk_columns: Sis__Localizzazione_Particolarita_Strada_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_PavimentazioneArgs = {
  _inc?: Maybe<Sis__Localizzazione_Pavimentazione_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Pavimentazione_Set_Input>;
  where: Sis__Localizzazione_Pavimentazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Pavimentazione_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Pavimentazione_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Pavimentazione_Set_Input>;
  pk_columns: Sis__Localizzazione_Pavimentazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Tipo_StradaArgs = {
  _inc?: Maybe<Sis__Localizzazione_Tipo_Strada_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Tipo_Strada_Set_Input>;
  where: Sis__Localizzazione_Tipo_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Tipo_Strada_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Tipo_Strada_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Tipo_Strada_Set_Input>;
  pk_columns: Sis__Localizzazione_Tipo_Strada_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_VisibilitaArgs = {
  _inc?: Maybe<Sis__Localizzazione_Visibilita_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Visibilita_Set_Input>;
  where: Sis__Localizzazione_Visibilita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Localizzazione_Visibilita_By_PkArgs = {
  _inc?: Maybe<Sis__Localizzazione_Visibilita_Inc_Input>;
  _set?: Maybe<Sis__Localizzazione_Visibilita_Set_Input>;
  pk_columns: Sis__Localizzazione_Visibilita_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Natura_IncidenteArgs = {
  _inc?: Maybe<Sis__Natura_Incidente_Inc_Input>;
  _set?: Maybe<Sis__Natura_Incidente_Set_Input>;
  where: Sis__Natura_Incidente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Natura_Incidente_By_PkArgs = {
  _inc?: Maybe<Sis__Natura_Incidente_Inc_Input>;
  _set?: Maybe<Sis__Natura_Incidente_Set_Input>;
  pk_columns: Sis__Natura_Incidente_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Patente_CategoriaArgs = {
  _inc?: Maybe<Sis__Patente_Categoria_Inc_Input>;
  _set?: Maybe<Sis__Patente_Categoria_Set_Input>;
  where: Sis__Patente_Categoria_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Patente_Categoria_By_PkArgs = {
  _inc?: Maybe<Sis__Patente_Categoria_Inc_Input>;
  _set?: Maybe<Sis__Patente_Categoria_Set_Input>;
  pk_columns: Sis__Patente_Categoria_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Posizione_Finale_Veicolo_CarreggiataArgs = {
  _inc?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Inc_Input>;
  _set?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Set_Input>;
  where: Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  _inc?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Inc_Input>;
  _set?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Set_Input>;
  pk_columns: Sis__Posizione_Finale_Veicolo_Carreggiata_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  _inc?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Inc_Input>;
  _set?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Set_Input>;
  where: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  _inc?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Inc_Input>;
  _set?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Set_Input>;
  pk_columns: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Posizione_Finale_Veicolo_MarginiArgs = {
  _inc?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Inc_Input>;
  _set?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Set_Input>;
  where: Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  _inc?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Inc_Input>;
  _set?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Set_Input>;
  pk_columns: Sis__Posizione_Finale_Veicolo_Margini_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Punti_Rilievi_No_TipologiaArgs = {
  _inc?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Set_Input>;
  where: Sis__Punti_Rilievi_No_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Punti_Rilievi_No_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Set_Input>;
  pk_columns: Sis__Punti_Rilievi_No_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Retrovisore_EsternoArgs = {
  _inc?: Maybe<Sis__Retrovisore_Esterno_Inc_Input>;
  _set?: Maybe<Sis__Retrovisore_Esterno_Set_Input>;
  where: Sis__Retrovisore_Esterno_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Retrovisore_Esterno_By_PkArgs = {
  _inc?: Maybe<Sis__Retrovisore_Esterno_Inc_Input>;
  _set?: Maybe<Sis__Retrovisore_Esterno_Set_Input>;
  pk_columns: Sis__Retrovisore_Esterno_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Ris_Consegnato_AArgs = {
  _inc?: Maybe<Sis__Ris_Consegnato_A_Inc_Input>;
  _set?: Maybe<Sis__Ris_Consegnato_A_Set_Input>;
  where: Sis__Ris_Consegnato_A_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Ris_Consegnato_A_By_PkArgs = {
  _inc?: Maybe<Sis__Ris_Consegnato_A_Inc_Input>;
  _set?: Maybe<Sis__Ris_Consegnato_A_Set_Input>;
  pk_columns: Sis__Ris_Consegnato_A_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Stato_RisArgs = {
  _set?: Maybe<Sis__Stato_Ris_Set_Input>;
  where: Sis__Stato_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Stato_Ris_By_PkArgs = {
  _set?: Maybe<Sis__Stato_Ris_Set_Input>;
  pk_columns: Sis__Stato_Ris_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Stato_VeicoloArgs = {
  _inc?: Maybe<Sis__Stato_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Stato_Veicolo_Set_Input>;
  where: Sis__Stato_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Stato_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis__Stato_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Stato_Veicolo_Set_Input>;
  pk_columns: Sis__Stato_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Tipologia_RisArgs = {
  _inc?: Maybe<Sis__Tipologia_Ris_Inc_Input>;
  _set?: Maybe<Sis__Tipologia_Ris_Set_Input>;
  where: Sis__Tipologia_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Tipologia_Ris_By_PkArgs = {
  _inc?: Maybe<Sis__Tipologia_Ris_Inc_Input>;
  _set?: Maybe<Sis__Tipologia_Ris_Set_Input>;
  pk_columns: Sis__Tipologia_Ris_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Tipologia_VeicoloArgs = {
  _inc?: Maybe<Sis__Tipologia_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Tipologia_Veicolo_Set_Input>;
  where: Sis__Tipologia_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Tipologia_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis__Tipologia_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Tipologia_Veicolo_Set_Input>;
  pk_columns: Sis__Tipologia_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Tipologia_VerbaleArgs = {
  _inc?: Maybe<Sis__Tipologia_Verbale_Inc_Input>;
  _set?: Maybe<Sis__Tipologia_Verbale_Set_Input>;
  where: Sis__Tipologia_Verbale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Tipologia_Verbale_By_PkArgs = {
  _inc?: Maybe<Sis__Tipologia_Verbale_Inc_Input>;
  _set?: Maybe<Sis__Tipologia_Verbale_Set_Input>;
  pk_columns: Sis__Tipologia_Verbale_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Frenata_TipologiaArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Set_Input>;
  where: Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Frenata_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Set_Input>;
  pk_columns: Sis__Traccia_Suolo_Frenata_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_TerminazioneArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Set_Input>;
  where: Sis__Traccia_Suolo_Terminazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_AndamentoArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Set_Input>;
  where: Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_Andamento_By_PkArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Set_Input>;
  pk_columns: Sis__Traccia_Suolo_Terminazione_Andamento_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_By_PkArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Set_Input>;
  pk_columns: Sis__Traccia_Suolo_Terminazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_FormaArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Set_Input>;
  where: Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_Forma_By_PkArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Set_Input>;
  pk_columns: Sis__Traccia_Suolo_Terminazione_Forma_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_IntensitaArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Set_Input>;
  where: Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_Intensita_By_PkArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Set_Input>;
  pk_columns: Sis__Traccia_Suolo_Terminazione_Intensita_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_TipologiaArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Set_Input>;
  where: Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Terminazione_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Set_Input>;
  pk_columns: Sis__Traccia_Suolo_Terminazione_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_TipologiaArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Tipologia_Set_Input>;
  where: Sis__Traccia_Suolo_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Traccia_Suolo_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis__Traccia_Suolo_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Traccia_Suolo_Tipologia_Set_Input>;
  pk_columns: Sis__Traccia_Suolo_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Trasportato_PosizioneArgs = {
  _inc?: Maybe<Sis__Trasportato_Posizione_Inc_Input>;
  _set?: Maybe<Sis__Trasportato_Posizione_Set_Input>;
  where: Sis__Trasportato_Posizione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Trasportato_Posizione_By_PkArgs = {
  _inc?: Maybe<Sis__Trasportato_Posizione_Inc_Input>;
  _set?: Maybe<Sis__Trasportato_Posizione_Set_Input>;
  pk_columns: Sis__Trasportato_Posizione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Trasportato_StatoArgs = {
  _inc?: Maybe<Sis__Trasportato_Stato_Inc_Input>;
  _set?: Maybe<Sis__Trasportato_Stato_Set_Input>;
  where: Sis__Trasportato_Stato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Trasportato_Stato_By_PkArgs = {
  _inc?: Maybe<Sis__Trasportato_Stato_Inc_Input>;
  _set?: Maybe<Sis__Trasportato_Stato_Set_Input>;
  pk_columns: Sis__Trasportato_Stato_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Uso_VeicoloArgs = {
  _inc?: Maybe<Sis__Uso_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Uso_Veicolo_Set_Input>;
  where: Sis__Uso_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Uso_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis__Uso_Veicolo_Inc_Input>;
  _set?: Maybe<Sis__Uso_Veicolo_Set_Input>;
  pk_columns: Sis__Uso_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Visibilita_Limitata_TipologiaArgs = {
  _inc?: Maybe<Sis__Visibilita_Limitata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Visibilita_Limitata_Tipologia_Set_Input>;
  where: Sis__Visibilita_Limitata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis__Visibilita_Limitata_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis__Visibilita_Limitata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis__Visibilita_Limitata_Tipologia_Set_Input>;
  pk_columns: Sis__Visibilita_Limitata_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_AccertamentoArgs = {
  _inc?: Maybe<Sis_Accertamento_Inc_Input>;
  _set?: Maybe<Sis_Accertamento_Set_Input>;
  where: Sis_Accertamento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Accertamento_By_PkArgs = {
  _inc?: Maybe<Sis_Accertamento_Inc_Input>;
  _set?: Maybe<Sis_Accertamento_Set_Input>;
  pk_columns: Sis_Accertamento_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Agente_AccertatoreArgs = {
  _append?: Maybe<Sis_Agente_Accertatore_Append_Input>;
  _delete_at_path?: Maybe<Sis_Agente_Accertatore_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Agente_Accertatore_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Agente_Accertatore_Delete_Key_Input>;
  _inc?: Maybe<Sis_Agente_Accertatore_Inc_Input>;
  _prepend?: Maybe<Sis_Agente_Accertatore_Prepend_Input>;
  _set?: Maybe<Sis_Agente_Accertatore_Set_Input>;
  where: Sis_Agente_Accertatore_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Agente_Accertatore_By_PkArgs = {
  _append?: Maybe<Sis_Agente_Accertatore_Append_Input>;
  _delete_at_path?: Maybe<Sis_Agente_Accertatore_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Agente_Accertatore_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Agente_Accertatore_Delete_Key_Input>;
  _inc?: Maybe<Sis_Agente_Accertatore_Inc_Input>;
  _prepend?: Maybe<Sis_Agente_Accertatore_Prepend_Input>;
  _set?: Maybe<Sis_Agente_Accertatore_Set_Input>;
  pk_columns: Sis_Agente_Accertatore_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_AltroArgs = {
  _inc?: Maybe<Sis_Altro_Inc_Input>;
  _set?: Maybe<Sis_Altro_Set_Input>;
  where: Sis_Altro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Altro_By_PkArgs = {
  _inc?: Maybe<Sis_Altro_Inc_Input>;
  _set?: Maybe<Sis_Altro_Set_Input>;
  pk_columns: Sis_Altro_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  _inc?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Set_Input>;
  where: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  _inc?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Inc_Input>;
  _set?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Set_Input>;
  pk_columns: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Assegnazione_Unita_OperativaArgs = {
  _append?: Maybe<Sis_Assegnazione_Unita_Operativa_Append_Input>;
  _delete_at_path?: Maybe<Sis_Assegnazione_Unita_Operativa_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Assegnazione_Unita_Operativa_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Assegnazione_Unita_Operativa_Delete_Key_Input>;
  _inc?: Maybe<Sis_Assegnazione_Unita_Operativa_Inc_Input>;
  _prepend?: Maybe<Sis_Assegnazione_Unita_Operativa_Prepend_Input>;
  _set?: Maybe<Sis_Assegnazione_Unita_Operativa_Set_Input>;
  where: Sis_Assegnazione_Unita_Operativa_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Assegnazione_Unita_Operativa_By_PkArgs = {
  _append?: Maybe<Sis_Assegnazione_Unita_Operativa_Append_Input>;
  _delete_at_path?: Maybe<Sis_Assegnazione_Unita_Operativa_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Assegnazione_Unita_Operativa_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Assegnazione_Unita_Operativa_Delete_Key_Input>;
  _inc?: Maybe<Sis_Assegnazione_Unita_Operativa_Inc_Input>;
  _prepend?: Maybe<Sis_Assegnazione_Unita_Operativa_Prepend_Input>;
  _set?: Maybe<Sis_Assegnazione_Unita_Operativa_Set_Input>;
  pk_columns: Sis_Assegnazione_Unita_Operativa_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Conseguenza_VeicoloArgs = {
  _inc?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Set_Input>;
  where: Sis_Associazione_Conseguenza_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Conseguenza_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Set_Input>;
  pk_columns: Sis_Associazione_Conseguenza_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Decessi_TipologieArgs = {
  _inc?: Maybe<Sis_Associazione_Decessi_Tipologie_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Decessi_Tipologie_Set_Input>;
  where: Sis_Associazione_Decessi_Tipologie_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Decessi_Tipologie_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Decessi_Tipologie_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Decessi_Tipologie_Set_Input>;
  pk_columns: Sis_Associazione_Decessi_Tipologie_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Ente_Primo_InterventoArgs = {
  _inc?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Set_Input>;
  where: Sis_Associazione_Ente_Primo_Intervento_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Ente_Primo_Intervento_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Set_Input>;
  pk_columns: Sis_Associazione_Ente_Primo_Intervento_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Ente_Secondario_IntervenutiArgs = {
  _inc?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Set_Input>;
  where: Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Ente_Secondario_Intervenuti_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Set_Input>;
  pk_columns: Sis_Associazione_Ente_Secondario_Intervenuti_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Ente_SegnalatoreArgs = {
  _inc?: Maybe<Sis_Associazione_Ente_Segnalatore_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Ente_Segnalatore_Set_Input>;
  where: Sis_Associazione_Ente_Segnalatore_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Ente_Segnalatore_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Ente_Segnalatore_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Ente_Segnalatore_Set_Input>;
  pk_columns: Sis_Associazione_Ente_Segnalatore_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Impianto_SemaforicoArgs = {
  _inc?: Maybe<Sis_Associazione_Impianto_Semaforico_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Impianto_Semaforico_Set_Input>;
  where: Sis_Associazione_Impianto_Semaforico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Impianto_Semaforico_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Impianto_Semaforico_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Impianto_Semaforico_Set_Input>;
  pk_columns: Sis_Associazione_Impianto_Semaforico_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Informazioni_InfortunatoArgs = {
  _inc?: Maybe<Sis_Associazione_Informazioni_Infortunato_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Informazioni_Infortunato_Set_Input>;
  where: Sis_Associazione_Informazioni_Infortunato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Informazioni_Infortunato_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Informazioni_Infortunato_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Informazioni_Infortunato_Set_Input>;
  pk_columns: Sis_Associazione_Informazioni_Infortunato_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_AltroArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Altro_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Altro_Set_Input>;
  where: Sis_Associazione_Localizzazione_Altro_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Altro_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Altro_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Altro_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Altro_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Condizioni_AtmosfericheArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Set_Input>;
  where: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Extra_AbitatoArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Set_Input>;
  where: Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Extra_Abitato_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Extra_Abitato_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Fondo_StradaleArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Set_Input>;
  where: Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Fondo_Stradale_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Fondo_Stradale_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_IlluminazioneArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Set_Input>;
  where: Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Illuminazione_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Illuminazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Particolarita_StradaArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Set_Input>;
  where: Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Particolarita_Strada_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Particolarita_Strada_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_PavimentazioneArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Set_Input>;
  where: Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Pavimentazione_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Pavimentazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Tipo_StradaArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Set_Input>;
  where: Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Tipo_Strada_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Tipo_Strada_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_VisibilitaArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Set_Input>;
  where: Sis_Associazione_Localizzazione_Visibilita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Localizzazione_Visibilita_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Set_Input>;
  pk_columns: Sis_Associazione_Localizzazione_Visibilita_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Natura_IncidenteArgs = {
  _inc?: Maybe<Sis_Associazione_Natura_Incidente_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Natura_Incidente_Set_Input>;
  where: Sis_Associazione_Natura_Incidente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Natura_Incidente_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Natura_Incidente_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Natura_Incidente_Set_Input>;
  pk_columns: Sis_Associazione_Natura_Incidente_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_PatenteArgs = {
  _inc?: Maybe<Sis_Associazione_Patente_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Patente_Set_Input>;
  where: Sis_Associazione_Patente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Patente_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Patente_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Patente_Set_Input>;
  pk_columns: Sis_Associazione_Patente_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Posizione_Finale_Veicolo_CarreggiataArgs = {
  _inc?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Set_Input>;
  where: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Set_Input>;
  pk_columns: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  _inc?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Set_Input>;
  where: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Set_Input>;
  pk_columns: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Posizione_Finale_Veicolo_MarginiArgs = {
  _inc?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Set_Input>;
  where: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Set_Input>;
  pk_columns: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Tipologia_RisArgs = {
  _inc?: Maybe<Sis_Associazione_Tipologia_Ris_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Tipologia_Ris_Set_Input>;
  where: Sis_Associazione_Tipologia_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associazione_Tipologia_Ris_By_PkArgs = {
  _inc?: Maybe<Sis_Associazione_Tipologia_Ris_Inc_Input>;
  _set?: Maybe<Sis_Associazione_Tipologia_Ris_Set_Input>;
  pk_columns: Sis_Associazione_Tipologia_Ris_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associzione_Localizzazione_Condizioni_TrafficoArgs = {
  _inc?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Inc_Input>;
  _set?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Set_Input>;
  where: Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Associzione_Localizzazione_Condizioni_Traffico_By_PkArgs = {
  _inc?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Inc_Input>;
  _set?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Set_Input>;
  pk_columns: Sis_Associzione_Localizzazione_Condizioni_Traffico_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_ConducenteArgs = {
  _inc?: Maybe<Sis_Conducente_Inc_Input>;
  _set?: Maybe<Sis_Conducente_Set_Input>;
  where: Sis_Conducente_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Conducente_By_PkArgs = {
  _inc?: Maybe<Sis_Conducente_Inc_Input>;
  _set?: Maybe<Sis_Conducente_Set_Input>;
  pk_columns: Sis_Conducente_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Evento_SisArgs = {
  _append?: Maybe<Sis_Evento_Sis_Append_Input>;
  _delete_at_path?: Maybe<Sis_Evento_Sis_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Evento_Sis_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Evento_Sis_Delete_Key_Input>;
  _inc?: Maybe<Sis_Evento_Sis_Inc_Input>;
  _prepend?: Maybe<Sis_Evento_Sis_Prepend_Input>;
  _set?: Maybe<Sis_Evento_Sis_Set_Input>;
  where: Sis_Evento_Sis_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Evento_Sis_By_PkArgs = {
  _append?: Maybe<Sis_Evento_Sis_Append_Input>;
  _delete_at_path?: Maybe<Sis_Evento_Sis_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Evento_Sis_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Evento_Sis_Delete_Key_Input>;
  _inc?: Maybe<Sis_Evento_Sis_Inc_Input>;
  _prepend?: Maybe<Sis_Evento_Sis_Prepend_Input>;
  _set?: Maybe<Sis_Evento_Sis_Set_Input>;
  pk_columns: Sis_Evento_Sis_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_InfortunatoArgs = {
  _inc?: Maybe<Sis_Infortunato_Inc_Input>;
  _set?: Maybe<Sis_Infortunato_Set_Input>;
  where: Sis_Infortunato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Infortunato_By_PkArgs = {
  _inc?: Maybe<Sis_Infortunato_Inc_Input>;
  _set?: Maybe<Sis_Infortunato_Set_Input>;
  pk_columns: Sis_Infortunato_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_InfrazioneArgs = {
  _inc?: Maybe<Sis_Infrazione_Inc_Input>;
  _set?: Maybe<Sis_Infrazione_Set_Input>;
  where: Sis_Infrazione_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Infrazione_By_PkArgs = {
  _inc?: Maybe<Sis_Infrazione_Inc_Input>;
  _set?: Maybe<Sis_Infrazione_Set_Input>;
  pk_columns: Sis_Infrazione_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_LocatarioArgs = {
  _inc?: Maybe<Sis_Locatario_Inc_Input>;
  _set?: Maybe<Sis_Locatario_Set_Input>;
  where: Sis_Locatario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Locatario_By_PkArgs = {
  _inc?: Maybe<Sis_Locatario_Inc_Input>;
  _set?: Maybe<Sis_Locatario_Set_Input>;
  pk_columns: Sis_Locatario_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_PedoneArgs = {
  _inc?: Maybe<Sis_Pedone_Inc_Input>;
  _set?: Maybe<Sis_Pedone_Set_Input>;
  where: Sis_Pedone_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Pedone_By_PkArgs = {
  _inc?: Maybe<Sis_Pedone_Inc_Input>;
  _set?: Maybe<Sis_Pedone_Set_Input>;
  pk_columns: Sis_Pedone_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_ProprietarioArgs = {
  _inc?: Maybe<Sis_Proprietario_Inc_Input>;
  _set?: Maybe<Sis_Proprietario_Set_Input>;
  where: Sis_Proprietario_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Proprietario_By_PkArgs = {
  _inc?: Maybe<Sis_Proprietario_Inc_Input>;
  _set?: Maybe<Sis_Proprietario_Set_Input>;
  pk_columns: Sis_Proprietario_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Proprietario_GiuridicoArgs = {
  _inc?: Maybe<Sis_Proprietario_Giuridico_Inc_Input>;
  _set?: Maybe<Sis_Proprietario_Giuridico_Set_Input>;
  where: Sis_Proprietario_Giuridico_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Proprietario_Giuridico_By_PkArgs = {
  _inc?: Maybe<Sis_Proprietario_Giuridico_Inc_Input>;
  _set?: Maybe<Sis_Proprietario_Giuridico_Set_Input>;
  pk_columns: Sis_Proprietario_Giuridico_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_RisArgs = {
  _append?: Maybe<Sis_Ris_Append_Input>;
  _delete_at_path?: Maybe<Sis_Ris_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Ris_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Ris_Delete_Key_Input>;
  _inc?: Maybe<Sis_Ris_Inc_Input>;
  _prepend?: Maybe<Sis_Ris_Prepend_Input>;
  _set?: Maybe<Sis_Ris_Set_Input>;
  where: Sis_Ris_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Ris_By_PkArgs = {
  _append?: Maybe<Sis_Ris_Append_Input>;
  _delete_at_path?: Maybe<Sis_Ris_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Ris_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Ris_Delete_Key_Input>;
  _inc?: Maybe<Sis_Ris_Inc_Input>;
  _prepend?: Maybe<Sis_Ris_Prepend_Input>;
  _set?: Maybe<Sis_Ris_Set_Input>;
  pk_columns: Sis_Ris_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_TestimoneArgs = {
  _inc?: Maybe<Sis_Testimone_Inc_Input>;
  _set?: Maybe<Sis_Testimone_Set_Input>;
  where: Sis_Testimone_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Testimone_By_PkArgs = {
  _inc?: Maybe<Sis_Testimone_Inc_Input>;
  _set?: Maybe<Sis_Testimone_Set_Input>;
  pk_columns: Sis_Testimone_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Trasportati_VeicoloArgs = {
  _inc?: Maybe<Sis_Trasportati_Veicolo_Inc_Input>;
  _set?: Maybe<Sis_Trasportati_Veicolo_Set_Input>;
  where: Sis_Trasportati_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Trasportati_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis_Trasportati_Veicolo_Inc_Input>;
  _set?: Maybe<Sis_Trasportati_Veicolo_Set_Input>;
  pk_columns: Sis_Trasportati_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_TrasportatoArgs = {
  _inc?: Maybe<Sis_Trasportato_Inc_Input>;
  _set?: Maybe<Sis_Trasportato_Set_Input>;
  where: Sis_Trasportato_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Trasportato_By_PkArgs = {
  _inc?: Maybe<Sis_Trasportato_Inc_Input>;
  _set?: Maybe<Sis_Trasportato_Set_Input>;
  pk_columns: Sis_Trasportato_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Unita_OperativaArgs = {
  _append?: Maybe<Sis_Unita_Operativa_Append_Input>;
  _delete_at_path?: Maybe<Sis_Unita_Operativa_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Unita_Operativa_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Unita_Operativa_Delete_Key_Input>;
  _inc?: Maybe<Sis_Unita_Operativa_Inc_Input>;
  _prepend?: Maybe<Sis_Unita_Operativa_Prepend_Input>;
  _set?: Maybe<Sis_Unita_Operativa_Set_Input>;
  where: Sis_Unita_Operativa_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Unita_Operativa_By_PkArgs = {
  _append?: Maybe<Sis_Unita_Operativa_Append_Input>;
  _delete_at_path?: Maybe<Sis_Unita_Operativa_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Sis_Unita_Operativa_Delete_Elem_Input>;
  _delete_key?: Maybe<Sis_Unita_Operativa_Delete_Key_Input>;
  _inc?: Maybe<Sis_Unita_Operativa_Inc_Input>;
  _prepend?: Maybe<Sis_Unita_Operativa_Prepend_Input>;
  _set?: Maybe<Sis_Unita_Operativa_Set_Input>;
  pk_columns: Sis_Unita_Operativa_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Vecchia_Unita_OperativaArgs = {
  _inc?: Maybe<Sis_Vecchia_Unita_Operativa_Inc_Input>;
  _set?: Maybe<Sis_Vecchia_Unita_Operativa_Set_Input>;
  where: Sis_Vecchia_Unita_Operativa_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Vecchia_Unita_Operativa_By_PkArgs = {
  _inc?: Maybe<Sis_Vecchia_Unita_Operativa_Inc_Input>;
  _set?: Maybe<Sis_Vecchia_Unita_Operativa_Set_Input>;
  pk_columns: Sis_Vecchia_Unita_Operativa_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_VeicoloArgs = {
  _inc?: Maybe<Sis_Veicolo_Inc_Input>;
  _set?: Maybe<Sis_Veicolo_Set_Input>;
  where: Sis_Veicolo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Veicolo_By_PkArgs = {
  _inc?: Maybe<Sis_Veicolo_Inc_Input>;
  _set?: Maybe<Sis_Veicolo_Set_Input>;
  pk_columns: Sis_Veicolo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_VerbaleArgs = {
  _inc?: Maybe<Sis_Verbale_Inc_Input>;
  _set?: Maybe<Sis_Verbale_Set_Input>;
  where: Sis_Verbale_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sis_Verbale_By_PkArgs = {
  _inc?: Maybe<Sis_Verbale_Inc_Input>;
  _set?: Maybe<Sis_Verbale_Set_Input>;
  pk_columns: Sis_Verbale_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Assegnazione_QuartiereArgs = {
  _inc?: Maybe<Toponomastica_Assegnazione_Quartiere_Inc_Input>;
  _set?: Maybe<Toponomastica_Assegnazione_Quartiere_Set_Input>;
  where: Toponomastica_Assegnazione_Quartiere_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Assegnazione_Quartiere_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Assegnazione_Quartiere_Inc_Input>;
  _set?: Maybe<Toponomastica_Assegnazione_Quartiere_Set_Input>;
  pk_columns: Toponomastica_Assegnazione_Quartiere_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Assegnazione_ToponimoArgs = {
  _inc?: Maybe<Toponomastica_Assegnazione_Toponimo_Inc_Input>;
  _set?: Maybe<Toponomastica_Assegnazione_Toponimo_Set_Input>;
  where: Toponomastica_Assegnazione_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Assegnazione_Toponimo_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Assegnazione_Toponimo_Inc_Input>;
  _set?: Maybe<Toponomastica_Assegnazione_Toponimo_Set_Input>;
  pk_columns: Toponomastica_Assegnazione_Toponimo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_DugArgs = {
  _inc?: Maybe<Toponomastica_Dug_Inc_Input>;
  _set?: Maybe<Toponomastica_Dug_Set_Input>;
  where: Toponomastica_Dug_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Dug_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Dug_Inc_Input>;
  _set?: Maybe<Toponomastica_Dug_Set_Input>;
  pk_columns: Toponomastica_Dug_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_MunicipalitaArgs = {
  _inc?: Maybe<Toponomastica_Municipalita_Inc_Input>;
  _set?: Maybe<Toponomastica_Municipalita_Set_Input>;
  where: Toponomastica_Municipalita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Municipalita_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Municipalita_Inc_Input>;
  _set?: Maybe<Toponomastica_Municipalita_Set_Input>;
  pk_columns: Toponomastica_Municipalita_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_QuartiereArgs = {
  _inc?: Maybe<Toponomastica_Quartiere_Inc_Input>;
  _set?: Maybe<Toponomastica_Quartiere_Set_Input>;
  where: Toponomastica_Quartiere_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Quartiere_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Quartiere_Inc_Input>;
  _set?: Maybe<Toponomastica_Quartiere_Set_Input>;
  pk_columns: Toponomastica_Quartiere_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_TipologiaArgs = {
  _inc?: Maybe<Toponomastica_Tipologia_Inc_Input>;
  _set?: Maybe<Toponomastica_Tipologia_Set_Input>;
  where: Toponomastica_Tipologia_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Tipologia_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Tipologia_Inc_Input>;
  _set?: Maybe<Toponomastica_Tipologia_Set_Input>;
  pk_columns: Toponomastica_Tipologia_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_ToponimoArgs = {
  _inc?: Maybe<Toponomastica_Toponimo_Inc_Input>;
  _set?: Maybe<Toponomastica_Toponimo_Set_Input>;
  where: Toponomastica_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Toponimo_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Toponimo_Inc_Input>;
  _set?: Maybe<Toponomastica_Toponimo_Set_Input>;
  pk_columns: Toponomastica_Toponimo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Vecchia_MunicipalitaArgs = {
  _inc?: Maybe<Toponomastica_Vecchia_Municipalita_Inc_Input>;
  _set?: Maybe<Toponomastica_Vecchia_Municipalita_Set_Input>;
  where: Toponomastica_Vecchia_Municipalita_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Vecchia_Municipalita_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Vecchia_Municipalita_Inc_Input>;
  _set?: Maybe<Toponomastica_Vecchia_Municipalita_Set_Input>;
  pk_columns: Toponomastica_Vecchia_Municipalita_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Vecchio_QuartiereArgs = {
  _inc?: Maybe<Toponomastica_Vecchio_Quartiere_Inc_Input>;
  _set?: Maybe<Toponomastica_Vecchio_Quartiere_Set_Input>;
  where: Toponomastica_Vecchio_Quartiere_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Vecchio_Quartiere_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Vecchio_Quartiere_Inc_Input>;
  _set?: Maybe<Toponomastica_Vecchio_Quartiere_Set_Input>;
  pk_columns: Toponomastica_Vecchio_Quartiere_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Vecchio_ToponimoArgs = {
  _inc?: Maybe<Toponomastica_Vecchio_Toponimo_Inc_Input>;
  _set?: Maybe<Toponomastica_Vecchio_Toponimo_Set_Input>;
  where: Toponomastica_Vecchio_Toponimo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Toponomastica_Vecchio_Toponimo_By_PkArgs = {
  _inc?: Maybe<Toponomastica_Vecchio_Toponimo_Inc_Input>;
  _set?: Maybe<Toponomastica_Vecchio_Toponimo_Set_Input>;
  pk_columns: Toponomastica_Vecchio_Toponimo_Pk_Columns_Input;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: Maybe<Scalars['numeric']>;
  _gt?: Maybe<Scalars['numeric']>;
  _gte?: Maybe<Scalars['numeric']>;
  _in?: Maybe<Array<Scalars['numeric']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['numeric']>;
  _lte?: Maybe<Scalars['numeric']>;
  _neq?: Maybe<Scalars['numeric']>;
  _nin?: Maybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico = {
  __typename?: 'pis__condizioni_traffico';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Aggregate = {
  __typename?: 'pis__condizioni_traffico_aggregate';
  aggregate?: Maybe<Pis__Condizioni_Traffico_Aggregate_Fields>;
  nodes: Array<Pis__Condizioni_Traffico>;
};

/** aggregate fields of "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Aggregate_Fields = {
  __typename?: 'pis__condizioni_traffico_aggregate_fields';
  avg?: Maybe<Pis__Condizioni_Traffico_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis__Condizioni_Traffico_Max_Fields>;
  min?: Maybe<Pis__Condizioni_Traffico_Min_Fields>;
  stddev?: Maybe<Pis__Condizioni_Traffico_Stddev_Fields>;
  stddev_pop?: Maybe<Pis__Condizioni_Traffico_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis__Condizioni_Traffico_Stddev_Samp_Fields>;
  sum?: Maybe<Pis__Condizioni_Traffico_Sum_Fields>;
  var_pop?: Maybe<Pis__Condizioni_Traffico_Var_Pop_Fields>;
  var_samp?: Maybe<Pis__Condizioni_Traffico_Var_Samp_Fields>;
  variance?: Maybe<Pis__Condizioni_Traffico_Variance_Fields>;
};


/** aggregate fields of "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis__Condizioni_Traffico_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis__Condizioni_Traffico_Avg_Fields = {
  __typename?: 'pis__condizioni_traffico_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis._condizioni_traffico". All fields are combined with a logical 'AND'. */
export type Pis__Condizioni_Traffico_Bool_Exp = {
  _and?: Maybe<Array<Pis__Condizioni_Traffico_Bool_Exp>>;
  _not?: Maybe<Pis__Condizioni_Traffico_Bool_Exp>;
  _or?: Maybe<Array<Pis__Condizioni_Traffico_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis._condizioni_traffico" */
export enum Pis__Condizioni_Traffico_Constraint {
  /** unique or primary key constraint */
  CondizioniTrafficoPkey = '_condizioni_traffico_pkey'
}

/** input type for incrementing numeric columns in table "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis__Condizioni_Traffico_Max_Fields = {
  __typename?: 'pis__condizioni_traffico_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis__Condizioni_Traffico_Min_Fields = {
  __typename?: 'pis__condizioni_traffico_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Mutation_Response = {
  __typename?: 'pis__condizioni_traffico_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis__Condizioni_Traffico>;
};

/** input type for inserting object relation for remote table "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Obj_Rel_Insert_Input = {
  data: Pis__Condizioni_Traffico_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis__Condizioni_Traffico_On_Conflict>;
};

/** on_conflict condition type for table "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_On_Conflict = {
  constraint: Pis__Condizioni_Traffico_Constraint;
  update_columns?: Array<Pis__Condizioni_Traffico_Update_Column>;
  where?: Maybe<Pis__Condizioni_Traffico_Bool_Exp>;
};

/** Ordering options when selecting data from "pis._condizioni_traffico". */
export type Pis__Condizioni_Traffico_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis__condizioni_traffico */
export type Pis__Condizioni_Traffico_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis._condizioni_traffico" */
export enum Pis__Condizioni_Traffico_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis._condizioni_traffico" */
export type Pis__Condizioni_Traffico_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis__Condizioni_Traffico_Stddev_Fields = {
  __typename?: 'pis__condizioni_traffico_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis__Condizioni_Traffico_Stddev_Pop_Fields = {
  __typename?: 'pis__condizioni_traffico_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis__Condizioni_Traffico_Stddev_Samp_Fields = {
  __typename?: 'pis__condizioni_traffico_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis__Condizioni_Traffico_Sum_Fields = {
  __typename?: 'pis__condizioni_traffico_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis._condizioni_traffico" */
export enum Pis__Condizioni_Traffico_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis__Condizioni_Traffico_Var_Pop_Fields = {
  __typename?: 'pis__condizioni_traffico_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis__Condizioni_Traffico_Var_Samp_Fields = {
  __typename?: 'pis__condizioni_traffico_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis__Condizioni_Traffico_Variance_Fields = {
  __typename?: 'pis__condizioni_traffico_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis._forma_dissesto" */
export type Pis__Forma_Dissesto = {
  __typename?: 'pis__forma_dissesto';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Aggregate = {
  __typename?: 'pis__forma_dissesto_aggregate';
  aggregate?: Maybe<Pis__Forma_Dissesto_Aggregate_Fields>;
  nodes: Array<Pis__Forma_Dissesto>;
};

/** aggregate fields of "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Aggregate_Fields = {
  __typename?: 'pis__forma_dissesto_aggregate_fields';
  avg?: Maybe<Pis__Forma_Dissesto_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis__Forma_Dissesto_Max_Fields>;
  min?: Maybe<Pis__Forma_Dissesto_Min_Fields>;
  stddev?: Maybe<Pis__Forma_Dissesto_Stddev_Fields>;
  stddev_pop?: Maybe<Pis__Forma_Dissesto_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis__Forma_Dissesto_Stddev_Samp_Fields>;
  sum?: Maybe<Pis__Forma_Dissesto_Sum_Fields>;
  var_pop?: Maybe<Pis__Forma_Dissesto_Var_Pop_Fields>;
  var_samp?: Maybe<Pis__Forma_Dissesto_Var_Samp_Fields>;
  variance?: Maybe<Pis__Forma_Dissesto_Variance_Fields>;
};


/** aggregate fields of "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis__Forma_Dissesto_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis__Forma_Dissesto_Avg_Fields = {
  __typename?: 'pis__forma_dissesto_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis._forma_dissesto". All fields are combined with a logical 'AND'. */
export type Pis__Forma_Dissesto_Bool_Exp = {
  _and?: Maybe<Array<Pis__Forma_Dissesto_Bool_Exp>>;
  _not?: Maybe<Pis__Forma_Dissesto_Bool_Exp>;
  _or?: Maybe<Array<Pis__Forma_Dissesto_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis._forma_dissesto" */
export enum Pis__Forma_Dissesto_Constraint {
  /** unique or primary key constraint */
  FormaDissestoPkey = '_forma_dissesto_pkey'
}

/** input type for incrementing numeric columns in table "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis__Forma_Dissesto_Max_Fields = {
  __typename?: 'pis__forma_dissesto_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis__Forma_Dissesto_Min_Fields = {
  __typename?: 'pis__forma_dissesto_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Mutation_Response = {
  __typename?: 'pis__forma_dissesto_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis__Forma_Dissesto>;
};

/** input type for inserting object relation for remote table "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Obj_Rel_Insert_Input = {
  data: Pis__Forma_Dissesto_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis__Forma_Dissesto_On_Conflict>;
};

/** on_conflict condition type for table "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_On_Conflict = {
  constraint: Pis__Forma_Dissesto_Constraint;
  update_columns?: Array<Pis__Forma_Dissesto_Update_Column>;
  where?: Maybe<Pis__Forma_Dissesto_Bool_Exp>;
};

/** Ordering options when selecting data from "pis._forma_dissesto". */
export type Pis__Forma_Dissesto_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis__forma_dissesto */
export type Pis__Forma_Dissesto_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis._forma_dissesto" */
export enum Pis__Forma_Dissesto_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis._forma_dissesto" */
export type Pis__Forma_Dissesto_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis__Forma_Dissesto_Stddev_Fields = {
  __typename?: 'pis__forma_dissesto_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis__Forma_Dissesto_Stddev_Pop_Fields = {
  __typename?: 'pis__forma_dissesto_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis__Forma_Dissesto_Stddev_Samp_Fields = {
  __typename?: 'pis__forma_dissesto_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis__Forma_Dissesto_Sum_Fields = {
  __typename?: 'pis__forma_dissesto_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis._forma_dissesto" */
export enum Pis__Forma_Dissesto_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis__Forma_Dissesto_Var_Pop_Fields = {
  __typename?: 'pis__forma_dissesto_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis__Forma_Dissesto_Var_Samp_Fields = {
  __typename?: 'pis__forma_dissesto_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis__Forma_Dissesto_Variance_Fields = {
  __typename?: 'pis__forma_dissesto_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi = {
  __typename?: 'pis__giorni_trascorsi';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Aggregate = {
  __typename?: 'pis__giorni_trascorsi_aggregate';
  aggregate?: Maybe<Pis__Giorni_Trascorsi_Aggregate_Fields>;
  nodes: Array<Pis__Giorni_Trascorsi>;
};

/** aggregate fields of "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Aggregate_Fields = {
  __typename?: 'pis__giorni_trascorsi_aggregate_fields';
  avg?: Maybe<Pis__Giorni_Trascorsi_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis__Giorni_Trascorsi_Max_Fields>;
  min?: Maybe<Pis__Giorni_Trascorsi_Min_Fields>;
  stddev?: Maybe<Pis__Giorni_Trascorsi_Stddev_Fields>;
  stddev_pop?: Maybe<Pis__Giorni_Trascorsi_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis__Giorni_Trascorsi_Stddev_Samp_Fields>;
  sum?: Maybe<Pis__Giorni_Trascorsi_Sum_Fields>;
  var_pop?: Maybe<Pis__Giorni_Trascorsi_Var_Pop_Fields>;
  var_samp?: Maybe<Pis__Giorni_Trascorsi_Var_Samp_Fields>;
  variance?: Maybe<Pis__Giorni_Trascorsi_Variance_Fields>;
};


/** aggregate fields of "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis__Giorni_Trascorsi_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis__Giorni_Trascorsi_Avg_Fields = {
  __typename?: 'pis__giorni_trascorsi_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis._giorni_trascorsi". All fields are combined with a logical 'AND'. */
export type Pis__Giorni_Trascorsi_Bool_Exp = {
  _and?: Maybe<Array<Pis__Giorni_Trascorsi_Bool_Exp>>;
  _not?: Maybe<Pis__Giorni_Trascorsi_Bool_Exp>;
  _or?: Maybe<Array<Pis__Giorni_Trascorsi_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis._giorni_trascorsi" */
export enum Pis__Giorni_Trascorsi_Constraint {
  /** unique or primary key constraint */
  GiorniTrascorsiPkey = '_giorni_trascorsi_pkey'
}

/** input type for incrementing numeric columns in table "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis__Giorni_Trascorsi_Max_Fields = {
  __typename?: 'pis__giorni_trascorsi_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis__Giorni_Trascorsi_Min_Fields = {
  __typename?: 'pis__giorni_trascorsi_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Mutation_Response = {
  __typename?: 'pis__giorni_trascorsi_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis__Giorni_Trascorsi>;
};

/** input type for inserting object relation for remote table "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Obj_Rel_Insert_Input = {
  data: Pis__Giorni_Trascorsi_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis__Giorni_Trascorsi_On_Conflict>;
};

/** on_conflict condition type for table "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_On_Conflict = {
  constraint: Pis__Giorni_Trascorsi_Constraint;
  update_columns?: Array<Pis__Giorni_Trascorsi_Update_Column>;
  where?: Maybe<Pis__Giorni_Trascorsi_Bool_Exp>;
};

/** Ordering options when selecting data from "pis._giorni_trascorsi". */
export type Pis__Giorni_Trascorsi_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis__giorni_trascorsi */
export type Pis__Giorni_Trascorsi_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis._giorni_trascorsi" */
export enum Pis__Giorni_Trascorsi_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis._giorni_trascorsi" */
export type Pis__Giorni_Trascorsi_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis__Giorni_Trascorsi_Stddev_Fields = {
  __typename?: 'pis__giorni_trascorsi_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis__Giorni_Trascorsi_Stddev_Pop_Fields = {
  __typename?: 'pis__giorni_trascorsi_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis__Giorni_Trascorsi_Stddev_Samp_Fields = {
  __typename?: 'pis__giorni_trascorsi_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis__Giorni_Trascorsi_Sum_Fields = {
  __typename?: 'pis__giorni_trascorsi_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis._giorni_trascorsi" */
export enum Pis__Giorni_Trascorsi_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis__Giorni_Trascorsi_Var_Pop_Fields = {
  __typename?: 'pis__giorni_trascorsi_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis__Giorni_Trascorsi_Var_Samp_Fields = {
  __typename?: 'pis__giorni_trascorsi_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis__Giorni_Trascorsi_Variance_Fields = {
  __typename?: 'pis__giorni_trascorsi_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis._materiale" */
export type Pis__Materiale = {
  __typename?: 'pis__materiale';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis._materiale" */
export type Pis__Materiale_Aggregate = {
  __typename?: 'pis__materiale_aggregate';
  aggregate?: Maybe<Pis__Materiale_Aggregate_Fields>;
  nodes: Array<Pis__Materiale>;
};

/** aggregate fields of "pis._materiale" */
export type Pis__Materiale_Aggregate_Fields = {
  __typename?: 'pis__materiale_aggregate_fields';
  avg?: Maybe<Pis__Materiale_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis__Materiale_Max_Fields>;
  min?: Maybe<Pis__Materiale_Min_Fields>;
  stddev?: Maybe<Pis__Materiale_Stddev_Fields>;
  stddev_pop?: Maybe<Pis__Materiale_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis__Materiale_Stddev_Samp_Fields>;
  sum?: Maybe<Pis__Materiale_Sum_Fields>;
  var_pop?: Maybe<Pis__Materiale_Var_Pop_Fields>;
  var_samp?: Maybe<Pis__Materiale_Var_Samp_Fields>;
  variance?: Maybe<Pis__Materiale_Variance_Fields>;
};


/** aggregate fields of "pis._materiale" */
export type Pis__Materiale_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis__Materiale_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis__Materiale_Avg_Fields = {
  __typename?: 'pis__materiale_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis._materiale". All fields are combined with a logical 'AND'. */
export type Pis__Materiale_Bool_Exp = {
  _and?: Maybe<Array<Pis__Materiale_Bool_Exp>>;
  _not?: Maybe<Pis__Materiale_Bool_Exp>;
  _or?: Maybe<Array<Pis__Materiale_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis._materiale" */
export enum Pis__Materiale_Constraint {
  /** unique or primary key constraint */
  MaterialePkey = '_materiale_pkey'
}

/** input type for incrementing numeric columns in table "pis._materiale" */
export type Pis__Materiale_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis._materiale" */
export type Pis__Materiale_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis__Materiale_Max_Fields = {
  __typename?: 'pis__materiale_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis__Materiale_Min_Fields = {
  __typename?: 'pis__materiale_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis._materiale" */
export type Pis__Materiale_Mutation_Response = {
  __typename?: 'pis__materiale_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis__Materiale>;
};

/** input type for inserting object relation for remote table "pis._materiale" */
export type Pis__Materiale_Obj_Rel_Insert_Input = {
  data: Pis__Materiale_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis__Materiale_On_Conflict>;
};

/** on_conflict condition type for table "pis._materiale" */
export type Pis__Materiale_On_Conflict = {
  constraint: Pis__Materiale_Constraint;
  update_columns?: Array<Pis__Materiale_Update_Column>;
  where?: Maybe<Pis__Materiale_Bool_Exp>;
};

/** Ordering options when selecting data from "pis._materiale". */
export type Pis__Materiale_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis__materiale */
export type Pis__Materiale_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis._materiale" */
export enum Pis__Materiale_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis._materiale" */
export type Pis__Materiale_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis__Materiale_Stddev_Fields = {
  __typename?: 'pis__materiale_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis__Materiale_Stddev_Pop_Fields = {
  __typename?: 'pis__materiale_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis__Materiale_Stddev_Samp_Fields = {
  __typename?: 'pis__materiale_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis__Materiale_Sum_Fields = {
  __typename?: 'pis__materiale_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis._materiale" */
export enum Pis__Materiale_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis__Materiale_Var_Pop_Fields = {
  __typename?: 'pis__materiale_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis__Materiale_Var_Samp_Fields = {
  __typename?: 'pis__materiale_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis__Materiale_Variance_Fields = {
  __typename?: 'pis__materiale_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis._priorita" */
export type Pis__Priorita = {
  __typename?: 'pis__priorita';
  created_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "pis._priorita" */
export type Pis__Priorita_Aggregate = {
  __typename?: 'pis__priorita_aggregate';
  aggregate?: Maybe<Pis__Priorita_Aggregate_Fields>;
  nodes: Array<Pis__Priorita>;
};

/** aggregate fields of "pis._priorita" */
export type Pis__Priorita_Aggregate_Fields = {
  __typename?: 'pis__priorita_aggregate_fields';
  avg?: Maybe<Pis__Priorita_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis__Priorita_Max_Fields>;
  min?: Maybe<Pis__Priorita_Min_Fields>;
  stddev?: Maybe<Pis__Priorita_Stddev_Fields>;
  stddev_pop?: Maybe<Pis__Priorita_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis__Priorita_Stddev_Samp_Fields>;
  sum?: Maybe<Pis__Priorita_Sum_Fields>;
  var_pop?: Maybe<Pis__Priorita_Var_Pop_Fields>;
  var_samp?: Maybe<Pis__Priorita_Var_Samp_Fields>;
  variance?: Maybe<Pis__Priorita_Variance_Fields>;
};


/** aggregate fields of "pis._priorita" */
export type Pis__Priorita_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis__Priorita_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis__Priorita_Avg_Fields = {
  __typename?: 'pis__priorita_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis._priorita". All fields are combined with a logical 'AND'. */
export type Pis__Priorita_Bool_Exp = {
  _and?: Maybe<Array<Pis__Priorita_Bool_Exp>>;
  _not?: Maybe<Pis__Priorita_Bool_Exp>;
  _or?: Maybe<Array<Pis__Priorita_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis._priorita" */
export enum Pis__Priorita_Constraint {
  /** unique or primary key constraint */
  PrioritaPkey = '_priorita_pkey'
}

/** input type for incrementing numeric columns in table "pis._priorita" */
export type Pis__Priorita_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis._priorita" */
export type Pis__Priorita_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis__Priorita_Max_Fields = {
  __typename?: 'pis__priorita_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis__Priorita_Min_Fields = {
  __typename?: 'pis__priorita_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis._priorita" */
export type Pis__Priorita_Mutation_Response = {
  __typename?: 'pis__priorita_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis__Priorita>;
};

/** input type for inserting object relation for remote table "pis._priorita" */
export type Pis__Priorita_Obj_Rel_Insert_Input = {
  data: Pis__Priorita_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis__Priorita_On_Conflict>;
};

/** on_conflict condition type for table "pis._priorita" */
export type Pis__Priorita_On_Conflict = {
  constraint: Pis__Priorita_Constraint;
  update_columns?: Array<Pis__Priorita_Update_Column>;
  where?: Maybe<Pis__Priorita_Bool_Exp>;
};

/** Ordering options when selecting data from "pis._priorita". */
export type Pis__Priorita_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis__priorita */
export type Pis__Priorita_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis._priorita" */
export enum Pis__Priorita_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis._priorita" */
export type Pis__Priorita_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis__Priorita_Stddev_Fields = {
  __typename?: 'pis__priorita_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis__Priorita_Stddev_Pop_Fields = {
  __typename?: 'pis__priorita_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis__Priorita_Stddev_Samp_Fields = {
  __typename?: 'pis__priorita_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis__Priorita_Sum_Fields = {
  __typename?: 'pis__priorita_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis._priorita" */
export enum Pis__Priorita_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis__Priorita_Var_Pop_Fields = {
  __typename?: 'pis__priorita_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis__Priorita_Var_Samp_Fields = {
  __typename?: 'pis__priorita_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis__Priorita_Variance_Fields = {
  __typename?: 'pis__priorita_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione = {
  __typename?: 'pis__stato_segnalazione';
  text: Scalars['String'];
};

/** aggregated selection of "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione_Aggregate = {
  __typename?: 'pis__stato_segnalazione_aggregate';
  aggregate?: Maybe<Pis__Stato_Segnalazione_Aggregate_Fields>;
  nodes: Array<Pis__Stato_Segnalazione>;
};

/** aggregate fields of "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione_Aggregate_Fields = {
  __typename?: 'pis__stato_segnalazione_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Pis__Stato_Segnalazione_Max_Fields>;
  min?: Maybe<Pis__Stato_Segnalazione_Min_Fields>;
};


/** aggregate fields of "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis__Stato_Segnalazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "pis._stato_segnalazione". All fields are combined with a logical 'AND'. */
export type Pis__Stato_Segnalazione_Bool_Exp = {
  _and?: Maybe<Array<Pis__Stato_Segnalazione_Bool_Exp>>;
  _not?: Maybe<Pis__Stato_Segnalazione_Bool_Exp>;
  _or?: Maybe<Array<Pis__Stato_Segnalazione_Bool_Exp>>;
  text?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis._stato_segnalazione" */
export enum Pis__Stato_Segnalazione_Constraint {
  /** unique or primary key constraint */
  StatoSegnalazionePkey = '_stato_segnalazione_pkey'
}

export enum Pis__Stato_Segnalazione_Enum {
  Aperta = 'APERTA',
  Assegnata = 'ASSEGNATA',
  Bozza = 'BOZZA',
  Completata = 'COMPLETATA',
  Pre = 'PRE',
  Protocollazione = 'PROTOCOLLAZIONE',
  Rimandata = 'RIMANDATA',
  Risolta = 'RISOLTA',
  Sospesa = 'SOSPESA'
}

/** Boolean expression to compare columns of type "pis__stato_segnalazione_enum". All fields are combined with logical 'AND'. */
export type Pis__Stato_Segnalazione_Enum_Comparison_Exp = {
  _eq?: Maybe<Pis__Stato_Segnalazione_Enum>;
  _in?: Maybe<Array<Pis__Stato_Segnalazione_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Pis__Stato_Segnalazione_Enum>;
  _nin?: Maybe<Array<Pis__Stato_Segnalazione_Enum>>;
};

/** input type for inserting data into table "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione_Insert_Input = {
  text?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Pis__Stato_Segnalazione_Max_Fields = {
  __typename?: 'pis__stato_segnalazione_max_fields';
  text?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Pis__Stato_Segnalazione_Min_Fields = {
  __typename?: 'pis__stato_segnalazione_min_fields';
  text?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione_Mutation_Response = {
  __typename?: 'pis__stato_segnalazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis__Stato_Segnalazione>;
};

/** on_conflict condition type for table "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione_On_Conflict = {
  constraint: Pis__Stato_Segnalazione_Constraint;
  update_columns?: Array<Pis__Stato_Segnalazione_Update_Column>;
  where?: Maybe<Pis__Stato_Segnalazione_Bool_Exp>;
};

/** Ordering options when selecting data from "pis._stato_segnalazione". */
export type Pis__Stato_Segnalazione_Order_By = {
  text?: Maybe<Order_By>;
};

/** primary key columns input for table: pis__stato_segnalazione */
export type Pis__Stato_Segnalazione_Pk_Columns_Input = {
  text: Scalars['String'];
};

/** select columns of table "pis._stato_segnalazione" */
export enum Pis__Stato_Segnalazione_Select_Column {
  /** column name */
  Text = 'text'
}

/** input type for updating data in table "pis._stato_segnalazione" */
export type Pis__Stato_Segnalazione_Set_Input = {
  text?: Maybe<Scalars['String']>;
};

/** update columns of table "pis._stato_segnalazione" */
export enum Pis__Stato_Segnalazione_Update_Column {
  /** column name */
  Text = 'text'
}

/** columns and relationships of "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto = {
  __typename?: 'pis__tipologia_dissesto';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  intervento?: Maybe<Scalars['String']>;
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Aggregate = {
  __typename?: 'pis__tipologia_dissesto_aggregate';
  aggregate?: Maybe<Pis__Tipologia_Dissesto_Aggregate_Fields>;
  nodes: Array<Pis__Tipologia_Dissesto>;
};

/** aggregate fields of "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Aggregate_Fields = {
  __typename?: 'pis__tipologia_dissesto_aggregate_fields';
  avg?: Maybe<Pis__Tipologia_Dissesto_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis__Tipologia_Dissesto_Max_Fields>;
  min?: Maybe<Pis__Tipologia_Dissesto_Min_Fields>;
  stddev?: Maybe<Pis__Tipologia_Dissesto_Stddev_Fields>;
  stddev_pop?: Maybe<Pis__Tipologia_Dissesto_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis__Tipologia_Dissesto_Stddev_Samp_Fields>;
  sum?: Maybe<Pis__Tipologia_Dissesto_Sum_Fields>;
  var_pop?: Maybe<Pis__Tipologia_Dissesto_Var_Pop_Fields>;
  var_samp?: Maybe<Pis__Tipologia_Dissesto_Var_Samp_Fields>;
  variance?: Maybe<Pis__Tipologia_Dissesto_Variance_Fields>;
};


/** aggregate fields of "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis__Tipologia_Dissesto_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis__Tipologia_Dissesto_Avg_Fields = {
  __typename?: 'pis__tipologia_dissesto_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis._tipologia_dissesto". All fields are combined with a logical 'AND'. */
export type Pis__Tipologia_Dissesto_Bool_Exp = {
  _and?: Maybe<Array<Pis__Tipologia_Dissesto_Bool_Exp>>;
  _not?: Maybe<Pis__Tipologia_Dissesto_Bool_Exp>;
  _or?: Maybe<Array<Pis__Tipologia_Dissesto_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  intervento?: Maybe<String_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis._tipologia_dissesto" */
export enum Pis__Tipologia_Dissesto_Constraint {
  /** unique or primary key constraint */
  TipologiaDissestoPkey = '_tipologia_dissesto_pkey'
}

/** input type for incrementing numeric columns in table "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis__Tipologia_Dissesto_Max_Fields = {
  __typename?: 'pis__tipologia_dissesto_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis__Tipologia_Dissesto_Min_Fields = {
  __typename?: 'pis__tipologia_dissesto_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Mutation_Response = {
  __typename?: 'pis__tipologia_dissesto_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis__Tipologia_Dissesto>;
};

/** input type for inserting object relation for remote table "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Obj_Rel_Insert_Input = {
  data: Pis__Tipologia_Dissesto_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis__Tipologia_Dissesto_On_Conflict>;
};

/** on_conflict condition type for table "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_On_Conflict = {
  constraint: Pis__Tipologia_Dissesto_Constraint;
  update_columns?: Array<Pis__Tipologia_Dissesto_Update_Column>;
  where?: Maybe<Pis__Tipologia_Dissesto_Bool_Exp>;
};

/** Ordering options when selecting data from "pis._tipologia_dissesto". */
export type Pis__Tipologia_Dissesto_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis__tipologia_dissesto */
export type Pis__Tipologia_Dissesto_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis._tipologia_dissesto" */
export enum Pis__Tipologia_Dissesto_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Intervento = 'intervento',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis._tipologia_dissesto" */
export type Pis__Tipologia_Dissesto_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis__Tipologia_Dissesto_Stddev_Fields = {
  __typename?: 'pis__tipologia_dissesto_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis__Tipologia_Dissesto_Stddev_Pop_Fields = {
  __typename?: 'pis__tipologia_dissesto_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis__Tipologia_Dissesto_Stddev_Samp_Fields = {
  __typename?: 'pis__tipologia_dissesto_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis__Tipologia_Dissesto_Sum_Fields = {
  __typename?: 'pis__tipologia_dissesto_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis._tipologia_dissesto" */
export enum Pis__Tipologia_Dissesto_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Intervento = 'intervento',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis__Tipologia_Dissesto_Var_Pop_Fields = {
  __typename?: 'pis__tipologia_dissesto_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis__Tipologia_Dissesto_Var_Samp_Fields = {
  __typename?: 'pis__tipologia_dissesto_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis__Tipologia_Dissesto_Variance_Fields = {
  __typename?: 'pis__tipologia_dissesto_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra = {
  __typename?: 'pis_assegnazione_squadra';
  caposquadra: Scalars['Boolean'];
  delete: Scalars['Boolean'];
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  inizio_validita: Scalars['timestamptz'];
  membro: Scalars['jsonb'];
  /** An object relationship */
  squadra: Pis_Squadra;
  squadra_id: Scalars['Int'];
};


/** columns and relationships of "pis.assegnazione_squadra" */
export type Pis_Assegnazione_SquadraMembroArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Aggregate = {
  __typename?: 'pis_assegnazione_squadra_aggregate';
  aggregate?: Maybe<Pis_Assegnazione_Squadra_Aggregate_Fields>;
  nodes: Array<Pis_Assegnazione_Squadra>;
};

/** aggregate fields of "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Aggregate_Fields = {
  __typename?: 'pis_assegnazione_squadra_aggregate_fields';
  avg?: Maybe<Pis_Assegnazione_Squadra_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Assegnazione_Squadra_Max_Fields>;
  min?: Maybe<Pis_Assegnazione_Squadra_Min_Fields>;
  stddev?: Maybe<Pis_Assegnazione_Squadra_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Assegnazione_Squadra_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Assegnazione_Squadra_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Assegnazione_Squadra_Sum_Fields>;
  var_pop?: Maybe<Pis_Assegnazione_Squadra_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Assegnazione_Squadra_Var_Samp_Fields>;
  variance?: Maybe<Pis_Assegnazione_Squadra_Variance_Fields>;
};


/** aggregate fields of "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Assegnazione_Squadra_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Aggregate_Order_By = {
  avg?: Maybe<Pis_Assegnazione_Squadra_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Assegnazione_Squadra_Max_Order_By>;
  min?: Maybe<Pis_Assegnazione_Squadra_Min_Order_By>;
  stddev?: Maybe<Pis_Assegnazione_Squadra_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Assegnazione_Squadra_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Assegnazione_Squadra_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Assegnazione_Squadra_Sum_Order_By>;
  var_pop?: Maybe<Pis_Assegnazione_Squadra_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Assegnazione_Squadra_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Assegnazione_Squadra_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pis_Assegnazione_Squadra_Append_Input = {
  membro?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Arr_Rel_Insert_Input = {
  data: Array<Pis_Assegnazione_Squadra_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Assegnazione_Squadra_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Assegnazione_Squadra_Avg_Fields = {
  __typename?: 'pis_assegnazione_squadra_avg_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Avg_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.assegnazione_squadra". All fields are combined with a logical 'AND'. */
export type Pis_Assegnazione_Squadra_Bool_Exp = {
  _and?: Maybe<Array<Pis_Assegnazione_Squadra_Bool_Exp>>;
  _not?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
  _or?: Maybe<Array<Pis_Assegnazione_Squadra_Bool_Exp>>;
  caposquadra?: Maybe<Boolean_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  fine_validita?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  inizio_validita?: Maybe<Timestamptz_Comparison_Exp>;
  membro?: Maybe<Jsonb_Comparison_Exp>;
  squadra?: Maybe<Pis_Squadra_Bool_Exp>;
  squadra_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.assegnazione_squadra" */
export enum Pis_Assegnazione_Squadra_Constraint {
  /** unique or primary key constraint */
  AssegnazioneSquadraPkey = 'assegnazione_squadra_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pis_Assegnazione_Squadra_Delete_At_Path_Input = {
  membro?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pis_Assegnazione_Squadra_Delete_Elem_Input = {
  membro?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pis_Assegnazione_Squadra_Delete_Key_Input = {
  membro?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Insert_Input = {
  caposquadra?: Maybe<Scalars['Boolean']>;
  delete?: Maybe<Scalars['Boolean']>;
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  membro?: Maybe<Scalars['jsonb']>;
  squadra?: Maybe<Pis_Squadra_Obj_Rel_Insert_Input>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Pis_Assegnazione_Squadra_Max_Fields = {
  __typename?: 'pis_assegnazione_squadra_max_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Max_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Assegnazione_Squadra_Min_Fields = {
  __typename?: 'pis_assegnazione_squadra_min_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Min_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Mutation_Response = {
  __typename?: 'pis_assegnazione_squadra_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Assegnazione_Squadra>;
};

/** on_conflict condition type for table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_On_Conflict = {
  constraint: Pis_Assegnazione_Squadra_Constraint;
  update_columns?: Array<Pis_Assegnazione_Squadra_Update_Column>;
  where?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.assegnazione_squadra". */
export type Pis_Assegnazione_Squadra_Order_By = {
  caposquadra?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  membro?: Maybe<Order_By>;
  squadra?: Maybe<Pis_Squadra_Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_assegnazione_squadra */
export type Pis_Assegnazione_Squadra_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pis_Assegnazione_Squadra_Prepend_Input = {
  membro?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "pis.assegnazione_squadra" */
export enum Pis_Assegnazione_Squadra_Select_Column {
  /** column name */
  Caposquadra = 'caposquadra',
  /** column name */
  Delete = 'delete',
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  Membro = 'membro',
  /** column name */
  SquadraId = 'squadra_id'
}

/** input type for updating data in table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Set_Input = {
  caposquadra?: Maybe<Scalars['Boolean']>;
  delete?: Maybe<Scalars['Boolean']>;
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  membro?: Maybe<Scalars['jsonb']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Pis_Assegnazione_Squadra_Stddev_Fields = {
  __typename?: 'pis_assegnazione_squadra_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Assegnazione_Squadra_Stddev_Pop_Fields = {
  __typename?: 'pis_assegnazione_squadra_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Assegnazione_Squadra_Stddev_Samp_Fields = {
  __typename?: 'pis_assegnazione_squadra_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Assegnazione_Squadra_Sum_Fields = {
  __typename?: 'pis_assegnazione_squadra_sum_fields';
  id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Sum_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** update columns of table "pis.assegnazione_squadra" */
export enum Pis_Assegnazione_Squadra_Update_Column {
  /** column name */
  Caposquadra = 'caposquadra',
  /** column name */
  Delete = 'delete',
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  Membro = 'membro',
  /** column name */
  SquadraId = 'squadra_id'
}

/** aggregate var_pop on columns */
export type Pis_Assegnazione_Squadra_Var_Pop_Fields = {
  __typename?: 'pis_assegnazione_squadra_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Assegnazione_Squadra_Var_Samp_Fields = {
  __typename?: 'pis_assegnazione_squadra_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Assegnazione_Squadra_Variance_Fields = {
  __typename?: 'pis_assegnazione_squadra_variance_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.assegnazione_squadra" */
export type Pis_Assegnazione_Squadra_Variance_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** columns and relationships of "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate = {
  __typename?: 'pis_attrezzature_impiegate';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  intervento: Pis_Intervento;
  intervento_id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Aggregate = {
  __typename?: 'pis_attrezzature_impiegate_aggregate';
  aggregate?: Maybe<Pis_Attrezzature_Impiegate_Aggregate_Fields>;
  nodes: Array<Pis_Attrezzature_Impiegate>;
};

/** aggregate fields of "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Aggregate_Fields = {
  __typename?: 'pis_attrezzature_impiegate_aggregate_fields';
  avg?: Maybe<Pis_Attrezzature_Impiegate_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Attrezzature_Impiegate_Max_Fields>;
  min?: Maybe<Pis_Attrezzature_Impiegate_Min_Fields>;
  stddev?: Maybe<Pis_Attrezzature_Impiegate_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Attrezzature_Impiegate_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Attrezzature_Impiegate_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Attrezzature_Impiegate_Sum_Fields>;
  var_pop?: Maybe<Pis_Attrezzature_Impiegate_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Attrezzature_Impiegate_Var_Samp_Fields>;
  variance?: Maybe<Pis_Attrezzature_Impiegate_Variance_Fields>;
};


/** aggregate fields of "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Attrezzature_Impiegate_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Aggregate_Order_By = {
  avg?: Maybe<Pis_Attrezzature_Impiegate_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Attrezzature_Impiegate_Max_Order_By>;
  min?: Maybe<Pis_Attrezzature_Impiegate_Min_Order_By>;
  stddev?: Maybe<Pis_Attrezzature_Impiegate_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Attrezzature_Impiegate_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Attrezzature_Impiegate_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Attrezzature_Impiegate_Sum_Order_By>;
  var_pop?: Maybe<Pis_Attrezzature_Impiegate_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Attrezzature_Impiegate_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Attrezzature_Impiegate_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Arr_Rel_Insert_Input = {
  data: Array<Pis_Attrezzature_Impiegate_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Attrezzature_Impiegate_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Attrezzature_Impiegate_Avg_Fields = {
  __typename?: 'pis_attrezzature_impiegate_avg_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Avg_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.attrezzature_impiegate". All fields are combined with a logical 'AND'. */
export type Pis_Attrezzature_Impiegate_Bool_Exp = {
  _and?: Maybe<Array<Pis_Attrezzature_Impiegate_Bool_Exp>>;
  _not?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
  _or?: Maybe<Array<Pis_Attrezzature_Impiegate_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  intervento?: Maybe<Pis_Intervento_Bool_Exp>;
  intervento_id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  quantita?: Maybe<Float8_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.attrezzature_impiegate" */
export enum Pis_Attrezzature_Impiegate_Constraint {
  /** unique or primary key constraint */
  AttrezzatureImpiegatePkey = 'attrezzature_impiegate_pkey'
}

/** input type for incrementing numeric columns in table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Pis_Intervento_Obj_Rel_Insert_Input>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis_Attrezzature_Impiegate_Max_Fields = {
  __typename?: 'pis_attrezzature_impiegate_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Attrezzature_Impiegate_Min_Fields = {
  __typename?: 'pis_attrezzature_impiegate_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Mutation_Response = {
  __typename?: 'pis_attrezzature_impiegate_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Attrezzature_Impiegate>;
};

/** on_conflict condition type for table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_On_Conflict = {
  constraint: Pis_Attrezzature_Impiegate_Constraint;
  update_columns?: Array<Pis_Attrezzature_Impiegate_Update_Column>;
  where?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.attrezzature_impiegate". */
export type Pis_Attrezzature_Impiegate_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento?: Maybe<Pis_Intervento_Order_By>;
  intervento_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_attrezzature_impiegate */
export type Pis_Attrezzature_Impiegate_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.attrezzature_impiegate" */
export enum Pis_Attrezzature_Impiegate_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Quantita = 'quantita',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Attrezzature_Impiegate_Stddev_Fields = {
  __typename?: 'pis_attrezzature_impiegate_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Attrezzature_Impiegate_Stddev_Pop_Fields = {
  __typename?: 'pis_attrezzature_impiegate_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Attrezzature_Impiegate_Stddev_Samp_Fields = {
  __typename?: 'pis_attrezzature_impiegate_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Attrezzature_Impiegate_Sum_Fields = {
  __typename?: 'pis_attrezzature_impiegate_sum_fields';
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Sum_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** update columns of table "pis.attrezzature_impiegate" */
export enum Pis_Attrezzature_Impiegate_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Quantita = 'quantita',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Attrezzature_Impiegate_Var_Pop_Fields = {
  __typename?: 'pis_attrezzature_impiegate_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Attrezzature_Impiegate_Var_Samp_Fields = {
  __typename?: 'pis_attrezzature_impiegate_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Attrezzature_Impiegate_Variance_Fields = {
  __typename?: 'pis_attrezzature_impiegate_variance_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.attrezzature_impiegate" */
export type Pis_Attrezzature_Impiegate_Variance_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** columns and relationships of "pis.diario" */
export type Pis_Diario = {
  __typename?: 'pis_diario';
  allegato?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  messaggio?: Maybe<Scalars['String']>;
  /** An object relationship */
  segnalazione: Pis_Segnalazione;
  segnalazione_id: Scalars['Int'];
  utente: Scalars['jsonb'];
};


/** columns and relationships of "pis.diario" */
export type Pis_DiarioUtenteArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "pis.diario" */
export type Pis_Diario_Aggregate = {
  __typename?: 'pis_diario_aggregate';
  aggregate?: Maybe<Pis_Diario_Aggregate_Fields>;
  nodes: Array<Pis_Diario>;
};

/** aggregate fields of "pis.diario" */
export type Pis_Diario_Aggregate_Fields = {
  __typename?: 'pis_diario_aggregate_fields';
  avg?: Maybe<Pis_Diario_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Diario_Max_Fields>;
  min?: Maybe<Pis_Diario_Min_Fields>;
  stddev?: Maybe<Pis_Diario_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Diario_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Diario_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Diario_Sum_Fields>;
  var_pop?: Maybe<Pis_Diario_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Diario_Var_Samp_Fields>;
  variance?: Maybe<Pis_Diario_Variance_Fields>;
};


/** aggregate fields of "pis.diario" */
export type Pis_Diario_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Diario_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.diario" */
export type Pis_Diario_Aggregate_Order_By = {
  avg?: Maybe<Pis_Diario_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Diario_Max_Order_By>;
  min?: Maybe<Pis_Diario_Min_Order_By>;
  stddev?: Maybe<Pis_Diario_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Diario_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Diario_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Diario_Sum_Order_By>;
  var_pop?: Maybe<Pis_Diario_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Diario_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Diario_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pis_Diario_Append_Input = {
  utente?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "pis.diario" */
export type Pis_Diario_Arr_Rel_Insert_Input = {
  data: Array<Pis_Diario_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Diario_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Diario_Avg_Fields = {
  __typename?: 'pis_diario_avg_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.diario" */
export type Pis_Diario_Avg_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.diario". All fields are combined with a logical 'AND'. */
export type Pis_Diario_Bool_Exp = {
  _and?: Maybe<Array<Pis_Diario_Bool_Exp>>;
  _not?: Maybe<Pis_Diario_Bool_Exp>;
  _or?: Maybe<Array<Pis_Diario_Bool_Exp>>;
  allegato?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  messaggio?: Maybe<String_Comparison_Exp>;
  segnalazione?: Maybe<Pis_Segnalazione_Bool_Exp>;
  segnalazione_id?: Maybe<Int_Comparison_Exp>;
  utente?: Maybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.diario" */
export enum Pis_Diario_Constraint {
  /** unique or primary key constraint */
  DiarioPkey = 'diario_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pis_Diario_Delete_At_Path_Input = {
  utente?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pis_Diario_Delete_Elem_Input = {
  utente?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pis_Diario_Delete_Key_Input = {
  utente?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "pis.diario" */
export type Pis_Diario_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.diario" */
export type Pis_Diario_Insert_Input = {
  allegato?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  messaggio?: Maybe<Scalars['String']>;
  segnalazione?: Maybe<Pis_Segnalazione_Obj_Rel_Insert_Input>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  utente?: Maybe<Scalars['jsonb']>;
};

/** aggregate max on columns */
export type Pis_Diario_Max_Fields = {
  __typename?: 'pis_diario_max_fields';
  allegato?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  messaggio?: Maybe<Scalars['String']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "pis.diario" */
export type Pis_Diario_Max_Order_By = {
  allegato?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  messaggio?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Diario_Min_Fields = {
  __typename?: 'pis_diario_min_fields';
  allegato?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  messaggio?: Maybe<Scalars['String']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "pis.diario" */
export type Pis_Diario_Min_Order_By = {
  allegato?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  messaggio?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.diario" */
export type Pis_Diario_Mutation_Response = {
  __typename?: 'pis_diario_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Diario>;
};

/** on_conflict condition type for table "pis.diario" */
export type Pis_Diario_On_Conflict = {
  constraint: Pis_Diario_Constraint;
  update_columns?: Array<Pis_Diario_Update_Column>;
  where?: Maybe<Pis_Diario_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.diario". */
export type Pis_Diario_Order_By = {
  allegato?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  messaggio?: Maybe<Order_By>;
  segnalazione?: Maybe<Pis_Segnalazione_Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  utente?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_diario */
export type Pis_Diario_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pis_Diario_Prepend_Input = {
  utente?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "pis.diario" */
export enum Pis_Diario_Select_Column {
  /** column name */
  Allegato = 'allegato',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Messaggio = 'messaggio',
  /** column name */
  SegnalazioneId = 'segnalazione_id',
  /** column name */
  Utente = 'utente'
}

/** input type for updating data in table "pis.diario" */
export type Pis_Diario_Set_Input = {
  allegato?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  messaggio?: Maybe<Scalars['String']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  utente?: Maybe<Scalars['jsonb']>;
};

/** aggregate stddev on columns */
export type Pis_Diario_Stddev_Fields = {
  __typename?: 'pis_diario_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.diario" */
export type Pis_Diario_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Diario_Stddev_Pop_Fields = {
  __typename?: 'pis_diario_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.diario" */
export type Pis_Diario_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Diario_Stddev_Samp_Fields = {
  __typename?: 'pis_diario_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.diario" */
export type Pis_Diario_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Diario_Sum_Fields = {
  __typename?: 'pis_diario_sum_fields';
  id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "pis.diario" */
export type Pis_Diario_Sum_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** update columns of table "pis.diario" */
export enum Pis_Diario_Update_Column {
  /** column name */
  Allegato = 'allegato',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Messaggio = 'messaggio',
  /** column name */
  SegnalazioneId = 'segnalazione_id',
  /** column name */
  Utente = 'utente'
}

/** aggregate var_pop on columns */
export type Pis_Diario_Var_Pop_Fields = {
  __typename?: 'pis_diario_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.diario" */
export type Pis_Diario_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Diario_Var_Samp_Fields = {
  __typename?: 'pis_diario_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.diario" */
export type Pis_Diario_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Diario_Variance_Fields = {
  __typename?: 'pis_diario_variance_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.diario" */
export type Pis_Diario_Variance_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** columns and relationships of "pis.dissesto" */
export type Pis_Dissesto = {
  __typename?: 'pis_dissesto';
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  forma?: Maybe<Pis__Forma_Dissesto>;
  forma_id?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  note?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['float8']>;
  prima_dimensione?: Maybe<Scalars['float8']>;
  profondita?: Maybe<Scalars['float8']>;
  seconda_dimensione?: Maybe<Scalars['float8']>;
  /** An array relationship */
  segnalazioni: Array<Pis_Segnalazione>;
  /** An aggregate relationship */
  segnalazioni_aggregate: Pis_Segnalazione_Aggregate;
  terza_dimensione?: Maybe<Scalars['float8']>;
  /** An object relationship */
  tipologia?: Maybe<Pis__Tipologia_Dissesto>;
  tipologia_dissesto_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "pis.dissesto" */
export type Pis_DissestoSegnalazioniArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


/** columns and relationships of "pis.dissesto" */
export type Pis_DissestoSegnalazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};

/** aggregated selection of "pis.dissesto" */
export type Pis_Dissesto_Aggregate = {
  __typename?: 'pis_dissesto_aggregate';
  aggregate?: Maybe<Pis_Dissesto_Aggregate_Fields>;
  nodes: Array<Pis_Dissesto>;
};

/** aggregate fields of "pis.dissesto" */
export type Pis_Dissesto_Aggregate_Fields = {
  __typename?: 'pis_dissesto_aggregate_fields';
  avg?: Maybe<Pis_Dissesto_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Dissesto_Max_Fields>;
  min?: Maybe<Pis_Dissesto_Min_Fields>;
  stddev?: Maybe<Pis_Dissesto_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Dissesto_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Dissesto_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Dissesto_Sum_Fields>;
  var_pop?: Maybe<Pis_Dissesto_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Dissesto_Var_Samp_Fields>;
  variance?: Maybe<Pis_Dissesto_Variance_Fields>;
};


/** aggregate fields of "pis.dissesto" */
export type Pis_Dissesto_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Dissesto_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis_Dissesto_Avg_Fields = {
  __typename?: 'pis_dissesto_avg_fields';
  forma_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  peso?: Maybe<Scalars['Float']>;
  prima_dimensione?: Maybe<Scalars['Float']>;
  profondita?: Maybe<Scalars['Float']>;
  seconda_dimensione?: Maybe<Scalars['Float']>;
  terza_dimensione?: Maybe<Scalars['Float']>;
  tipologia_dissesto_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis.dissesto". All fields are combined with a logical 'AND'. */
export type Pis_Dissesto_Bool_Exp = {
  _and?: Maybe<Array<Pis_Dissesto_Bool_Exp>>;
  _not?: Maybe<Pis_Dissesto_Bool_Exp>;
  _or?: Maybe<Array<Pis_Dissesto_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  forma?: Maybe<Pis__Forma_Dissesto_Bool_Exp>;
  forma_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  peso?: Maybe<Float8_Comparison_Exp>;
  prima_dimensione?: Maybe<Float8_Comparison_Exp>;
  profondita?: Maybe<Float8_Comparison_Exp>;
  seconda_dimensione?: Maybe<Float8_Comparison_Exp>;
  segnalazioni?: Maybe<Pis_Segnalazione_Bool_Exp>;
  terza_dimensione?: Maybe<Float8_Comparison_Exp>;
  tipologia?: Maybe<Pis__Tipologia_Dissesto_Bool_Exp>;
  tipologia_dissesto_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.dissesto" */
export enum Pis_Dissesto_Constraint {
  /** unique or primary key constraint */
  DissestoPkey = 'dissesto_pkey'
}

/** input type for incrementing numeric columns in table "pis.dissesto" */
export type Pis_Dissesto_Inc_Input = {
  forma_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  peso?: Maybe<Scalars['float8']>;
  prima_dimensione?: Maybe<Scalars['float8']>;
  profondita?: Maybe<Scalars['float8']>;
  seconda_dimensione?: Maybe<Scalars['float8']>;
  terza_dimensione?: Maybe<Scalars['float8']>;
  tipologia_dissesto_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.dissesto" */
export type Pis_Dissesto_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  forma?: Maybe<Pis__Forma_Dissesto_Obj_Rel_Insert_Input>;
  forma_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['float8']>;
  prima_dimensione?: Maybe<Scalars['float8']>;
  profondita?: Maybe<Scalars['float8']>;
  seconda_dimensione?: Maybe<Scalars['float8']>;
  segnalazioni?: Maybe<Pis_Segnalazione_Arr_Rel_Insert_Input>;
  terza_dimensione?: Maybe<Scalars['float8']>;
  tipologia?: Maybe<Pis__Tipologia_Dissesto_Obj_Rel_Insert_Input>;
  tipologia_dissesto_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis_Dissesto_Max_Fields = {
  __typename?: 'pis_dissesto_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  forma_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['float8']>;
  prima_dimensione?: Maybe<Scalars['float8']>;
  profondita?: Maybe<Scalars['float8']>;
  seconda_dimensione?: Maybe<Scalars['float8']>;
  terza_dimensione?: Maybe<Scalars['float8']>;
  tipologia_dissesto_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis_Dissesto_Min_Fields = {
  __typename?: 'pis_dissesto_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  forma_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['float8']>;
  prima_dimensione?: Maybe<Scalars['float8']>;
  profondita?: Maybe<Scalars['float8']>;
  seconda_dimensione?: Maybe<Scalars['float8']>;
  terza_dimensione?: Maybe<Scalars['float8']>;
  tipologia_dissesto_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis.dissesto" */
export type Pis_Dissesto_Mutation_Response = {
  __typename?: 'pis_dissesto_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Dissesto>;
};

/** input type for inserting object relation for remote table "pis.dissesto" */
export type Pis_Dissesto_Obj_Rel_Insert_Input = {
  data: Pis_Dissesto_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Dissesto_On_Conflict>;
};

/** on_conflict condition type for table "pis.dissesto" */
export type Pis_Dissesto_On_Conflict = {
  constraint: Pis_Dissesto_Constraint;
  update_columns?: Array<Pis_Dissesto_Update_Column>;
  where?: Maybe<Pis_Dissesto_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.dissesto". */
export type Pis_Dissesto_Order_By = {
  created_at?: Maybe<Order_By>;
  forma?: Maybe<Pis__Forma_Dissesto_Order_By>;
  forma_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  peso?: Maybe<Order_By>;
  prima_dimensione?: Maybe<Order_By>;
  profondita?: Maybe<Order_By>;
  seconda_dimensione?: Maybe<Order_By>;
  segnalazioni_aggregate?: Maybe<Pis_Segnalazione_Aggregate_Order_By>;
  terza_dimensione?: Maybe<Order_By>;
  tipologia?: Maybe<Pis__Tipologia_Dissesto_Order_By>;
  tipologia_dissesto_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_dissesto */
export type Pis_Dissesto_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.dissesto" */
export enum Pis_Dissesto_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FormaId = 'forma_id',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  Peso = 'peso',
  /** column name */
  PrimaDimensione = 'prima_dimensione',
  /** column name */
  Profondita = 'profondita',
  /** column name */
  SecondaDimensione = 'seconda_dimensione',
  /** column name */
  TerzaDimensione = 'terza_dimensione',
  /** column name */
  TipologiaDissestoId = 'tipologia_dissesto_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.dissesto" */
export type Pis_Dissesto_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  forma_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['float8']>;
  prima_dimensione?: Maybe<Scalars['float8']>;
  profondita?: Maybe<Scalars['float8']>;
  seconda_dimensione?: Maybe<Scalars['float8']>;
  terza_dimensione?: Maybe<Scalars['float8']>;
  tipologia_dissesto_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Dissesto_Stddev_Fields = {
  __typename?: 'pis_dissesto_stddev_fields';
  forma_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  peso?: Maybe<Scalars['Float']>;
  prima_dimensione?: Maybe<Scalars['Float']>;
  profondita?: Maybe<Scalars['Float']>;
  seconda_dimensione?: Maybe<Scalars['Float']>;
  terza_dimensione?: Maybe<Scalars['Float']>;
  tipologia_dissesto_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis_Dissesto_Stddev_Pop_Fields = {
  __typename?: 'pis_dissesto_stddev_pop_fields';
  forma_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  peso?: Maybe<Scalars['Float']>;
  prima_dimensione?: Maybe<Scalars['Float']>;
  profondita?: Maybe<Scalars['Float']>;
  seconda_dimensione?: Maybe<Scalars['Float']>;
  terza_dimensione?: Maybe<Scalars['Float']>;
  tipologia_dissesto_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis_Dissesto_Stddev_Samp_Fields = {
  __typename?: 'pis_dissesto_stddev_samp_fields';
  forma_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  peso?: Maybe<Scalars['Float']>;
  prima_dimensione?: Maybe<Scalars['Float']>;
  profondita?: Maybe<Scalars['Float']>;
  seconda_dimensione?: Maybe<Scalars['Float']>;
  terza_dimensione?: Maybe<Scalars['Float']>;
  tipologia_dissesto_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis_Dissesto_Sum_Fields = {
  __typename?: 'pis_dissesto_sum_fields';
  forma_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  peso?: Maybe<Scalars['float8']>;
  prima_dimensione?: Maybe<Scalars['float8']>;
  profondita?: Maybe<Scalars['float8']>;
  seconda_dimensione?: Maybe<Scalars['float8']>;
  terza_dimensione?: Maybe<Scalars['float8']>;
  tipologia_dissesto_id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis.dissesto" */
export enum Pis_Dissesto_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FormaId = 'forma_id',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  Peso = 'peso',
  /** column name */
  PrimaDimensione = 'prima_dimensione',
  /** column name */
  Profondita = 'profondita',
  /** column name */
  SecondaDimensione = 'seconda_dimensione',
  /** column name */
  TerzaDimensione = 'terza_dimensione',
  /** column name */
  TipologiaDissestoId = 'tipologia_dissesto_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Dissesto_Var_Pop_Fields = {
  __typename?: 'pis_dissesto_var_pop_fields';
  forma_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  peso?: Maybe<Scalars['Float']>;
  prima_dimensione?: Maybe<Scalars['Float']>;
  profondita?: Maybe<Scalars['Float']>;
  seconda_dimensione?: Maybe<Scalars['Float']>;
  terza_dimensione?: Maybe<Scalars['Float']>;
  tipologia_dissesto_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis_Dissesto_Var_Samp_Fields = {
  __typename?: 'pis_dissesto_var_samp_fields';
  forma_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  peso?: Maybe<Scalars['Float']>;
  prima_dimensione?: Maybe<Scalars['Float']>;
  profondita?: Maybe<Scalars['Float']>;
  seconda_dimensione?: Maybe<Scalars['Float']>;
  terza_dimensione?: Maybe<Scalars['Float']>;
  tipologia_dissesto_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis_Dissesto_Variance_Fields = {
  __typename?: 'pis_dissesto_variance_fields';
  forma_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  peso?: Maybe<Scalars['Float']>;
  prima_dimensione?: Maybe<Scalars['Float']>;
  profondita?: Maybe<Scalars['Float']>;
  seconda_dimensione?: Maybe<Scalars['Float']>;
  terza_dimensione?: Maybe<Scalars['Float']>;
  tipologia_dissesto_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis.evento" */
export type Pis_Evento = {
  __typename?: 'pis_evento';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  note?: Maybe<Scalars['String']>;
  /** An object relationship */
  protocollo?: Maybe<Protocollo_Protocollo>;
  protocollo_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  risolutore?: Maybe<Pis_Segnalazione>;
  risoluzione_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  segnalazione: Pis_Segnalazione;
  segnalazione_id: Scalars['Int'];
  /** An object relationship */
  squadra?: Maybe<Pis_Squadra>;
  squadra_id?: Maybe<Scalars['Int']>;
  stato: Pis__Stato_Segnalazione_Enum;
};

/** aggregated selection of "pis.evento" */
export type Pis_Evento_Aggregate = {
  __typename?: 'pis_evento_aggregate';
  aggregate?: Maybe<Pis_Evento_Aggregate_Fields>;
  nodes: Array<Pis_Evento>;
};

/** aggregate fields of "pis.evento" */
export type Pis_Evento_Aggregate_Fields = {
  __typename?: 'pis_evento_aggregate_fields';
  avg?: Maybe<Pis_Evento_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Evento_Max_Fields>;
  min?: Maybe<Pis_Evento_Min_Fields>;
  stddev?: Maybe<Pis_Evento_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Evento_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Evento_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Evento_Sum_Fields>;
  var_pop?: Maybe<Pis_Evento_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Evento_Var_Samp_Fields>;
  variance?: Maybe<Pis_Evento_Variance_Fields>;
};


/** aggregate fields of "pis.evento" */
export type Pis_Evento_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Evento_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.evento" */
export type Pis_Evento_Aggregate_Order_By = {
  avg?: Maybe<Pis_Evento_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Evento_Max_Order_By>;
  min?: Maybe<Pis_Evento_Min_Order_By>;
  stddev?: Maybe<Pis_Evento_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Evento_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Evento_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Evento_Sum_Order_By>;
  var_pop?: Maybe<Pis_Evento_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Evento_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Evento_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "pis.evento" */
export type Pis_Evento_Arr_Rel_Insert_Input = {
  data: Array<Pis_Evento_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Evento_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Evento_Avg_Fields = {
  __typename?: 'pis_evento_avg_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  risoluzione_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.evento" */
export type Pis_Evento_Avg_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.evento". All fields are combined with a logical 'AND'. */
export type Pis_Evento_Bool_Exp = {
  _and?: Maybe<Array<Pis_Evento_Bool_Exp>>;
  _not?: Maybe<Pis_Evento_Bool_Exp>;
  _or?: Maybe<Array<Pis_Evento_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  protocollo?: Maybe<Protocollo_Protocollo_Bool_Exp>;
  protocollo_id?: Maybe<Int_Comparison_Exp>;
  risolutore?: Maybe<Pis_Segnalazione_Bool_Exp>;
  risoluzione_id?: Maybe<Int_Comparison_Exp>;
  segnalazione?: Maybe<Pis_Segnalazione_Bool_Exp>;
  segnalazione_id?: Maybe<Int_Comparison_Exp>;
  squadra?: Maybe<Pis_Squadra_Bool_Exp>;
  squadra_id?: Maybe<Int_Comparison_Exp>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.evento" */
export enum Pis_Evento_Constraint {
  /** unique or primary key constraint */
  EventoPkey = 'evento_pkey'
}

/** input type for incrementing numeric columns in table "pis.evento" */
export type Pis_Evento_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  risoluzione_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.evento" */
export type Pis_Evento_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  protocollo?: Maybe<Protocollo_Protocollo_Obj_Rel_Insert_Input>;
  protocollo_id?: Maybe<Scalars['Int']>;
  risolutore?: Maybe<Pis_Segnalazione_Obj_Rel_Insert_Input>;
  risoluzione_id?: Maybe<Scalars['Int']>;
  segnalazione?: Maybe<Pis_Segnalazione_Obj_Rel_Insert_Input>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  squadra?: Maybe<Pis_Squadra_Obj_Rel_Insert_Input>;
  squadra_id?: Maybe<Scalars['Int']>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
};

/** aggregate max on columns */
export type Pis_Evento_Max_Fields = {
  __typename?: 'pis_evento_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  risoluzione_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "pis.evento" */
export type Pis_Evento_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Evento_Min_Fields = {
  __typename?: 'pis_evento_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  risoluzione_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "pis.evento" */
export type Pis_Evento_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.evento" */
export type Pis_Evento_Mutation_Response = {
  __typename?: 'pis_evento_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Evento>;
};

/** on_conflict condition type for table "pis.evento" */
export type Pis_Evento_On_Conflict = {
  constraint: Pis_Evento_Constraint;
  update_columns?: Array<Pis_Evento_Update_Column>;
  where?: Maybe<Pis_Evento_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.evento". */
export type Pis_Evento_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  protocollo?: Maybe<Protocollo_Protocollo_Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risolutore?: Maybe<Pis_Segnalazione_Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione?: Maybe<Pis_Segnalazione_Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra?: Maybe<Pis_Squadra_Order_By>;
  squadra_id?: Maybe<Order_By>;
  stato?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_evento */
export type Pis_Evento_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.evento" */
export enum Pis_Evento_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  RisoluzioneId = 'risoluzione_id',
  /** column name */
  SegnalazioneId = 'segnalazione_id',
  /** column name */
  SquadraId = 'squadra_id',
  /** column name */
  Stato = 'stato'
}

/** input type for updating data in table "pis.evento" */
export type Pis_Evento_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  risoluzione_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
};

/** aggregate stddev on columns */
export type Pis_Evento_Stddev_Fields = {
  __typename?: 'pis_evento_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  risoluzione_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.evento" */
export type Pis_Evento_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Evento_Stddev_Pop_Fields = {
  __typename?: 'pis_evento_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  risoluzione_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.evento" */
export type Pis_Evento_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Evento_Stddev_Samp_Fields = {
  __typename?: 'pis_evento_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  risoluzione_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.evento" */
export type Pis_Evento_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Evento_Sum_Fields = {
  __typename?: 'pis_evento_sum_fields';
  id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  risoluzione_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "pis.evento" */
export type Pis_Evento_Sum_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** update columns of table "pis.evento" */
export enum Pis_Evento_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  RisoluzioneId = 'risoluzione_id',
  /** column name */
  SegnalazioneId = 'segnalazione_id',
  /** column name */
  SquadraId = 'squadra_id',
  /** column name */
  Stato = 'stato'
}

/** aggregate var_pop on columns */
export type Pis_Evento_Var_Pop_Fields = {
  __typename?: 'pis_evento_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  risoluzione_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.evento" */
export type Pis_Evento_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Evento_Var_Samp_Fields = {
  __typename?: 'pis_evento_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  risoluzione_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.evento" */
export type Pis_Evento_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Evento_Variance_Fields = {
  __typename?: 'pis_evento_variance_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  risoluzione_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.evento" */
export type Pis_Evento_Variance_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  risoluzione_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** columns and relationships of "pis.intervento" */
export type Pis_Intervento = {
  __typename?: 'pis_intervento';
  assistenza_pm?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  attrezzature_impiegate: Array<Pis_Attrezzature_Impiegate>;
  /** An aggregate relationship */
  attrezzature_impiegate_aggregate: Pis_Attrezzature_Impiegate_Aggregate;
  /** An object relationship */
  condizioni_traffico?: Maybe<Pis__Condizioni_Traffico>;
  condizioni_traffico_id?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  difformita?: Maybe<Scalars['String']>;
  dissesto_difforme?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  giorni_trascorsi?: Maybe<Pis__Giorni_Trascorsi>;
  giorni_trascorsi_id?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  /** An array relationship */
  materiali_dissesto: Array<Pis_Materiale_Dissesto>;
  /** An aggregate relationship */
  materiali_dissesto_aggregate: Pis_Materiale_Dissesto_Aggregate;
  note?: Maybe<Scalars['String']>;
  /** An array relationship */
  segnalazioni: Array<Pis_Segnalazione>;
  /** An aggregate relationship */
  segnalazioni_aggregate: Pis_Segnalazione_Aggregate;
  /** An array relationship */
  segnaletica_lasciata: Array<Pis_Segnaletica_Lasciata>;
  /** An aggregate relationship */
  segnaletica_lasciata_aggregate: Pis_Segnaletica_Lasciata_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  veicoli_impiegati: Array<Pis_Veicoli_Impiegati>;
  /** An aggregate relationship */
  veicoli_impiegati_aggregate: Pis_Veicoli_Impiegati_Aggregate;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoAttrezzature_ImpiegateArgs = {
  distinct_on?: Maybe<Array<Pis_Attrezzature_Impiegate_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Attrezzature_Impiegate_Order_By>>;
  where?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoAttrezzature_Impiegate_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Attrezzature_Impiegate_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Attrezzature_Impiegate_Order_By>>;
  where?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoMateriali_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis_Materiale_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Materiale_Dissesto_Order_By>>;
  where?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoMateriali_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Materiale_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Materiale_Dissesto_Order_By>>;
  where?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoSegnalazioniArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoSegnalazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoSegnaletica_LasciataArgs = {
  distinct_on?: Maybe<Array<Pis_Segnaletica_Lasciata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnaletica_Lasciata_Order_By>>;
  where?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoSegnaletica_Lasciata_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnaletica_Lasciata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnaletica_Lasciata_Order_By>>;
  where?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoVeicoli_ImpiegatiArgs = {
  distinct_on?: Maybe<Array<Pis_Veicoli_Impiegati_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Veicoli_Impiegati_Order_By>>;
  where?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};


/** columns and relationships of "pis.intervento" */
export type Pis_InterventoVeicoli_Impiegati_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Veicoli_Impiegati_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Veicoli_Impiegati_Order_By>>;
  where?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};

/** aggregated selection of "pis.intervento" */
export type Pis_Intervento_Aggregate = {
  __typename?: 'pis_intervento_aggregate';
  aggregate?: Maybe<Pis_Intervento_Aggregate_Fields>;
  nodes: Array<Pis_Intervento>;
};

/** aggregate fields of "pis.intervento" */
export type Pis_Intervento_Aggregate_Fields = {
  __typename?: 'pis_intervento_aggregate_fields';
  avg?: Maybe<Pis_Intervento_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Intervento_Max_Fields>;
  min?: Maybe<Pis_Intervento_Min_Fields>;
  stddev?: Maybe<Pis_Intervento_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Intervento_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Intervento_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Intervento_Sum_Fields>;
  var_pop?: Maybe<Pis_Intervento_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Intervento_Var_Samp_Fields>;
  variance?: Maybe<Pis_Intervento_Variance_Fields>;
};


/** aggregate fields of "pis.intervento" */
export type Pis_Intervento_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Intervento_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis_Intervento_Avg_Fields = {
  __typename?: 'pis_intervento_avg_fields';
  condizioni_traffico_id?: Maybe<Scalars['Float']>;
  giorni_trascorsi_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis.intervento". All fields are combined with a logical 'AND'. */
export type Pis_Intervento_Bool_Exp = {
  _and?: Maybe<Array<Pis_Intervento_Bool_Exp>>;
  _not?: Maybe<Pis_Intervento_Bool_Exp>;
  _or?: Maybe<Array<Pis_Intervento_Bool_Exp>>;
  assistenza_pm?: Maybe<Boolean_Comparison_Exp>;
  attrezzature_impiegate?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
  condizioni_traffico?: Maybe<Pis__Condizioni_Traffico_Bool_Exp>;
  condizioni_traffico_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data_fine_lavori?: Maybe<Timestamptz_Comparison_Exp>;
  data_inizio_lavori?: Maybe<Timestamptz_Comparison_Exp>;
  difformita?: Maybe<String_Comparison_Exp>;
  dissesto_difforme?: Maybe<Boolean_Comparison_Exp>;
  giorni_trascorsi?: Maybe<Pis__Giorni_Trascorsi_Bool_Exp>;
  giorni_trascorsi_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  materiali_dissesto?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  segnalazioni?: Maybe<Pis_Segnalazione_Bool_Exp>;
  segnaletica_lasciata?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  veicoli_impiegati?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};

/** unique or primary key constraints on table "pis.intervento" */
export enum Pis_Intervento_Constraint {
  /** unique or primary key constraint */
  InterventoPkey = 'intervento_pkey'
}

/** input type for incrementing numeric columns in table "pis.intervento" */
export type Pis_Intervento_Inc_Input = {
  condizioni_traffico_id?: Maybe<Scalars['Int']>;
  giorni_trascorsi_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.intervento" */
export type Pis_Intervento_Insert_Input = {
  assistenza_pm?: Maybe<Scalars['Boolean']>;
  attrezzature_impiegate?: Maybe<Pis_Attrezzature_Impiegate_Arr_Rel_Insert_Input>;
  condizioni_traffico?: Maybe<Pis__Condizioni_Traffico_Obj_Rel_Insert_Input>;
  condizioni_traffico_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  difformita?: Maybe<Scalars['String']>;
  dissesto_difforme?: Maybe<Scalars['Boolean']>;
  giorni_trascorsi?: Maybe<Pis__Giorni_Trascorsi_Obj_Rel_Insert_Input>;
  giorni_trascorsi_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  materiali_dissesto?: Maybe<Pis_Materiale_Dissesto_Arr_Rel_Insert_Input>;
  note?: Maybe<Scalars['String']>;
  segnalazioni?: Maybe<Pis_Segnalazione_Arr_Rel_Insert_Input>;
  segnaletica_lasciata?: Maybe<Pis_Segnaletica_Lasciata_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicoli_impiegati?: Maybe<Pis_Veicoli_Impiegati_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Pis_Intervento_Max_Fields = {
  __typename?: 'pis_intervento_max_fields';
  condizioni_traffico_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  difformita?: Maybe<Scalars['String']>;
  giorni_trascorsi_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis_Intervento_Min_Fields = {
  __typename?: 'pis_intervento_min_fields';
  condizioni_traffico_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  difformita?: Maybe<Scalars['String']>;
  giorni_trascorsi_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis.intervento" */
export type Pis_Intervento_Mutation_Response = {
  __typename?: 'pis_intervento_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Intervento>;
};

/** input type for inserting object relation for remote table "pis.intervento" */
export type Pis_Intervento_Obj_Rel_Insert_Input = {
  data: Pis_Intervento_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Intervento_On_Conflict>;
};

/** on_conflict condition type for table "pis.intervento" */
export type Pis_Intervento_On_Conflict = {
  constraint: Pis_Intervento_Constraint;
  update_columns?: Array<Pis_Intervento_Update_Column>;
  where?: Maybe<Pis_Intervento_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.intervento". */
export type Pis_Intervento_Order_By = {
  assistenza_pm?: Maybe<Order_By>;
  attrezzature_impiegate_aggregate?: Maybe<Pis_Attrezzature_Impiegate_Aggregate_Order_By>;
  condizioni_traffico?: Maybe<Pis__Condizioni_Traffico_Order_By>;
  condizioni_traffico_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data_fine_lavori?: Maybe<Order_By>;
  data_inizio_lavori?: Maybe<Order_By>;
  difformita?: Maybe<Order_By>;
  dissesto_difforme?: Maybe<Order_By>;
  giorni_trascorsi?: Maybe<Pis__Giorni_Trascorsi_Order_By>;
  giorni_trascorsi_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  materiali_dissesto_aggregate?: Maybe<Pis_Materiale_Dissesto_Aggregate_Order_By>;
  note?: Maybe<Order_By>;
  segnalazioni_aggregate?: Maybe<Pis_Segnalazione_Aggregate_Order_By>;
  segnaletica_lasciata_aggregate?: Maybe<Pis_Segnaletica_Lasciata_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  veicoli_impiegati_aggregate?: Maybe<Pis_Veicoli_Impiegati_Aggregate_Order_By>;
};

/** primary key columns input for table: pis_intervento */
export type Pis_Intervento_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.intervento" */
export enum Pis_Intervento_Select_Column {
  /** column name */
  AssistenzaPm = 'assistenza_pm',
  /** column name */
  CondizioniTrafficoId = 'condizioni_traffico_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DataFineLavori = 'data_fine_lavori',
  /** column name */
  DataInizioLavori = 'data_inizio_lavori',
  /** column name */
  Difformita = 'difformita',
  /** column name */
  DissestoDifforme = 'dissesto_difforme',
  /** column name */
  GiorniTrascorsiId = 'giorni_trascorsi_id',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.intervento" */
export type Pis_Intervento_Set_Input = {
  assistenza_pm?: Maybe<Scalars['Boolean']>;
  condizioni_traffico_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  difformita?: Maybe<Scalars['String']>;
  dissesto_difforme?: Maybe<Scalars['Boolean']>;
  giorni_trascorsi_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Intervento_Stddev_Fields = {
  __typename?: 'pis_intervento_stddev_fields';
  condizioni_traffico_id?: Maybe<Scalars['Float']>;
  giorni_trascorsi_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis_Intervento_Stddev_Pop_Fields = {
  __typename?: 'pis_intervento_stddev_pop_fields';
  condizioni_traffico_id?: Maybe<Scalars['Float']>;
  giorni_trascorsi_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis_Intervento_Stddev_Samp_Fields = {
  __typename?: 'pis_intervento_stddev_samp_fields';
  condizioni_traffico_id?: Maybe<Scalars['Float']>;
  giorni_trascorsi_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario = {
  __typename?: 'pis_intervento_straordinario';
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  data_inserimento?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  lavori_effettuati?: Maybe<Scalars['String']>;
  /** An object relationship */
  municipalita?: Maybe<Toponomastica_Municipalita>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  posizionamento_toponimo_punto_finale?: Maybe<Gis_Posizionamento_Toponimo>;
  /** An object relationship */
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo>;
  /** An object relationship */
  priorita?: Maybe<Pis__Priorita>;
  priorita_id?: Maybe<Scalars['Int']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  quartiere?: Maybe<Toponomastica_Quartiere>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
  tipologia_intervento?: Maybe<Scalars['String']>;
  /** An object relationship */
  toponimo?: Maybe<Toponomastica_Toponimo>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};


/** columns and relationships of "pis.intervento_straordinario" */
export type Pis_Intervento_StraordinarioMunicipalita_StoricaArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "pis.intervento_straordinario" */
export type Pis_Intervento_StraordinarioQuartiere_StoricoArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "pis.intervento_straordinario" */
export type Pis_Intervento_StraordinarioToponimo_StoricoArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_Aggregate = {
  __typename?: 'pis_intervento_straordinario_aggregate';
  aggregate?: Maybe<Pis_Intervento_Straordinario_Aggregate_Fields>;
  nodes: Array<Pis_Intervento_Straordinario>;
};

/** aggregate fields of "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_Aggregate_Fields = {
  __typename?: 'pis_intervento_straordinario_aggregate_fields';
  avg?: Maybe<Pis_Intervento_Straordinario_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Intervento_Straordinario_Max_Fields>;
  min?: Maybe<Pis_Intervento_Straordinario_Min_Fields>;
  stddev?: Maybe<Pis_Intervento_Straordinario_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Intervento_Straordinario_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Intervento_Straordinario_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Intervento_Straordinario_Sum_Fields>;
  var_pop?: Maybe<Pis_Intervento_Straordinario_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Intervento_Straordinario_Var_Samp_Fields>;
  variance?: Maybe<Pis_Intervento_Straordinario_Variance_Fields>;
};


/** aggregate fields of "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Intervento_Straordinario_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pis_Intervento_Straordinario_Append_Input = {
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Pis_Intervento_Straordinario_Avg_Fields = {
  __typename?: 'pis_intervento_straordinario_avg_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis.intervento_straordinario". All fields are combined with a logical 'AND'. */
export type Pis_Intervento_Straordinario_Bool_Exp = {
  _and?: Maybe<Array<Pis_Intervento_Straordinario_Bool_Exp>>;
  _not?: Maybe<Pis_Intervento_Straordinario_Bool_Exp>;
  _or?: Maybe<Array<Pis_Intervento_Straordinario_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data_fine_lavori?: Maybe<Timestamptz_Comparison_Exp>;
  data_inizio_lavori?: Maybe<Timestamptz_Comparison_Exp>;
  data_inserimento?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  lavori_effettuati?: Maybe<String_Comparison_Exp>;
  municipalita?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
  municipalita_id?: Maybe<Int_Comparison_Exp>;
  municipalita_storica?: Maybe<Jsonb_Comparison_Exp>;
  posizionamento_toponimo_punto_finale?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
  priorita?: Maybe<Pis__Priorita_Bool_Exp>;
  priorita_id?: Maybe<Int_Comparison_Exp>;
  punto_finale_posizionamento_id?: Maybe<Int_Comparison_Exp>;
  punto_iniziale_posizionamento_id?: Maybe<Int_Comparison_Exp>;
  quartiere?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  quartiere_id?: Maybe<Int_Comparison_Exp>;
  quartiere_storico?: Maybe<Jsonb_Comparison_Exp>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum_Comparison_Exp>;
  tipologia_intervento?: Maybe<String_Comparison_Exp>;
  toponimo?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  toponimo_id?: Maybe<Int_Comparison_Exp>;
  toponimo_storico?: Maybe<Jsonb_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  utente_inseritore?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.intervento_straordinario" */
export enum Pis_Intervento_Straordinario_Constraint {
  /** unique or primary key constraint */
  InterventoStraordinarioPkey = 'intervento_straordinario_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pis_Intervento_Straordinario_Delete_At_Path_Input = {
  municipalita_storica?: Maybe<Array<Scalars['String']>>;
  quartiere_storico?: Maybe<Array<Scalars['String']>>;
  toponimo_storico?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pis_Intervento_Straordinario_Delete_Elem_Input = {
  municipalita_storica?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pis_Intervento_Straordinario_Delete_Key_Input = {
  municipalita_storica?: Maybe<Scalars['String']>;
  quartiere_storico?: Maybe<Scalars['String']>;
  toponimo_storico?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  data_inserimento?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lavori_effettuati?: Maybe<Scalars['String']>;
  municipalita?: Maybe<Toponomastica_Municipalita_Obj_Rel_Insert_Input>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  posizionamento_toponimo_punto_finale?: Maybe<Gis_Posizionamento_Toponimo_Obj_Rel_Insert_Input>;
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo_Obj_Rel_Insert_Input>;
  priorita?: Maybe<Pis__Priorita_Obj_Rel_Insert_Input>;
  priorita_id?: Maybe<Scalars['Int']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere?: Maybe<Toponomastica_Quartiere_Obj_Rel_Insert_Input>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
  tipologia_intervento?: Maybe<Scalars['String']>;
  toponimo?: Maybe<Toponomastica_Toponimo_Obj_Rel_Insert_Input>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Pis_Intervento_Straordinario_Max_Fields = {
  __typename?: 'pis_intervento_straordinario_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  data_inserimento?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lavori_effettuati?: Maybe<Scalars['String']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  tipologia_intervento?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Pis_Intervento_Straordinario_Min_Fields = {
  __typename?: 'pis_intervento_straordinario_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  data_inserimento?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lavori_effettuati?: Maybe<Scalars['String']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  tipologia_intervento?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_Mutation_Response = {
  __typename?: 'pis_intervento_straordinario_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Intervento_Straordinario>;
};

/** on_conflict condition type for table "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_On_Conflict = {
  constraint: Pis_Intervento_Straordinario_Constraint;
  update_columns?: Array<Pis_Intervento_Straordinario_Update_Column>;
  where?: Maybe<Pis_Intervento_Straordinario_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.intervento_straordinario". */
export type Pis_Intervento_Straordinario_Order_By = {
  created_at?: Maybe<Order_By>;
  data_fine_lavori?: Maybe<Order_By>;
  data_inizio_lavori?: Maybe<Order_By>;
  data_inserimento?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lavori_effettuati?: Maybe<Order_By>;
  municipalita?: Maybe<Toponomastica_Municipalita_Order_By>;
  municipalita_id?: Maybe<Order_By>;
  municipalita_storica?: Maybe<Order_By>;
  posizionamento_toponimo_punto_finale?: Maybe<Gis_Posizionamento_Toponimo_Order_By>;
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo_Order_By>;
  priorita?: Maybe<Pis__Priorita_Order_By>;
  priorita_id?: Maybe<Order_By>;
  punto_finale_posizionamento_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere?: Maybe<Toponomastica_Quartiere_Order_By>;
  quartiere_id?: Maybe<Order_By>;
  quartiere_storico?: Maybe<Order_By>;
  stato?: Maybe<Order_By>;
  tipologia_intervento?: Maybe<Order_By>;
  toponimo?: Maybe<Toponomastica_Toponimo_Order_By>;
  toponimo_id?: Maybe<Order_By>;
  toponimo_storico?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utente_inseritore?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_intervento_straordinario */
export type Pis_Intervento_Straordinario_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pis_Intervento_Straordinario_Prepend_Input = {
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "pis.intervento_straordinario" */
export enum Pis_Intervento_Straordinario_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DataFineLavori = 'data_fine_lavori',
  /** column name */
  DataInizioLavori = 'data_inizio_lavori',
  /** column name */
  DataInserimento = 'data_inserimento',
  /** column name */
  Id = 'id',
  /** column name */
  LavoriEffettuati = 'lavori_effettuati',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  MunicipalitaStorica = 'municipalita_storica',
  /** column name */
  PrioritaId = 'priorita_id',
  /** column name */
  PuntoFinalePosizionamentoId = 'punto_finale_posizionamento_id',
  /** column name */
  PuntoInizialePosizionamentoId = 'punto_iniziale_posizionamento_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  QuartiereStorico = 'quartiere_storico',
  /** column name */
  Stato = 'stato',
  /** column name */
  TipologiaIntervento = 'tipologia_intervento',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  ToponimoStorico = 'toponimo_storico',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtenteInseritore = 'utente_inseritore'
}

/** input type for updating data in table "pis.intervento_straordinario" */
export type Pis_Intervento_Straordinario_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data_fine_lavori?: Maybe<Scalars['timestamptz']>;
  data_inizio_lavori?: Maybe<Scalars['timestamptz']>;
  data_inserimento?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  lavori_effettuati?: Maybe<Scalars['String']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  priorita_id?: Maybe<Scalars['Int']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
  tipologia_intervento?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Pis_Intervento_Straordinario_Stddev_Fields = {
  __typename?: 'pis_intervento_straordinario_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis_Intervento_Straordinario_Stddev_Pop_Fields = {
  __typename?: 'pis_intervento_straordinario_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis_Intervento_Straordinario_Stddev_Samp_Fields = {
  __typename?: 'pis_intervento_straordinario_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis_Intervento_Straordinario_Sum_Fields = {
  __typename?: 'pis_intervento_straordinario_sum_fields';
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis.intervento_straordinario" */
export enum Pis_Intervento_Straordinario_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DataFineLavori = 'data_fine_lavori',
  /** column name */
  DataInizioLavori = 'data_inizio_lavori',
  /** column name */
  DataInserimento = 'data_inserimento',
  /** column name */
  Id = 'id',
  /** column name */
  LavoriEffettuati = 'lavori_effettuati',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  MunicipalitaStorica = 'municipalita_storica',
  /** column name */
  PrioritaId = 'priorita_id',
  /** column name */
  PuntoFinalePosizionamentoId = 'punto_finale_posizionamento_id',
  /** column name */
  PuntoInizialePosizionamentoId = 'punto_iniziale_posizionamento_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  QuartiereStorico = 'quartiere_storico',
  /** column name */
  Stato = 'stato',
  /** column name */
  TipologiaIntervento = 'tipologia_intervento',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  ToponimoStorico = 'toponimo_storico',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtenteInseritore = 'utente_inseritore'
}

/** aggregate var_pop on columns */
export type Pis_Intervento_Straordinario_Var_Pop_Fields = {
  __typename?: 'pis_intervento_straordinario_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis_Intervento_Straordinario_Var_Samp_Fields = {
  __typename?: 'pis_intervento_straordinario_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis_Intervento_Straordinario_Variance_Fields = {
  __typename?: 'pis_intervento_straordinario_variance_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  punto_finale_posizionamento_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis_Intervento_Sum_Fields = {
  __typename?: 'pis_intervento_sum_fields';
  condizioni_traffico_id?: Maybe<Scalars['Int']>;
  giorni_trascorsi_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis.intervento" */
export enum Pis_Intervento_Update_Column {
  /** column name */
  AssistenzaPm = 'assistenza_pm',
  /** column name */
  CondizioniTrafficoId = 'condizioni_traffico_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DataFineLavori = 'data_fine_lavori',
  /** column name */
  DataInizioLavori = 'data_inizio_lavori',
  /** column name */
  Difformita = 'difformita',
  /** column name */
  DissestoDifforme = 'dissesto_difforme',
  /** column name */
  GiorniTrascorsiId = 'giorni_trascorsi_id',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Intervento_Var_Pop_Fields = {
  __typename?: 'pis_intervento_var_pop_fields';
  condizioni_traffico_id?: Maybe<Scalars['Float']>;
  giorni_trascorsi_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis_Intervento_Var_Samp_Fields = {
  __typename?: 'pis_intervento_var_samp_fields';
  condizioni_traffico_id?: Maybe<Scalars['Float']>;
  giorni_trascorsi_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis_Intervento_Variance_Fields = {
  __typename?: 'pis_intervento_variance_fields';
  condizioni_traffico_id?: Maybe<Scalars['Float']>;
  giorni_trascorsi_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto = {
  __typename?: 'pis_materiale_dissesto';
  altro?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  intervento: Pis_Intervento;
  intervento_id: Scalars['Int'];
  /** An object relationship */
  materiale?: Maybe<Pis__Materiale>;
  materiale_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Aggregate = {
  __typename?: 'pis_materiale_dissesto_aggregate';
  aggregate?: Maybe<Pis_Materiale_Dissesto_Aggregate_Fields>;
  nodes: Array<Pis_Materiale_Dissesto>;
};

/** aggregate fields of "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Aggregate_Fields = {
  __typename?: 'pis_materiale_dissesto_aggregate_fields';
  avg?: Maybe<Pis_Materiale_Dissesto_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Materiale_Dissesto_Max_Fields>;
  min?: Maybe<Pis_Materiale_Dissesto_Min_Fields>;
  stddev?: Maybe<Pis_Materiale_Dissesto_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Materiale_Dissesto_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Materiale_Dissesto_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Materiale_Dissesto_Sum_Fields>;
  var_pop?: Maybe<Pis_Materiale_Dissesto_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Materiale_Dissesto_Var_Samp_Fields>;
  variance?: Maybe<Pis_Materiale_Dissesto_Variance_Fields>;
};


/** aggregate fields of "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Materiale_Dissesto_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Aggregate_Order_By = {
  avg?: Maybe<Pis_Materiale_Dissesto_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Materiale_Dissesto_Max_Order_By>;
  min?: Maybe<Pis_Materiale_Dissesto_Min_Order_By>;
  stddev?: Maybe<Pis_Materiale_Dissesto_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Materiale_Dissesto_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Materiale_Dissesto_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Materiale_Dissesto_Sum_Order_By>;
  var_pop?: Maybe<Pis_Materiale_Dissesto_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Materiale_Dissesto_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Materiale_Dissesto_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Arr_Rel_Insert_Input = {
  data: Array<Pis_Materiale_Dissesto_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Materiale_Dissesto_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Materiale_Dissesto_Avg_Fields = {
  __typename?: 'pis_materiale_dissesto_avg_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  materiale_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Avg_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.materiale_dissesto". All fields are combined with a logical 'AND'. */
export type Pis_Materiale_Dissesto_Bool_Exp = {
  _and?: Maybe<Array<Pis_Materiale_Dissesto_Bool_Exp>>;
  _not?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
  _or?: Maybe<Array<Pis_Materiale_Dissesto_Bool_Exp>>;
  altro?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  intervento?: Maybe<Pis_Intervento_Bool_Exp>;
  intervento_id?: Maybe<Int_Comparison_Exp>;
  materiale?: Maybe<Pis__Materiale_Bool_Exp>;
  materiale_id?: Maybe<Int_Comparison_Exp>;
  quantita?: Maybe<Float8_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.materiale_dissesto" */
export enum Pis_Materiale_Dissesto_Constraint {
  /** unique or primary key constraint */
  MaterialeDissestoPkey = 'materiale_dissesto_pkey'
}

/** input type for incrementing numeric columns in table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  materiale_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Insert_Input = {
  altro?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Pis_Intervento_Obj_Rel_Insert_Input>;
  intervento_id?: Maybe<Scalars['Int']>;
  materiale?: Maybe<Pis__Materiale_Obj_Rel_Insert_Input>;
  materiale_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis_Materiale_Dissesto_Max_Fields = {
  __typename?: 'pis_materiale_dissesto_max_fields';
  altro?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  materiale_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Max_Order_By = {
  altro?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Materiale_Dissesto_Min_Fields = {
  __typename?: 'pis_materiale_dissesto_min_fields';
  altro?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  materiale_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Min_Order_By = {
  altro?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Mutation_Response = {
  __typename?: 'pis_materiale_dissesto_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Materiale_Dissesto>;
};

/** on_conflict condition type for table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_On_Conflict = {
  constraint: Pis_Materiale_Dissesto_Constraint;
  update_columns?: Array<Pis_Materiale_Dissesto_Update_Column>;
  where?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.materiale_dissesto". */
export type Pis_Materiale_Dissesto_Order_By = {
  altro?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento?: Maybe<Pis_Intervento_Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale?: Maybe<Pis__Materiale_Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_materiale_dissesto */
export type Pis_Materiale_Dissesto_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.materiale_dissesto" */
export enum Pis_Materiale_Dissesto_Select_Column {
  /** column name */
  Altro = 'altro',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  MaterialeId = 'materiale_id',
  /** column name */
  Quantita = 'quantita',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Set_Input = {
  altro?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  materiale_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Materiale_Dissesto_Stddev_Fields = {
  __typename?: 'pis_materiale_dissesto_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  materiale_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Materiale_Dissesto_Stddev_Pop_Fields = {
  __typename?: 'pis_materiale_dissesto_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  materiale_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Materiale_Dissesto_Stddev_Samp_Fields = {
  __typename?: 'pis_materiale_dissesto_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  materiale_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Materiale_Dissesto_Sum_Fields = {
  __typename?: 'pis_materiale_dissesto_sum_fields';
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  materiale_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Sum_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** update columns of table "pis.materiale_dissesto" */
export enum Pis_Materiale_Dissesto_Update_Column {
  /** column name */
  Altro = 'altro',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  MaterialeId = 'materiale_id',
  /** column name */
  Quantita = 'quantita',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Materiale_Dissesto_Var_Pop_Fields = {
  __typename?: 'pis_materiale_dissesto_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  materiale_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Materiale_Dissesto_Var_Samp_Fields = {
  __typename?: 'pis_materiale_dissesto_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  materiale_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Materiale_Dissesto_Variance_Fields = {
  __typename?: 'pis_materiale_dissesto_variance_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  materiale_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.materiale_dissesto" */
export type Pis_Materiale_Dissesto_Variance_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  materiale_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** columns and relationships of "pis.segnalazione" */
export type Pis_Segnalazione = {
  __typename?: 'pis_segnalazione';
  caposquadra_assegnatario?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  diario: Array<Pis_Diario>;
  /** An aggregate relationship */
  diario_aggregate: Pis_Diario_Aggregate;
  /** An object relationship */
  dissesto?: Maybe<Pis_Dissesto>;
  dissesto_id?: Maybe<Scalars['Int']>;
  /** An array relationship */
  eventi: Array<Pis_Evento>;
  /** An aggregate relationship */
  eventi_aggregate: Pis_Evento_Aggregate;
  id: Scalars['Int'];
  /** An object relationship */
  intervento?: Maybe<Pis_Intervento>;
  intervento_id?: Maybe<Scalars['Int']>;
  intervento_protezione_civile: Scalars['Boolean'];
  /** An object relationship */
  municipalita?: Maybe<Toponomastica_Municipalita>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo>;
  /** An object relationship */
  priorita?: Maybe<Pis__Priorita>;
  priorita_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  protocollo?: Maybe<Protocollo_Protocollo>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  quartiere?: Maybe<Toponomastica_Quartiere>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  richiesta_protezione_civile?: Maybe<Scalars['Boolean']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  /** An array relationship */
  segnalazioni_collegate: Array<Pis_Segnalazione_Collegata>;
  /** An aggregate relationship */
  segnalazioni_collegate_aggregate: Pis_Segnalazione_Collegata_Aggregate;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
  /** An object relationship */
  tecnico_referente?: Maybe<Pis_Tecnico_Referente>;
  tecnico_referente_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  toponimo?: Maybe<Toponomastica_Toponimo>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneDiarioArgs = {
  distinct_on?: Maybe<Array<Pis_Diario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Diario_Order_By>>;
  where?: Maybe<Pis_Diario_Bool_Exp>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneDiario_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Diario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Diario_Order_By>>;
  where?: Maybe<Pis_Diario_Bool_Exp>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneEventiArgs = {
  distinct_on?: Maybe<Array<Pis_Evento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Evento_Order_By>>;
  where?: Maybe<Pis_Evento_Bool_Exp>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneEventi_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Evento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Evento_Order_By>>;
  where?: Maybe<Pis_Evento_Bool_Exp>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneMunicipalita_StoricaArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneQuartiere_StoricoArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneSegnalazioni_CollegateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Collegata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Collegata_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneSegnalazioni_Collegate_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Collegata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Collegata_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
};


/** columns and relationships of "pis.segnalazione" */
export type Pis_SegnalazioneToponimo_StoricoArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "pis.segnalazione" */
export type Pis_Segnalazione_Aggregate = {
  __typename?: 'pis_segnalazione_aggregate';
  aggregate?: Maybe<Pis_Segnalazione_Aggregate_Fields>;
  nodes: Array<Pis_Segnalazione>;
};

/** aggregate fields of "pis.segnalazione" */
export type Pis_Segnalazione_Aggregate_Fields = {
  __typename?: 'pis_segnalazione_aggregate_fields';
  avg?: Maybe<Pis_Segnalazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Segnalazione_Max_Fields>;
  min?: Maybe<Pis_Segnalazione_Min_Fields>;
  stddev?: Maybe<Pis_Segnalazione_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Segnalazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Segnalazione_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Segnalazione_Sum_Fields>;
  var_pop?: Maybe<Pis_Segnalazione_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Segnalazione_Var_Samp_Fields>;
  variance?: Maybe<Pis_Segnalazione_Variance_Fields>;
};


/** aggregate fields of "pis.segnalazione" */
export type Pis_Segnalazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.segnalazione" */
export type Pis_Segnalazione_Aggregate_Order_By = {
  avg?: Maybe<Pis_Segnalazione_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Segnalazione_Max_Order_By>;
  min?: Maybe<Pis_Segnalazione_Min_Order_By>;
  stddev?: Maybe<Pis_Segnalazione_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Segnalazione_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Segnalazione_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Segnalazione_Sum_Order_By>;
  var_pop?: Maybe<Pis_Segnalazione_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Segnalazione_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Segnalazione_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Pis_Segnalazione_Append_Input = {
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "pis.segnalazione" */
export type Pis_Segnalazione_Arr_Rel_Insert_Input = {
  data: Array<Pis_Segnalazione_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Segnalazione_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Segnalazione_Avg_Fields = {
  __typename?: 'pis_segnalazione_avg_fields';
  dissesto_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  tecnico_referente_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Avg_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.segnalazione". All fields are combined with a logical 'AND'. */
export type Pis_Segnalazione_Bool_Exp = {
  _and?: Maybe<Array<Pis_Segnalazione_Bool_Exp>>;
  _not?: Maybe<Pis_Segnalazione_Bool_Exp>;
  _or?: Maybe<Array<Pis_Segnalazione_Bool_Exp>>;
  caposquadra_assegnatario?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Timestamptz_Comparison_Exp>;
  diario?: Maybe<Pis_Diario_Bool_Exp>;
  dissesto?: Maybe<Pis_Dissesto_Bool_Exp>;
  dissesto_id?: Maybe<Int_Comparison_Exp>;
  eventi?: Maybe<Pis_Evento_Bool_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  intervento?: Maybe<Pis_Intervento_Bool_Exp>;
  intervento_id?: Maybe<Int_Comparison_Exp>;
  intervento_protezione_civile?: Maybe<Boolean_Comparison_Exp>;
  municipalita?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
  municipalita_id?: Maybe<Int_Comparison_Exp>;
  municipalita_storica?: Maybe<Jsonb_Comparison_Exp>;
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
  priorita?: Maybe<Pis__Priorita_Bool_Exp>;
  priorita_id?: Maybe<Int_Comparison_Exp>;
  protocollo?: Maybe<Protocollo_Protocollo_Bool_Exp>;
  protocollo_id?: Maybe<Int_Comparison_Exp>;
  punto_iniziale_posizionamento_id?: Maybe<Int_Comparison_Exp>;
  quartiere?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  quartiere_id?: Maybe<Int_Comparison_Exp>;
  quartiere_storico?: Maybe<Jsonb_Comparison_Exp>;
  richiesta_protezione_civile?: Maybe<Boolean_Comparison_Exp>;
  role1?: Maybe<String_Comparison_Exp>;
  role2?: Maybe<String_Comparison_Exp>;
  role3?: Maybe<String_Comparison_Exp>;
  role7?: Maybe<String_Comparison_Exp>;
  role9?: Maybe<String_Comparison_Exp>;
  segnalazioni_collegate?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum_Comparison_Exp>;
  tecnico_referente?: Maybe<Pis_Tecnico_Referente_Bool_Exp>;
  tecnico_referente_id?: Maybe<Int_Comparison_Exp>;
  toponimo?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  toponimo_id?: Maybe<Int_Comparison_Exp>;
  toponimo_storico?: Maybe<Jsonb_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  utente_inseritore?: Maybe<String_Comparison_Exp>;
};

/** columns and relationships of "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata = {
  __typename?: 'pis_segnalazione_collegata';
  created_at?: Maybe<Scalars['timestamptz']>;
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  segnalazione?: Maybe<Pis_Segnalazione>;
  segnalazione_collegata_id: Scalars['Int'];
  segnalazione_id: Scalars['Int'];
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Aggregate = {
  __typename?: 'pis_segnalazione_collegata_aggregate';
  aggregate?: Maybe<Pis_Segnalazione_Collegata_Aggregate_Fields>;
  nodes: Array<Pis_Segnalazione_Collegata>;
};

/** aggregate fields of "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Aggregate_Fields = {
  __typename?: 'pis_segnalazione_collegata_aggregate_fields';
  avg?: Maybe<Pis_Segnalazione_Collegata_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Segnalazione_Collegata_Max_Fields>;
  min?: Maybe<Pis_Segnalazione_Collegata_Min_Fields>;
  stddev?: Maybe<Pis_Segnalazione_Collegata_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Segnalazione_Collegata_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Segnalazione_Collegata_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Segnalazione_Collegata_Sum_Fields>;
  var_pop?: Maybe<Pis_Segnalazione_Collegata_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Segnalazione_Collegata_Var_Samp_Fields>;
  variance?: Maybe<Pis_Segnalazione_Collegata_Variance_Fields>;
};


/** aggregate fields of "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Segnalazione_Collegata_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Aggregate_Order_By = {
  avg?: Maybe<Pis_Segnalazione_Collegata_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Segnalazione_Collegata_Max_Order_By>;
  min?: Maybe<Pis_Segnalazione_Collegata_Min_Order_By>;
  stddev?: Maybe<Pis_Segnalazione_Collegata_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Segnalazione_Collegata_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Segnalazione_Collegata_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Segnalazione_Collegata_Sum_Order_By>;
  var_pop?: Maybe<Pis_Segnalazione_Collegata_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Segnalazione_Collegata_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Segnalazione_Collegata_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Arr_Rel_Insert_Input = {
  data: Array<Pis_Segnalazione_Collegata_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Segnalazione_Collegata_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Segnalazione_Collegata_Avg_Fields = {
  __typename?: 'pis_segnalazione_collegata_avg_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_collegata_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Avg_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.segnalazione_collegata". All fields are combined with a logical 'AND'. */
export type Pis_Segnalazione_Collegata_Bool_Exp = {
  _and?: Maybe<Array<Pis_Segnalazione_Collegata_Bool_Exp>>;
  _not?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
  _or?: Maybe<Array<Pis_Segnalazione_Collegata_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  segnalazione?: Maybe<Pis_Segnalazione_Bool_Exp>;
  segnalazione_collegata_id?: Maybe<Int_Comparison_Exp>;
  segnalazione_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.segnalazione_collegata" */
export enum Pis_Segnalazione_Collegata_Constraint {
  /** unique or primary key constraint */
  SegnalazioneCollegataPkey = 'segnalazione_collegata_pkey'
}

/** input type for incrementing numeric columns in table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  segnalazione_collegata_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  segnalazione?: Maybe<Pis_Segnalazione_Obj_Rel_Insert_Input>;
  segnalazione_collegata_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis_Segnalazione_Collegata_Max_Fields = {
  __typename?: 'pis_segnalazione_collegata_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  segnalazione_collegata_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Segnalazione_Collegata_Min_Fields = {
  __typename?: 'pis_segnalazione_collegata_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  segnalazione_collegata_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Mutation_Response = {
  __typename?: 'pis_segnalazione_collegata_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Segnalazione_Collegata>;
};

/** on_conflict condition type for table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_On_Conflict = {
  constraint: Pis_Segnalazione_Collegata_Constraint;
  update_columns?: Array<Pis_Segnalazione_Collegata_Update_Column>;
  where?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.segnalazione_collegata". */
export type Pis_Segnalazione_Collegata_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  segnalazione?: Maybe<Pis_Segnalazione_Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_segnalazione_collegata */
export type Pis_Segnalazione_Collegata_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.segnalazione_collegata" */
export enum Pis_Segnalazione_Collegata_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  SegnalazioneCollegataId = 'segnalazione_collegata_id',
  /** column name */
  SegnalazioneId = 'segnalazione_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  segnalazione_collegata_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Segnalazione_Collegata_Stddev_Fields = {
  __typename?: 'pis_segnalazione_collegata_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_collegata_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Segnalazione_Collegata_Stddev_Pop_Fields = {
  __typename?: 'pis_segnalazione_collegata_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_collegata_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Segnalazione_Collegata_Stddev_Samp_Fields = {
  __typename?: 'pis_segnalazione_collegata_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_collegata_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Segnalazione_Collegata_Sum_Fields = {
  __typename?: 'pis_segnalazione_collegata_sum_fields';
  id?: Maybe<Scalars['Int']>;
  segnalazione_collegata_id?: Maybe<Scalars['Int']>;
  segnalazione_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Sum_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** update columns of table "pis.segnalazione_collegata" */
export enum Pis_Segnalazione_Collegata_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  SegnalazioneCollegataId = 'segnalazione_collegata_id',
  /** column name */
  SegnalazioneId = 'segnalazione_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Segnalazione_Collegata_Var_Pop_Fields = {
  __typename?: 'pis_segnalazione_collegata_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_collegata_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Segnalazione_Collegata_Var_Samp_Fields = {
  __typename?: 'pis_segnalazione_collegata_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_collegata_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Segnalazione_Collegata_Variance_Fields = {
  __typename?: 'pis_segnalazione_collegata_variance_fields';
  id?: Maybe<Scalars['Float']>;
  segnalazione_collegata_id?: Maybe<Scalars['Float']>;
  segnalazione_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.segnalazione_collegata" */
export type Pis_Segnalazione_Collegata_Variance_Order_By = {
  id?: Maybe<Order_By>;
  segnalazione_collegata_id?: Maybe<Order_By>;
  segnalazione_id?: Maybe<Order_By>;
};

/** unique or primary key constraints on table "pis.segnalazione" */
export enum Pis_Segnalazione_Constraint {
  /** unique or primary key constraint */
  SegnalazionePkey = 'segnalazione_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Pis_Segnalazione_Delete_At_Path_Input = {
  municipalita_storica?: Maybe<Array<Scalars['String']>>;
  quartiere_storico?: Maybe<Array<Scalars['String']>>;
  toponimo_storico?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Pis_Segnalazione_Delete_Elem_Input = {
  municipalita_storica?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Pis_Segnalazione_Delete_Key_Input = {
  municipalita_storica?: Maybe<Scalars['String']>;
  quartiere_storico?: Maybe<Scalars['String']>;
  toponimo_storico?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "pis.segnalazione" */
export type Pis_Segnalazione_Inc_Input = {
  dissesto_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  tecnico_referente_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.segnalazione" */
export type Pis_Segnalazione_Insert_Input = {
  caposquadra_assegnatario?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  diario?: Maybe<Pis_Diario_Arr_Rel_Insert_Input>;
  dissesto?: Maybe<Pis_Dissesto_Obj_Rel_Insert_Input>;
  dissesto_id?: Maybe<Scalars['Int']>;
  eventi?: Maybe<Pis_Evento_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Pis_Intervento_Obj_Rel_Insert_Input>;
  intervento_id?: Maybe<Scalars['Int']>;
  intervento_protezione_civile?: Maybe<Scalars['Boolean']>;
  municipalita?: Maybe<Toponomastica_Municipalita_Obj_Rel_Insert_Input>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo_Obj_Rel_Insert_Input>;
  priorita?: Maybe<Pis__Priorita_Obj_Rel_Insert_Input>;
  priorita_id?: Maybe<Scalars['Int']>;
  protocollo?: Maybe<Protocollo_Protocollo_Obj_Rel_Insert_Input>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere?: Maybe<Toponomastica_Quartiere_Obj_Rel_Insert_Input>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  richiesta_protezione_civile?: Maybe<Scalars['Boolean']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  segnalazioni_collegate?: Maybe<Pis_Segnalazione_Collegata_Arr_Rel_Insert_Input>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
  tecnico_referente?: Maybe<Pis_Tecnico_Referente_Obj_Rel_Insert_Input>;
  tecnico_referente_id?: Maybe<Scalars['Int']>;
  toponimo?: Maybe<Toponomastica_Toponimo_Obj_Rel_Insert_Input>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Pis_Segnalazione_Max_Fields = {
  __typename?: 'pis_segnalazione_max_fields';
  caposquadra_assegnatario?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  dissesto_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  tecnico_referente_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Max_Order_By = {
  caposquadra_assegnatario?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  role1?: Maybe<Order_By>;
  role2?: Maybe<Order_By>;
  role3?: Maybe<Order_By>;
  role7?: Maybe<Order_By>;
  role9?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utente_inseritore?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Segnalazione_Min_Fields = {
  __typename?: 'pis_segnalazione_min_fields';
  caposquadra_assegnatario?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  dissesto_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  tecnico_referente_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Min_Order_By = {
  caposquadra_assegnatario?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  role1?: Maybe<Order_By>;
  role2?: Maybe<Order_By>;
  role3?: Maybe<Order_By>;
  role7?: Maybe<Order_By>;
  role9?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utente_inseritore?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.segnalazione" */
export type Pis_Segnalazione_Mutation_Response = {
  __typename?: 'pis_segnalazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Segnalazione>;
};

/** input type for inserting object relation for remote table "pis.segnalazione" */
export type Pis_Segnalazione_Obj_Rel_Insert_Input = {
  data: Pis_Segnalazione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Segnalazione_On_Conflict>;
};

/** on_conflict condition type for table "pis.segnalazione" */
export type Pis_Segnalazione_On_Conflict = {
  constraint: Pis_Segnalazione_Constraint;
  update_columns?: Array<Pis_Segnalazione_Update_Column>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.segnalazione". */
export type Pis_Segnalazione_Order_By = {
  caposquadra_assegnatario?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  diario_aggregate?: Maybe<Pis_Diario_Aggregate_Order_By>;
  dissesto?: Maybe<Pis_Dissesto_Order_By>;
  dissesto_id?: Maybe<Order_By>;
  eventi_aggregate?: Maybe<Pis_Evento_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  intervento?: Maybe<Pis_Intervento_Order_By>;
  intervento_id?: Maybe<Order_By>;
  intervento_protezione_civile?: Maybe<Order_By>;
  municipalita?: Maybe<Toponomastica_Municipalita_Order_By>;
  municipalita_id?: Maybe<Order_By>;
  municipalita_storica?: Maybe<Order_By>;
  posizionamento_toponimo_punto_iniziale?: Maybe<Gis_Posizionamento_Toponimo_Order_By>;
  priorita?: Maybe<Pis__Priorita_Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo?: Maybe<Protocollo_Protocollo_Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere?: Maybe<Toponomastica_Quartiere_Order_By>;
  quartiere_id?: Maybe<Order_By>;
  quartiere_storico?: Maybe<Order_By>;
  richiesta_protezione_civile?: Maybe<Order_By>;
  role1?: Maybe<Order_By>;
  role2?: Maybe<Order_By>;
  role3?: Maybe<Order_By>;
  role7?: Maybe<Order_By>;
  role9?: Maybe<Order_By>;
  segnalazioni_collegate_aggregate?: Maybe<Pis_Segnalazione_Collegata_Aggregate_Order_By>;
  stato?: Maybe<Order_By>;
  tecnico_referente?: Maybe<Pis_Tecnico_Referente_Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo?: Maybe<Toponomastica_Toponimo_Order_By>;
  toponimo_id?: Maybe<Order_By>;
  toponimo_storico?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utente_inseritore?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_segnalazione */
export type Pis_Segnalazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Pis_Segnalazione_Prepend_Input = {
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "pis.segnalazione" */
export enum Pis_Segnalazione_Select_Column {
  /** column name */
  CaposquadraAssegnatario = 'caposquadra_assegnatario',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DissestoId = 'dissesto_id',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  InterventoProtezioneCivile = 'intervento_protezione_civile',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  MunicipalitaStorica = 'municipalita_storica',
  /** column name */
  PrioritaId = 'priorita_id',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  PuntoInizialePosizionamentoId = 'punto_iniziale_posizionamento_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  QuartiereStorico = 'quartiere_storico',
  /** column name */
  RichiestaProtezioneCivile = 'richiesta_protezione_civile',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role9 = 'role9',
  /** column name */
  Stato = 'stato',
  /** column name */
  TecnicoReferenteId = 'tecnico_referente_id',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  ToponimoStorico = 'toponimo_storico',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtenteInseritore = 'utente_inseritore'
}

/** input type for updating data in table "pis.segnalazione" */
export type Pis_Segnalazione_Set_Input = {
  caposquadra_assegnatario?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  dissesto_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  intervento_protezione_civile?: Maybe<Scalars['Boolean']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  priorita_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  richiesta_protezione_civile?: Maybe<Scalars['Boolean']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  stato?: Maybe<Pis__Stato_Segnalazione_Enum>;
  tecnico_referente_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Pis_Segnalazione_Stddev_Fields = {
  __typename?: 'pis_segnalazione_stddev_fields';
  dissesto_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  tecnico_referente_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Stddev_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Segnalazione_Stddev_Pop_Fields = {
  __typename?: 'pis_segnalazione_stddev_pop_fields';
  dissesto_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  tecnico_referente_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Stddev_Pop_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Segnalazione_Stddev_Samp_Fields = {
  __typename?: 'pis_segnalazione_stddev_samp_fields';
  dissesto_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  tecnico_referente_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Stddev_Samp_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Segnalazione_Sum_Fields = {
  __typename?: 'pis_segnalazione_sum_fields';
  dissesto_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  priorita_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  tecnico_referente_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Sum_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** update columns of table "pis.segnalazione" */
export enum Pis_Segnalazione_Update_Column {
  /** column name */
  CaposquadraAssegnatario = 'caposquadra_assegnatario',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DissestoId = 'dissesto_id',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  InterventoProtezioneCivile = 'intervento_protezione_civile',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  MunicipalitaStorica = 'municipalita_storica',
  /** column name */
  PrioritaId = 'priorita_id',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  PuntoInizialePosizionamentoId = 'punto_iniziale_posizionamento_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  QuartiereStorico = 'quartiere_storico',
  /** column name */
  RichiestaProtezioneCivile = 'richiesta_protezione_civile',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role9 = 'role9',
  /** column name */
  Stato = 'stato',
  /** column name */
  TecnicoReferenteId = 'tecnico_referente_id',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  ToponimoStorico = 'toponimo_storico',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtenteInseritore = 'utente_inseritore'
}

/** aggregate var_pop on columns */
export type Pis_Segnalazione_Var_Pop_Fields = {
  __typename?: 'pis_segnalazione_var_pop_fields';
  dissesto_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  tecnico_referente_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Var_Pop_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Segnalazione_Var_Samp_Fields = {
  __typename?: 'pis_segnalazione_var_samp_fields';
  dissesto_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  tecnico_referente_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Var_Samp_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Segnalazione_Variance_Fields = {
  __typename?: 'pis_segnalazione_variance_fields';
  dissesto_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  priorita_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  tecnico_referente_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.segnalazione" */
export type Pis_Segnalazione_Variance_Order_By = {
  dissesto_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  priorita_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  tecnico_referente_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** columns and relationships of "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata = {
  __typename?: 'pis_segnaletica_lasciata';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  intervento: Pis_Intervento;
  intervento_id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Aggregate = {
  __typename?: 'pis_segnaletica_lasciata_aggregate';
  aggregate?: Maybe<Pis_Segnaletica_Lasciata_Aggregate_Fields>;
  nodes: Array<Pis_Segnaletica_Lasciata>;
};

/** aggregate fields of "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Aggregate_Fields = {
  __typename?: 'pis_segnaletica_lasciata_aggregate_fields';
  avg?: Maybe<Pis_Segnaletica_Lasciata_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Segnaletica_Lasciata_Max_Fields>;
  min?: Maybe<Pis_Segnaletica_Lasciata_Min_Fields>;
  stddev?: Maybe<Pis_Segnaletica_Lasciata_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Segnaletica_Lasciata_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Segnaletica_Lasciata_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Segnaletica_Lasciata_Sum_Fields>;
  var_pop?: Maybe<Pis_Segnaletica_Lasciata_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Segnaletica_Lasciata_Var_Samp_Fields>;
  variance?: Maybe<Pis_Segnaletica_Lasciata_Variance_Fields>;
};


/** aggregate fields of "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Segnaletica_Lasciata_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Aggregate_Order_By = {
  avg?: Maybe<Pis_Segnaletica_Lasciata_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Segnaletica_Lasciata_Max_Order_By>;
  min?: Maybe<Pis_Segnaletica_Lasciata_Min_Order_By>;
  stddev?: Maybe<Pis_Segnaletica_Lasciata_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Segnaletica_Lasciata_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Segnaletica_Lasciata_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Segnaletica_Lasciata_Sum_Order_By>;
  var_pop?: Maybe<Pis_Segnaletica_Lasciata_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Segnaletica_Lasciata_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Segnaletica_Lasciata_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Arr_Rel_Insert_Input = {
  data: Array<Pis_Segnaletica_Lasciata_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Segnaletica_Lasciata_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Segnaletica_Lasciata_Avg_Fields = {
  __typename?: 'pis_segnaletica_lasciata_avg_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Avg_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.segnaletica_lasciata". All fields are combined with a logical 'AND'. */
export type Pis_Segnaletica_Lasciata_Bool_Exp = {
  _and?: Maybe<Array<Pis_Segnaletica_Lasciata_Bool_Exp>>;
  _not?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
  _or?: Maybe<Array<Pis_Segnaletica_Lasciata_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  intervento?: Maybe<Pis_Intervento_Bool_Exp>;
  intervento_id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  quantita?: Maybe<Float8_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.segnaletica_lasciata" */
export enum Pis_Segnaletica_Lasciata_Constraint {
  /** unique or primary key constraint */
  SegnaleticaLasciataPkey = 'segnaletica_lasciata_pkey'
}

/** input type for incrementing numeric columns in table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Pis_Intervento_Obj_Rel_Insert_Input>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis_Segnaletica_Lasciata_Max_Fields = {
  __typename?: 'pis_segnaletica_lasciata_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Segnaletica_Lasciata_Min_Fields = {
  __typename?: 'pis_segnaletica_lasciata_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Mutation_Response = {
  __typename?: 'pis_segnaletica_lasciata_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Segnaletica_Lasciata>;
};

/** on_conflict condition type for table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_On_Conflict = {
  constraint: Pis_Segnaletica_Lasciata_Constraint;
  update_columns?: Array<Pis_Segnaletica_Lasciata_Update_Column>;
  where?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.segnaletica_lasciata". */
export type Pis_Segnaletica_Lasciata_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento?: Maybe<Pis_Intervento_Order_By>;
  intervento_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_segnaletica_lasciata */
export type Pis_Segnaletica_Lasciata_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.segnaletica_lasciata" */
export enum Pis_Segnaletica_Lasciata_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Quantita = 'quantita',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quantita?: Maybe<Scalars['float8']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Segnaletica_Lasciata_Stddev_Fields = {
  __typename?: 'pis_segnaletica_lasciata_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Segnaletica_Lasciata_Stddev_Pop_Fields = {
  __typename?: 'pis_segnaletica_lasciata_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Segnaletica_Lasciata_Stddev_Samp_Fields = {
  __typename?: 'pis_segnaletica_lasciata_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Segnaletica_Lasciata_Sum_Fields = {
  __typename?: 'pis_segnaletica_lasciata_sum_fields';
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  quantita?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Sum_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** update columns of table "pis.segnaletica_lasciata" */
export enum Pis_Segnaletica_Lasciata_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Quantita = 'quantita',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Segnaletica_Lasciata_Var_Pop_Fields = {
  __typename?: 'pis_segnaletica_lasciata_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Segnaletica_Lasciata_Var_Samp_Fields = {
  __typename?: 'pis_segnaletica_lasciata_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Segnaletica_Lasciata_Variance_Fields = {
  __typename?: 'pis_segnaletica_lasciata_variance_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
  quantita?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.segnaletica_lasciata" */
export type Pis_Segnaletica_Lasciata_Variance_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  quantita?: Maybe<Order_By>;
};

/** columns and relationships of "pis.squadra" */
export type Pis_Squadra = {
  __typename?: 'pis_squadra';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An array relationship */
  membri: Array<Pis_Assegnazione_Squadra>;
  /** An aggregate relationship */
  membri_aggregate: Pis_Assegnazione_Squadra_Aggregate;
  nome?: Maybe<Scalars['String']>;
  protezione_civile?: Maybe<Scalars['Boolean']>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  vecchie_denominazioni: Array<Pis_Vecchia_Squadra>;
  /** An aggregate relationship */
  vecchie_denominazioni_aggregate: Pis_Vecchia_Squadra_Aggregate;
};


/** columns and relationships of "pis.squadra" */
export type Pis_SquadraMembriArgs = {
  distinct_on?: Maybe<Array<Pis_Assegnazione_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Assegnazione_Squadra_Order_By>>;
  where?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
};


/** columns and relationships of "pis.squadra" */
export type Pis_SquadraMembri_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Assegnazione_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Assegnazione_Squadra_Order_By>>;
  where?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
};


/** columns and relationships of "pis.squadra" */
export type Pis_SquadraVecchie_DenominazioniArgs = {
  distinct_on?: Maybe<Array<Pis_Vecchia_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Vecchia_Squadra_Order_By>>;
  where?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};


/** columns and relationships of "pis.squadra" */
export type Pis_SquadraVecchie_Denominazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Vecchia_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Vecchia_Squadra_Order_By>>;
  where?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};

/** aggregated selection of "pis.squadra" */
export type Pis_Squadra_Aggregate = {
  __typename?: 'pis_squadra_aggregate';
  aggregate?: Maybe<Pis_Squadra_Aggregate_Fields>;
  nodes: Array<Pis_Squadra>;
};

/** aggregate fields of "pis.squadra" */
export type Pis_Squadra_Aggregate_Fields = {
  __typename?: 'pis_squadra_aggregate_fields';
  avg?: Maybe<Pis_Squadra_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Squadra_Max_Fields>;
  min?: Maybe<Pis_Squadra_Min_Fields>;
  stddev?: Maybe<Pis_Squadra_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Squadra_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Squadra_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Squadra_Sum_Fields>;
  var_pop?: Maybe<Pis_Squadra_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Squadra_Var_Samp_Fields>;
  variance?: Maybe<Pis_Squadra_Variance_Fields>;
};


/** aggregate fields of "pis.squadra" */
export type Pis_Squadra_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Squadra_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis_Squadra_Avg_Fields = {
  __typename?: 'pis_squadra_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis.squadra". All fields are combined with a logical 'AND'. */
export type Pis_Squadra_Bool_Exp = {
  _and?: Maybe<Array<Pis_Squadra_Bool_Exp>>;
  _not?: Maybe<Pis_Squadra_Bool_Exp>;
  _or?: Maybe<Array<Pis_Squadra_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  membri?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  protezione_civile?: Maybe<Boolean_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  vecchie_denominazioni?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};

/** unique or primary key constraints on table "pis.squadra" */
export enum Pis_Squadra_Constraint {
  /** unique or primary key constraint */
  SquadraPkey = 'squadra_pkey'
}

/** input type for incrementing numeric columns in table "pis.squadra" */
export type Pis_Squadra_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.squadra" */
export type Pis_Squadra_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  membri?: Maybe<Pis_Assegnazione_Squadra_Arr_Rel_Insert_Input>;
  nome?: Maybe<Scalars['String']>;
  protezione_civile?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  vecchie_denominazioni?: Maybe<Pis_Vecchia_Squadra_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Pis_Squadra_Max_Fields = {
  __typename?: 'pis_squadra_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis_Squadra_Min_Fields = {
  __typename?: 'pis_squadra_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis.squadra" */
export type Pis_Squadra_Mutation_Response = {
  __typename?: 'pis_squadra_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Squadra>;
};

/** input type for inserting object relation for remote table "pis.squadra" */
export type Pis_Squadra_Obj_Rel_Insert_Input = {
  data: Pis_Squadra_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Squadra_On_Conflict>;
};

/** on_conflict condition type for table "pis.squadra" */
export type Pis_Squadra_On_Conflict = {
  constraint: Pis_Squadra_Constraint;
  update_columns?: Array<Pis_Squadra_Update_Column>;
  where?: Maybe<Pis_Squadra_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.squadra". */
export type Pis_Squadra_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  membri_aggregate?: Maybe<Pis_Assegnazione_Squadra_Aggregate_Order_By>;
  nome?: Maybe<Order_By>;
  protezione_civile?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  vecchie_denominazioni_aggregate?: Maybe<Pis_Vecchia_Squadra_Aggregate_Order_By>;
};

/** primary key columns input for table: pis_squadra */
export type Pis_Squadra_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.squadra" */
export enum Pis_Squadra_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  ProtezioneCivile = 'protezione_civile',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.squadra" */
export type Pis_Squadra_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  protezione_civile?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Squadra_Stddev_Fields = {
  __typename?: 'pis_squadra_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis_Squadra_Stddev_Pop_Fields = {
  __typename?: 'pis_squadra_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis_Squadra_Stddev_Samp_Fields = {
  __typename?: 'pis_squadra_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis_Squadra_Sum_Fields = {
  __typename?: 'pis_squadra_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis.squadra" */
export enum Pis_Squadra_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  ProtezioneCivile = 'protezione_civile',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Squadra_Var_Pop_Fields = {
  __typename?: 'pis_squadra_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis_Squadra_Var_Samp_Fields = {
  __typename?: 'pis_squadra_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis_Squadra_Variance_Fields = {
  __typename?: 'pis_squadra_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis.tecnico_referente" */
export type Pis_Tecnico_Referente = {
  __typename?: 'pis_tecnico_referente';
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  /** An array relationship */
  segnalazioni: Array<Pis_Segnalazione>;
  /** An aggregate relationship */
  segnalazioni_aggregate: Pis_Segnalazione_Aggregate;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "pis.tecnico_referente" */
export type Pis_Tecnico_ReferenteSegnalazioniArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


/** columns and relationships of "pis.tecnico_referente" */
export type Pis_Tecnico_ReferenteSegnalazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};

/** aggregated selection of "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Aggregate = {
  __typename?: 'pis_tecnico_referente_aggregate';
  aggregate?: Maybe<Pis_Tecnico_Referente_Aggregate_Fields>;
  nodes: Array<Pis_Tecnico_Referente>;
};

/** aggregate fields of "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Aggregate_Fields = {
  __typename?: 'pis_tecnico_referente_aggregate_fields';
  avg?: Maybe<Pis_Tecnico_Referente_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Tecnico_Referente_Max_Fields>;
  min?: Maybe<Pis_Tecnico_Referente_Min_Fields>;
  stddev?: Maybe<Pis_Tecnico_Referente_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Tecnico_Referente_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Tecnico_Referente_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Tecnico_Referente_Sum_Fields>;
  var_pop?: Maybe<Pis_Tecnico_Referente_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Tecnico_Referente_Var_Samp_Fields>;
  variance?: Maybe<Pis_Tecnico_Referente_Variance_Fields>;
};


/** aggregate fields of "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Tecnico_Referente_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Pis_Tecnico_Referente_Avg_Fields = {
  __typename?: 'pis_tecnico_referente_avg_fields';
  id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "pis.tecnico_referente". All fields are combined with a logical 'AND'. */
export type Pis_Tecnico_Referente_Bool_Exp = {
  _and?: Maybe<Array<Pis_Tecnico_Referente_Bool_Exp>>;
  _not?: Maybe<Pis_Tecnico_Referente_Bool_Exp>;
  _or?: Maybe<Array<Pis_Tecnico_Referente_Bool_Exp>>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  segnalazioni?: Maybe<Pis_Segnalazione_Bool_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.tecnico_referente" */
export enum Pis_Tecnico_Referente_Constraint {
  /** unique or primary key constraint */
  TecnicoReferentePkey = 'tecnico_referente_pkey'
}

/** input type for incrementing numeric columns in table "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Insert_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  segnalazioni?: Maybe<Pis_Segnalazione_Arr_Rel_Insert_Input>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis_Tecnico_Referente_Max_Fields = {
  __typename?: 'pis_tecnico_referente_max_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Pis_Tecnico_Referente_Min_Fields = {
  __typename?: 'pis_tecnico_referente_min_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Mutation_Response = {
  __typename?: 'pis_tecnico_referente_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Tecnico_Referente>;
};

/** input type for inserting object relation for remote table "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Obj_Rel_Insert_Input = {
  data: Pis_Tecnico_Referente_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Tecnico_Referente_On_Conflict>;
};

/** on_conflict condition type for table "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_On_Conflict = {
  constraint: Pis_Tecnico_Referente_Constraint;
  update_columns?: Array<Pis_Tecnico_Referente_Update_Column>;
  where?: Maybe<Pis_Tecnico_Referente_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.tecnico_referente". */
export type Pis_Tecnico_Referente_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  segnalazioni_aggregate?: Maybe<Pis_Segnalazione_Aggregate_Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_tecnico_referente */
export type Pis_Tecnico_Referente_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.tecnico_referente" */
export enum Pis_Tecnico_Referente_Select_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.tecnico_referente" */
export type Pis_Tecnico_Referente_Set_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Tecnico_Referente_Stddev_Fields = {
  __typename?: 'pis_tecnico_referente_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Pis_Tecnico_Referente_Stddev_Pop_Fields = {
  __typename?: 'pis_tecnico_referente_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Pis_Tecnico_Referente_Stddev_Samp_Fields = {
  __typename?: 'pis_tecnico_referente_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Pis_Tecnico_Referente_Sum_Fields = {
  __typename?: 'pis_tecnico_referente_sum_fields';
  id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** update columns of table "pis.tecnico_referente" */
export enum Pis_Tecnico_Referente_Update_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Tecnico_Referente_Var_Pop_Fields = {
  __typename?: 'pis_tecnico_referente_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Pis_Tecnico_Referente_Var_Samp_Fields = {
  __typename?: 'pis_tecnico_referente_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Pis_Tecnico_Referente_Variance_Fields = {
  __typename?: 'pis_tecnico_referente_variance_fields';
  id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra = {
  __typename?: 'pis_vecchia_squadra';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  protezione_civile?: Maybe<Scalars['Boolean']>;
  squadra_id: Scalars['Int'];
};

/** aggregated selection of "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Aggregate = {
  __typename?: 'pis_vecchia_squadra_aggregate';
  aggregate?: Maybe<Pis_Vecchia_Squadra_Aggregate_Fields>;
  nodes: Array<Pis_Vecchia_Squadra>;
};

/** aggregate fields of "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Aggregate_Fields = {
  __typename?: 'pis_vecchia_squadra_aggregate_fields';
  avg?: Maybe<Pis_Vecchia_Squadra_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Vecchia_Squadra_Max_Fields>;
  min?: Maybe<Pis_Vecchia_Squadra_Min_Fields>;
  stddev?: Maybe<Pis_Vecchia_Squadra_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Vecchia_Squadra_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Vecchia_Squadra_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Vecchia_Squadra_Sum_Fields>;
  var_pop?: Maybe<Pis_Vecchia_Squadra_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Vecchia_Squadra_Var_Samp_Fields>;
  variance?: Maybe<Pis_Vecchia_Squadra_Variance_Fields>;
};


/** aggregate fields of "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Vecchia_Squadra_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Aggregate_Order_By = {
  avg?: Maybe<Pis_Vecchia_Squadra_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Vecchia_Squadra_Max_Order_By>;
  min?: Maybe<Pis_Vecchia_Squadra_Min_Order_By>;
  stddev?: Maybe<Pis_Vecchia_Squadra_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Vecchia_Squadra_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Vecchia_Squadra_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Vecchia_Squadra_Sum_Order_By>;
  var_pop?: Maybe<Pis_Vecchia_Squadra_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Vecchia_Squadra_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Vecchia_Squadra_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Arr_Rel_Insert_Input = {
  data: Array<Pis_Vecchia_Squadra_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Vecchia_Squadra_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Vecchia_Squadra_Avg_Fields = {
  __typename?: 'pis_vecchia_squadra_avg_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Avg_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.vecchia_squadra". All fields are combined with a logical 'AND'. */
export type Pis_Vecchia_Squadra_Bool_Exp = {
  _and?: Maybe<Array<Pis_Vecchia_Squadra_Bool_Exp>>;
  _not?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
  _or?: Maybe<Array<Pis_Vecchia_Squadra_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  protezione_civile?: Maybe<Boolean_Comparison_Exp>;
  squadra_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.vecchia_squadra" */
export enum Pis_Vecchia_Squadra_Constraint {
  /** unique or primary key constraint */
  VecchiaSquadraPkey = 'vecchia_squadra_pkey'
}

/** input type for incrementing numeric columns in table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  protezione_civile?: Maybe<Scalars['Boolean']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Pis_Vecchia_Squadra_Max_Fields = {
  __typename?: 'pis_vecchia_squadra_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Vecchia_Squadra_Min_Fields = {
  __typename?: 'pis_vecchia_squadra_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Mutation_Response = {
  __typename?: 'pis_vecchia_squadra_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Vecchia_Squadra>;
};

/** on_conflict condition type for table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_On_Conflict = {
  constraint: Pis_Vecchia_Squadra_Constraint;
  update_columns?: Array<Pis_Vecchia_Squadra_Update_Column>;
  where?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.vecchia_squadra". */
export type Pis_Vecchia_Squadra_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  protezione_civile?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_vecchia_squadra */
export type Pis_Vecchia_Squadra_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.vecchia_squadra" */
export enum Pis_Vecchia_Squadra_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  ProtezioneCivile = 'protezione_civile',
  /** column name */
  SquadraId = 'squadra_id'
}

/** input type for updating data in table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  protezione_civile?: Maybe<Scalars['Boolean']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Pis_Vecchia_Squadra_Stddev_Fields = {
  __typename?: 'pis_vecchia_squadra_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Vecchia_Squadra_Stddev_Pop_Fields = {
  __typename?: 'pis_vecchia_squadra_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Vecchia_Squadra_Stddev_Samp_Fields = {
  __typename?: 'pis_vecchia_squadra_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Vecchia_Squadra_Sum_Fields = {
  __typename?: 'pis_vecchia_squadra_sum_fields';
  id?: Maybe<Scalars['Int']>;
  squadra_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Sum_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** update columns of table "pis.vecchia_squadra" */
export enum Pis_Vecchia_Squadra_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  ProtezioneCivile = 'protezione_civile',
  /** column name */
  SquadraId = 'squadra_id'
}

/** aggregate var_pop on columns */
export type Pis_Vecchia_Squadra_Var_Pop_Fields = {
  __typename?: 'pis_vecchia_squadra_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Vecchia_Squadra_Var_Samp_Fields = {
  __typename?: 'pis_vecchia_squadra_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Vecchia_Squadra_Variance_Fields = {
  __typename?: 'pis_vecchia_squadra_variance_fields';
  id?: Maybe<Scalars['Float']>;
  squadra_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.vecchia_squadra" */
export type Pis_Vecchia_Squadra_Variance_Order_By = {
  id?: Maybe<Order_By>;
  squadra_id?: Maybe<Order_By>;
};

/** columns and relationships of "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati = {
  __typename?: 'pis_veicoli_impiegati';
  created_at: Scalars['timestamptz'];
  delete?: Maybe<Scalars['Boolean']>;
  id: Scalars['Int'];
  /** An object relationship */
  intervento: Pis_Intervento;
  intervento_id: Scalars['Int'];
  targa?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Aggregate = {
  __typename?: 'pis_veicoli_impiegati_aggregate';
  aggregate?: Maybe<Pis_Veicoli_Impiegati_Aggregate_Fields>;
  nodes: Array<Pis_Veicoli_Impiegati>;
};

/** aggregate fields of "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Aggregate_Fields = {
  __typename?: 'pis_veicoli_impiegati_aggregate_fields';
  avg?: Maybe<Pis_Veicoli_Impiegati_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Pis_Veicoli_Impiegati_Max_Fields>;
  min?: Maybe<Pis_Veicoli_Impiegati_Min_Fields>;
  stddev?: Maybe<Pis_Veicoli_Impiegati_Stddev_Fields>;
  stddev_pop?: Maybe<Pis_Veicoli_Impiegati_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Pis_Veicoli_Impiegati_Stddev_Samp_Fields>;
  sum?: Maybe<Pis_Veicoli_Impiegati_Sum_Fields>;
  var_pop?: Maybe<Pis_Veicoli_Impiegati_Var_Pop_Fields>;
  var_samp?: Maybe<Pis_Veicoli_Impiegati_Var_Samp_Fields>;
  variance?: Maybe<Pis_Veicoli_Impiegati_Variance_Fields>;
};


/** aggregate fields of "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Pis_Veicoli_Impiegati_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Aggregate_Order_By = {
  avg?: Maybe<Pis_Veicoli_Impiegati_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Pis_Veicoli_Impiegati_Max_Order_By>;
  min?: Maybe<Pis_Veicoli_Impiegati_Min_Order_By>;
  stddev?: Maybe<Pis_Veicoli_Impiegati_Stddev_Order_By>;
  stddev_pop?: Maybe<Pis_Veicoli_Impiegati_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Pis_Veicoli_Impiegati_Stddev_Samp_Order_By>;
  sum?: Maybe<Pis_Veicoli_Impiegati_Sum_Order_By>;
  var_pop?: Maybe<Pis_Veicoli_Impiegati_Var_Pop_Order_By>;
  var_samp?: Maybe<Pis_Veicoli_Impiegati_Var_Samp_Order_By>;
  variance?: Maybe<Pis_Veicoli_Impiegati_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Arr_Rel_Insert_Input = {
  data: Array<Pis_Veicoli_Impiegati_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Pis_Veicoli_Impiegati_On_Conflict>;
};

/** aggregate avg on columns */
export type Pis_Veicoli_Impiegati_Avg_Fields = {
  __typename?: 'pis_veicoli_impiegati_avg_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Avg_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "pis.veicoli_impiegati". All fields are combined with a logical 'AND'. */
export type Pis_Veicoli_Impiegati_Bool_Exp = {
  _and?: Maybe<Array<Pis_Veicoli_Impiegati_Bool_Exp>>;
  _not?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
  _or?: Maybe<Array<Pis_Veicoli_Impiegati_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  intervento?: Maybe<Pis_Intervento_Bool_Exp>;
  intervento_id?: Maybe<Int_Comparison_Exp>;
  targa?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "pis.veicoli_impiegati" */
export enum Pis_Veicoli_Impiegati_Constraint {
  /** unique or primary key constraint */
  VeicoliImpiegatiPkey = 'veicoli_impiegati_pkey'
}

/** input type for incrementing numeric columns in table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento?: Maybe<Pis_Intervento_Obj_Rel_Insert_Input>;
  intervento_id?: Maybe<Scalars['Int']>;
  targa?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Pis_Veicoli_Impiegati_Max_Fields = {
  __typename?: 'pis_veicoli_impiegati_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  targa?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  targa?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Pis_Veicoli_Impiegati_Min_Fields = {
  __typename?: 'pis_veicoli_impiegati_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  targa?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
  targa?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Mutation_Response = {
  __typename?: 'pis_veicoli_impiegati_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Pis_Veicoli_Impiegati>;
};

/** on_conflict condition type for table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_On_Conflict = {
  constraint: Pis_Veicoli_Impiegati_Constraint;
  update_columns?: Array<Pis_Veicoli_Impiegati_Update_Column>;
  where?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};

/** Ordering options when selecting data from "pis.veicoli_impiegati". */
export type Pis_Veicoli_Impiegati_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intervento?: Maybe<Pis_Intervento_Order_By>;
  intervento_id?: Maybe<Order_By>;
  targa?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: pis_veicoli_impiegati */
export type Pis_Veicoli_Impiegati_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "pis.veicoli_impiegati" */
export enum Pis_Veicoli_Impiegati_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  Targa = 'targa',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
  targa?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Pis_Veicoli_Impiegati_Stddev_Fields = {
  __typename?: 'pis_veicoli_impiegati_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Pis_Veicoli_Impiegati_Stddev_Pop_Fields = {
  __typename?: 'pis_veicoli_impiegati_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Pis_Veicoli_Impiegati_Stddev_Samp_Fields = {
  __typename?: 'pis_veicoli_impiegati_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Pis_Veicoli_Impiegati_Sum_Fields = {
  __typename?: 'pis_veicoli_impiegati_sum_fields';
  id?: Maybe<Scalars['Int']>;
  intervento_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Sum_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** update columns of table "pis.veicoli_impiegati" */
export enum Pis_Veicoli_Impiegati_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InterventoId = 'intervento_id',
  /** column name */
  Targa = 'targa',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Pis_Veicoli_Impiegati_Var_Pop_Fields = {
  __typename?: 'pis_veicoli_impiegati_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Pis_Veicoli_Impiegati_Var_Samp_Fields = {
  __typename?: 'pis_veicoli_impiegati_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Pis_Veicoli_Impiegati_Variance_Fields = {
  __typename?: 'pis_veicoli_impiegati_variance_fields';
  id?: Maybe<Scalars['Float']>;
  intervento_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "pis.veicoli_impiegati" */
export type Pis_Veicoli_Impiegati_Variance_Order_By = {
  id?: Maybe<Order_By>;
  intervento_id?: Maybe<Order_By>;
};

/** columns and relationships of "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo = {
  __typename?: 'protocollo__sezione_protocollo';
  codice: Scalars['String'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  postazione: Scalars['String'];
  servizio: Scalars['String'];
  settore: Scalars['String'];
  uoc: Scalars['String'];
  uos: Scalars['String'];
};

/** aggregated selection of "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Aggregate = {
  __typename?: 'protocollo__sezione_protocollo_aggregate';
  aggregate?: Maybe<Protocollo__Sezione_Protocollo_Aggregate_Fields>;
  nodes: Array<Protocollo__Sezione_Protocollo>;
};

/** aggregate fields of "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Aggregate_Fields = {
  __typename?: 'protocollo__sezione_protocollo_aggregate_fields';
  avg?: Maybe<Protocollo__Sezione_Protocollo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Protocollo__Sezione_Protocollo_Max_Fields>;
  min?: Maybe<Protocollo__Sezione_Protocollo_Min_Fields>;
  stddev?: Maybe<Protocollo__Sezione_Protocollo_Stddev_Fields>;
  stddev_pop?: Maybe<Protocollo__Sezione_Protocollo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Protocollo__Sezione_Protocollo_Stddev_Samp_Fields>;
  sum?: Maybe<Protocollo__Sezione_Protocollo_Sum_Fields>;
  var_pop?: Maybe<Protocollo__Sezione_Protocollo_Var_Pop_Fields>;
  var_samp?: Maybe<Protocollo__Sezione_Protocollo_Var_Samp_Fields>;
  variance?: Maybe<Protocollo__Sezione_Protocollo_Variance_Fields>;
};


/** aggregate fields of "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Protocollo__Sezione_Protocollo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Protocollo__Sezione_Protocollo_Avg_Fields = {
  __typename?: 'protocollo__sezione_protocollo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "protocollo._sezione_protocollo". All fields are combined with a logical 'AND'. */
export type Protocollo__Sezione_Protocollo_Bool_Exp = {
  _and?: Maybe<Array<Protocollo__Sezione_Protocollo_Bool_Exp>>;
  _not?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
  _or?: Maybe<Array<Protocollo__Sezione_Protocollo_Bool_Exp>>;
  codice?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  postazione?: Maybe<String_Comparison_Exp>;
  servizio?: Maybe<String_Comparison_Exp>;
  settore?: Maybe<String_Comparison_Exp>;
  uoc?: Maybe<String_Comparison_Exp>;
  uos?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "protocollo._sezione_protocollo" */
export enum Protocollo__Sezione_Protocollo_Constraint {
  /** unique or primary key constraint */
  SezioneProtocolloPkey = '_sezione_protocollo_pkey'
}

/** input type for incrementing numeric columns in table "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Insert_Input = {
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  postazione?: Maybe<Scalars['String']>;
  servizio?: Maybe<Scalars['String']>;
  settore?: Maybe<Scalars['String']>;
  uoc?: Maybe<Scalars['String']>;
  uos?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Protocollo__Sezione_Protocollo_Max_Fields = {
  __typename?: 'protocollo__sezione_protocollo_max_fields';
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  postazione?: Maybe<Scalars['String']>;
  servizio?: Maybe<Scalars['String']>;
  settore?: Maybe<Scalars['String']>;
  uoc?: Maybe<Scalars['String']>;
  uos?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Protocollo__Sezione_Protocollo_Min_Fields = {
  __typename?: 'protocollo__sezione_protocollo_min_fields';
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  postazione?: Maybe<Scalars['String']>;
  servizio?: Maybe<Scalars['String']>;
  settore?: Maybe<Scalars['String']>;
  uoc?: Maybe<Scalars['String']>;
  uos?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Mutation_Response = {
  __typename?: 'protocollo__sezione_protocollo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Protocollo__Sezione_Protocollo>;
};

/** input type for inserting object relation for remote table "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Obj_Rel_Insert_Input = {
  data: Protocollo__Sezione_Protocollo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Protocollo__Sezione_Protocollo_On_Conflict>;
};

/** on_conflict condition type for table "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_On_Conflict = {
  constraint: Protocollo__Sezione_Protocollo_Constraint;
  update_columns?: Array<Protocollo__Sezione_Protocollo_Update_Column>;
  where?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
};

/** Ordering options when selecting data from "protocollo._sezione_protocollo". */
export type Protocollo__Sezione_Protocollo_Order_By = {
  codice?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  postazione?: Maybe<Order_By>;
  servizio?: Maybe<Order_By>;
  settore?: Maybe<Order_By>;
  uoc?: Maybe<Order_By>;
  uos?: Maybe<Order_By>;
};

/** primary key columns input for table: protocollo__sezione_protocollo */
export type Protocollo__Sezione_Protocollo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "protocollo._sezione_protocollo" */
export enum Protocollo__Sezione_Protocollo_Select_Column {
  /** column name */
  Codice = 'codice',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Postazione = 'postazione',
  /** column name */
  Servizio = 'servizio',
  /** column name */
  Settore = 'settore',
  /** column name */
  Uoc = 'uoc',
  /** column name */
  Uos = 'uos'
}

/** input type for updating data in table "protocollo._sezione_protocollo" */
export type Protocollo__Sezione_Protocollo_Set_Input = {
  codice?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  postazione?: Maybe<Scalars['String']>;
  servizio?: Maybe<Scalars['String']>;
  settore?: Maybe<Scalars['String']>;
  uoc?: Maybe<Scalars['String']>;
  uos?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Protocollo__Sezione_Protocollo_Stddev_Fields = {
  __typename?: 'protocollo__sezione_protocollo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Protocollo__Sezione_Protocollo_Stddev_Pop_Fields = {
  __typename?: 'protocollo__sezione_protocollo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Protocollo__Sezione_Protocollo_Stddev_Samp_Fields = {
  __typename?: 'protocollo__sezione_protocollo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Protocollo__Sezione_Protocollo_Sum_Fields = {
  __typename?: 'protocollo__sezione_protocollo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "protocollo._sezione_protocollo" */
export enum Protocollo__Sezione_Protocollo_Update_Column {
  /** column name */
  Codice = 'codice',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Postazione = 'postazione',
  /** column name */
  Servizio = 'servizio',
  /** column name */
  Settore = 'settore',
  /** column name */
  Uoc = 'uoc',
  /** column name */
  Uos = 'uos'
}

/** aggregate var_pop on columns */
export type Protocollo__Sezione_Protocollo_Var_Pop_Fields = {
  __typename?: 'protocollo__sezione_protocollo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Protocollo__Sezione_Protocollo_Var_Samp_Fields = {
  __typename?: 'protocollo__sezione_protocollo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Protocollo__Sezione_Protocollo_Variance_Fields = {
  __typename?: 'protocollo__sezione_protocollo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "protocollo.protocollo" */
export type Protocollo_Protocollo = {
  __typename?: 'protocollo_protocollo';
  data?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  destinatari: Array<Protocollo_Protocollo_Destinatario>;
  /** An aggregate relationship */
  destinatari_aggregate: Protocollo_Protocollo_Destinatario_Aggregate;
  id: Scalars['Int'];
  /** An object relationship */
  mittente?: Maybe<Protocollo__Sezione_Protocollo>;
  mittente_id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  numero?: Maybe<Scalars['String']>;
};


/** columns and relationships of "protocollo.protocollo" */
export type Protocollo_ProtocolloDestinatariArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};


/** columns and relationships of "protocollo.protocollo" */
export type Protocollo_ProtocolloDestinatari_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};

/** aggregated selection of "protocollo.protocollo" */
export type Protocollo_Protocollo_Aggregate = {
  __typename?: 'protocollo_protocollo_aggregate';
  aggregate?: Maybe<Protocollo_Protocollo_Aggregate_Fields>;
  nodes: Array<Protocollo_Protocollo>;
};

/** aggregate fields of "protocollo.protocollo" */
export type Protocollo_Protocollo_Aggregate_Fields = {
  __typename?: 'protocollo_protocollo_aggregate_fields';
  avg?: Maybe<Protocollo_Protocollo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Protocollo_Protocollo_Max_Fields>;
  min?: Maybe<Protocollo_Protocollo_Min_Fields>;
  stddev?: Maybe<Protocollo_Protocollo_Stddev_Fields>;
  stddev_pop?: Maybe<Protocollo_Protocollo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Protocollo_Protocollo_Stddev_Samp_Fields>;
  sum?: Maybe<Protocollo_Protocollo_Sum_Fields>;
  var_pop?: Maybe<Protocollo_Protocollo_Var_Pop_Fields>;
  var_samp?: Maybe<Protocollo_Protocollo_Var_Samp_Fields>;
  variance?: Maybe<Protocollo_Protocollo_Variance_Fields>;
};


/** aggregate fields of "protocollo.protocollo" */
export type Protocollo_Protocollo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Protocollo_Protocollo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Protocollo_Protocollo_Avg_Fields = {
  __typename?: 'protocollo_protocollo_avg_fields';
  id?: Maybe<Scalars['Float']>;
  mittente_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "protocollo.protocollo". All fields are combined with a logical 'AND'. */
export type Protocollo_Protocollo_Bool_Exp = {
  _and?: Maybe<Array<Protocollo_Protocollo_Bool_Exp>>;
  _not?: Maybe<Protocollo_Protocollo_Bool_Exp>;
  _or?: Maybe<Array<Protocollo_Protocollo_Bool_Exp>>;
  data?: Maybe<Timestamptz_Comparison_Exp>;
  destinatari?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  mittente?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
  mittente_id?: Maybe<Int_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  numero?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "protocollo.protocollo" */
export enum Protocollo_Protocollo_Constraint {
  /** unique or primary key constraint */
  ProtocolloPkey = 'protocollo_pkey'
}

/** columns and relationships of "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario = {
  __typename?: 'protocollo_protocollo_destinatario';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  /** An object relationship */
  destinatario_esterno?: Maybe<Protocollo_Protocollo_Destinatario_Esterno>;
  /** An object relationship */
  destinatario_interno?: Maybe<Protocollo__Sezione_Protocollo>;
  e_esterno: Scalars['Boolean'];
  esterno_id?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  interno_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  protocollo: Protocollo_Protocollo;
  protocollo_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Aggregate = {
  __typename?: 'protocollo_protocollo_destinatario_aggregate';
  aggregate?: Maybe<Protocollo_Protocollo_Destinatario_Aggregate_Fields>;
  nodes: Array<Protocollo_Protocollo_Destinatario>;
};

/** aggregate fields of "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Aggregate_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_aggregate_fields';
  avg?: Maybe<Protocollo_Protocollo_Destinatario_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Protocollo_Protocollo_Destinatario_Max_Fields>;
  min?: Maybe<Protocollo_Protocollo_Destinatario_Min_Fields>;
  stddev?: Maybe<Protocollo_Protocollo_Destinatario_Stddev_Fields>;
  stddev_pop?: Maybe<Protocollo_Protocollo_Destinatario_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Protocollo_Protocollo_Destinatario_Stddev_Samp_Fields>;
  sum?: Maybe<Protocollo_Protocollo_Destinatario_Sum_Fields>;
  var_pop?: Maybe<Protocollo_Protocollo_Destinatario_Var_Pop_Fields>;
  var_samp?: Maybe<Protocollo_Protocollo_Destinatario_Var_Samp_Fields>;
  variance?: Maybe<Protocollo_Protocollo_Destinatario_Variance_Fields>;
};


/** aggregate fields of "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Aggregate_Order_By = {
  avg?: Maybe<Protocollo_Protocollo_Destinatario_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Protocollo_Protocollo_Destinatario_Max_Order_By>;
  min?: Maybe<Protocollo_Protocollo_Destinatario_Min_Order_By>;
  stddev?: Maybe<Protocollo_Protocollo_Destinatario_Stddev_Order_By>;
  stddev_pop?: Maybe<Protocollo_Protocollo_Destinatario_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Protocollo_Protocollo_Destinatario_Stddev_Samp_Order_By>;
  sum?: Maybe<Protocollo_Protocollo_Destinatario_Sum_Order_By>;
  var_pop?: Maybe<Protocollo_Protocollo_Destinatario_Var_Pop_Order_By>;
  var_samp?: Maybe<Protocollo_Protocollo_Destinatario_Var_Samp_Order_By>;
  variance?: Maybe<Protocollo_Protocollo_Destinatario_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Arr_Rel_Insert_Input = {
  data: Array<Protocollo_Protocollo_Destinatario_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Protocollo_Protocollo_Destinatario_On_Conflict>;
};

/** aggregate avg on columns */
export type Protocollo_Protocollo_Destinatario_Avg_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_avg_fields';
  esterno_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  interno_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Avg_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "protocollo.protocollo_destinatario". All fields are combined with a logical 'AND'. */
export type Protocollo_Protocollo_Destinatario_Bool_Exp = {
  _and?: Maybe<Array<Protocollo_Protocollo_Destinatario_Bool_Exp>>;
  _not?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
  _or?: Maybe<Array<Protocollo_Protocollo_Destinatario_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  destinatario_esterno?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>;
  destinatario_interno?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
  e_esterno?: Maybe<Boolean_Comparison_Exp>;
  esterno_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  interno_id?: Maybe<Int_Comparison_Exp>;
  protocollo?: Maybe<Protocollo_Protocollo_Bool_Exp>;
  protocollo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "protocollo.protocollo_destinatario" */
export enum Protocollo_Protocollo_Destinatario_Constraint {
  /** unique or primary key constraint */
  ProtocolloDestinatarioPkey = 'protocollo_destinatario_pkey'
}

/** columns and relationships of "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno = {
  __typename?: 'protocollo_protocollo_destinatario_esterno';
  codice_fiscale?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  email?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  /** An array relationship */
  protocollo_destinatari: Array<Protocollo_Protocollo_Destinatario>;
  /** An aggregate relationship */
  protocollo_destinatari_aggregate: Protocollo_Protocollo_Destinatario_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_EsternoProtocollo_DestinatariArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};


/** columns and relationships of "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_EsternoProtocollo_Destinatari_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};

/** aggregated selection of "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Aggregate = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_aggregate';
  aggregate?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Aggregate_Fields>;
  nodes: Array<Protocollo_Protocollo_Destinatario_Esterno>;
};

/** aggregate fields of "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Aggregate_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_aggregate_fields';
  avg?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Max_Fields>;
  min?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Min_Fields>;
  stddev?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Stddev_Fields>;
  stddev_pop?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Stddev_Samp_Fields>;
  sum?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Sum_Fields>;
  var_pop?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Var_Pop_Fields>;
  var_samp?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Var_Samp_Fields>;
  variance?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Variance_Fields>;
};


/** aggregate fields of "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Avg_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "protocollo.protocollo_destinatario_esterno". All fields are combined with a logical 'AND'. */
export type Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp = {
  _and?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>>;
  _not?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>;
  _or?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>>;
  codice_fiscale?: Maybe<String_Comparison_Exp>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  protocollo_destinatari?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "protocollo.protocollo_destinatario_esterno" */
export enum Protocollo_Protocollo_Destinatario_Esterno_Constraint {
  /** unique or primary key constraint */
  ProtocolloDestinatarioEsternoPkey = 'protocollo_destinatario_esterno_pkey'
}

/** input type for incrementing numeric columns in table "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Insert_Input = {
  codice_fiscale?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  protocollo_destinatari?: Maybe<Protocollo_Protocollo_Destinatario_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Max_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_max_fields';
  codice_fiscale?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Min_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_min_fields';
  codice_fiscale?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Mutation_Response = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Protocollo_Protocollo_Destinatario_Esterno>;
};

/** input type for inserting object relation for remote table "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Obj_Rel_Insert_Input = {
  data: Protocollo_Protocollo_Destinatario_Esterno_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_On_Conflict>;
};

/** on_conflict condition type for table "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_On_Conflict = {
  constraint: Protocollo_Protocollo_Destinatario_Esterno_Constraint;
  update_columns?: Array<Protocollo_Protocollo_Destinatario_Esterno_Update_Column>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>;
};

/** Ordering options when selecting data from "protocollo.protocollo_destinatario_esterno". */
export type Protocollo_Protocollo_Destinatario_Esterno_Order_By = {
  codice_fiscale?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  protocollo_destinatari_aggregate?: Maybe<Protocollo_Protocollo_Destinatario_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: protocollo_protocollo_destinatario_esterno */
export type Protocollo_Protocollo_Destinatario_Esterno_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "protocollo.protocollo_destinatario_esterno" */
export enum Protocollo_Protocollo_Destinatario_Esterno_Select_Column {
  /** column name */
  CodiceFiscale = 'codice_fiscale',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "protocollo.protocollo_destinatario_esterno" */
export type Protocollo_Protocollo_Destinatario_Esterno_Set_Input = {
  codice_fiscale?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Stddev_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Stddev_Pop_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Stddev_Samp_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Sum_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "protocollo.protocollo_destinatario_esterno" */
export enum Protocollo_Protocollo_Destinatario_Esterno_Update_Column {
  /** column name */
  CodiceFiscale = 'codice_fiscale',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Var_Pop_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Var_Samp_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Protocollo_Protocollo_Destinatario_Esterno_Variance_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_esterno_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** input type for incrementing numeric columns in table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Inc_Input = {
  esterno_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  interno_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  destinatario_esterno?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Obj_Rel_Insert_Input>;
  destinatario_interno?: Maybe<Protocollo__Sezione_Protocollo_Obj_Rel_Insert_Input>;
  e_esterno?: Maybe<Scalars['Boolean']>;
  esterno_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  interno_id?: Maybe<Scalars['Int']>;
  protocollo?: Maybe<Protocollo_Protocollo_Obj_Rel_Insert_Input>;
  protocollo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Protocollo_Protocollo_Destinatario_Max_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  esterno_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  interno_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Protocollo_Protocollo_Destinatario_Min_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  esterno_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  interno_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Mutation_Response = {
  __typename?: 'protocollo_protocollo_destinatario_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Protocollo_Protocollo_Destinatario>;
};

/** on_conflict condition type for table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_On_Conflict = {
  constraint: Protocollo_Protocollo_Destinatario_Constraint;
  update_columns?: Array<Protocollo_Protocollo_Destinatario_Update_Column>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};

/** Ordering options when selecting data from "protocollo.protocollo_destinatario". */
export type Protocollo_Protocollo_Destinatario_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  destinatario_esterno?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Order_By>;
  destinatario_interno?: Maybe<Protocollo__Sezione_Protocollo_Order_By>;
  e_esterno?: Maybe<Order_By>;
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo?: Maybe<Protocollo_Protocollo_Order_By>;
  protocollo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: protocollo_protocollo_destinatario */
export type Protocollo_Protocollo_Destinatario_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "protocollo.protocollo_destinatario" */
export enum Protocollo_Protocollo_Destinatario_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EEsterno = 'e_esterno',
  /** column name */
  EsternoId = 'esterno_id',
  /** column name */
  Id = 'id',
  /** column name */
  InternoId = 'interno_id',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  e_esterno?: Maybe<Scalars['Boolean']>;
  esterno_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  interno_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Protocollo_Protocollo_Destinatario_Stddev_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_stddev_fields';
  esterno_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  interno_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Stddev_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Protocollo_Protocollo_Destinatario_Stddev_Pop_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_stddev_pop_fields';
  esterno_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  interno_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Stddev_Pop_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Protocollo_Protocollo_Destinatario_Stddev_Samp_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_stddev_samp_fields';
  esterno_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  interno_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Stddev_Samp_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Protocollo_Protocollo_Destinatario_Sum_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_sum_fields';
  esterno_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  interno_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Sum_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** update columns of table "protocollo.protocollo_destinatario" */
export enum Protocollo_Protocollo_Destinatario_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EEsterno = 'e_esterno',
  /** column name */
  EsternoId = 'esterno_id',
  /** column name */
  Id = 'id',
  /** column name */
  InternoId = 'interno_id',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Protocollo_Protocollo_Destinatario_Var_Pop_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_var_pop_fields';
  esterno_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  interno_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Var_Pop_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Protocollo_Protocollo_Destinatario_Var_Samp_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_var_samp_fields';
  esterno_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  interno_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Var_Samp_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Protocollo_Protocollo_Destinatario_Variance_Fields = {
  __typename?: 'protocollo_protocollo_destinatario_variance_fields';
  esterno_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  interno_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "protocollo.protocollo_destinatario" */
export type Protocollo_Protocollo_Destinatario_Variance_Order_By = {
  esterno_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interno_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
};

/** input type for incrementing numeric columns in table "protocollo.protocollo" */
export type Protocollo_Protocollo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  mittente_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "protocollo.protocollo" */
export type Protocollo_Protocollo_Insert_Input = {
  data?: Maybe<Scalars['timestamptz']>;
  destinatari?: Maybe<Protocollo_Protocollo_Destinatario_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['Int']>;
  mittente?: Maybe<Protocollo__Sezione_Protocollo_Obj_Rel_Insert_Input>;
  mittente_id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  numero?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Protocollo_Protocollo_Max_Fields = {
  __typename?: 'protocollo_protocollo_max_fields';
  data?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  mittente_id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  numero?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Protocollo_Protocollo_Min_Fields = {
  __typename?: 'protocollo_protocollo_min_fields';
  data?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  mittente_id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  numero?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "protocollo.protocollo" */
export type Protocollo_Protocollo_Mutation_Response = {
  __typename?: 'protocollo_protocollo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Protocollo_Protocollo>;
};

/** input type for inserting object relation for remote table "protocollo.protocollo" */
export type Protocollo_Protocollo_Obj_Rel_Insert_Input = {
  data: Protocollo_Protocollo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Protocollo_Protocollo_On_Conflict>;
};

/** on_conflict condition type for table "protocollo.protocollo" */
export type Protocollo_Protocollo_On_Conflict = {
  constraint: Protocollo_Protocollo_Constraint;
  update_columns?: Array<Protocollo_Protocollo_Update_Column>;
  where?: Maybe<Protocollo_Protocollo_Bool_Exp>;
};

/** Ordering options when selecting data from "protocollo.protocollo". */
export type Protocollo_Protocollo_Order_By = {
  data?: Maybe<Order_By>;
  destinatari_aggregate?: Maybe<Protocollo_Protocollo_Destinatario_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  mittente?: Maybe<Protocollo__Sezione_Protocollo_Order_By>;
  mittente_id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  numero?: Maybe<Order_By>;
};

/** primary key columns input for table: protocollo_protocollo */
export type Protocollo_Protocollo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "protocollo.protocollo" */
export enum Protocollo_Protocollo_Select_Column {
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  MittenteId = 'mittente_id',
  /** column name */
  Note = 'note',
  /** column name */
  Numero = 'numero'
}

/** input type for updating data in table "protocollo.protocollo" */
export type Protocollo_Protocollo_Set_Input = {
  data?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  mittente_id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  numero?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Protocollo_Protocollo_Stddev_Fields = {
  __typename?: 'protocollo_protocollo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  mittente_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Protocollo_Protocollo_Stddev_Pop_Fields = {
  __typename?: 'protocollo_protocollo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  mittente_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Protocollo_Protocollo_Stddev_Samp_Fields = {
  __typename?: 'protocollo_protocollo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  mittente_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Protocollo_Protocollo_Sum_Fields = {
  __typename?: 'protocollo_protocollo_sum_fields';
  id?: Maybe<Scalars['Int']>;
  mittente_id?: Maybe<Scalars['Int']>;
};

/** update columns of table "protocollo.protocollo" */
export enum Protocollo_Protocollo_Update_Column {
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  MittenteId = 'mittente_id',
  /** column name */
  Note = 'note',
  /** column name */
  Numero = 'numero'
}

/** aggregate var_pop on columns */
export type Protocollo_Protocollo_Var_Pop_Fields = {
  __typename?: 'protocollo_protocollo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  mittente_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Protocollo_Protocollo_Var_Samp_Fields = {
  __typename?: 'protocollo_protocollo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  mittente_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Protocollo_Protocollo_Variance_Fields = {
  __typename?: 'protocollo_protocollo_variance_fields';
  id?: Maybe<Scalars['Float']>;
  mittente_id?: Maybe<Scalars['Float']>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "_citta" */
  _citta: Array<_Citta>;
  /** fetch aggregated fields from the table: "_citta" */
  _citta_aggregate: _Citta_Aggregate;
  /** fetch data from the table: "_citta" using primary key columns */
  _citta_by_pk?: Maybe<_Citta>;
  /** fetch data from the table: "_nazione" */
  _nazione: Array<_Nazione>;
  /** fetch aggregated fields from the table: "_nazione" */
  _nazione_aggregate: _Nazione_Aggregate;
  /** fetch data from the table: "_nazione" using primary key columns */
  _nazione_by_pk?: Maybe<_Nazione>;
  /** fetch data from the table: "_sesso" */
  _sesso: Array<_Sesso>;
  /** fetch aggregated fields from the table: "_sesso" */
  _sesso_aggregate: _Sesso_Aggregate;
  /** fetch data from the table: "_sesso" using primary key columns */
  _sesso_by_pk?: Maybe<_Sesso>;
  /** fetch data from the table: "_sinoaltro" */
  _sinoaltro: Array<_Sinoaltro>;
  /** fetch aggregated fields from the table: "_sinoaltro" */
  _sinoaltro_aggregate: _Sinoaltro_Aggregate;
  /** fetch data from the table: "_sinoaltro" using primary key columns */
  _sinoaltro_by_pk?: Maybe<_Sinoaltro>;
  /** fetch data from the table: "_titolo" */
  _titolo: Array<_Titolo>;
  /** fetch aggregated fields from the table: "_titolo" */
  _titolo_aggregate: _Titolo_Aggregate;
  /** fetch data from the table: "_titolo" using primary key columns */
  _titolo_by_pk?: Maybe<_Titolo>;
  /** fetch data from the table: "agcos.agcos" */
  agcos_agcos: Array<Agcos_Agcos>;
  /** fetch aggregated fields from the table: "agcos.agcos" */
  agcos_agcos_aggregate: Agcos_Agcos_Aggregate;
  /** fetch data from the table: "agcos.agcos" using primary key columns */
  agcos_agcos_by_pk?: Maybe<Agcos_Agcos>;
  /** fetch data from the table: "agcos.import" */
  agcos_import: Array<Agcos_Import>;
  /** fetch aggregated fields from the table: "agcos.import" */
  agcos_import_aggregate: Agcos_Import_Aggregate;
  /** fetch data from the table: "agcos.import" using primary key columns */
  agcos_import_by_pk?: Maybe<Agcos_Import>;
  /** fetch data from the table: "gis._specifica_posizionamento_toponimo" */
  gis__specifica_posizionamento_toponimo: Array<Gis__Specifica_Posizionamento_Toponimo>;
  /** fetch aggregated fields from the table: "gis._specifica_posizionamento_toponimo" */
  gis__specifica_posizionamento_toponimo_aggregate: Gis__Specifica_Posizionamento_Toponimo_Aggregate;
  /** fetch data from the table: "gis._specifica_posizionamento_toponimo" using primary key columns */
  gis__specifica_posizionamento_toponimo_by_pk?: Maybe<Gis__Specifica_Posizionamento_Toponimo>;
  /** fetch data from the table: "gis._tipologia_posizionamento_toponimo" */
  gis__tipologia_posizionamento_toponimo: Array<Gis__Tipologia_Posizionamento_Toponimo>;
  /** fetch aggregated fields from the table: "gis._tipologia_posizionamento_toponimo" */
  gis__tipologia_posizionamento_toponimo_aggregate: Gis__Tipologia_Posizionamento_Toponimo_Aggregate;
  /** fetch data from the table: "gis._tipologia_posizionamento_toponimo" using primary key columns */
  gis__tipologia_posizionamento_toponimo_by_pk?: Maybe<Gis__Tipologia_Posizionamento_Toponimo>;
  /** fetch data from the table: "gis.civico" */
  gis_civico: Array<Gis_Civico>;
  /** fetch aggregated fields from the table: "gis.civico" */
  gis_civico_aggregate: Gis_Civico_Aggregate;
  /** fetch data from the table: "gis.civico" using primary key columns */
  gis_civico_by_pk?: Maybe<Gis_Civico>;
  /** fetch data from the table: "gis.connessione_grafo" */
  gis_connessione_grafo: Array<Gis_Connessione_Grafo>;
  /** fetch aggregated fields from the table: "gis.connessione_grafo" */
  gis_connessione_grafo_aggregate: Gis_Connessione_Grafo_Aggregate;
  /** fetch data from the table: "gis.connessione_grafo" using primary key columns */
  gis_connessione_grafo_by_pk?: Maybe<Gis_Connessione_Grafo>;
  /** fetch data from the table: "gis.posizionamento_toponimo" */
  gis_posizionamento_toponimo: Array<Gis_Posizionamento_Toponimo>;
  /** fetch aggregated fields from the table: "gis.posizionamento_toponimo" */
  gis_posizionamento_toponimo_aggregate: Gis_Posizionamento_Toponimo_Aggregate;
  /** fetch data from the table: "gis.posizionamento_toponimo" using primary key columns */
  gis_posizionamento_toponimo_by_pk?: Maybe<Gis_Posizionamento_Toponimo>;
  /** fetch data from the table: "gis.sostegno_ipi" */
  gis_sostegno_ipi: Array<Gis_Sostegno_Ipi>;
  /** fetch aggregated fields from the table: "gis.sostegno_ipi" */
  gis_sostegno_ipi_aggregate: Gis_Sostegno_Ipi_Aggregate;
  /** fetch data from the table: "gis.sostegno_ipi" using primary key columns */
  gis_sostegno_ipi_by_pk?: Maybe<Gis_Sostegno_Ipi>;
  /** fetch data from the table: "pis._condizioni_traffico" */
  pis__condizioni_traffico: Array<Pis__Condizioni_Traffico>;
  /** fetch aggregated fields from the table: "pis._condizioni_traffico" */
  pis__condizioni_traffico_aggregate: Pis__Condizioni_Traffico_Aggregate;
  /** fetch data from the table: "pis._condizioni_traffico" using primary key columns */
  pis__condizioni_traffico_by_pk?: Maybe<Pis__Condizioni_Traffico>;
  /** fetch data from the table: "pis._forma_dissesto" */
  pis__forma_dissesto: Array<Pis__Forma_Dissesto>;
  /** fetch aggregated fields from the table: "pis._forma_dissesto" */
  pis__forma_dissesto_aggregate: Pis__Forma_Dissesto_Aggregate;
  /** fetch data from the table: "pis._forma_dissesto" using primary key columns */
  pis__forma_dissesto_by_pk?: Maybe<Pis__Forma_Dissesto>;
  /** fetch data from the table: "pis._giorni_trascorsi" */
  pis__giorni_trascorsi: Array<Pis__Giorni_Trascorsi>;
  /** fetch aggregated fields from the table: "pis._giorni_trascorsi" */
  pis__giorni_trascorsi_aggregate: Pis__Giorni_Trascorsi_Aggregate;
  /** fetch data from the table: "pis._giorni_trascorsi" using primary key columns */
  pis__giorni_trascorsi_by_pk?: Maybe<Pis__Giorni_Trascorsi>;
  /** fetch data from the table: "pis._materiale" */
  pis__materiale: Array<Pis__Materiale>;
  /** fetch aggregated fields from the table: "pis._materiale" */
  pis__materiale_aggregate: Pis__Materiale_Aggregate;
  /** fetch data from the table: "pis._materiale" using primary key columns */
  pis__materiale_by_pk?: Maybe<Pis__Materiale>;
  /** fetch data from the table: "pis._priorita" */
  pis__priorita: Array<Pis__Priorita>;
  /** fetch aggregated fields from the table: "pis._priorita" */
  pis__priorita_aggregate: Pis__Priorita_Aggregate;
  /** fetch data from the table: "pis._priorita" using primary key columns */
  pis__priorita_by_pk?: Maybe<Pis__Priorita>;
  /** fetch data from the table: "pis._stato_segnalazione" */
  pis__stato_segnalazione: Array<Pis__Stato_Segnalazione>;
  /** fetch aggregated fields from the table: "pis._stato_segnalazione" */
  pis__stato_segnalazione_aggregate: Pis__Stato_Segnalazione_Aggregate;
  /** fetch data from the table: "pis._stato_segnalazione" using primary key columns */
  pis__stato_segnalazione_by_pk?: Maybe<Pis__Stato_Segnalazione>;
  /** fetch data from the table: "pis._tipologia_dissesto" */
  pis__tipologia_dissesto: Array<Pis__Tipologia_Dissesto>;
  /** fetch aggregated fields from the table: "pis._tipologia_dissesto" */
  pis__tipologia_dissesto_aggregate: Pis__Tipologia_Dissesto_Aggregate;
  /** fetch data from the table: "pis._tipologia_dissesto" using primary key columns */
  pis__tipologia_dissesto_by_pk?: Maybe<Pis__Tipologia_Dissesto>;
  /** fetch data from the table: "pis.assegnazione_squadra" */
  pis_assegnazione_squadra: Array<Pis_Assegnazione_Squadra>;
  /** fetch aggregated fields from the table: "pis.assegnazione_squadra" */
  pis_assegnazione_squadra_aggregate: Pis_Assegnazione_Squadra_Aggregate;
  /** fetch data from the table: "pis.assegnazione_squadra" using primary key columns */
  pis_assegnazione_squadra_by_pk?: Maybe<Pis_Assegnazione_Squadra>;
  /** fetch data from the table: "pis.attrezzature_impiegate" */
  pis_attrezzature_impiegate: Array<Pis_Attrezzature_Impiegate>;
  /** fetch aggregated fields from the table: "pis.attrezzature_impiegate" */
  pis_attrezzature_impiegate_aggregate: Pis_Attrezzature_Impiegate_Aggregate;
  /** fetch data from the table: "pis.attrezzature_impiegate" using primary key columns */
  pis_attrezzature_impiegate_by_pk?: Maybe<Pis_Attrezzature_Impiegate>;
  /** fetch data from the table: "pis.diario" */
  pis_diario: Array<Pis_Diario>;
  /** fetch aggregated fields from the table: "pis.diario" */
  pis_diario_aggregate: Pis_Diario_Aggregate;
  /** fetch data from the table: "pis.diario" using primary key columns */
  pis_diario_by_pk?: Maybe<Pis_Diario>;
  /** fetch data from the table: "pis.dissesto" */
  pis_dissesto: Array<Pis_Dissesto>;
  /** fetch aggregated fields from the table: "pis.dissesto" */
  pis_dissesto_aggregate: Pis_Dissesto_Aggregate;
  /** fetch data from the table: "pis.dissesto" using primary key columns */
  pis_dissesto_by_pk?: Maybe<Pis_Dissesto>;
  /** fetch data from the table: "pis.evento" */
  pis_evento: Array<Pis_Evento>;
  /** fetch aggregated fields from the table: "pis.evento" */
  pis_evento_aggregate: Pis_Evento_Aggregate;
  /** fetch data from the table: "pis.evento" using primary key columns */
  pis_evento_by_pk?: Maybe<Pis_Evento>;
  /** fetch data from the table: "pis.intervento" */
  pis_intervento: Array<Pis_Intervento>;
  /** fetch aggregated fields from the table: "pis.intervento" */
  pis_intervento_aggregate: Pis_Intervento_Aggregate;
  /** fetch data from the table: "pis.intervento" using primary key columns */
  pis_intervento_by_pk?: Maybe<Pis_Intervento>;
  /** fetch data from the table: "pis.intervento_straordinario" */
  pis_intervento_straordinario: Array<Pis_Intervento_Straordinario>;
  /** fetch aggregated fields from the table: "pis.intervento_straordinario" */
  pis_intervento_straordinario_aggregate: Pis_Intervento_Straordinario_Aggregate;
  /** fetch data from the table: "pis.intervento_straordinario" using primary key columns */
  pis_intervento_straordinario_by_pk?: Maybe<Pis_Intervento_Straordinario>;
  /** fetch data from the table: "pis.materiale_dissesto" */
  pis_materiale_dissesto: Array<Pis_Materiale_Dissesto>;
  /** fetch aggregated fields from the table: "pis.materiale_dissesto" */
  pis_materiale_dissesto_aggregate: Pis_Materiale_Dissesto_Aggregate;
  /** fetch data from the table: "pis.materiale_dissesto" using primary key columns */
  pis_materiale_dissesto_by_pk?: Maybe<Pis_Materiale_Dissesto>;
  /** fetch data from the table: "pis.segnalazione" */
  pis_segnalazione: Array<Pis_Segnalazione>;
  /** fetch aggregated fields from the table: "pis.segnalazione" */
  pis_segnalazione_aggregate: Pis_Segnalazione_Aggregate;
  /** fetch data from the table: "pis.segnalazione" using primary key columns */
  pis_segnalazione_by_pk?: Maybe<Pis_Segnalazione>;
  /** fetch data from the table: "pis.segnalazione_collegata" */
  pis_segnalazione_collegata: Array<Pis_Segnalazione_Collegata>;
  /** fetch aggregated fields from the table: "pis.segnalazione_collegata" */
  pis_segnalazione_collegata_aggregate: Pis_Segnalazione_Collegata_Aggregate;
  /** fetch data from the table: "pis.segnalazione_collegata" using primary key columns */
  pis_segnalazione_collegata_by_pk?: Maybe<Pis_Segnalazione_Collegata>;
  /** fetch data from the table: "pis.segnaletica_lasciata" */
  pis_segnaletica_lasciata: Array<Pis_Segnaletica_Lasciata>;
  /** fetch aggregated fields from the table: "pis.segnaletica_lasciata" */
  pis_segnaletica_lasciata_aggregate: Pis_Segnaletica_Lasciata_Aggregate;
  /** fetch data from the table: "pis.segnaletica_lasciata" using primary key columns */
  pis_segnaletica_lasciata_by_pk?: Maybe<Pis_Segnaletica_Lasciata>;
  /** fetch data from the table: "pis.squadra" */
  pis_squadra: Array<Pis_Squadra>;
  /** fetch aggregated fields from the table: "pis.squadra" */
  pis_squadra_aggregate: Pis_Squadra_Aggregate;
  /** fetch data from the table: "pis.squadra" using primary key columns */
  pis_squadra_by_pk?: Maybe<Pis_Squadra>;
  /** fetch data from the table: "pis.tecnico_referente" */
  pis_tecnico_referente: Array<Pis_Tecnico_Referente>;
  /** fetch aggregated fields from the table: "pis.tecnico_referente" */
  pis_tecnico_referente_aggregate: Pis_Tecnico_Referente_Aggregate;
  /** fetch data from the table: "pis.tecnico_referente" using primary key columns */
  pis_tecnico_referente_by_pk?: Maybe<Pis_Tecnico_Referente>;
  /** fetch data from the table: "pis.vecchia_squadra" */
  pis_vecchia_squadra: Array<Pis_Vecchia_Squadra>;
  /** fetch aggregated fields from the table: "pis.vecchia_squadra" */
  pis_vecchia_squadra_aggregate: Pis_Vecchia_Squadra_Aggregate;
  /** fetch data from the table: "pis.vecchia_squadra" using primary key columns */
  pis_vecchia_squadra_by_pk?: Maybe<Pis_Vecchia_Squadra>;
  /** fetch data from the table: "pis.veicoli_impiegati" */
  pis_veicoli_impiegati: Array<Pis_Veicoli_Impiegati>;
  /** fetch aggregated fields from the table: "pis.veicoli_impiegati" */
  pis_veicoli_impiegati_aggregate: Pis_Veicoli_Impiegati_Aggregate;
  /** fetch data from the table: "pis.veicoli_impiegati" using primary key columns */
  pis_veicoli_impiegati_by_pk?: Maybe<Pis_Veicoli_Impiegati>;
  /** fetch data from the table: "protocollo._sezione_protocollo" */
  protocollo__sezione_protocollo: Array<Protocollo__Sezione_Protocollo>;
  /** fetch aggregated fields from the table: "protocollo._sezione_protocollo" */
  protocollo__sezione_protocollo_aggregate: Protocollo__Sezione_Protocollo_Aggregate;
  /** fetch data from the table: "protocollo._sezione_protocollo" using primary key columns */
  protocollo__sezione_protocollo_by_pk?: Maybe<Protocollo__Sezione_Protocollo>;
  /** fetch data from the table: "protocollo.protocollo" */
  protocollo_protocollo: Array<Protocollo_Protocollo>;
  /** fetch aggregated fields from the table: "protocollo.protocollo" */
  protocollo_protocollo_aggregate: Protocollo_Protocollo_Aggregate;
  /** fetch data from the table: "protocollo.protocollo" using primary key columns */
  protocollo_protocollo_by_pk?: Maybe<Protocollo_Protocollo>;
  /** fetch data from the table: "protocollo.protocollo_destinatario" */
  protocollo_protocollo_destinatario: Array<Protocollo_Protocollo_Destinatario>;
  /** fetch aggregated fields from the table: "protocollo.protocollo_destinatario" */
  protocollo_protocollo_destinatario_aggregate: Protocollo_Protocollo_Destinatario_Aggregate;
  /** fetch data from the table: "protocollo.protocollo_destinatario" using primary key columns */
  protocollo_protocollo_destinatario_by_pk?: Maybe<Protocollo_Protocollo_Destinatario>;
  /** fetch data from the table: "protocollo.protocollo_destinatario_esterno" */
  protocollo_protocollo_destinatario_esterno: Array<Protocollo_Protocollo_Destinatario_Esterno>;
  /** fetch aggregated fields from the table: "protocollo.protocollo_destinatario_esterno" */
  protocollo_protocollo_destinatario_esterno_aggregate: Protocollo_Protocollo_Destinatario_Esterno_Aggregate;
  /** fetch data from the table: "protocollo.protocollo_destinatario_esterno" using primary key columns */
  protocollo_protocollo_destinatario_esterno_by_pk?: Maybe<Protocollo_Protocollo_Destinatario_Esterno>;
  /** fetch data from the table: "sis._alimentazione_veicolo" */
  sis__alimentazione_veicolo: Array<Sis__Alimentazione_Veicolo>;
  /** fetch aggregated fields from the table: "sis._alimentazione_veicolo" */
  sis__alimentazione_veicolo_aggregate: Sis__Alimentazione_Veicolo_Aggregate;
  /** fetch data from the table: "sis._alimentazione_veicolo" using primary key columns */
  sis__alimentazione_veicolo_by_pk?: Maybe<Sis__Alimentazione_Veicolo>;
  /** fetch data from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  sis__condizioni_meteo_visibilita_limitata_tipologia: Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch aggregated fields from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  sis__condizioni_meteo_visibilita_limitata_tipologia_aggregate: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate;
  /** fetch data from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" using primary key columns */
  sis__condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch data from the table: "sis._conseguenza_veicolo" */
  sis__conseguenza_veicolo: Array<Sis__Conseguenza_Veicolo>;
  /** fetch aggregated fields from the table: "sis._conseguenza_veicolo" */
  sis__conseguenza_veicolo_aggregate: Sis__Conseguenza_Veicolo_Aggregate;
  /** fetch data from the table: "sis._conseguenza_veicolo" using primary key columns */
  sis__conseguenza_veicolo_by_pk?: Maybe<Sis__Conseguenza_Veicolo>;
  /** fetch data from the table: "sis._decessi_tipologia" */
  sis__decessi_tipologia: Array<Sis__Decessi_Tipologia>;
  /** fetch aggregated fields from the table: "sis._decessi_tipologia" */
  sis__decessi_tipologia_aggregate: Sis__Decessi_Tipologia_Aggregate;
  /** fetch data from the table: "sis._decessi_tipologia" using primary key columns */
  sis__decessi_tipologia_by_pk?: Maybe<Sis__Decessi_Tipologia>;
  /** fetch data from the table: "sis._destinazione_decisione" */
  sis__destinazione_decisione: Array<Sis__Destinazione_Decisione>;
  /** fetch aggregated fields from the table: "sis._destinazione_decisione" */
  sis__destinazione_decisione_aggregate: Sis__Destinazione_Decisione_Aggregate;
  /** fetch data from the table: "sis._destinazione_decisione" using primary key columns */
  sis__destinazione_decisione_by_pk?: Maybe<Sis__Destinazione_Decisione>;
  /** fetch data from the table: "sis._ente" */
  sis__ente: Array<Sis__Ente>;
  /** fetch aggregated fields from the table: "sis._ente" */
  sis__ente_aggregate: Sis__Ente_Aggregate;
  /** fetch data from the table: "sis._ente" using primary key columns */
  sis__ente_by_pk?: Maybe<Sis__Ente>;
  /** fetch data from the table: "sis._ente_secondario" */
  sis__ente_secondario: Array<Sis__Ente_Secondario>;
  /** fetch aggregated fields from the table: "sis._ente_secondario" */
  sis__ente_secondario_aggregate: Sis__Ente_Secondario_Aggregate;
  /** fetch data from the table: "sis._ente_secondario" using primary key columns */
  sis__ente_secondario_by_pk?: Maybe<Sis__Ente_Secondario>;
  /** fetch data from the table: "sis._impianto_semaforico" */
  sis__impianto_semaforico: Array<Sis__Impianto_Semaforico>;
  /** fetch aggregated fields from the table: "sis._impianto_semaforico" */
  sis__impianto_semaforico_aggregate: Sis__Impianto_Semaforico_Aggregate;
  /** fetch data from the table: "sis._impianto_semaforico" using primary key columns */
  sis__impianto_semaforico_by_pk?: Maybe<Sis__Impianto_Semaforico>;
  /** fetch data from the table: "sis._infortunato_informazione" */
  sis__infortunato_informazione: Array<Sis__Infortunato_Informazione>;
  /** fetch aggregated fields from the table: "sis._infortunato_informazione" */
  sis__infortunato_informazione_aggregate: Sis__Infortunato_Informazione_Aggregate;
  /** fetch data from the table: "sis._infortunato_informazione" using primary key columns */
  sis__infortunato_informazione_by_pk?: Maybe<Sis__Infortunato_Informazione>;
  /** fetch data from the table: "sis._intortunato_tasportato" */
  sis__intortunato_tasportato: Array<Sis__Intortunato_Tasportato>;
  /** fetch aggregated fields from the table: "sis._intortunato_tasportato" */
  sis__intortunato_tasportato_aggregate: Sis__Intortunato_Tasportato_Aggregate;
  /** fetch data from the table: "sis._intortunato_tasportato" using primary key columns */
  sis__intortunato_tasportato_by_pk?: Maybe<Sis__Intortunato_Tasportato>;
  /** fetch data from the table: "sis._localizzazione_altro" */
  sis__localizzazione_altro: Array<Sis__Localizzazione_Altro>;
  /** fetch aggregated fields from the table: "sis._localizzazione_altro" */
  sis__localizzazione_altro_aggregate: Sis__Localizzazione_Altro_Aggregate;
  /** fetch data from the table: "sis._localizzazione_altro" using primary key columns */
  sis__localizzazione_altro_by_pk?: Maybe<Sis__Localizzazione_Altro>;
  /** fetch data from the table: "sis._localizzazione_condizioni_atmosferiche" */
  sis__localizzazione_condizioni_atmosferiche: Array<Sis__Localizzazione_Condizioni_Atmosferiche>;
  /** fetch aggregated fields from the table: "sis._localizzazione_condizioni_atmosferiche" */
  sis__localizzazione_condizioni_atmosferiche_aggregate: Sis__Localizzazione_Condizioni_Atmosferiche_Aggregate;
  /** fetch data from the table: "sis._localizzazione_condizioni_atmosferiche" using primary key columns */
  sis__localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche>;
  /** fetch data from the table: "sis._localizzazione_condizioni_traffico" */
  sis__localizzazione_condizioni_traffico: Array<Sis__Localizzazione_Condizioni_Traffico>;
  /** fetch aggregated fields from the table: "sis._localizzazione_condizioni_traffico" */
  sis__localizzazione_condizioni_traffico_aggregate: Sis__Localizzazione_Condizioni_Traffico_Aggregate;
  /** fetch data from the table: "sis._localizzazione_condizioni_traffico" using primary key columns */
  sis__localizzazione_condizioni_traffico_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Traffico>;
  /** fetch data from the table: "sis._localizzazione_extra_abitato" */
  sis__localizzazione_extra_abitato: Array<Sis__Localizzazione_Extra_Abitato>;
  /** fetch aggregated fields from the table: "sis._localizzazione_extra_abitato" */
  sis__localizzazione_extra_abitato_aggregate: Sis__Localizzazione_Extra_Abitato_Aggregate;
  /** fetch data from the table: "sis._localizzazione_extra_abitato" using primary key columns */
  sis__localizzazione_extra_abitato_by_pk?: Maybe<Sis__Localizzazione_Extra_Abitato>;
  /** fetch data from the table: "sis._localizzazione_fondo_stradale" */
  sis__localizzazione_fondo_stradale: Array<Sis__Localizzazione_Fondo_Stradale>;
  /** fetch aggregated fields from the table: "sis._localizzazione_fondo_stradale" */
  sis__localizzazione_fondo_stradale_aggregate: Sis__Localizzazione_Fondo_Stradale_Aggregate;
  /** fetch data from the table: "sis._localizzazione_fondo_stradale" using primary key columns */
  sis__localizzazione_fondo_stradale_by_pk?: Maybe<Sis__Localizzazione_Fondo_Stradale>;
  /** fetch data from the table: "sis._localizzazione_illuminazione" */
  sis__localizzazione_illuminazione: Array<Sis__Localizzazione_Illuminazione>;
  /** fetch aggregated fields from the table: "sis._localizzazione_illuminazione" */
  sis__localizzazione_illuminazione_aggregate: Sis__Localizzazione_Illuminazione_Aggregate;
  /** fetch data from the table: "sis._localizzazione_illuminazione" using primary key columns */
  sis__localizzazione_illuminazione_by_pk?: Maybe<Sis__Localizzazione_Illuminazione>;
  /** fetch data from the table: "sis._localizzazione_particolarita_strada" */
  sis__localizzazione_particolarita_strada: Array<Sis__Localizzazione_Particolarita_Strada>;
  /** fetch aggregated fields from the table: "sis._localizzazione_particolarita_strada" */
  sis__localizzazione_particolarita_strada_aggregate: Sis__Localizzazione_Particolarita_Strada_Aggregate;
  /** fetch data from the table: "sis._localizzazione_particolarita_strada" using primary key columns */
  sis__localizzazione_particolarita_strada_by_pk?: Maybe<Sis__Localizzazione_Particolarita_Strada>;
  /** fetch data from the table: "sis._localizzazione_pavimentazione" */
  sis__localizzazione_pavimentazione: Array<Sis__Localizzazione_Pavimentazione>;
  /** fetch aggregated fields from the table: "sis._localizzazione_pavimentazione" */
  sis__localizzazione_pavimentazione_aggregate: Sis__Localizzazione_Pavimentazione_Aggregate;
  /** fetch data from the table: "sis._localizzazione_pavimentazione" using primary key columns */
  sis__localizzazione_pavimentazione_by_pk?: Maybe<Sis__Localizzazione_Pavimentazione>;
  /** fetch data from the table: "sis._localizzazione_tipo_strada" */
  sis__localizzazione_tipo_strada: Array<Sis__Localizzazione_Tipo_Strada>;
  /** fetch aggregated fields from the table: "sis._localizzazione_tipo_strada" */
  sis__localizzazione_tipo_strada_aggregate: Sis__Localizzazione_Tipo_Strada_Aggregate;
  /** fetch data from the table: "sis._localizzazione_tipo_strada" using primary key columns */
  sis__localizzazione_tipo_strada_by_pk?: Maybe<Sis__Localizzazione_Tipo_Strada>;
  /** fetch data from the table: "sis._localizzazione_visibilita" */
  sis__localizzazione_visibilita: Array<Sis__Localizzazione_Visibilita>;
  /** fetch aggregated fields from the table: "sis._localizzazione_visibilita" */
  sis__localizzazione_visibilita_aggregate: Sis__Localizzazione_Visibilita_Aggregate;
  /** fetch data from the table: "sis._localizzazione_visibilita" using primary key columns */
  sis__localizzazione_visibilita_by_pk?: Maybe<Sis__Localizzazione_Visibilita>;
  /** fetch data from the table: "sis._natura_incidente" */
  sis__natura_incidente: Array<Sis__Natura_Incidente>;
  /** fetch aggregated fields from the table: "sis._natura_incidente" */
  sis__natura_incidente_aggregate: Sis__Natura_Incidente_Aggregate;
  /** fetch data from the table: "sis._natura_incidente" using primary key columns */
  sis__natura_incidente_by_pk?: Maybe<Sis__Natura_Incidente>;
  /** fetch data from the table: "sis._patente_categoria" */
  sis__patente_categoria: Array<Sis__Patente_Categoria>;
  /** fetch aggregated fields from the table: "sis._patente_categoria" */
  sis__patente_categoria_aggregate: Sis__Patente_Categoria_Aggregate;
  /** fetch data from the table: "sis._patente_categoria" using primary key columns */
  sis__patente_categoria_by_pk?: Maybe<Sis__Patente_Categoria>;
  /** fetch data from the table: "sis._posizione_finale_veicolo_carreggiata" */
  sis__posizione_finale_veicolo_carreggiata: Array<Sis__Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch aggregated fields from the table: "sis._posizione_finale_veicolo_carreggiata" */
  sis__posizione_finale_veicolo_carreggiata_aggregate: Sis__Posizione_Finale_Veicolo_Carreggiata_Aggregate;
  /** fetch data from the table: "sis._posizione_finale_veicolo_carreggiata" using primary key columns */
  sis__posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch data from the table: "sis._posizione_finale_veicolo_fuori_sede" */
  sis__posizione_finale_veicolo_fuori_sede: Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch aggregated fields from the table: "sis._posizione_finale_veicolo_fuori_sede" */
  sis__posizione_finale_veicolo_fuori_sede_aggregate: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Aggregate;
  /** fetch data from the table: "sis._posizione_finale_veicolo_fuori_sede" using primary key columns */
  sis__posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch data from the table: "sis._posizione_finale_veicolo_margini" */
  sis__posizione_finale_veicolo_margini: Array<Sis__Posizione_Finale_Veicolo_Margini>;
  /** fetch aggregated fields from the table: "sis._posizione_finale_veicolo_margini" */
  sis__posizione_finale_veicolo_margini_aggregate: Sis__Posizione_Finale_Veicolo_Margini_Aggregate;
  /** fetch data from the table: "sis._posizione_finale_veicolo_margini" using primary key columns */
  sis__posizione_finale_veicolo_margini_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Margini>;
  /** fetch data from the table: "sis._punti_rilievi_no_tipologia" */
  sis__punti_rilievi_no_tipologia: Array<Sis__Punti_Rilievi_No_Tipologia>;
  /** fetch aggregated fields from the table: "sis._punti_rilievi_no_tipologia" */
  sis__punti_rilievi_no_tipologia_aggregate: Sis__Punti_Rilievi_No_Tipologia_Aggregate;
  /** fetch data from the table: "sis._punti_rilievi_no_tipologia" using primary key columns */
  sis__punti_rilievi_no_tipologia_by_pk?: Maybe<Sis__Punti_Rilievi_No_Tipologia>;
  /** fetch data from the table: "sis._retrovisore_esterno" */
  sis__retrovisore_esterno: Array<Sis__Retrovisore_Esterno>;
  /** fetch aggregated fields from the table: "sis._retrovisore_esterno" */
  sis__retrovisore_esterno_aggregate: Sis__Retrovisore_Esterno_Aggregate;
  /** fetch data from the table: "sis._retrovisore_esterno" using primary key columns */
  sis__retrovisore_esterno_by_pk?: Maybe<Sis__Retrovisore_Esterno>;
  /** fetch data from the table: "sis._ris_consegnato_a" */
  sis__ris_consegnato_a: Array<Sis__Ris_Consegnato_A>;
  /** fetch aggregated fields from the table: "sis._ris_consegnato_a" */
  sis__ris_consegnato_a_aggregate: Sis__Ris_Consegnato_A_Aggregate;
  /** fetch data from the table: "sis._ris_consegnato_a" using primary key columns */
  sis__ris_consegnato_a_by_pk?: Maybe<Sis__Ris_Consegnato_A>;
  /** fetch data from the table: "sis._stato_ris" */
  sis__stato_ris: Array<Sis__Stato_Ris>;
  /** fetch aggregated fields from the table: "sis._stato_ris" */
  sis__stato_ris_aggregate: Sis__Stato_Ris_Aggregate;
  /** fetch data from the table: "sis._stato_ris" using primary key columns */
  sis__stato_ris_by_pk?: Maybe<Sis__Stato_Ris>;
  /** fetch data from the table: "sis._stato_veicolo" */
  sis__stato_veicolo: Array<Sis__Stato_Veicolo>;
  /** fetch aggregated fields from the table: "sis._stato_veicolo" */
  sis__stato_veicolo_aggregate: Sis__Stato_Veicolo_Aggregate;
  /** fetch data from the table: "sis._stato_veicolo" using primary key columns */
  sis__stato_veicolo_by_pk?: Maybe<Sis__Stato_Veicolo>;
  /** fetch data from the table: "sis._tipologia_ris" */
  sis__tipologia_ris: Array<Sis__Tipologia_Ris>;
  /** fetch aggregated fields from the table: "sis._tipologia_ris" */
  sis__tipologia_ris_aggregate: Sis__Tipologia_Ris_Aggregate;
  /** fetch data from the table: "sis._tipologia_ris" using primary key columns */
  sis__tipologia_ris_by_pk?: Maybe<Sis__Tipologia_Ris>;
  /** fetch data from the table: "sis._tipologia_veicolo" */
  sis__tipologia_veicolo: Array<Sis__Tipologia_Veicolo>;
  /** fetch aggregated fields from the table: "sis._tipologia_veicolo" */
  sis__tipologia_veicolo_aggregate: Sis__Tipologia_Veicolo_Aggregate;
  /** fetch data from the table: "sis._tipologia_veicolo" using primary key columns */
  sis__tipologia_veicolo_by_pk?: Maybe<Sis__Tipologia_Veicolo>;
  /** fetch data from the table: "sis._tipologia_verbale" */
  sis__tipologia_verbale: Array<Sis__Tipologia_Verbale>;
  /** fetch aggregated fields from the table: "sis._tipologia_verbale" */
  sis__tipologia_verbale_aggregate: Sis__Tipologia_Verbale_Aggregate;
  /** fetch data from the table: "sis._tipologia_verbale" using primary key columns */
  sis__tipologia_verbale_by_pk?: Maybe<Sis__Tipologia_Verbale>;
  /** fetch data from the table: "sis._traccia_suolo_frenata_tipologia" */
  sis__traccia_suolo_frenata_tipologia: Array<Sis__Traccia_Suolo_Frenata_Tipologia>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_frenata_tipologia" */
  sis__traccia_suolo_frenata_tipologia_aggregate: Sis__Traccia_Suolo_Frenata_Tipologia_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_frenata_tipologia" using primary key columns */
  sis__traccia_suolo_frenata_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione" */
  sis__traccia_suolo_terminazione: Array<Sis__Traccia_Suolo_Terminazione>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione" */
  sis__traccia_suolo_terminazione_aggregate: Sis__Traccia_Suolo_Terminazione_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_andamento" */
  sis__traccia_suolo_terminazione_andamento: Array<Sis__Traccia_Suolo_Terminazione_Andamento>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_andamento" */
  sis__traccia_suolo_terminazione_andamento_aggregate: Sis__Traccia_Suolo_Terminazione_Andamento_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_andamento" using primary key columns */
  sis__traccia_suolo_terminazione_andamento_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione" using primary key columns */
  sis__traccia_suolo_terminazione_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_forma" */
  sis__traccia_suolo_terminazione_forma: Array<Sis__Traccia_Suolo_Terminazione_Forma>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_forma" */
  sis__traccia_suolo_terminazione_forma_aggregate: Sis__Traccia_Suolo_Terminazione_Forma_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_forma" using primary key columns */
  sis__traccia_suolo_terminazione_forma_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_intensita" */
  sis__traccia_suolo_terminazione_intensita: Array<Sis__Traccia_Suolo_Terminazione_Intensita>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_intensita" */
  sis__traccia_suolo_terminazione_intensita_aggregate: Sis__Traccia_Suolo_Terminazione_Intensita_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_intensita" using primary key columns */
  sis__traccia_suolo_terminazione_intensita_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_tipologia" */
  sis__traccia_suolo_terminazione_tipologia: Array<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_tipologia" */
  sis__traccia_suolo_terminazione_tipologia_aggregate: Sis__Traccia_Suolo_Terminazione_Tipologia_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_tipologia" using primary key columns */
  sis__traccia_suolo_terminazione_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  /** fetch data from the table: "sis._traccia_suolo_tipologia" */
  sis__traccia_suolo_tipologia: Array<Sis__Traccia_Suolo_Tipologia>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_tipologia" */
  sis__traccia_suolo_tipologia_aggregate: Sis__Traccia_Suolo_Tipologia_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_tipologia" using primary key columns */
  sis__traccia_suolo_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Tipologia>;
  /** fetch data from the table: "sis._trasportato_posizione" */
  sis__trasportato_posizione: Array<Sis__Trasportato_Posizione>;
  /** fetch aggregated fields from the table: "sis._trasportato_posizione" */
  sis__trasportato_posizione_aggregate: Sis__Trasportato_Posizione_Aggregate;
  /** fetch data from the table: "sis._trasportato_posizione" using primary key columns */
  sis__trasportato_posizione_by_pk?: Maybe<Sis__Trasportato_Posizione>;
  /** fetch data from the table: "sis._trasportato_stato" */
  sis__trasportato_stato: Array<Sis__Trasportato_Stato>;
  /** fetch aggregated fields from the table: "sis._trasportato_stato" */
  sis__trasportato_stato_aggregate: Sis__Trasportato_Stato_Aggregate;
  /** fetch data from the table: "sis._trasportato_stato" using primary key columns */
  sis__trasportato_stato_by_pk?: Maybe<Sis__Trasportato_Stato>;
  /** fetch data from the table: "sis._uso_veicolo" */
  sis__uso_veicolo: Array<Sis__Uso_Veicolo>;
  /** fetch aggregated fields from the table: "sis._uso_veicolo" */
  sis__uso_veicolo_aggregate: Sis__Uso_Veicolo_Aggregate;
  /** fetch data from the table: "sis._uso_veicolo" using primary key columns */
  sis__uso_veicolo_by_pk?: Maybe<Sis__Uso_Veicolo>;
  /** fetch data from the table: "sis._visibilita_limitata_tipologia" */
  sis__visibilita_limitata_tipologia: Array<Sis__Visibilita_Limitata_Tipologia>;
  /** fetch aggregated fields from the table: "sis._visibilita_limitata_tipologia" */
  sis__visibilita_limitata_tipologia_aggregate: Sis__Visibilita_Limitata_Tipologia_Aggregate;
  /** fetch data from the table: "sis._visibilita_limitata_tipologia" using primary key columns */
  sis__visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Visibilita_Limitata_Tipologia>;
  /** fetch data from the table: "sis.accertamento" */
  sis_accertamento: Array<Sis_Accertamento>;
  /** fetch aggregated fields from the table: "sis.accertamento" */
  sis_accertamento_aggregate: Sis_Accertamento_Aggregate;
  /** fetch data from the table: "sis.accertamento" using primary key columns */
  sis_accertamento_by_pk?: Maybe<Sis_Accertamento>;
  /** fetch data from the table: "sis.agente_accertatore" */
  sis_agente_accertatore: Array<Sis_Agente_Accertatore>;
  /** fetch aggregated fields from the table: "sis.agente_accertatore" */
  sis_agente_accertatore_aggregate: Sis_Agente_Accertatore_Aggregate;
  /** fetch data from the table: "sis.agente_accertatore" using primary key columns */
  sis_agente_accertatore_by_pk?: Maybe<Sis_Agente_Accertatore>;
  /** fetch data from the table: "sis.altro" */
  sis_altro: Array<Sis_Altro>;
  /** fetch aggregated fields from the table: "sis.altro" */
  sis_altro_aggregate: Sis_Altro_Aggregate;
  /** fetch data from the table: "sis.altro" using primary key columns */
  sis_altro_by_pk?: Maybe<Sis_Altro>;
  /** fetch data from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch aggregated fields from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_aggregate: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate;
  /** fetch data from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" using primary key columns */
  sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch data from the table: "sis.assegnazione_unita_operativa" */
  sis_assegnazione_unita_operativa: Array<Sis_Assegnazione_Unita_Operativa>;
  /** fetch aggregated fields from the table: "sis.assegnazione_unita_operativa" */
  sis_assegnazione_unita_operativa_aggregate: Sis_Assegnazione_Unita_Operativa_Aggregate;
  /** fetch data from the table: "sis.assegnazione_unita_operativa" using primary key columns */
  sis_assegnazione_unita_operativa_by_pk?: Maybe<Sis_Assegnazione_Unita_Operativa>;
  /** fetch data from the table: "sis.associazione_conseguenza_veicolo" */
  sis_associazione_conseguenza_veicolo: Array<Sis_Associazione_Conseguenza_Veicolo>;
  /** fetch aggregated fields from the table: "sis.associazione_conseguenza_veicolo" */
  sis_associazione_conseguenza_veicolo_aggregate: Sis_Associazione_Conseguenza_Veicolo_Aggregate;
  /** fetch data from the table: "sis.associazione_conseguenza_veicolo" using primary key columns */
  sis_associazione_conseguenza_veicolo_by_pk?: Maybe<Sis_Associazione_Conseguenza_Veicolo>;
  /** fetch data from the table: "sis.associazione_decessi_tipologie" */
  sis_associazione_decessi_tipologie: Array<Sis_Associazione_Decessi_Tipologie>;
  /** fetch aggregated fields from the table: "sis.associazione_decessi_tipologie" */
  sis_associazione_decessi_tipologie_aggregate: Sis_Associazione_Decessi_Tipologie_Aggregate;
  /** fetch data from the table: "sis.associazione_decessi_tipologie" using primary key columns */
  sis_associazione_decessi_tipologie_by_pk?: Maybe<Sis_Associazione_Decessi_Tipologie>;
  /** fetch data from the table: "sis.associazione_ente_primo_intervento" */
  sis_associazione_ente_primo_intervento: Array<Sis_Associazione_Ente_Primo_Intervento>;
  /** fetch aggregated fields from the table: "sis.associazione_ente_primo_intervento" */
  sis_associazione_ente_primo_intervento_aggregate: Sis_Associazione_Ente_Primo_Intervento_Aggregate;
  /** fetch data from the table: "sis.associazione_ente_primo_intervento" using primary key columns */
  sis_associazione_ente_primo_intervento_by_pk?: Maybe<Sis_Associazione_Ente_Primo_Intervento>;
  /** fetch data from the table: "sis.associazione_ente_secondario_intervenuti" */
  sis_associazione_ente_secondario_intervenuti: Array<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** fetch aggregated fields from the table: "sis.associazione_ente_secondario_intervenuti" */
  sis_associazione_ente_secondario_intervenuti_aggregate: Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate;
  /** fetch data from the table: "sis.associazione_ente_secondario_intervenuti" using primary key columns */
  sis_associazione_ente_secondario_intervenuti_by_pk?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** fetch data from the table: "sis.associazione_ente_segnalatore" */
  sis_associazione_ente_segnalatore: Array<Sis_Associazione_Ente_Segnalatore>;
  /** fetch aggregated fields from the table: "sis.associazione_ente_segnalatore" */
  sis_associazione_ente_segnalatore_aggregate: Sis_Associazione_Ente_Segnalatore_Aggregate;
  /** fetch data from the table: "sis.associazione_ente_segnalatore" using primary key columns */
  sis_associazione_ente_segnalatore_by_pk?: Maybe<Sis_Associazione_Ente_Segnalatore>;
  /** fetch data from the table: "sis.associazione_impianto_semaforico" */
  sis_associazione_impianto_semaforico: Array<Sis_Associazione_Impianto_Semaforico>;
  /** fetch aggregated fields from the table: "sis.associazione_impianto_semaforico" */
  sis_associazione_impianto_semaforico_aggregate: Sis_Associazione_Impianto_Semaforico_Aggregate;
  /** fetch data from the table: "sis.associazione_impianto_semaforico" using primary key columns */
  sis_associazione_impianto_semaforico_by_pk?: Maybe<Sis_Associazione_Impianto_Semaforico>;
  /** fetch data from the table: "sis.associazione_informazioni_infortunato" */
  sis_associazione_informazioni_infortunato: Array<Sis_Associazione_Informazioni_Infortunato>;
  /** fetch aggregated fields from the table: "sis.associazione_informazioni_infortunato" */
  sis_associazione_informazioni_infortunato_aggregate: Sis_Associazione_Informazioni_Infortunato_Aggregate;
  /** fetch data from the table: "sis.associazione_informazioni_infortunato" using primary key columns */
  sis_associazione_informazioni_infortunato_by_pk?: Maybe<Sis_Associazione_Informazioni_Infortunato>;
  /** fetch data from the table: "sis.associazione_localizzazione_altro" */
  sis_associazione_localizzazione_altro: Array<Sis_Associazione_Localizzazione_Altro>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_altro" */
  sis_associazione_localizzazione_altro_aggregate: Sis_Associazione_Localizzazione_Altro_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_altro" using primary key columns */
  sis_associazione_localizzazione_altro_by_pk?: Maybe<Sis_Associazione_Localizzazione_Altro>;
  /** fetch data from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  sis_associazione_localizzazione_condizioni_atmosferiche: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  sis_associazione_localizzazione_condizioni_atmosferiche_aggregate: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" using primary key columns */
  sis_associazione_localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** fetch data from the table: "sis.associazione_localizzazione_extra_abitato" */
  sis_associazione_localizzazione_extra_abitato: Array<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_extra_abitato" */
  sis_associazione_localizzazione_extra_abitato_aggregate: Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_extra_abitato" using primary key columns */
  sis_associazione_localizzazione_extra_abitato_by_pk?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** fetch data from the table: "sis.associazione_localizzazione_fondo_stradale" */
  sis_associazione_localizzazione_fondo_stradale: Array<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_fondo_stradale" */
  sis_associazione_localizzazione_fondo_stradale_aggregate: Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_fondo_stradale" using primary key columns */
  sis_associazione_localizzazione_fondo_stradale_by_pk?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** fetch data from the table: "sis.associazione_localizzazione_illuminazione" */
  sis_associazione_localizzazione_illuminazione: Array<Sis_Associazione_Localizzazione_Illuminazione>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_illuminazione" */
  sis_associazione_localizzazione_illuminazione_aggregate: Sis_Associazione_Localizzazione_Illuminazione_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_illuminazione" using primary key columns */
  sis_associazione_localizzazione_illuminazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Illuminazione>;
  /** fetch data from the table: "sis.associazione_localizzazione_particolarita_strada" */
  sis_associazione_localizzazione_particolarita_strada: Array<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_particolarita_strada" */
  sis_associazione_localizzazione_particolarita_strada_aggregate: Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_particolarita_strada" using primary key columns */
  sis_associazione_localizzazione_particolarita_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** fetch data from the table: "sis.associazione_localizzazione_pavimentazione" */
  sis_associazione_localizzazione_pavimentazione: Array<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_pavimentazione" */
  sis_associazione_localizzazione_pavimentazione_aggregate: Sis_Associazione_Localizzazione_Pavimentazione_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_pavimentazione" using primary key columns */
  sis_associazione_localizzazione_pavimentazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** fetch data from the table: "sis.associazione_localizzazione_tipo_strada" */
  sis_associazione_localizzazione_tipo_strada: Array<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_tipo_strada" */
  sis_associazione_localizzazione_tipo_strada_aggregate: Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_tipo_strada" using primary key columns */
  sis_associazione_localizzazione_tipo_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** fetch data from the table: "sis.associazione_localizzazione_visibilita" */
  sis_associazione_localizzazione_visibilita: Array<Sis_Associazione_Localizzazione_Visibilita>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_visibilita" */
  sis_associazione_localizzazione_visibilita_aggregate: Sis_Associazione_Localizzazione_Visibilita_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_visibilita" using primary key columns */
  sis_associazione_localizzazione_visibilita_by_pk?: Maybe<Sis_Associazione_Localizzazione_Visibilita>;
  /** fetch data from the table: "sis.associazione_natura_incidente" */
  sis_associazione_natura_incidente: Array<Sis_Associazione_Natura_Incidente>;
  /** fetch aggregated fields from the table: "sis.associazione_natura_incidente" */
  sis_associazione_natura_incidente_aggregate: Sis_Associazione_Natura_Incidente_Aggregate;
  /** fetch data from the table: "sis.associazione_natura_incidente" using primary key columns */
  sis_associazione_natura_incidente_by_pk?: Maybe<Sis_Associazione_Natura_Incidente>;
  /** fetch data from the table: "sis.associazione_patente" */
  sis_associazione_patente: Array<Sis_Associazione_Patente>;
  /** fetch aggregated fields from the table: "sis.associazione_patente" */
  sis_associazione_patente_aggregate: Sis_Associazione_Patente_Aggregate;
  /** fetch data from the table: "sis.associazione_patente" using primary key columns */
  sis_associazione_patente_by_pk?: Maybe<Sis_Associazione_Patente>;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  sis_associazione_posizione_finale_veicolo_carreggiata: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch aggregated fields from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  sis_associazione_posizione_finale_veicolo_carreggiata_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" using primary key columns */
  sis_associazione_posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  sis_associazione_posizione_finale_veicolo_fuori_sede: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch aggregated fields from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  sis_associazione_posizione_finale_veicolo_fuori_sede_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" using primary key columns */
  sis_associazione_posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_margini" */
  sis_associazione_posizione_finale_veicolo_margini: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** fetch aggregated fields from the table: "sis.associazione_posizione_finale_veicolo_margini" */
  sis_associazione_posizione_finale_veicolo_margini_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_margini" using primary key columns */
  sis_associazione_posizione_finale_veicolo_margini_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** fetch data from the table: "sis.associazione_tipologia_ris" */
  sis_associazione_tipologia_ris: Array<Sis_Associazione_Tipologia_Ris>;
  /** fetch aggregated fields from the table: "sis.associazione_tipologia_ris" */
  sis_associazione_tipologia_ris_aggregate: Sis_Associazione_Tipologia_Ris_Aggregate;
  /** fetch data from the table: "sis.associazione_tipologia_ris" using primary key columns */
  sis_associazione_tipologia_ris_by_pk?: Maybe<Sis_Associazione_Tipologia_Ris>;
  /** fetch data from the table: "sis.associzione_localizzazione_condizioni_traffico" */
  sis_associzione_localizzazione_condizioni_traffico: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** fetch aggregated fields from the table: "sis.associzione_localizzazione_condizioni_traffico" */
  sis_associzione_localizzazione_condizioni_traffico_aggregate: Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate;
  /** fetch data from the table: "sis.associzione_localizzazione_condizioni_traffico" using primary key columns */
  sis_associzione_localizzazione_condizioni_traffico_by_pk?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** fetch data from the table: "sis.conducente" */
  sis_conducente: Array<Sis_Conducente>;
  /** fetch aggregated fields from the table: "sis.conducente" */
  sis_conducente_aggregate: Sis_Conducente_Aggregate;
  /** fetch data from the table: "sis.conducente" using primary key columns */
  sis_conducente_by_pk?: Maybe<Sis_Conducente>;
  /** fetch data from the table: "sis.evento_sis" */
  sis_evento_sis: Array<Sis_Evento_Sis>;
  /** fetch aggregated fields from the table: "sis.evento_sis" */
  sis_evento_sis_aggregate: Sis_Evento_Sis_Aggregate;
  /** fetch data from the table: "sis.evento_sis" using primary key columns */
  sis_evento_sis_by_pk?: Maybe<Sis_Evento_Sis>;
  /** fetch data from the table: "sis.infortunato" */
  sis_infortunato: Array<Sis_Infortunato>;
  /** fetch aggregated fields from the table: "sis.infortunato" */
  sis_infortunato_aggregate: Sis_Infortunato_Aggregate;
  /** fetch data from the table: "sis.infortunato" using primary key columns */
  sis_infortunato_by_pk?: Maybe<Sis_Infortunato>;
  /** fetch data from the table: "sis.infrazione" */
  sis_infrazione: Array<Sis_Infrazione>;
  /** fetch aggregated fields from the table: "sis.infrazione" */
  sis_infrazione_aggregate: Sis_Infrazione_Aggregate;
  /** fetch data from the table: "sis.infrazione" using primary key columns */
  sis_infrazione_by_pk?: Maybe<Sis_Infrazione>;
  /** fetch data from the table: "sis.locatario" */
  sis_locatario: Array<Sis_Locatario>;
  /** fetch aggregated fields from the table: "sis.locatario" */
  sis_locatario_aggregate: Sis_Locatario_Aggregate;
  /** fetch data from the table: "sis.locatario" using primary key columns */
  sis_locatario_by_pk?: Maybe<Sis_Locatario>;
  /** fetch data from the table: "sis.pedone" */
  sis_pedone: Array<Sis_Pedone>;
  /** fetch aggregated fields from the table: "sis.pedone" */
  sis_pedone_aggregate: Sis_Pedone_Aggregate;
  /** fetch data from the table: "sis.pedone" using primary key columns */
  sis_pedone_by_pk?: Maybe<Sis_Pedone>;
  /** fetch data from the table: "sis.proprietario" */
  sis_proprietario: Array<Sis_Proprietario>;
  /** fetch aggregated fields from the table: "sis.proprietario" */
  sis_proprietario_aggregate: Sis_Proprietario_Aggregate;
  /** fetch data from the table: "sis.proprietario" using primary key columns */
  sis_proprietario_by_pk?: Maybe<Sis_Proprietario>;
  /** fetch data from the table: "sis.proprietario_giuridico" */
  sis_proprietario_giuridico: Array<Sis_Proprietario_Giuridico>;
  /** fetch aggregated fields from the table: "sis.proprietario_giuridico" */
  sis_proprietario_giuridico_aggregate: Sis_Proprietario_Giuridico_Aggregate;
  /** fetch data from the table: "sis.proprietario_giuridico" using primary key columns */
  sis_proprietario_giuridico_by_pk?: Maybe<Sis_Proprietario_Giuridico>;
  /** fetch data from the table: "sis.ris" */
  sis_ris: Array<Sis_Ris>;
  /** fetch aggregated fields from the table: "sis.ris" */
  sis_ris_aggregate: Sis_Ris_Aggregate;
  /** fetch data from the table: "sis.ris" using primary key columns */
  sis_ris_by_pk?: Maybe<Sis_Ris>;
  /** fetch data from the table: "sis.testimone" */
  sis_testimone: Array<Sis_Testimone>;
  /** fetch aggregated fields from the table: "sis.testimone" */
  sis_testimone_aggregate: Sis_Testimone_Aggregate;
  /** fetch data from the table: "sis.testimone" using primary key columns */
  sis_testimone_by_pk?: Maybe<Sis_Testimone>;
  /** fetch data from the table: "sis.trasportati_veicolo" */
  sis_trasportati_veicolo: Array<Sis_Trasportati_Veicolo>;
  /** fetch aggregated fields from the table: "sis.trasportati_veicolo" */
  sis_trasportati_veicolo_aggregate: Sis_Trasportati_Veicolo_Aggregate;
  /** fetch data from the table: "sis.trasportati_veicolo" using primary key columns */
  sis_trasportati_veicolo_by_pk?: Maybe<Sis_Trasportati_Veicolo>;
  /** fetch data from the table: "sis.trasportato" */
  sis_trasportato: Array<Sis_Trasportato>;
  /** fetch aggregated fields from the table: "sis.trasportato" */
  sis_trasportato_aggregate: Sis_Trasportato_Aggregate;
  /** fetch data from the table: "sis.trasportato" using primary key columns */
  sis_trasportato_by_pk?: Maybe<Sis_Trasportato>;
  /** fetch data from the table: "sis.unita_operativa" */
  sis_unita_operativa: Array<Sis_Unita_Operativa>;
  /** fetch aggregated fields from the table: "sis.unita_operativa" */
  sis_unita_operativa_aggregate: Sis_Unita_Operativa_Aggregate;
  /** fetch data from the table: "sis.unita_operativa" using primary key columns */
  sis_unita_operativa_by_pk?: Maybe<Sis_Unita_Operativa>;
  /** fetch data from the table: "sis.vecchia_unita_operativa" */
  sis_vecchia_unita_operativa: Array<Sis_Vecchia_Unita_Operativa>;
  /** fetch aggregated fields from the table: "sis.vecchia_unita_operativa" */
  sis_vecchia_unita_operativa_aggregate: Sis_Vecchia_Unita_Operativa_Aggregate;
  /** fetch data from the table: "sis.vecchia_unita_operativa" using primary key columns */
  sis_vecchia_unita_operativa_by_pk?: Maybe<Sis_Vecchia_Unita_Operativa>;
  /** fetch data from the table: "sis.veicolo" */
  sis_veicolo: Array<Sis_Veicolo>;
  /** fetch aggregated fields from the table: "sis.veicolo" */
  sis_veicolo_aggregate: Sis_Veicolo_Aggregate;
  /** fetch data from the table: "sis.veicolo" using primary key columns */
  sis_veicolo_by_pk?: Maybe<Sis_Veicolo>;
  /** fetch data from the table: "sis.verbale" */
  sis_verbale: Array<Sis_Verbale>;
  /** fetch aggregated fields from the table: "sis.verbale" */
  sis_verbale_aggregate: Sis_Verbale_Aggregate;
  /** fetch data from the table: "sis.verbale" using primary key columns */
  sis_verbale_by_pk?: Maybe<Sis_Verbale>;
  /** fetch data from the table: "toponomastica.assegnazione_quartiere" */
  toponomastica_assegnazione_quartiere: Array<Toponomastica_Assegnazione_Quartiere>;
  /** fetch aggregated fields from the table: "toponomastica.assegnazione_quartiere" */
  toponomastica_assegnazione_quartiere_aggregate: Toponomastica_Assegnazione_Quartiere_Aggregate;
  /** fetch data from the table: "toponomastica.assegnazione_quartiere" using primary key columns */
  toponomastica_assegnazione_quartiere_by_pk?: Maybe<Toponomastica_Assegnazione_Quartiere>;
  /** fetch data from the table: "toponomastica.assegnazione_toponimo" */
  toponomastica_assegnazione_toponimo: Array<Toponomastica_Assegnazione_Toponimo>;
  /** fetch aggregated fields from the table: "toponomastica.assegnazione_toponimo" */
  toponomastica_assegnazione_toponimo_aggregate: Toponomastica_Assegnazione_Toponimo_Aggregate;
  /** fetch data from the table: "toponomastica.assegnazione_toponimo" using primary key columns */
  toponomastica_assegnazione_toponimo_by_pk?: Maybe<Toponomastica_Assegnazione_Toponimo>;
  /** fetch data from the table: "toponomastica.dug" */
  toponomastica_dug: Array<Toponomastica_Dug>;
  /** fetch aggregated fields from the table: "toponomastica.dug" */
  toponomastica_dug_aggregate: Toponomastica_Dug_Aggregate;
  /** fetch data from the table: "toponomastica.dug" using primary key columns */
  toponomastica_dug_by_pk?: Maybe<Toponomastica_Dug>;
  /** fetch data from the table: "toponomastica.municipalita" */
  toponomastica_municipalita: Array<Toponomastica_Municipalita>;
  /** fetch aggregated fields from the table: "toponomastica.municipalita" */
  toponomastica_municipalita_aggregate: Toponomastica_Municipalita_Aggregate;
  /** fetch data from the table: "toponomastica.municipalita" using primary key columns */
  toponomastica_municipalita_by_pk?: Maybe<Toponomastica_Municipalita>;
  /** fetch data from the table: "toponomastica.quartiere" */
  toponomastica_quartiere: Array<Toponomastica_Quartiere>;
  /** fetch aggregated fields from the table: "toponomastica.quartiere" */
  toponomastica_quartiere_aggregate: Toponomastica_Quartiere_Aggregate;
  /** fetch data from the table: "toponomastica.quartiere" using primary key columns */
  toponomastica_quartiere_by_pk?: Maybe<Toponomastica_Quartiere>;
  /** fetch data from the table: "toponomastica.tipologia" */
  toponomastica_tipologia: Array<Toponomastica_Tipologia>;
  /** fetch aggregated fields from the table: "toponomastica.tipologia" */
  toponomastica_tipologia_aggregate: Toponomastica_Tipologia_Aggregate;
  /** fetch data from the table: "toponomastica.tipologia" using primary key columns */
  toponomastica_tipologia_by_pk?: Maybe<Toponomastica_Tipologia>;
  /** fetch data from the table: "toponomastica.toponimo" */
  toponomastica_toponimo: Array<Toponomastica_Toponimo>;
  /** fetch aggregated fields from the table: "toponomastica.toponimo" */
  toponomastica_toponimo_aggregate: Toponomastica_Toponimo_Aggregate;
  /** fetch data from the table: "toponomastica.toponimo" using primary key columns */
  toponomastica_toponimo_by_pk?: Maybe<Toponomastica_Toponimo>;
  /** fetch data from the table: "toponomastica.vecchia_municipalita" */
  toponomastica_vecchia_municipalita: Array<Toponomastica_Vecchia_Municipalita>;
  /** fetch aggregated fields from the table: "toponomastica.vecchia_municipalita" */
  toponomastica_vecchia_municipalita_aggregate: Toponomastica_Vecchia_Municipalita_Aggregate;
  /** fetch data from the table: "toponomastica.vecchia_municipalita" using primary key columns */
  toponomastica_vecchia_municipalita_by_pk?: Maybe<Toponomastica_Vecchia_Municipalita>;
  /** fetch data from the table: "toponomastica.vecchio_quartiere" */
  toponomastica_vecchio_quartiere: Array<Toponomastica_Vecchio_Quartiere>;
  /** fetch aggregated fields from the table: "toponomastica.vecchio_quartiere" */
  toponomastica_vecchio_quartiere_aggregate: Toponomastica_Vecchio_Quartiere_Aggregate;
  /** fetch data from the table: "toponomastica.vecchio_quartiere" using primary key columns */
  toponomastica_vecchio_quartiere_by_pk?: Maybe<Toponomastica_Vecchio_Quartiere>;
  /** fetch data from the table: "toponomastica.vecchio_toponimo" */
  toponomastica_vecchio_toponimo: Array<Toponomastica_Vecchio_Toponimo>;
  /** fetch aggregated fields from the table: "toponomastica.vecchio_toponimo" */
  toponomastica_vecchio_toponimo_aggregate: Toponomastica_Vecchio_Toponimo_Aggregate;
  /** fetch data from the table: "toponomastica.vecchio_toponimo" using primary key columns */
  toponomastica_vecchio_toponimo_by_pk?: Maybe<Toponomastica_Vecchio_Toponimo>;
};


export type Query_Root_CittaArgs = {
  distinct_on?: Maybe<Array<_Citta_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Citta_Order_By>>;
  where?: Maybe<_Citta_Bool_Exp>;
};


export type Query_Root_Citta_AggregateArgs = {
  distinct_on?: Maybe<Array<_Citta_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Citta_Order_By>>;
  where?: Maybe<_Citta_Bool_Exp>;
};


export type Query_Root_Citta_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_Root_NazioneArgs = {
  distinct_on?: Maybe<Array<_Nazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Nazione_Order_By>>;
  where?: Maybe<_Nazione_Bool_Exp>;
};


export type Query_Root_Nazione_AggregateArgs = {
  distinct_on?: Maybe<Array<_Nazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Nazione_Order_By>>;
  where?: Maybe<_Nazione_Bool_Exp>;
};


export type Query_Root_Nazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_Root_SessoArgs = {
  distinct_on?: Maybe<Array<_Sesso_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sesso_Order_By>>;
  where?: Maybe<_Sesso_Bool_Exp>;
};


export type Query_Root_Sesso_AggregateArgs = {
  distinct_on?: Maybe<Array<_Sesso_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sesso_Order_By>>;
  where?: Maybe<_Sesso_Bool_Exp>;
};


export type Query_Root_Sesso_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_Root_SinoaltroArgs = {
  distinct_on?: Maybe<Array<_Sinoaltro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sinoaltro_Order_By>>;
  where?: Maybe<_Sinoaltro_Bool_Exp>;
};


export type Query_Root_Sinoaltro_AggregateArgs = {
  distinct_on?: Maybe<Array<_Sinoaltro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sinoaltro_Order_By>>;
  where?: Maybe<_Sinoaltro_Bool_Exp>;
};


export type Query_Root_Sinoaltro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_Root_TitoloArgs = {
  distinct_on?: Maybe<Array<_Titolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Titolo_Order_By>>;
  where?: Maybe<_Titolo_Bool_Exp>;
};


export type Query_Root_Titolo_AggregateArgs = {
  distinct_on?: Maybe<Array<_Titolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Titolo_Order_By>>;
  where?: Maybe<_Titolo_Bool_Exp>;
};


export type Query_Root_Titolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootAgcos_AgcosArgs = {
  distinct_on?: Maybe<Array<Agcos_Agcos_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Agcos_Order_By>>;
  where?: Maybe<Agcos_Agcos_Bool_Exp>;
};


export type Query_RootAgcos_Agcos_AggregateArgs = {
  distinct_on?: Maybe<Array<Agcos_Agcos_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Agcos_Order_By>>;
  where?: Maybe<Agcos_Agcos_Bool_Exp>;
};


export type Query_RootAgcos_Agcos_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootAgcos_ImportArgs = {
  distinct_on?: Maybe<Array<Agcos_Import_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Import_Order_By>>;
  where?: Maybe<Agcos_Import_Bool_Exp>;
};


export type Query_RootAgcos_Import_AggregateArgs = {
  distinct_on?: Maybe<Array<Agcos_Import_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Import_Order_By>>;
  where?: Maybe<Agcos_Import_Bool_Exp>;
};


export type Query_RootAgcos_Import_By_PkArgs = {
  updated_at: Scalars['timestamptz'];
};


export type Query_RootGis__Specifica_Posizionamento_ToponimoArgs = {
  distinct_on?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>;
};


export type Query_RootGis__Specifica_Posizionamento_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>;
};


export type Query_RootGis__Specifica_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootGis__Tipologia_Posizionamento_ToponimoArgs = {
  distinct_on?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>;
};


export type Query_RootGis__Tipologia_Posizionamento_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>;
};


export type Query_RootGis__Tipologia_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootGis_CivicoArgs = {
  distinct_on?: Maybe<Array<Gis_Civico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Civico_Order_By>>;
  where?: Maybe<Gis_Civico_Bool_Exp>;
};


export type Query_RootGis_Civico_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Civico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Civico_Order_By>>;
  where?: Maybe<Gis_Civico_Bool_Exp>;
};


export type Query_RootGis_Civico_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Query_RootGis_Connessione_GrafoArgs = {
  distinct_on?: Maybe<Array<Gis_Connessione_Grafo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Connessione_Grafo_Order_By>>;
  where?: Maybe<Gis_Connessione_Grafo_Bool_Exp>;
};


export type Query_RootGis_Connessione_Grafo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Connessione_Grafo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Connessione_Grafo_Order_By>>;
  where?: Maybe<Gis_Connessione_Grafo_Bool_Exp>;
};


export type Query_RootGis_Connessione_Grafo_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Query_RootGis_Posizionamento_ToponimoArgs = {
  distinct_on?: Maybe<Array<Gis_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
};


export type Query_RootGis_Posizionamento_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
};


export type Query_RootGis_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootGis_Sostegno_IpiArgs = {
  distinct_on?: Maybe<Array<Gis_Sostegno_Ipi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Sostegno_Ipi_Order_By>>;
  where?: Maybe<Gis_Sostegno_Ipi_Bool_Exp>;
};


export type Query_RootGis_Sostegno_Ipi_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Sostegno_Ipi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Sostegno_Ipi_Order_By>>;
  where?: Maybe<Gis_Sostegno_Ipi_Bool_Exp>;
};


export type Query_RootGis_Sostegno_Ipi_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Query_RootPis__Condizioni_TrafficoArgs = {
  distinct_on?: Maybe<Array<Pis__Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Condizioni_Traffico_Order_By>>;
  where?: Maybe<Pis__Condizioni_Traffico_Bool_Exp>;
};


export type Query_RootPis__Condizioni_Traffico_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Condizioni_Traffico_Order_By>>;
  where?: Maybe<Pis__Condizioni_Traffico_Bool_Exp>;
};


export type Query_RootPis__Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis__Forma_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis__Forma_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Forma_Dissesto_Order_By>>;
  where?: Maybe<Pis__Forma_Dissesto_Bool_Exp>;
};


export type Query_RootPis__Forma_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Forma_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Forma_Dissesto_Order_By>>;
  where?: Maybe<Pis__Forma_Dissesto_Bool_Exp>;
};


export type Query_RootPis__Forma_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis__Giorni_TrascorsiArgs = {
  distinct_on?: Maybe<Array<Pis__Giorni_Trascorsi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Giorni_Trascorsi_Order_By>>;
  where?: Maybe<Pis__Giorni_Trascorsi_Bool_Exp>;
};


export type Query_RootPis__Giorni_Trascorsi_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Giorni_Trascorsi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Giorni_Trascorsi_Order_By>>;
  where?: Maybe<Pis__Giorni_Trascorsi_Bool_Exp>;
};


export type Query_RootPis__Giorni_Trascorsi_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis__MaterialeArgs = {
  distinct_on?: Maybe<Array<Pis__Materiale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Materiale_Order_By>>;
  where?: Maybe<Pis__Materiale_Bool_Exp>;
};


export type Query_RootPis__Materiale_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Materiale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Materiale_Order_By>>;
  where?: Maybe<Pis__Materiale_Bool_Exp>;
};


export type Query_RootPis__Materiale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis__PrioritaArgs = {
  distinct_on?: Maybe<Array<Pis__Priorita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Priorita_Order_By>>;
  where?: Maybe<Pis__Priorita_Bool_Exp>;
};


export type Query_RootPis__Priorita_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Priorita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Priorita_Order_By>>;
  where?: Maybe<Pis__Priorita_Bool_Exp>;
};


export type Query_RootPis__Priorita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis__Stato_SegnalazioneArgs = {
  distinct_on?: Maybe<Array<Pis__Stato_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Stato_Segnalazione_Order_By>>;
  where?: Maybe<Pis__Stato_Segnalazione_Bool_Exp>;
};


export type Query_RootPis__Stato_Segnalazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Stato_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Stato_Segnalazione_Order_By>>;
  where?: Maybe<Pis__Stato_Segnalazione_Bool_Exp>;
};


export type Query_RootPis__Stato_Segnalazione_By_PkArgs = {
  text: Scalars['String'];
};


export type Query_RootPis__Tipologia_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis__Tipologia_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Tipologia_Dissesto_Order_By>>;
  where?: Maybe<Pis__Tipologia_Dissesto_Bool_Exp>;
};


export type Query_RootPis__Tipologia_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Tipologia_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Tipologia_Dissesto_Order_By>>;
  where?: Maybe<Pis__Tipologia_Dissesto_Bool_Exp>;
};


export type Query_RootPis__Tipologia_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Assegnazione_SquadraArgs = {
  distinct_on?: Maybe<Array<Pis_Assegnazione_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Assegnazione_Squadra_Order_By>>;
  where?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
};


export type Query_RootPis_Assegnazione_Squadra_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Assegnazione_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Assegnazione_Squadra_Order_By>>;
  where?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
};


export type Query_RootPis_Assegnazione_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Attrezzature_ImpiegateArgs = {
  distinct_on?: Maybe<Array<Pis_Attrezzature_Impiegate_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Attrezzature_Impiegate_Order_By>>;
  where?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
};


export type Query_RootPis_Attrezzature_Impiegate_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Attrezzature_Impiegate_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Attrezzature_Impiegate_Order_By>>;
  where?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
};


export type Query_RootPis_Attrezzature_Impiegate_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_DiarioArgs = {
  distinct_on?: Maybe<Array<Pis_Diario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Diario_Order_By>>;
  where?: Maybe<Pis_Diario_Bool_Exp>;
};


export type Query_RootPis_Diario_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Diario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Diario_Order_By>>;
  where?: Maybe<Pis_Diario_Bool_Exp>;
};


export type Query_RootPis_Diario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Dissesto_Order_By>>;
  where?: Maybe<Pis_Dissesto_Bool_Exp>;
};


export type Query_RootPis_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Dissesto_Order_By>>;
  where?: Maybe<Pis_Dissesto_Bool_Exp>;
};


export type Query_RootPis_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_EventoArgs = {
  distinct_on?: Maybe<Array<Pis_Evento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Evento_Order_By>>;
  where?: Maybe<Pis_Evento_Bool_Exp>;
};


export type Query_RootPis_Evento_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Evento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Evento_Order_By>>;
  where?: Maybe<Pis_Evento_Bool_Exp>;
};


export type Query_RootPis_Evento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_InterventoArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Order_By>>;
  where?: Maybe<Pis_Intervento_Bool_Exp>;
};


export type Query_RootPis_Intervento_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Order_By>>;
  where?: Maybe<Pis_Intervento_Bool_Exp>;
};


export type Query_RootPis_Intervento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Intervento_StraordinarioArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Straordinario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Straordinario_Order_By>>;
  where?: Maybe<Pis_Intervento_Straordinario_Bool_Exp>;
};


export type Query_RootPis_Intervento_Straordinario_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Straordinario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Straordinario_Order_By>>;
  where?: Maybe<Pis_Intervento_Straordinario_Bool_Exp>;
};


export type Query_RootPis_Intervento_Straordinario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Materiale_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis_Materiale_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Materiale_Dissesto_Order_By>>;
  where?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
};


export type Query_RootPis_Materiale_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Materiale_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Materiale_Dissesto_Order_By>>;
  where?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
};


export type Query_RootPis_Materiale_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_SegnalazioneArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


export type Query_RootPis_Segnalazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


export type Query_RootPis_Segnalazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Segnalazione_CollegataArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Collegata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Collegata_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
};


export type Query_RootPis_Segnalazione_Collegata_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Collegata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Collegata_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
};


export type Query_RootPis_Segnalazione_Collegata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Segnaletica_LasciataArgs = {
  distinct_on?: Maybe<Array<Pis_Segnaletica_Lasciata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnaletica_Lasciata_Order_By>>;
  where?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
};


export type Query_RootPis_Segnaletica_Lasciata_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnaletica_Lasciata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnaletica_Lasciata_Order_By>>;
  where?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
};


export type Query_RootPis_Segnaletica_Lasciata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_SquadraArgs = {
  distinct_on?: Maybe<Array<Pis_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Squadra_Order_By>>;
  where?: Maybe<Pis_Squadra_Bool_Exp>;
};


export type Query_RootPis_Squadra_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Squadra_Order_By>>;
  where?: Maybe<Pis_Squadra_Bool_Exp>;
};


export type Query_RootPis_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Tecnico_ReferenteArgs = {
  distinct_on?: Maybe<Array<Pis_Tecnico_Referente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Tecnico_Referente_Order_By>>;
  where?: Maybe<Pis_Tecnico_Referente_Bool_Exp>;
};


export type Query_RootPis_Tecnico_Referente_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Tecnico_Referente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Tecnico_Referente_Order_By>>;
  where?: Maybe<Pis_Tecnico_Referente_Bool_Exp>;
};


export type Query_RootPis_Tecnico_Referente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Vecchia_SquadraArgs = {
  distinct_on?: Maybe<Array<Pis_Vecchia_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Vecchia_Squadra_Order_By>>;
  where?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};


export type Query_RootPis_Vecchia_Squadra_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Vecchia_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Vecchia_Squadra_Order_By>>;
  where?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};


export type Query_RootPis_Vecchia_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootPis_Veicoli_ImpiegatiArgs = {
  distinct_on?: Maybe<Array<Pis_Veicoli_Impiegati_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Veicoli_Impiegati_Order_By>>;
  where?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};


export type Query_RootPis_Veicoli_Impiegati_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Veicoli_Impiegati_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Veicoli_Impiegati_Order_By>>;
  where?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};


export type Query_RootPis_Veicoli_Impiegati_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootProtocollo__Sezione_ProtocolloArgs = {
  distinct_on?: Maybe<Array<Protocollo__Sezione_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo__Sezione_Protocollo_Order_By>>;
  where?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
};


export type Query_RootProtocollo__Sezione_Protocollo_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo__Sezione_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo__Sezione_Protocollo_Order_By>>;
  where?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
};


export type Query_RootProtocollo__Sezione_Protocollo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootProtocollo_ProtocolloArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Bool_Exp>;
};


export type Query_RootProtocollo_Protocollo_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Bool_Exp>;
};


export type Query_RootProtocollo_Protocollo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootProtocollo_Protocollo_DestinatarioArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};


export type Query_RootProtocollo_Protocollo_Destinatario_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};


export type Query_RootProtocollo_Protocollo_Destinatario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootProtocollo_Protocollo_Destinatario_EsternoArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>;
};


export type Query_RootProtocollo_Protocollo_Destinatario_Esterno_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>;
};


export type Query_RootProtocollo_Protocollo_Destinatario_Esterno_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Alimentazione_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Alimentazione_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Alimentazione_Veicolo_Order_By>>;
  where?: Maybe<Sis__Alimentazione_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Alimentazione_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Alimentazione_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Alimentazione_Veicolo_Order_By>>;
  where?: Maybe<Sis__Alimentazione_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Alimentazione_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Conseguenza_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis__Conseguenza_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Conseguenza_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis__Conseguenza_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Conseguenza_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Decessi_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Decessi_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Decessi_Tipologia_Order_By>>;
  where?: Maybe<Sis__Decessi_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Decessi_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Decessi_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Decessi_Tipologia_Order_By>>;
  where?: Maybe<Sis__Decessi_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Decessi_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Destinazione_DecisioneArgs = {
  distinct_on?: Maybe<Array<Sis__Destinazione_Decisione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Destinazione_Decisione_Order_By>>;
  where?: Maybe<Sis__Destinazione_Decisione_Bool_Exp>;
};


export type Query_RootSis__Destinazione_Decisione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Destinazione_Decisione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Destinazione_Decisione_Order_By>>;
  where?: Maybe<Sis__Destinazione_Decisione_Bool_Exp>;
};


export type Query_RootSis__Destinazione_Decisione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__EnteArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Order_By>>;
  where?: Maybe<Sis__Ente_Bool_Exp>;
};


export type Query_RootSis__Ente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Order_By>>;
  where?: Maybe<Sis__Ente_Bool_Exp>;
};


export type Query_RootSis__Ente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Ente_SecondarioArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Secondario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Secondario_Order_By>>;
  where?: Maybe<Sis__Ente_Secondario_Bool_Exp>;
};


export type Query_RootSis__Ente_Secondario_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Secondario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Secondario_Order_By>>;
  where?: Maybe<Sis__Ente_Secondario_Bool_Exp>;
};


export type Query_RootSis__Ente_Secondario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Impianto_SemaforicoArgs = {
  distinct_on?: Maybe<Array<Sis__Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis__Impianto_Semaforico_Bool_Exp>;
};


export type Query_RootSis__Impianto_Semaforico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis__Impianto_Semaforico_Bool_Exp>;
};


export type Query_RootSis__Impianto_Semaforico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Infortunato_InformazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Infortunato_Informazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Infortunato_Informazione_Order_By>>;
  where?: Maybe<Sis__Infortunato_Informazione_Bool_Exp>;
};


export type Query_RootSis__Infortunato_Informazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Infortunato_Informazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Infortunato_Informazione_Order_By>>;
  where?: Maybe<Sis__Infortunato_Informazione_Bool_Exp>;
};


export type Query_RootSis__Infortunato_Informazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Intortunato_TasportatoArgs = {
  distinct_on?: Maybe<Array<Sis__Intortunato_Tasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Intortunato_Tasportato_Order_By>>;
  where?: Maybe<Sis__Intortunato_Tasportato_Bool_Exp>;
};


export type Query_RootSis__Intortunato_Tasportato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Intortunato_Tasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Intortunato_Tasportato_Order_By>>;
  where?: Maybe<Sis__Intortunato_Tasportato_Bool_Exp>;
};


export type Query_RootSis__Intortunato_Tasportato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_AltroArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Altro_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Altro_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Altro_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_Condizioni_AtmosfericheArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Condizioni_Atmosferiche_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_Condizioni_TrafficoArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Condizioni_Traffico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_Extra_AbitatoArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Extra_Abitato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Extra_Abitato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_Fondo_StradaleArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Fondo_Stradale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Fondo_Stradale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_IlluminazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Illuminazione_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Illuminazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Illuminazione_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Illuminazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_Particolarita_StradaArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Particolarita_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Particolarita_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_PavimentazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Pavimentazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Pavimentazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_Tipo_StradaArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Tipo_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Tipo_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Localizzazione_VisibilitaArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Visibilita_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Visibilita_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Visibilita_Bool_Exp>;
};


export type Query_RootSis__Localizzazione_Visibilita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Natura_IncidenteArgs = {
  distinct_on?: Maybe<Array<Sis__Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Natura_Incidente_Order_By>>;
  where?: Maybe<Sis__Natura_Incidente_Bool_Exp>;
};


export type Query_RootSis__Natura_Incidente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Natura_Incidente_Order_By>>;
  where?: Maybe<Sis__Natura_Incidente_Bool_Exp>;
};


export type Query_RootSis__Natura_Incidente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Patente_CategoriaArgs = {
  distinct_on?: Maybe<Array<Sis__Patente_Categoria_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Patente_Categoria_Order_By>>;
  where?: Maybe<Sis__Patente_Categoria_Bool_Exp>;
};


export type Query_RootSis__Patente_Categoria_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Patente_Categoria_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Patente_Categoria_Order_By>>;
  where?: Maybe<Sis__Patente_Categoria_Bool_Exp>;
};


export type Query_RootSis__Patente_Categoria_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Posizione_Finale_Veicolo_CarreggiataArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Query_RootSis__Posizione_Finale_Veicolo_Carreggiata_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Query_RootSis__Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Query_RootSis__Posizione_Finale_Veicolo_Fuori_Sede_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Query_RootSis__Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Posizione_Finale_Veicolo_MarginiArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Query_RootSis__Posizione_Finale_Veicolo_Margini_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Query_RootSis__Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Punti_Rilievi_No_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Order_By>>;
  where?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Punti_Rilievi_No_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Order_By>>;
  where?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Punti_Rilievi_No_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Retrovisore_EsternoArgs = {
  distinct_on?: Maybe<Array<Sis__Retrovisore_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Retrovisore_Esterno_Order_By>>;
  where?: Maybe<Sis__Retrovisore_Esterno_Bool_Exp>;
};


export type Query_RootSis__Retrovisore_Esterno_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Retrovisore_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Retrovisore_Esterno_Order_By>>;
  where?: Maybe<Sis__Retrovisore_Esterno_Bool_Exp>;
};


export type Query_RootSis__Retrovisore_Esterno_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Ris_Consegnato_AArgs = {
  distinct_on?: Maybe<Array<Sis__Ris_Consegnato_A_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ris_Consegnato_A_Order_By>>;
  where?: Maybe<Sis__Ris_Consegnato_A_Bool_Exp>;
};


export type Query_RootSis__Ris_Consegnato_A_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Ris_Consegnato_A_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ris_Consegnato_A_Order_By>>;
  where?: Maybe<Sis__Ris_Consegnato_A_Bool_Exp>;
};


export type Query_RootSis__Ris_Consegnato_A_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Stato_RisArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Ris_Order_By>>;
  where?: Maybe<Sis__Stato_Ris_Bool_Exp>;
};


export type Query_RootSis__Stato_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Ris_Order_By>>;
  where?: Maybe<Sis__Stato_Ris_Bool_Exp>;
};


export type Query_RootSis__Stato_Ris_By_PkArgs = {
  text: Scalars['String'];
};


export type Query_RootSis__Stato_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Veicolo_Order_By>>;
  where?: Maybe<Sis__Stato_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Stato_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Veicolo_Order_By>>;
  where?: Maybe<Sis__Stato_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Stato_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Tipologia_RisArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis__Tipologia_Ris_Bool_Exp>;
};


export type Query_RootSis__Tipologia_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis__Tipologia_Ris_Bool_Exp>;
};


export type Query_RootSis__Tipologia_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Tipologia_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Veicolo_Order_By>>;
  where?: Maybe<Sis__Tipologia_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Tipologia_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Veicolo_Order_By>>;
  where?: Maybe<Sis__Tipologia_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Tipologia_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Tipologia_VerbaleArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Verbale_Order_By>>;
  where?: Maybe<Sis__Tipologia_Verbale_Bool_Exp>;
};


export type Query_RootSis__Tipologia_Verbale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Verbale_Order_By>>;
  where?: Maybe<Sis__Tipologia_Verbale_Bool_Exp>;
};


export type Query_RootSis__Tipologia_Verbale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Traccia_Suolo_Frenata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Frenata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Frenata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Traccia_Suolo_TerminazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_AndamentoArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Andamento_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Andamento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Traccia_Suolo_Terminazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Traccia_Suolo_Terminazione_FormaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Forma_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Forma_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Traccia_Suolo_Terminazione_IntensitaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Intensita_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Intensita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Traccia_Suolo_Terminazione_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Terminazione_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Traccia_Suolo_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Traccia_Suolo_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Trasportato_PosizioneArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Posizione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Posizione_Order_By>>;
  where?: Maybe<Sis__Trasportato_Posizione_Bool_Exp>;
};


export type Query_RootSis__Trasportato_Posizione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Posizione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Posizione_Order_By>>;
  where?: Maybe<Sis__Trasportato_Posizione_Bool_Exp>;
};


export type Query_RootSis__Trasportato_Posizione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Trasportato_StatoArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Stato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Stato_Order_By>>;
  where?: Maybe<Sis__Trasportato_Stato_Bool_Exp>;
};


export type Query_RootSis__Trasportato_Stato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Stato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Stato_Order_By>>;
  where?: Maybe<Sis__Trasportato_Stato_Bool_Exp>;
};


export type Query_RootSis__Trasportato_Stato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Uso_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Uso_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Uso_Veicolo_Order_By>>;
  where?: Maybe<Sis__Uso_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Uso_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Uso_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Uso_Veicolo_Order_By>>;
  where?: Maybe<Sis__Uso_Veicolo_Bool_Exp>;
};


export type Query_RootSis__Uso_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis__Visibilita_Limitata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Visibilita_Limitata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Query_RootSis__Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_AccertamentoArgs = {
  distinct_on?: Maybe<Array<Sis_Accertamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Accertamento_Order_By>>;
  where?: Maybe<Sis_Accertamento_Bool_Exp>;
};


export type Query_RootSis_Accertamento_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Accertamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Accertamento_Order_By>>;
  where?: Maybe<Sis_Accertamento_Bool_Exp>;
};


export type Query_RootSis_Accertamento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Agente_AccertatoreArgs = {
  distinct_on?: Maybe<Array<Sis_Agente_Accertatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Agente_Accertatore_Order_By>>;
  where?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
};


export type Query_RootSis_Agente_Accertatore_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Agente_Accertatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Agente_Accertatore_Order_By>>;
  where?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
};


export type Query_RootSis_Agente_Accertatore_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_AltroArgs = {
  distinct_on?: Maybe<Array<Sis_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Altro_Order_By>>;
  where?: Maybe<Sis_Altro_Bool_Exp>;
};


export type Query_RootSis_Altro_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Altro_Order_By>>;
  where?: Maybe<Sis_Altro_Bool_Exp>;
};


export type Query_RootSis_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Query_RootSis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Query_RootSis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Assegnazione_Unita_OperativaArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
};


export type Query_RootSis_Assegnazione_Unita_Operativa_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
};


export type Query_RootSis_Assegnazione_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Conseguenza_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
};


export type Query_RootSis_Associazione_Conseguenza_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
};


export type Query_RootSis_Associazione_Conseguenza_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Decessi_TipologieArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Order_By>>;
  where?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
};


export type Query_RootSis_Associazione_Decessi_Tipologie_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Order_By>>;
  where?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
};


export type Query_RootSis_Associazione_Decessi_Tipologie_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Ente_Primo_InterventoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
};


export type Query_RootSis_Associazione_Ente_Primo_Intervento_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
};


export type Query_RootSis_Associazione_Ente_Primo_Intervento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Ente_Secondario_IntervenutiArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
};


export type Query_RootSis_Associazione_Ente_Secondario_Intervenuti_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
};


export type Query_RootSis_Associazione_Ente_Secondario_Intervenuti_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Ente_SegnalatoreArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
};


export type Query_RootSis_Associazione_Ente_Segnalatore_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
};


export type Query_RootSis_Associazione_Ente_Segnalatore_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Impianto_SemaforicoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
};


export type Query_RootSis_Associazione_Impianto_Semaforico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
};


export type Query_RootSis_Associazione_Impianto_Semaforico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Informazioni_InfortunatoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Order_By>>;
  where?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
};


export type Query_RootSis_Associazione_Informazioni_Infortunato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Order_By>>;
  where?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
};


export type Query_RootSis_Associazione_Informazioni_Infortunato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_AltroArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Altro_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_Condizioni_AtmosfericheArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Condizioni_Atmosferiche_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_Extra_AbitatoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Extra_Abitato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Extra_Abitato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_Fondo_StradaleArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Fondo_Stradale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Fondo_Stradale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_IlluminazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Illuminazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Illuminazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_Particolarita_StradaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Particolarita_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Particolarita_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_PavimentazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Pavimentazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Pavimentazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_Tipo_StradaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Tipo_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Tipo_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Localizzazione_VisibilitaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Visibilita_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
};


export type Query_RootSis_Associazione_Localizzazione_Visibilita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Natura_IncidenteArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Natura_Incidente_Order_By>>;
  where?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
};


export type Query_RootSis_Associazione_Natura_Incidente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Natura_Incidente_Order_By>>;
  where?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
};


export type Query_RootSis_Associazione_Natura_Incidente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_PatenteArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Patente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Patente_Order_By>>;
  where?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
};


export type Query_RootSis_Associazione_Patente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Patente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Patente_Order_By>>;
  where?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
};


export type Query_RootSis_Associazione_Patente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_CarreggiataArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_Carreggiata_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_MarginiArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_Margini_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Query_RootSis_Associazione_Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associazione_Tipologia_RisArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
};


export type Query_RootSis_Associazione_Tipologia_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
};


export type Query_RootSis_Associazione_Tipologia_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Associzione_Localizzazione_Condizioni_TrafficoArgs = {
  distinct_on?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Query_RootSis_Associzione_Localizzazione_Condizioni_Traffico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Query_RootSis_Associzione_Localizzazione_Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_ConducenteArgs = {
  distinct_on?: Maybe<Array<Sis_Conducente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Conducente_Order_By>>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
};


export type Query_RootSis_Conducente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Conducente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Conducente_Order_By>>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
};


export type Query_RootSis_Conducente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Evento_SisArgs = {
  distinct_on?: Maybe<Array<Sis_Evento_Sis_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Evento_Sis_Order_By>>;
  where?: Maybe<Sis_Evento_Sis_Bool_Exp>;
};


export type Query_RootSis_Evento_Sis_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Evento_Sis_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Evento_Sis_Order_By>>;
  where?: Maybe<Sis_Evento_Sis_Bool_Exp>;
};


export type Query_RootSis_Evento_Sis_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_InfortunatoArgs = {
  distinct_on?: Maybe<Array<Sis_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infortunato_Order_By>>;
  where?: Maybe<Sis_Infortunato_Bool_Exp>;
};


export type Query_RootSis_Infortunato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infortunato_Order_By>>;
  where?: Maybe<Sis_Infortunato_Bool_Exp>;
};


export type Query_RootSis_Infortunato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_InfrazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Infrazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infrazione_Order_By>>;
  where?: Maybe<Sis_Infrazione_Bool_Exp>;
};


export type Query_RootSis_Infrazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Infrazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infrazione_Order_By>>;
  where?: Maybe<Sis_Infrazione_Bool_Exp>;
};


export type Query_RootSis_Infrazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_LocatarioArgs = {
  distinct_on?: Maybe<Array<Sis_Locatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Locatario_Order_By>>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
};


export type Query_RootSis_Locatario_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Locatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Locatario_Order_By>>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
};


export type Query_RootSis_Locatario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_PedoneArgs = {
  distinct_on?: Maybe<Array<Sis_Pedone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Pedone_Order_By>>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
};


export type Query_RootSis_Pedone_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Pedone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Pedone_Order_By>>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
};


export type Query_RootSis_Pedone_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_ProprietarioArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Order_By>>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
};


export type Query_RootSis_Proprietario_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Order_By>>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
};


export type Query_RootSis_Proprietario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Proprietario_GiuridicoArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Giuridico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Giuridico_Order_By>>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
};


export type Query_RootSis_Proprietario_Giuridico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Giuridico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Giuridico_Order_By>>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
};


export type Query_RootSis_Proprietario_Giuridico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_RisArgs = {
  distinct_on?: Maybe<Array<Sis_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Ris_Order_By>>;
  where?: Maybe<Sis_Ris_Bool_Exp>;
};


export type Query_RootSis_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Ris_Order_By>>;
  where?: Maybe<Sis_Ris_Bool_Exp>;
};


export type Query_RootSis_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_TestimoneArgs = {
  distinct_on?: Maybe<Array<Sis_Testimone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Testimone_Order_By>>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
};


export type Query_RootSis_Testimone_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Testimone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Testimone_Order_By>>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
};


export type Query_RootSis_Testimone_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Trasportati_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportati_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportati_Veicolo_Order_By>>;
  where?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
};


export type Query_RootSis_Trasportati_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportati_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportati_Veicolo_Order_By>>;
  where?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
};


export type Query_RootSis_Trasportati_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_TrasportatoArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportato_Order_By>>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
};


export type Query_RootSis_Trasportato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportato_Order_By>>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
};


export type Query_RootSis_Trasportato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Unita_OperativaArgs = {
  distinct_on?: Maybe<Array<Sis_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
};


export type Query_RootSis_Unita_Operativa_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
};


export type Query_RootSis_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_Vecchia_Unita_OperativaArgs = {
  distinct_on?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};


export type Query_RootSis_Vecchia_Unita_Operativa_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};


export type Query_RootSis_Vecchia_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Veicolo_Order_By>>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
};


export type Query_RootSis_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Veicolo_Order_By>>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
};


export type Query_RootSis_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootSis_VerbaleArgs = {
  distinct_on?: Maybe<Array<Sis_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Verbale_Order_By>>;
  where?: Maybe<Sis_Verbale_Bool_Exp>;
};


export type Query_RootSis_Verbale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Verbale_Order_By>>;
  where?: Maybe<Sis_Verbale_Bool_Exp>;
};


export type Query_RootSis_Verbale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_Assegnazione_QuartiereArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


export type Query_RootToponomastica_Assegnazione_Quartiere_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


export type Query_RootToponomastica_Assegnazione_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_Assegnazione_ToponimoArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


export type Query_RootToponomastica_Assegnazione_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


export type Query_RootToponomastica_Assegnazione_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_DugArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Dug_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Dug_Order_By>>;
  where?: Maybe<Toponomastica_Dug_Bool_Exp>;
};


export type Query_RootToponomastica_Dug_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Dug_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Dug_Order_By>>;
  where?: Maybe<Toponomastica_Dug_Bool_Exp>;
};


export type Query_RootToponomastica_Dug_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_MunicipalitaArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
};


export type Query_RootToponomastica_Municipalita_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
};


export type Query_RootToponomastica_Municipalita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_QuartiereArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
};


export type Query_RootToponomastica_Quartiere_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
};


export type Query_RootToponomastica_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_TipologiaArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Tipologia_Order_By>>;
  where?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
};


export type Query_RootToponomastica_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Tipologia_Order_By>>;
  where?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
};


export type Query_RootToponomastica_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_ToponimoArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
};


export type Query_RootToponomastica_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
};


export type Query_RootToponomastica_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_Vecchia_MunicipalitaArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};


export type Query_RootToponomastica_Vecchia_Municipalita_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};


export type Query_RootToponomastica_Vecchia_Municipalita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_Vecchio_QuartiereArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};


export type Query_RootToponomastica_Vecchio_Quartiere_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};


export type Query_RootToponomastica_Vecchio_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootToponomastica_Vecchio_ToponimoArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};


export type Query_RootToponomastica_Vecchio_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};


export type Query_RootToponomastica_Vecchio_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};

/** columns and relationships of "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo = {
  __typename?: 'sis__alimentazione_veicolo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Aggregate = {
  __typename?: 'sis__alimentazione_veicolo_aggregate';
  aggregate?: Maybe<Sis__Alimentazione_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis__Alimentazione_Veicolo>;
};

/** aggregate fields of "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Aggregate_Fields = {
  __typename?: 'sis__alimentazione_veicolo_aggregate_fields';
  avg?: Maybe<Sis__Alimentazione_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Alimentazione_Veicolo_Max_Fields>;
  min?: Maybe<Sis__Alimentazione_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis__Alimentazione_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Alimentazione_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Alimentazione_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Alimentazione_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis__Alimentazione_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Alimentazione_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis__Alimentazione_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Alimentazione_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Alimentazione_Veicolo_Avg_Fields = {
  __typename?: 'sis__alimentazione_veicolo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._alimentazione_veicolo". All fields are combined with a logical 'AND'. */
export type Sis__Alimentazione_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis__Alimentazione_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis__Alimentazione_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis__Alimentazione_Veicolo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._alimentazione_veicolo" */
export enum Sis__Alimentazione_Veicolo_Constraint {
  /** unique or primary key constraint */
  AlimentazioneVeicoloPkey = '_alimentazione_veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Alimentazione_Veicolo_Max_Fields = {
  __typename?: 'sis__alimentazione_veicolo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Alimentazione_Veicolo_Min_Fields = {
  __typename?: 'sis__alimentazione_veicolo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Mutation_Response = {
  __typename?: 'sis__alimentazione_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Alimentazione_Veicolo>;
};

/** input type for inserting object relation for remote table "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Obj_Rel_Insert_Input = {
  data: Sis__Alimentazione_Veicolo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Alimentazione_Veicolo_On_Conflict>;
};

/** on_conflict condition type for table "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_On_Conflict = {
  constraint: Sis__Alimentazione_Veicolo_Constraint;
  update_columns?: Array<Sis__Alimentazione_Veicolo_Update_Column>;
  where?: Maybe<Sis__Alimentazione_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._alimentazione_veicolo". */
export type Sis__Alimentazione_Veicolo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__alimentazione_veicolo */
export type Sis__Alimentazione_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._alimentazione_veicolo" */
export enum Sis__Alimentazione_Veicolo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._alimentazione_veicolo" */
export type Sis__Alimentazione_Veicolo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Alimentazione_Veicolo_Stddev_Fields = {
  __typename?: 'sis__alimentazione_veicolo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Alimentazione_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis__alimentazione_veicolo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Alimentazione_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis__alimentazione_veicolo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Alimentazione_Veicolo_Sum_Fields = {
  __typename?: 'sis__alimentazione_veicolo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._alimentazione_veicolo" */
export enum Sis__Alimentazione_Veicolo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Alimentazione_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis__alimentazione_veicolo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Alimentazione_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis__alimentazione_veicolo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Alimentazione_Veicolo_Variance_Fields = {
  __typename?: 'sis__alimentazione_veicolo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_aggregate';
  aggregate?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
};

/** aggregate fields of "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_aggregate_fields';
  avg?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Max_Fields>;
  min?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Avg_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._condizioni_meteo_visibilita_limitata_tipologia". All fields are combined with a logical 'AND'. */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export enum Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Constraint {
  /** unique or primary key constraint */
  CondizioniMeteoVisibilitaLimitataTipologiaPkey = '_condizioni_meteo_visibilita_limitata_tipologia_pkey'
}

/** input type for incrementing numeric columns in table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Max_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Min_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
};

/** input type for inserting object relation for remote table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Obj_Rel_Insert_Input = {
  data: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict>;
};

/** on_conflict condition type for table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict = {
  constraint: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Constraint;
  update_columns?: Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Update_Column>;
  where?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._condizioni_meteo_visibilita_limitata_tipologia". */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__condizioni_meteo_visibilita_limitata_tipologia */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export enum Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Sum_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._condizioni_meteo_visibilita_limitata_tipologia" */
export enum Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Variance_Fields = {
  __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo = {
  __typename?: 'sis__conseguenza_veicolo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Aggregate = {
  __typename?: 'sis__conseguenza_veicolo_aggregate';
  aggregate?: Maybe<Sis__Conseguenza_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis__Conseguenza_Veicolo>;
};

/** aggregate fields of "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Aggregate_Fields = {
  __typename?: 'sis__conseguenza_veicolo_aggregate_fields';
  avg?: Maybe<Sis__Conseguenza_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Conseguenza_Veicolo_Max_Fields>;
  min?: Maybe<Sis__Conseguenza_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis__Conseguenza_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Conseguenza_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Conseguenza_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Conseguenza_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis__Conseguenza_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Conseguenza_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis__Conseguenza_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Conseguenza_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Conseguenza_Veicolo_Avg_Fields = {
  __typename?: 'sis__conseguenza_veicolo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._conseguenza_veicolo". All fields are combined with a logical 'AND'. */
export type Sis__Conseguenza_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis__Conseguenza_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis__Conseguenza_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis__Conseguenza_Veicolo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._conseguenza_veicolo" */
export enum Sis__Conseguenza_Veicolo_Constraint {
  /** unique or primary key constraint */
  ConseguenzaVeicoloPkey = '_conseguenza_veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Conseguenza_Veicolo_Max_Fields = {
  __typename?: 'sis__conseguenza_veicolo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Conseguenza_Veicolo_Min_Fields = {
  __typename?: 'sis__conseguenza_veicolo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Mutation_Response = {
  __typename?: 'sis__conseguenza_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Conseguenza_Veicolo>;
};

/** input type for inserting object relation for remote table "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Obj_Rel_Insert_Input = {
  data: Sis__Conseguenza_Veicolo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Conseguenza_Veicolo_On_Conflict>;
};

/** on_conflict condition type for table "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_On_Conflict = {
  constraint: Sis__Conseguenza_Veicolo_Constraint;
  update_columns?: Array<Sis__Conseguenza_Veicolo_Update_Column>;
  where?: Maybe<Sis__Conseguenza_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._conseguenza_veicolo". */
export type Sis__Conseguenza_Veicolo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__conseguenza_veicolo */
export type Sis__Conseguenza_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._conseguenza_veicolo" */
export enum Sis__Conseguenza_Veicolo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._conseguenza_veicolo" */
export type Sis__Conseguenza_Veicolo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Conseguenza_Veicolo_Stddev_Fields = {
  __typename?: 'sis__conseguenza_veicolo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Conseguenza_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis__conseguenza_veicolo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Conseguenza_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis__conseguenza_veicolo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Conseguenza_Veicolo_Sum_Fields = {
  __typename?: 'sis__conseguenza_veicolo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._conseguenza_veicolo" */
export enum Sis__Conseguenza_Veicolo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Conseguenza_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis__conseguenza_veicolo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Conseguenza_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis__conseguenza_veicolo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Conseguenza_Veicolo_Variance_Fields = {
  __typename?: 'sis__conseguenza_veicolo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia = {
  __typename?: 'sis__decessi_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Aggregate = {
  __typename?: 'sis__decessi_tipologia_aggregate';
  aggregate?: Maybe<Sis__Decessi_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis__Decessi_Tipologia>;
};

/** aggregate fields of "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Aggregate_Fields = {
  __typename?: 'sis__decessi_tipologia_aggregate_fields';
  avg?: Maybe<Sis__Decessi_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Decessi_Tipologia_Max_Fields>;
  min?: Maybe<Sis__Decessi_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis__Decessi_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Decessi_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Decessi_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Decessi_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis__Decessi_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Decessi_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis__Decessi_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Decessi_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Decessi_Tipologia_Avg_Fields = {
  __typename?: 'sis__decessi_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._decessi_tipologia". All fields are combined with a logical 'AND'. */
export type Sis__Decessi_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis__Decessi_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis__Decessi_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis__Decessi_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._decessi_tipologia" */
export enum Sis__Decessi_Tipologia_Constraint {
  /** unique or primary key constraint */
  DecessiTipologiaPkey = '_decessi_tipologia_pkey'
}

/** input type for incrementing numeric columns in table "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Decessi_Tipologia_Max_Fields = {
  __typename?: 'sis__decessi_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Decessi_Tipologia_Min_Fields = {
  __typename?: 'sis__decessi_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Mutation_Response = {
  __typename?: 'sis__decessi_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Decessi_Tipologia>;
};

/** input type for inserting object relation for remote table "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Obj_Rel_Insert_Input = {
  data: Sis__Decessi_Tipologia_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Decessi_Tipologia_On_Conflict>;
};

/** on_conflict condition type for table "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_On_Conflict = {
  constraint: Sis__Decessi_Tipologia_Constraint;
  update_columns?: Array<Sis__Decessi_Tipologia_Update_Column>;
  where?: Maybe<Sis__Decessi_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._decessi_tipologia". */
export type Sis__Decessi_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__decessi_tipologia */
export type Sis__Decessi_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._decessi_tipologia" */
export enum Sis__Decessi_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._decessi_tipologia" */
export type Sis__Decessi_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Decessi_Tipologia_Stddev_Fields = {
  __typename?: 'sis__decessi_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Decessi_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis__decessi_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Decessi_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis__decessi_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Decessi_Tipologia_Sum_Fields = {
  __typename?: 'sis__decessi_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._decessi_tipologia" */
export enum Sis__Decessi_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Decessi_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis__decessi_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Decessi_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis__decessi_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Decessi_Tipologia_Variance_Fields = {
  __typename?: 'sis__decessi_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione = {
  __typename?: 'sis__destinazione_decisione';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Aggregate = {
  __typename?: 'sis__destinazione_decisione_aggregate';
  aggregate?: Maybe<Sis__Destinazione_Decisione_Aggregate_Fields>;
  nodes: Array<Sis__Destinazione_Decisione>;
};

/** aggregate fields of "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Aggregate_Fields = {
  __typename?: 'sis__destinazione_decisione_aggregate_fields';
  avg?: Maybe<Sis__Destinazione_Decisione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Destinazione_Decisione_Max_Fields>;
  min?: Maybe<Sis__Destinazione_Decisione_Min_Fields>;
  stddev?: Maybe<Sis__Destinazione_Decisione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Destinazione_Decisione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Destinazione_Decisione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Destinazione_Decisione_Sum_Fields>;
  var_pop?: Maybe<Sis__Destinazione_Decisione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Destinazione_Decisione_Var_Samp_Fields>;
  variance?: Maybe<Sis__Destinazione_Decisione_Variance_Fields>;
};


/** aggregate fields of "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Destinazione_Decisione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Destinazione_Decisione_Avg_Fields = {
  __typename?: 'sis__destinazione_decisione_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._destinazione_decisione". All fields are combined with a logical 'AND'. */
export type Sis__Destinazione_Decisione_Bool_Exp = {
  _and?: Maybe<Array<Sis__Destinazione_Decisione_Bool_Exp>>;
  _not?: Maybe<Sis__Destinazione_Decisione_Bool_Exp>;
  _or?: Maybe<Array<Sis__Destinazione_Decisione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._destinazione_decisione" */
export enum Sis__Destinazione_Decisione_Constraint {
  /** unique or primary key constraint */
  DestinazioneDecisionePkey = '_destinazione_decisione_pkey'
}

/** input type for incrementing numeric columns in table "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Destinazione_Decisione_Max_Fields = {
  __typename?: 'sis__destinazione_decisione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Destinazione_Decisione_Min_Fields = {
  __typename?: 'sis__destinazione_decisione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Mutation_Response = {
  __typename?: 'sis__destinazione_decisione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Destinazione_Decisione>;
};

/** input type for inserting object relation for remote table "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Obj_Rel_Insert_Input = {
  data: Sis__Destinazione_Decisione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Destinazione_Decisione_On_Conflict>;
};

/** on_conflict condition type for table "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_On_Conflict = {
  constraint: Sis__Destinazione_Decisione_Constraint;
  update_columns?: Array<Sis__Destinazione_Decisione_Update_Column>;
  where?: Maybe<Sis__Destinazione_Decisione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._destinazione_decisione". */
export type Sis__Destinazione_Decisione_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__destinazione_decisione */
export type Sis__Destinazione_Decisione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._destinazione_decisione" */
export enum Sis__Destinazione_Decisione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._destinazione_decisione" */
export type Sis__Destinazione_Decisione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Destinazione_Decisione_Stddev_Fields = {
  __typename?: 'sis__destinazione_decisione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Destinazione_Decisione_Stddev_Pop_Fields = {
  __typename?: 'sis__destinazione_decisione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Destinazione_Decisione_Stddev_Samp_Fields = {
  __typename?: 'sis__destinazione_decisione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Destinazione_Decisione_Sum_Fields = {
  __typename?: 'sis__destinazione_decisione_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._destinazione_decisione" */
export enum Sis__Destinazione_Decisione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Destinazione_Decisione_Var_Pop_Fields = {
  __typename?: 'sis__destinazione_decisione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Destinazione_Decisione_Var_Samp_Fields = {
  __typename?: 'sis__destinazione_decisione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Destinazione_Decisione_Variance_Fields = {
  __typename?: 'sis__destinazione_decisione_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._ente" */
export type Sis__Ente = {
  __typename?: 'sis__ente';
  abbreviazione?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  label_tipo?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._ente" */
export type Sis__Ente_Aggregate = {
  __typename?: 'sis__ente_aggregate';
  aggregate?: Maybe<Sis__Ente_Aggregate_Fields>;
  nodes: Array<Sis__Ente>;
};

/** aggregate fields of "sis._ente" */
export type Sis__Ente_Aggregate_Fields = {
  __typename?: 'sis__ente_aggregate_fields';
  avg?: Maybe<Sis__Ente_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Ente_Max_Fields>;
  min?: Maybe<Sis__Ente_Min_Fields>;
  stddev?: Maybe<Sis__Ente_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Ente_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Ente_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Ente_Sum_Fields>;
  var_pop?: Maybe<Sis__Ente_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Ente_Var_Samp_Fields>;
  variance?: Maybe<Sis__Ente_Variance_Fields>;
};


/** aggregate fields of "sis._ente" */
export type Sis__Ente_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Ente_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Ente_Avg_Fields = {
  __typename?: 'sis__ente_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._ente". All fields are combined with a logical 'AND'. */
export type Sis__Ente_Bool_Exp = {
  _and?: Maybe<Array<Sis__Ente_Bool_Exp>>;
  _not?: Maybe<Sis__Ente_Bool_Exp>;
  _or?: Maybe<Array<Sis__Ente_Bool_Exp>>;
  abbreviazione?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  label_tipo?: Maybe<String_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._ente" */
export enum Sis__Ente_Constraint {
  /** unique or primary key constraint */
  EntePkey = '_ente_pkey'
}

/** input type for incrementing numeric columns in table "sis._ente" */
export type Sis__Ente_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._ente" */
export type Sis__Ente_Insert_Input = {
  abbreviazione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  label_tipo?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Ente_Max_Fields = {
  __typename?: 'sis__ente_max_fields';
  abbreviazione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  label_tipo?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Ente_Min_Fields = {
  __typename?: 'sis__ente_min_fields';
  abbreviazione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  label_tipo?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._ente" */
export type Sis__Ente_Mutation_Response = {
  __typename?: 'sis__ente_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Ente>;
};

/** input type for inserting object relation for remote table "sis._ente" */
export type Sis__Ente_Obj_Rel_Insert_Input = {
  data: Sis__Ente_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Ente_On_Conflict>;
};

/** on_conflict condition type for table "sis._ente" */
export type Sis__Ente_On_Conflict = {
  constraint: Sis__Ente_Constraint;
  update_columns?: Array<Sis__Ente_Update_Column>;
  where?: Maybe<Sis__Ente_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._ente". */
export type Sis__Ente_Order_By = {
  abbreviazione?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  label_tipo?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__ente */
export type Sis__Ente_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** columns and relationships of "sis._ente_secondario" */
export type Sis__Ente_Secondario = {
  __typename?: 'sis__ente_secondario';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._ente_secondario" */
export type Sis__Ente_Secondario_Aggregate = {
  __typename?: 'sis__ente_secondario_aggregate';
  aggregate?: Maybe<Sis__Ente_Secondario_Aggregate_Fields>;
  nodes: Array<Sis__Ente_Secondario>;
};

/** aggregate fields of "sis._ente_secondario" */
export type Sis__Ente_Secondario_Aggregate_Fields = {
  __typename?: 'sis__ente_secondario_aggregate_fields';
  avg?: Maybe<Sis__Ente_Secondario_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Ente_Secondario_Max_Fields>;
  min?: Maybe<Sis__Ente_Secondario_Min_Fields>;
  stddev?: Maybe<Sis__Ente_Secondario_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Ente_Secondario_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Ente_Secondario_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Ente_Secondario_Sum_Fields>;
  var_pop?: Maybe<Sis__Ente_Secondario_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Ente_Secondario_Var_Samp_Fields>;
  variance?: Maybe<Sis__Ente_Secondario_Variance_Fields>;
};


/** aggregate fields of "sis._ente_secondario" */
export type Sis__Ente_Secondario_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Ente_Secondario_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Ente_Secondario_Avg_Fields = {
  __typename?: 'sis__ente_secondario_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._ente_secondario". All fields are combined with a logical 'AND'. */
export type Sis__Ente_Secondario_Bool_Exp = {
  _and?: Maybe<Array<Sis__Ente_Secondario_Bool_Exp>>;
  _not?: Maybe<Sis__Ente_Secondario_Bool_Exp>;
  _or?: Maybe<Array<Sis__Ente_Secondario_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._ente_secondario" */
export enum Sis__Ente_Secondario_Constraint {
  /** unique or primary key constraint */
  EnteSecondarioPkey = '_ente_secondario_pkey'
}

/** input type for incrementing numeric columns in table "sis._ente_secondario" */
export type Sis__Ente_Secondario_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._ente_secondario" */
export type Sis__Ente_Secondario_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Ente_Secondario_Max_Fields = {
  __typename?: 'sis__ente_secondario_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Ente_Secondario_Min_Fields = {
  __typename?: 'sis__ente_secondario_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._ente_secondario" */
export type Sis__Ente_Secondario_Mutation_Response = {
  __typename?: 'sis__ente_secondario_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Ente_Secondario>;
};

/** input type for inserting object relation for remote table "sis._ente_secondario" */
export type Sis__Ente_Secondario_Obj_Rel_Insert_Input = {
  data: Sis__Ente_Secondario_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Ente_Secondario_On_Conflict>;
};

/** on_conflict condition type for table "sis._ente_secondario" */
export type Sis__Ente_Secondario_On_Conflict = {
  constraint: Sis__Ente_Secondario_Constraint;
  update_columns?: Array<Sis__Ente_Secondario_Update_Column>;
  where?: Maybe<Sis__Ente_Secondario_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._ente_secondario". */
export type Sis__Ente_Secondario_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__ente_secondario */
export type Sis__Ente_Secondario_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._ente_secondario" */
export enum Sis__Ente_Secondario_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._ente_secondario" */
export type Sis__Ente_Secondario_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Ente_Secondario_Stddev_Fields = {
  __typename?: 'sis__ente_secondario_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Ente_Secondario_Stddev_Pop_Fields = {
  __typename?: 'sis__ente_secondario_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Ente_Secondario_Stddev_Samp_Fields = {
  __typename?: 'sis__ente_secondario_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Ente_Secondario_Sum_Fields = {
  __typename?: 'sis__ente_secondario_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._ente_secondario" */
export enum Sis__Ente_Secondario_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Ente_Secondario_Var_Pop_Fields = {
  __typename?: 'sis__ente_secondario_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Ente_Secondario_Var_Samp_Fields = {
  __typename?: 'sis__ente_secondario_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Ente_Secondario_Variance_Fields = {
  __typename?: 'sis__ente_secondario_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** select columns of table "sis._ente" */
export enum Sis__Ente_Select_Column {
  /** column name */
  Abbreviazione = 'abbreviazione',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LabelTipo = 'label_tipo',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._ente" */
export type Sis__Ente_Set_Input = {
  abbreviazione?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  label_tipo?: Maybe<Scalars['String']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Ente_Stddev_Fields = {
  __typename?: 'sis__ente_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Ente_Stddev_Pop_Fields = {
  __typename?: 'sis__ente_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Ente_Stddev_Samp_Fields = {
  __typename?: 'sis__ente_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Ente_Sum_Fields = {
  __typename?: 'sis__ente_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._ente" */
export enum Sis__Ente_Update_Column {
  /** column name */
  Abbreviazione = 'abbreviazione',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LabelTipo = 'label_tipo',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Ente_Var_Pop_Fields = {
  __typename?: 'sis__ente_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Ente_Var_Samp_Fields = {
  __typename?: 'sis__ente_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Ente_Variance_Fields = {
  __typename?: 'sis__ente_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico = {
  __typename?: 'sis__impianto_semaforico';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Aggregate = {
  __typename?: 'sis__impianto_semaforico_aggregate';
  aggregate?: Maybe<Sis__Impianto_Semaforico_Aggregate_Fields>;
  nodes: Array<Sis__Impianto_Semaforico>;
};

/** aggregate fields of "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Aggregate_Fields = {
  __typename?: 'sis__impianto_semaforico_aggregate_fields';
  avg?: Maybe<Sis__Impianto_Semaforico_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Impianto_Semaforico_Max_Fields>;
  min?: Maybe<Sis__Impianto_Semaforico_Min_Fields>;
  stddev?: Maybe<Sis__Impianto_Semaforico_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Impianto_Semaforico_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Impianto_Semaforico_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Impianto_Semaforico_Sum_Fields>;
  var_pop?: Maybe<Sis__Impianto_Semaforico_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Impianto_Semaforico_Var_Samp_Fields>;
  variance?: Maybe<Sis__Impianto_Semaforico_Variance_Fields>;
};


/** aggregate fields of "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Impianto_Semaforico_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Impianto_Semaforico_Avg_Fields = {
  __typename?: 'sis__impianto_semaforico_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._impianto_semaforico". All fields are combined with a logical 'AND'. */
export type Sis__Impianto_Semaforico_Bool_Exp = {
  _and?: Maybe<Array<Sis__Impianto_Semaforico_Bool_Exp>>;
  _not?: Maybe<Sis__Impianto_Semaforico_Bool_Exp>;
  _or?: Maybe<Array<Sis__Impianto_Semaforico_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._impianto_semaforico" */
export enum Sis__Impianto_Semaforico_Constraint {
  /** unique or primary key constraint */
  ImpiantoSemaforicoPkey = '_impianto_semaforico_pkey'
}

/** input type for incrementing numeric columns in table "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Impianto_Semaforico_Max_Fields = {
  __typename?: 'sis__impianto_semaforico_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Impianto_Semaforico_Min_Fields = {
  __typename?: 'sis__impianto_semaforico_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Mutation_Response = {
  __typename?: 'sis__impianto_semaforico_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Impianto_Semaforico>;
};

/** input type for inserting object relation for remote table "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Obj_Rel_Insert_Input = {
  data: Sis__Impianto_Semaforico_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Impianto_Semaforico_On_Conflict>;
};

/** on_conflict condition type for table "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_On_Conflict = {
  constraint: Sis__Impianto_Semaforico_Constraint;
  update_columns?: Array<Sis__Impianto_Semaforico_Update_Column>;
  where?: Maybe<Sis__Impianto_Semaforico_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._impianto_semaforico". */
export type Sis__Impianto_Semaforico_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__impianto_semaforico */
export type Sis__Impianto_Semaforico_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._impianto_semaforico" */
export enum Sis__Impianto_Semaforico_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._impianto_semaforico" */
export type Sis__Impianto_Semaforico_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Impianto_Semaforico_Stddev_Fields = {
  __typename?: 'sis__impianto_semaforico_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Impianto_Semaforico_Stddev_Pop_Fields = {
  __typename?: 'sis__impianto_semaforico_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Impianto_Semaforico_Stddev_Samp_Fields = {
  __typename?: 'sis__impianto_semaforico_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Impianto_Semaforico_Sum_Fields = {
  __typename?: 'sis__impianto_semaforico_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._impianto_semaforico" */
export enum Sis__Impianto_Semaforico_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Impianto_Semaforico_Var_Pop_Fields = {
  __typename?: 'sis__impianto_semaforico_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Impianto_Semaforico_Var_Samp_Fields = {
  __typename?: 'sis__impianto_semaforico_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Impianto_Semaforico_Variance_Fields = {
  __typename?: 'sis__impianto_semaforico_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione = {
  __typename?: 'sis__infortunato_informazione';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Aggregate = {
  __typename?: 'sis__infortunato_informazione_aggregate';
  aggregate?: Maybe<Sis__Infortunato_Informazione_Aggregate_Fields>;
  nodes: Array<Sis__Infortunato_Informazione>;
};

/** aggregate fields of "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Aggregate_Fields = {
  __typename?: 'sis__infortunato_informazione_aggregate_fields';
  avg?: Maybe<Sis__Infortunato_Informazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Infortunato_Informazione_Max_Fields>;
  min?: Maybe<Sis__Infortunato_Informazione_Min_Fields>;
  stddev?: Maybe<Sis__Infortunato_Informazione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Infortunato_Informazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Infortunato_Informazione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Infortunato_Informazione_Sum_Fields>;
  var_pop?: Maybe<Sis__Infortunato_Informazione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Infortunato_Informazione_Var_Samp_Fields>;
  variance?: Maybe<Sis__Infortunato_Informazione_Variance_Fields>;
};


/** aggregate fields of "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Infortunato_Informazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Infortunato_Informazione_Avg_Fields = {
  __typename?: 'sis__infortunato_informazione_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._infortunato_informazione". All fields are combined with a logical 'AND'. */
export type Sis__Infortunato_Informazione_Bool_Exp = {
  _and?: Maybe<Array<Sis__Infortunato_Informazione_Bool_Exp>>;
  _not?: Maybe<Sis__Infortunato_Informazione_Bool_Exp>;
  _or?: Maybe<Array<Sis__Infortunato_Informazione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._infortunato_informazione" */
export enum Sis__Infortunato_Informazione_Constraint {
  /** unique or primary key constraint */
  InfortunatoInformazionePkey = '_infortunato_informazione_pkey'
}

/** input type for incrementing numeric columns in table "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Infortunato_Informazione_Max_Fields = {
  __typename?: 'sis__infortunato_informazione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Infortunato_Informazione_Min_Fields = {
  __typename?: 'sis__infortunato_informazione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Mutation_Response = {
  __typename?: 'sis__infortunato_informazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Infortunato_Informazione>;
};

/** input type for inserting object relation for remote table "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Obj_Rel_Insert_Input = {
  data: Sis__Infortunato_Informazione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Infortunato_Informazione_On_Conflict>;
};

/** on_conflict condition type for table "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_On_Conflict = {
  constraint: Sis__Infortunato_Informazione_Constraint;
  update_columns?: Array<Sis__Infortunato_Informazione_Update_Column>;
  where?: Maybe<Sis__Infortunato_Informazione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._infortunato_informazione". */
export type Sis__Infortunato_Informazione_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__infortunato_informazione */
export type Sis__Infortunato_Informazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._infortunato_informazione" */
export enum Sis__Infortunato_Informazione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._infortunato_informazione" */
export type Sis__Infortunato_Informazione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Infortunato_Informazione_Stddev_Fields = {
  __typename?: 'sis__infortunato_informazione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Infortunato_Informazione_Stddev_Pop_Fields = {
  __typename?: 'sis__infortunato_informazione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Infortunato_Informazione_Stddev_Samp_Fields = {
  __typename?: 'sis__infortunato_informazione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Infortunato_Informazione_Sum_Fields = {
  __typename?: 'sis__infortunato_informazione_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._infortunato_informazione" */
export enum Sis__Infortunato_Informazione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Infortunato_Informazione_Var_Pop_Fields = {
  __typename?: 'sis__infortunato_informazione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Infortunato_Informazione_Var_Samp_Fields = {
  __typename?: 'sis__infortunato_informazione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Infortunato_Informazione_Variance_Fields = {
  __typename?: 'sis__infortunato_informazione_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato = {
  __typename?: 'sis__intortunato_tasportato';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Aggregate = {
  __typename?: 'sis__intortunato_tasportato_aggregate';
  aggregate?: Maybe<Sis__Intortunato_Tasportato_Aggregate_Fields>;
  nodes: Array<Sis__Intortunato_Tasportato>;
};

/** aggregate fields of "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Aggregate_Fields = {
  __typename?: 'sis__intortunato_tasportato_aggregate_fields';
  avg?: Maybe<Sis__Intortunato_Tasportato_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Intortunato_Tasportato_Max_Fields>;
  min?: Maybe<Sis__Intortunato_Tasportato_Min_Fields>;
  stddev?: Maybe<Sis__Intortunato_Tasportato_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Intortunato_Tasportato_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Intortunato_Tasportato_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Intortunato_Tasportato_Sum_Fields>;
  var_pop?: Maybe<Sis__Intortunato_Tasportato_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Intortunato_Tasportato_Var_Samp_Fields>;
  variance?: Maybe<Sis__Intortunato_Tasportato_Variance_Fields>;
};


/** aggregate fields of "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Intortunato_Tasportato_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Intortunato_Tasportato_Avg_Fields = {
  __typename?: 'sis__intortunato_tasportato_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._intortunato_tasportato". All fields are combined with a logical 'AND'. */
export type Sis__Intortunato_Tasportato_Bool_Exp = {
  _and?: Maybe<Array<Sis__Intortunato_Tasportato_Bool_Exp>>;
  _not?: Maybe<Sis__Intortunato_Tasportato_Bool_Exp>;
  _or?: Maybe<Array<Sis__Intortunato_Tasportato_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._intortunato_tasportato" */
export enum Sis__Intortunato_Tasportato_Constraint {
  /** unique or primary key constraint */
  IntortunatoTasportatoPkey = '_intortunato_tasportato_pkey'
}

/** input type for incrementing numeric columns in table "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Intortunato_Tasportato_Max_Fields = {
  __typename?: 'sis__intortunato_tasportato_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Intortunato_Tasportato_Min_Fields = {
  __typename?: 'sis__intortunato_tasportato_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Mutation_Response = {
  __typename?: 'sis__intortunato_tasportato_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Intortunato_Tasportato>;
};

/** input type for inserting object relation for remote table "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Obj_Rel_Insert_Input = {
  data: Sis__Intortunato_Tasportato_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Intortunato_Tasportato_On_Conflict>;
};

/** on_conflict condition type for table "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_On_Conflict = {
  constraint: Sis__Intortunato_Tasportato_Constraint;
  update_columns?: Array<Sis__Intortunato_Tasportato_Update_Column>;
  where?: Maybe<Sis__Intortunato_Tasportato_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._intortunato_tasportato". */
export type Sis__Intortunato_Tasportato_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__intortunato_tasportato */
export type Sis__Intortunato_Tasportato_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._intortunato_tasportato" */
export enum Sis__Intortunato_Tasportato_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._intortunato_tasportato" */
export type Sis__Intortunato_Tasportato_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Intortunato_Tasportato_Stddev_Fields = {
  __typename?: 'sis__intortunato_tasportato_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Intortunato_Tasportato_Stddev_Pop_Fields = {
  __typename?: 'sis__intortunato_tasportato_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Intortunato_Tasportato_Stddev_Samp_Fields = {
  __typename?: 'sis__intortunato_tasportato_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Intortunato_Tasportato_Sum_Fields = {
  __typename?: 'sis__intortunato_tasportato_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._intortunato_tasportato" */
export enum Sis__Intortunato_Tasportato_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Intortunato_Tasportato_Var_Pop_Fields = {
  __typename?: 'sis__intortunato_tasportato_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Intortunato_Tasportato_Var_Samp_Fields = {
  __typename?: 'sis__intortunato_tasportato_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Intortunato_Tasportato_Variance_Fields = {
  __typename?: 'sis__intortunato_tasportato_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro = {
  __typename?: 'sis__localizzazione_altro';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Aggregate = {
  __typename?: 'sis__localizzazione_altro_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Altro_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Altro>;
};

/** aggregate fields of "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_altro_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Altro_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Altro_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Altro_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Altro_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Altro_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Altro_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Altro_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Altro_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Altro_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Altro_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Altro_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Altro_Avg_Fields = {
  __typename?: 'sis__localizzazione_altro_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_altro". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Altro_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Altro_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Altro_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Altro_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_altro" */
export enum Sis__Localizzazione_Altro_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneAltroPkey = '_localizzazione_altro_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Altro_Max_Fields = {
  __typename?: 'sis__localizzazione_altro_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Altro_Min_Fields = {
  __typename?: 'sis__localizzazione_altro_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Mutation_Response = {
  __typename?: 'sis__localizzazione_altro_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Altro>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Altro_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Altro_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_On_Conflict = {
  constraint: Sis__Localizzazione_Altro_Constraint;
  update_columns?: Array<Sis__Localizzazione_Altro_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Altro_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_altro". */
export type Sis__Localizzazione_Altro_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_altro */
export type Sis__Localizzazione_Altro_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_altro" */
export enum Sis__Localizzazione_Altro_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_altro" */
export type Sis__Localizzazione_Altro_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Altro_Stddev_Fields = {
  __typename?: 'sis__localizzazione_altro_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Altro_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_altro_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Altro_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_altro_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Altro_Sum_Fields = {
  __typename?: 'sis__localizzazione_altro_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_altro" */
export enum Sis__Localizzazione_Altro_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Altro_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_altro_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Altro_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_altro_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Altro_Variance_Fields = {
  __typename?: 'sis__localizzazione_altro_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Aggregate = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Condizioni_Atmosferiche>;
};

/** aggregate fields of "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Avg_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_condizioni_atmosferiche". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_condizioni_atmosferiche" */
export enum Sis__Localizzazione_Condizioni_Atmosferiche_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneCondizioniAtmosferichePkey = '_localizzazione_condizioni_atmosferiche_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Max_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Min_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Mutation_Response = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Condizioni_Atmosferiche>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Condizioni_Atmosferiche_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_On_Conflict = {
  constraint: Sis__Localizzazione_Condizioni_Atmosferiche_Constraint;
  update_columns?: Array<Sis__Localizzazione_Condizioni_Atmosferiche_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_condizioni_atmosferiche". */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_condizioni_atmosferiche */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_condizioni_atmosferiche" */
export enum Sis__Localizzazione_Condizioni_Atmosferiche_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_condizioni_atmosferiche" */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Stddev_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Sum_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_condizioni_atmosferiche" */
export enum Sis__Localizzazione_Condizioni_Atmosferiche_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Condizioni_Atmosferiche_Variance_Fields = {
  __typename?: 'sis__localizzazione_condizioni_atmosferiche_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico = {
  __typename?: 'sis__localizzazione_condizioni_traffico';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Aggregate = {
  __typename?: 'sis__localizzazione_condizioni_traffico_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Condizioni_Traffico>;
};

/** aggregate fields of "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Avg_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_condizioni_traffico". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Condizioni_Traffico_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_condizioni_traffico" */
export enum Sis__Localizzazione_Condizioni_Traffico_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneCondizioniTrafficoPkey = '_localizzazione_condizioni_traffico_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Max_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Min_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Mutation_Response = {
  __typename?: 'sis__localizzazione_condizioni_traffico_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Condizioni_Traffico>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Condizioni_Traffico_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Condizioni_Traffico_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_On_Conflict = {
  constraint: Sis__Localizzazione_Condizioni_Traffico_Constraint;
  update_columns?: Array<Sis__Localizzazione_Condizioni_Traffico_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_condizioni_traffico". */
export type Sis__Localizzazione_Condizioni_Traffico_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_condizioni_traffico */
export type Sis__Localizzazione_Condizioni_Traffico_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_condizioni_traffico" */
export enum Sis__Localizzazione_Condizioni_Traffico_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_condizioni_traffico" */
export type Sis__Localizzazione_Condizioni_Traffico_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Stddev_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Sum_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_condizioni_traffico" */
export enum Sis__Localizzazione_Condizioni_Traffico_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Condizioni_Traffico_Variance_Fields = {
  __typename?: 'sis__localizzazione_condizioni_traffico_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato = {
  __typename?: 'sis__localizzazione_extra_abitato';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Aggregate = {
  __typename?: 'sis__localizzazione_extra_abitato_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Extra_Abitato_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Extra_Abitato>;
};

/** aggregate fields of "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Extra_Abitato_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Extra_Abitato_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Extra_Abitato_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Extra_Abitato_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Extra_Abitato_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Extra_Abitato_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Extra_Abitato_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Extra_Abitato_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Extra_Abitato_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Extra_Abitato_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Extra_Abitato_Avg_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_extra_abitato". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Extra_Abitato_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Extra_Abitato_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_extra_abitato" */
export enum Sis__Localizzazione_Extra_Abitato_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneExtraAbitatoPkey = '_localizzazione_extra_abitato_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Extra_Abitato_Max_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Extra_Abitato_Min_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Mutation_Response = {
  __typename?: 'sis__localizzazione_extra_abitato_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Extra_Abitato>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Extra_Abitato_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Extra_Abitato_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_On_Conflict = {
  constraint: Sis__Localizzazione_Extra_Abitato_Constraint;
  update_columns?: Array<Sis__Localizzazione_Extra_Abitato_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Extra_Abitato_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_extra_abitato". */
export type Sis__Localizzazione_Extra_Abitato_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_extra_abitato */
export type Sis__Localizzazione_Extra_Abitato_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_extra_abitato" */
export enum Sis__Localizzazione_Extra_Abitato_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_extra_abitato" */
export type Sis__Localizzazione_Extra_Abitato_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Extra_Abitato_Stddev_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Extra_Abitato_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Extra_Abitato_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Extra_Abitato_Sum_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_extra_abitato" */
export enum Sis__Localizzazione_Extra_Abitato_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Extra_Abitato_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Extra_Abitato_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Extra_Abitato_Variance_Fields = {
  __typename?: 'sis__localizzazione_extra_abitato_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale = {
  __typename?: 'sis__localizzazione_fondo_stradale';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Aggregate = {
  __typename?: 'sis__localizzazione_fondo_stradale_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Fondo_Stradale_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Fondo_Stradale>;
};

/** aggregate fields of "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Fondo_Stradale_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Fondo_Stradale_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Fondo_Stradale_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Fondo_Stradale_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Fondo_Stradale_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Fondo_Stradale_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Fondo_Stradale_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Fondo_Stradale_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Fondo_Stradale_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Fondo_Stradale_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Fondo_Stradale_Avg_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_fondo_stradale". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Fondo_Stradale_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_fondo_stradale" */
export enum Sis__Localizzazione_Fondo_Stradale_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneFondoStradalePkey = '_localizzazione_fondo_stradale_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Fondo_Stradale_Max_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Fondo_Stradale_Min_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Mutation_Response = {
  __typename?: 'sis__localizzazione_fondo_stradale_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Fondo_Stradale>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Fondo_Stradale_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Fondo_Stradale_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_On_Conflict = {
  constraint: Sis__Localizzazione_Fondo_Stradale_Constraint;
  update_columns?: Array<Sis__Localizzazione_Fondo_Stradale_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_fondo_stradale". */
export type Sis__Localizzazione_Fondo_Stradale_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_fondo_stradale */
export type Sis__Localizzazione_Fondo_Stradale_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_fondo_stradale" */
export enum Sis__Localizzazione_Fondo_Stradale_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_fondo_stradale" */
export type Sis__Localizzazione_Fondo_Stradale_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Fondo_Stradale_Stddev_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Fondo_Stradale_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Fondo_Stradale_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Fondo_Stradale_Sum_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_fondo_stradale" */
export enum Sis__Localizzazione_Fondo_Stradale_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Fondo_Stradale_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Fondo_Stradale_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Fondo_Stradale_Variance_Fields = {
  __typename?: 'sis__localizzazione_fondo_stradale_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione = {
  __typename?: 'sis__localizzazione_illuminazione';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Aggregate = {
  __typename?: 'sis__localizzazione_illuminazione_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Illuminazione_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Illuminazione>;
};

/** aggregate fields of "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Illuminazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Illuminazione_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Illuminazione_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Illuminazione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Illuminazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Illuminazione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Illuminazione_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Illuminazione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Illuminazione_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Illuminazione_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Illuminazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Illuminazione_Avg_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_illuminazione". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Illuminazione_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Illuminazione_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Illuminazione_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Illuminazione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_illuminazione" */
export enum Sis__Localizzazione_Illuminazione_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneIlluminazionePkey = '_localizzazione_illuminazione_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Illuminazione_Max_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Illuminazione_Min_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Mutation_Response = {
  __typename?: 'sis__localizzazione_illuminazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Illuminazione>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Illuminazione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Illuminazione_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_On_Conflict = {
  constraint: Sis__Localizzazione_Illuminazione_Constraint;
  update_columns?: Array<Sis__Localizzazione_Illuminazione_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Illuminazione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_illuminazione". */
export type Sis__Localizzazione_Illuminazione_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_illuminazione */
export type Sis__Localizzazione_Illuminazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_illuminazione" */
export enum Sis__Localizzazione_Illuminazione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_illuminazione" */
export type Sis__Localizzazione_Illuminazione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Illuminazione_Stddev_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Illuminazione_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Illuminazione_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Illuminazione_Sum_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_illuminazione" */
export enum Sis__Localizzazione_Illuminazione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Illuminazione_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Illuminazione_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Illuminazione_Variance_Fields = {
  __typename?: 'sis__localizzazione_illuminazione_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada = {
  __typename?: 'sis__localizzazione_particolarita_strada';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Aggregate = {
  __typename?: 'sis__localizzazione_particolarita_strada_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Particolarita_Strada_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Particolarita_Strada>;
};

/** aggregate fields of "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Particolarita_Strada_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Particolarita_Strada_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Particolarita_Strada_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Particolarita_Strada_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Particolarita_Strada_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Particolarita_Strada_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Particolarita_Strada_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Particolarita_Strada_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Particolarita_Strada_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Particolarita_Strada_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Particolarita_Strada_Avg_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_particolarita_strada". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Particolarita_Strada_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_particolarita_strada" */
export enum Sis__Localizzazione_Particolarita_Strada_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneParticolaritaStradaPkey = '_localizzazione_particolarita_strada_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Particolarita_Strada_Max_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Particolarita_Strada_Min_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Mutation_Response = {
  __typename?: 'sis__localizzazione_particolarita_strada_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Particolarita_Strada>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Particolarita_Strada_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Particolarita_Strada_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_On_Conflict = {
  constraint: Sis__Localizzazione_Particolarita_Strada_Constraint;
  update_columns?: Array<Sis__Localizzazione_Particolarita_Strada_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_particolarita_strada". */
export type Sis__Localizzazione_Particolarita_Strada_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_particolarita_strada */
export type Sis__Localizzazione_Particolarita_Strada_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_particolarita_strada" */
export enum Sis__Localizzazione_Particolarita_Strada_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_particolarita_strada" */
export type Sis__Localizzazione_Particolarita_Strada_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Particolarita_Strada_Stddev_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Particolarita_Strada_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Particolarita_Strada_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Particolarita_Strada_Sum_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_particolarita_strada" */
export enum Sis__Localizzazione_Particolarita_Strada_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Particolarita_Strada_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Particolarita_Strada_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Particolarita_Strada_Variance_Fields = {
  __typename?: 'sis__localizzazione_particolarita_strada_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione = {
  __typename?: 'sis__localizzazione_pavimentazione';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Aggregate = {
  __typename?: 'sis__localizzazione_pavimentazione_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Pavimentazione_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Pavimentazione>;
};

/** aggregate fields of "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Pavimentazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Pavimentazione_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Pavimentazione_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Pavimentazione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Pavimentazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Pavimentazione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Pavimentazione_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Pavimentazione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Pavimentazione_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Pavimentazione_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Pavimentazione_Avg_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_pavimentazione". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Pavimentazione_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Pavimentazione_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_pavimentazione" */
export enum Sis__Localizzazione_Pavimentazione_Constraint {
  /** unique or primary key constraint */
  LocalizzazionePavimentazionePkey = '_localizzazione_pavimentazione_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Pavimentazione_Max_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Pavimentazione_Min_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Mutation_Response = {
  __typename?: 'sis__localizzazione_pavimentazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Pavimentazione>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Pavimentazione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Pavimentazione_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_On_Conflict = {
  constraint: Sis__Localizzazione_Pavimentazione_Constraint;
  update_columns?: Array<Sis__Localizzazione_Pavimentazione_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Pavimentazione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_pavimentazione". */
export type Sis__Localizzazione_Pavimentazione_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_pavimentazione */
export type Sis__Localizzazione_Pavimentazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_pavimentazione" */
export enum Sis__Localizzazione_Pavimentazione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_pavimentazione" */
export type Sis__Localizzazione_Pavimentazione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Pavimentazione_Stddev_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Pavimentazione_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Pavimentazione_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Pavimentazione_Sum_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_pavimentazione" */
export enum Sis__Localizzazione_Pavimentazione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Pavimentazione_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Pavimentazione_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Pavimentazione_Variance_Fields = {
  __typename?: 'sis__localizzazione_pavimentazione_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada = {
  __typename?: 'sis__localizzazione_tipo_strada';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
};

/** aggregated selection of "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Aggregate = {
  __typename?: 'sis__localizzazione_tipo_strada_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Tipo_Strada_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Tipo_Strada>;
};

/** aggregate fields of "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Tipo_Strada_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Tipo_Strada_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Tipo_Strada_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Tipo_Strada_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Tipo_Strada_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Tipo_Strada_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Tipo_Strada_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Tipo_Strada_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Tipo_Strada_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Tipo_Strada_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Tipo_Strada_Avg_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_tipo_strada". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Tipo_Strada_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Tipo_Strada_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_tipo_strada" */
export enum Sis__Localizzazione_Tipo_Strada_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneTipoStradaPkey = '_localizzazione_tipo_strada_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Tipo_Strada_Max_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Tipo_Strada_Min_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Mutation_Response = {
  __typename?: 'sis__localizzazione_tipo_strada_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Tipo_Strada>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Tipo_Strada_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Tipo_Strada_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_On_Conflict = {
  constraint: Sis__Localizzazione_Tipo_Strada_Constraint;
  update_columns?: Array<Sis__Localizzazione_Tipo_Strada_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Tipo_Strada_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_tipo_strada". */
export type Sis__Localizzazione_Tipo_Strada_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_tipo_strada */
export type Sis__Localizzazione_Tipo_Strada_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_tipo_strada" */
export enum Sis__Localizzazione_Tipo_Strada_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome'
}

/** input type for updating data in table "sis._localizzazione_tipo_strada" */
export type Sis__Localizzazione_Tipo_Strada_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Tipo_Strada_Stddev_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Tipo_Strada_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Tipo_Strada_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Tipo_Strada_Sum_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_tipo_strada" */
export enum Sis__Localizzazione_Tipo_Strada_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Tipo_Strada_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Tipo_Strada_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Tipo_Strada_Variance_Fields = {
  __typename?: 'sis__localizzazione_tipo_strada_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita = {
  __typename?: 'sis__localizzazione_visibilita';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Aggregate = {
  __typename?: 'sis__localizzazione_visibilita_aggregate';
  aggregate?: Maybe<Sis__Localizzazione_Visibilita_Aggregate_Fields>;
  nodes: Array<Sis__Localizzazione_Visibilita>;
};

/** aggregate fields of "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Aggregate_Fields = {
  __typename?: 'sis__localizzazione_visibilita_aggregate_fields';
  avg?: Maybe<Sis__Localizzazione_Visibilita_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Localizzazione_Visibilita_Max_Fields>;
  min?: Maybe<Sis__Localizzazione_Visibilita_Min_Fields>;
  stddev?: Maybe<Sis__Localizzazione_Visibilita_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Localizzazione_Visibilita_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Localizzazione_Visibilita_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Localizzazione_Visibilita_Sum_Fields>;
  var_pop?: Maybe<Sis__Localizzazione_Visibilita_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Localizzazione_Visibilita_Var_Samp_Fields>;
  variance?: Maybe<Sis__Localizzazione_Visibilita_Variance_Fields>;
};


/** aggregate fields of "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Localizzazione_Visibilita_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Localizzazione_Visibilita_Avg_Fields = {
  __typename?: 'sis__localizzazione_visibilita_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._localizzazione_visibilita". All fields are combined with a logical 'AND'. */
export type Sis__Localizzazione_Visibilita_Bool_Exp = {
  _and?: Maybe<Array<Sis__Localizzazione_Visibilita_Bool_Exp>>;
  _not?: Maybe<Sis__Localizzazione_Visibilita_Bool_Exp>;
  _or?: Maybe<Array<Sis__Localizzazione_Visibilita_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._localizzazione_visibilita" */
export enum Sis__Localizzazione_Visibilita_Constraint {
  /** unique or primary key constraint */
  LocalizzazioneVisibilitaPkey = '_localizzazione_visibilita_pkey'
}

/** input type for incrementing numeric columns in table "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Localizzazione_Visibilita_Max_Fields = {
  __typename?: 'sis__localizzazione_visibilita_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Localizzazione_Visibilita_Min_Fields = {
  __typename?: 'sis__localizzazione_visibilita_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Mutation_Response = {
  __typename?: 'sis__localizzazione_visibilita_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Localizzazione_Visibilita>;
};

/** input type for inserting object relation for remote table "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Obj_Rel_Insert_Input = {
  data: Sis__Localizzazione_Visibilita_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Localizzazione_Visibilita_On_Conflict>;
};

/** on_conflict condition type for table "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_On_Conflict = {
  constraint: Sis__Localizzazione_Visibilita_Constraint;
  update_columns?: Array<Sis__Localizzazione_Visibilita_Update_Column>;
  where?: Maybe<Sis__Localizzazione_Visibilita_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._localizzazione_visibilita". */
export type Sis__Localizzazione_Visibilita_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__localizzazione_visibilita */
export type Sis__Localizzazione_Visibilita_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._localizzazione_visibilita" */
export enum Sis__Localizzazione_Visibilita_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._localizzazione_visibilita" */
export type Sis__Localizzazione_Visibilita_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Localizzazione_Visibilita_Stddev_Fields = {
  __typename?: 'sis__localizzazione_visibilita_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Localizzazione_Visibilita_Stddev_Pop_Fields = {
  __typename?: 'sis__localizzazione_visibilita_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Localizzazione_Visibilita_Stddev_Samp_Fields = {
  __typename?: 'sis__localizzazione_visibilita_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Localizzazione_Visibilita_Sum_Fields = {
  __typename?: 'sis__localizzazione_visibilita_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._localizzazione_visibilita" */
export enum Sis__Localizzazione_Visibilita_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Localizzazione_Visibilita_Var_Pop_Fields = {
  __typename?: 'sis__localizzazione_visibilita_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Localizzazione_Visibilita_Var_Samp_Fields = {
  __typename?: 'sis__localizzazione_visibilita_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Localizzazione_Visibilita_Variance_Fields = {
  __typename?: 'sis__localizzazione_visibilita_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._natura_incidente" */
export type Sis__Natura_Incidente = {
  __typename?: 'sis__natura_incidente';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._natura_incidente" */
export type Sis__Natura_Incidente_Aggregate = {
  __typename?: 'sis__natura_incidente_aggregate';
  aggregate?: Maybe<Sis__Natura_Incidente_Aggregate_Fields>;
  nodes: Array<Sis__Natura_Incidente>;
};

/** aggregate fields of "sis._natura_incidente" */
export type Sis__Natura_Incidente_Aggregate_Fields = {
  __typename?: 'sis__natura_incidente_aggregate_fields';
  avg?: Maybe<Sis__Natura_Incidente_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Natura_Incidente_Max_Fields>;
  min?: Maybe<Sis__Natura_Incidente_Min_Fields>;
  stddev?: Maybe<Sis__Natura_Incidente_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Natura_Incidente_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Natura_Incidente_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Natura_Incidente_Sum_Fields>;
  var_pop?: Maybe<Sis__Natura_Incidente_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Natura_Incidente_Var_Samp_Fields>;
  variance?: Maybe<Sis__Natura_Incidente_Variance_Fields>;
};


/** aggregate fields of "sis._natura_incidente" */
export type Sis__Natura_Incidente_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Natura_Incidente_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Natura_Incidente_Avg_Fields = {
  __typename?: 'sis__natura_incidente_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._natura_incidente". All fields are combined with a logical 'AND'. */
export type Sis__Natura_Incidente_Bool_Exp = {
  _and?: Maybe<Array<Sis__Natura_Incidente_Bool_Exp>>;
  _not?: Maybe<Sis__Natura_Incidente_Bool_Exp>;
  _or?: Maybe<Array<Sis__Natura_Incidente_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._natura_incidente" */
export enum Sis__Natura_Incidente_Constraint {
  /** unique or primary key constraint */
  NaturaIncidentePkey = '_natura_incidente_pkey'
}

/** input type for incrementing numeric columns in table "sis._natura_incidente" */
export type Sis__Natura_Incidente_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._natura_incidente" */
export type Sis__Natura_Incidente_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Natura_Incidente_Max_Fields = {
  __typename?: 'sis__natura_incidente_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Natura_Incidente_Min_Fields = {
  __typename?: 'sis__natura_incidente_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._natura_incidente" */
export type Sis__Natura_Incidente_Mutation_Response = {
  __typename?: 'sis__natura_incidente_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Natura_Incidente>;
};

/** input type for inserting object relation for remote table "sis._natura_incidente" */
export type Sis__Natura_Incidente_Obj_Rel_Insert_Input = {
  data: Sis__Natura_Incidente_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Natura_Incidente_On_Conflict>;
};

/** on_conflict condition type for table "sis._natura_incidente" */
export type Sis__Natura_Incidente_On_Conflict = {
  constraint: Sis__Natura_Incidente_Constraint;
  update_columns?: Array<Sis__Natura_Incidente_Update_Column>;
  where?: Maybe<Sis__Natura_Incidente_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._natura_incidente". */
export type Sis__Natura_Incidente_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__natura_incidente */
export type Sis__Natura_Incidente_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._natura_incidente" */
export enum Sis__Natura_Incidente_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._natura_incidente" */
export type Sis__Natura_Incidente_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Natura_Incidente_Stddev_Fields = {
  __typename?: 'sis__natura_incidente_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Natura_Incidente_Stddev_Pop_Fields = {
  __typename?: 'sis__natura_incidente_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Natura_Incidente_Stddev_Samp_Fields = {
  __typename?: 'sis__natura_incidente_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Natura_Incidente_Sum_Fields = {
  __typename?: 'sis__natura_incidente_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._natura_incidente" */
export enum Sis__Natura_Incidente_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Natura_Incidente_Var_Pop_Fields = {
  __typename?: 'sis__natura_incidente_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Natura_Incidente_Var_Samp_Fields = {
  __typename?: 'sis__natura_incidente_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Natura_Incidente_Variance_Fields = {
  __typename?: 'sis__natura_incidente_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._patente_categoria" */
export type Sis__Patente_Categoria = {
  __typename?: 'sis__patente_categoria';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  ordine?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._patente_categoria" */
export type Sis__Patente_Categoria_Aggregate = {
  __typename?: 'sis__patente_categoria_aggregate';
  aggregate?: Maybe<Sis__Patente_Categoria_Aggregate_Fields>;
  nodes: Array<Sis__Patente_Categoria>;
};

/** aggregate fields of "sis._patente_categoria" */
export type Sis__Patente_Categoria_Aggregate_Fields = {
  __typename?: 'sis__patente_categoria_aggregate_fields';
  avg?: Maybe<Sis__Patente_Categoria_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Patente_Categoria_Max_Fields>;
  min?: Maybe<Sis__Patente_Categoria_Min_Fields>;
  stddev?: Maybe<Sis__Patente_Categoria_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Patente_Categoria_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Patente_Categoria_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Patente_Categoria_Sum_Fields>;
  var_pop?: Maybe<Sis__Patente_Categoria_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Patente_Categoria_Var_Samp_Fields>;
  variance?: Maybe<Sis__Patente_Categoria_Variance_Fields>;
};


/** aggregate fields of "sis._patente_categoria" */
export type Sis__Patente_Categoria_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Patente_Categoria_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Patente_Categoria_Avg_Fields = {
  __typename?: 'sis__patente_categoria_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._patente_categoria". All fields are combined with a logical 'AND'. */
export type Sis__Patente_Categoria_Bool_Exp = {
  _and?: Maybe<Array<Sis__Patente_Categoria_Bool_Exp>>;
  _not?: Maybe<Sis__Patente_Categoria_Bool_Exp>;
  _or?: Maybe<Array<Sis__Patente_Categoria_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  ordine?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._patente_categoria" */
export enum Sis__Patente_Categoria_Constraint {
  /** unique or primary key constraint */
  PatenteCategoriaPkey = '_patente_categoria_pkey'
}

/** input type for incrementing numeric columns in table "sis._patente_categoria" */
export type Sis__Patente_Categoria_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._patente_categoria" */
export type Sis__Patente_Categoria_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  ordine?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Patente_Categoria_Max_Fields = {
  __typename?: 'sis__patente_categoria_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  ordine?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Patente_Categoria_Min_Fields = {
  __typename?: 'sis__patente_categoria_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  ordine?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._patente_categoria" */
export type Sis__Patente_Categoria_Mutation_Response = {
  __typename?: 'sis__patente_categoria_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Patente_Categoria>;
};

/** input type for inserting object relation for remote table "sis._patente_categoria" */
export type Sis__Patente_Categoria_Obj_Rel_Insert_Input = {
  data: Sis__Patente_Categoria_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Patente_Categoria_On_Conflict>;
};

/** on_conflict condition type for table "sis._patente_categoria" */
export type Sis__Patente_Categoria_On_Conflict = {
  constraint: Sis__Patente_Categoria_Constraint;
  update_columns?: Array<Sis__Patente_Categoria_Update_Column>;
  where?: Maybe<Sis__Patente_Categoria_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._patente_categoria". */
export type Sis__Patente_Categoria_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  ordine?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__patente_categoria */
export type Sis__Patente_Categoria_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._patente_categoria" */
export enum Sis__Patente_Categoria_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Ordine = 'ordine',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._patente_categoria" */
export type Sis__Patente_Categoria_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  ordine?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Patente_Categoria_Stddev_Fields = {
  __typename?: 'sis__patente_categoria_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Patente_Categoria_Stddev_Pop_Fields = {
  __typename?: 'sis__patente_categoria_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Patente_Categoria_Stddev_Samp_Fields = {
  __typename?: 'sis__patente_categoria_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Patente_Categoria_Sum_Fields = {
  __typename?: 'sis__patente_categoria_sum_fields';
  id?: Maybe<Scalars['Int']>;
  ordine?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._patente_categoria" */
export enum Sis__Patente_Categoria_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Ordine = 'ordine',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Patente_Categoria_Var_Pop_Fields = {
  __typename?: 'sis__patente_categoria_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Patente_Categoria_Var_Samp_Fields = {
  __typename?: 'sis__patente_categoria_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Patente_Categoria_Variance_Fields = {
  __typename?: 'sis__patente_categoria_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ordine?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Aggregate = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_aggregate';
  aggregate?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Aggregate_Fields>;
  nodes: Array<Sis__Posizione_Finale_Veicolo_Carreggiata>;
};

/** aggregate fields of "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Aggregate_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_aggregate_fields';
  avg?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Max_Fields>;
  min?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Min_Fields>;
  stddev?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Sum_Fields>;
  var_pop?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Var_Samp_Fields>;
  variance?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Variance_Fields>;
};


/** aggregate fields of "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Avg_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._posizione_finale_veicolo_carreggiata". All fields are combined with a logical 'AND'. */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp = {
  _and?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>>;
  _not?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
  _or?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._posizione_finale_veicolo_carreggiata" */
export enum Sis__Posizione_Finale_Veicolo_Carreggiata_Constraint {
  /** unique or primary key constraint */
  PosizioneFinaleVeicoloCarreggiataPkey = '_posizione_finale_veicolo_carreggiata_pkey'
}

/** input type for incrementing numeric columns in table "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Max_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Min_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Mutation_Response = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Posizione_Finale_Veicolo_Carreggiata>;
};

/** input type for inserting object relation for remote table "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Obj_Rel_Insert_Input = {
  data: Sis__Posizione_Finale_Veicolo_Carreggiata_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_On_Conflict>;
};

/** on_conflict condition type for table "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_On_Conflict = {
  constraint: Sis__Posizione_Finale_Veicolo_Carreggiata_Constraint;
  update_columns?: Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Update_Column>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._posizione_finale_veicolo_carreggiata". */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__posizione_finale_veicolo_carreggiata */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._posizione_finale_veicolo_carreggiata" */
export enum Sis__Posizione_Finale_Veicolo_Carreggiata_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._posizione_finale_veicolo_carreggiata" */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Stddev_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Stddev_Pop_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Stddev_Samp_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Sum_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._posizione_finale_veicolo_carreggiata" */
export enum Sis__Posizione_Finale_Veicolo_Carreggiata_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Var_Pop_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Var_Samp_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Posizione_Finale_Veicolo_Carreggiata_Variance_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_carreggiata_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Aggregate = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_aggregate';
  aggregate?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_Fields>;
  nodes: Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
};

/** aggregate fields of "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_aggregate_fields';
  avg?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Max_Fields>;
  min?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Min_Fields>;
  stddev?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Sum_Fields>;
  var_pop?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Var_Samp_Fields>;
  variance?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Variance_Fields>;
};


/** aggregate fields of "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Avg_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._posizione_finale_veicolo_fuori_sede". All fields are combined with a logical 'AND'. */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp = {
  _and?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>>;
  _not?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
  _or?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._posizione_finale_veicolo_fuori_sede" */
export enum Sis__Posizione_Finale_Veicolo_Fuori_Sede_Constraint {
  /** unique or primary key constraint */
  PosizioneFinaleVeicoloFuoriSedePkey = '_posizione_finale_veicolo_fuori_sede_pkey'
}

/** input type for incrementing numeric columns in table "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Max_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Min_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
};

/** input type for inserting object relation for remote table "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Obj_Rel_Insert_Input = {
  data: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict>;
};

/** on_conflict condition type for table "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict = {
  constraint: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Constraint;
  update_columns?: Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Update_Column>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._posizione_finale_veicolo_fuori_sede". */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__posizione_finale_veicolo_fuori_sede */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._posizione_finale_veicolo_fuori_sede" */
export enum Sis__Posizione_Finale_Veicolo_Fuori_Sede_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._posizione_finale_veicolo_fuori_sede" */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Pop_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Samp_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Sum_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._posizione_finale_veicolo_fuori_sede" */
export enum Sis__Posizione_Finale_Veicolo_Fuori_Sede_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Var_Pop_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Var_Samp_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Posizione_Finale_Veicolo_Fuori_Sede_Variance_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_fuori_sede_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini = {
  __typename?: 'sis__posizione_finale_veicolo_margini';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Aggregate = {
  __typename?: 'sis__posizione_finale_veicolo_margini_aggregate';
  aggregate?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Aggregate_Fields>;
  nodes: Array<Sis__Posizione_Finale_Veicolo_Margini>;
};

/** aggregate fields of "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Aggregate_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_aggregate_fields';
  avg?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Max_Fields>;
  min?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Min_Fields>;
  stddev?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Sum_Fields>;
  var_pop?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Var_Samp_Fields>;
  variance?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Variance_Fields>;
};


/** aggregate fields of "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Avg_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._posizione_finale_veicolo_margini". All fields are combined with a logical 'AND'. */
export type Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp = {
  _and?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>>;
  _not?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>;
  _or?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._posizione_finale_veicolo_margini" */
export enum Sis__Posizione_Finale_Veicolo_Margini_Constraint {
  /** unique or primary key constraint */
  PosizioneFinaleVeicoloMarginiPkey = '_posizione_finale_veicolo_margini_pkey'
}

/** input type for incrementing numeric columns in table "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Max_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Min_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Mutation_Response = {
  __typename?: 'sis__posizione_finale_veicolo_margini_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Posizione_Finale_Veicolo_Margini>;
};

/** input type for inserting object relation for remote table "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Obj_Rel_Insert_Input = {
  data: Sis__Posizione_Finale_Veicolo_Margini_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_On_Conflict>;
};

/** on_conflict condition type for table "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_On_Conflict = {
  constraint: Sis__Posizione_Finale_Veicolo_Margini_Constraint;
  update_columns?: Array<Sis__Posizione_Finale_Veicolo_Margini_Update_Column>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._posizione_finale_veicolo_margini". */
export type Sis__Posizione_Finale_Veicolo_Margini_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__posizione_finale_veicolo_margini */
export type Sis__Posizione_Finale_Veicolo_Margini_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._posizione_finale_veicolo_margini" */
export enum Sis__Posizione_Finale_Veicolo_Margini_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._posizione_finale_veicolo_margini" */
export type Sis__Posizione_Finale_Veicolo_Margini_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Stddev_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Stddev_Pop_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Stddev_Samp_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Sum_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._posizione_finale_veicolo_margini" */
export enum Sis__Posizione_Finale_Veicolo_Margini_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Var_Pop_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Var_Samp_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Posizione_Finale_Veicolo_Margini_Variance_Fields = {
  __typename?: 'sis__posizione_finale_veicolo_margini_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia = {
  __typename?: 'sis__punti_rilievi_no_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Aggregate = {
  __typename?: 'sis__punti_rilievi_no_tipologia_aggregate';
  aggregate?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis__Punti_Rilievi_No_Tipologia>;
};

/** aggregate fields of "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Aggregate_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_aggregate_fields';
  avg?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Max_Fields>;
  min?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Avg_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._punti_rilievi_no_tipologia". All fields are combined with a logical 'AND'. */
export type Sis__Punti_Rilievi_No_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._punti_rilievi_no_tipologia" */
export enum Sis__Punti_Rilievi_No_Tipologia_Constraint {
  /** unique or primary key constraint */
  PuntiRilieviNoTipologiaPkey = '_punti_rilievi_no_tipologia_pkey'
}

/** input type for incrementing numeric columns in table "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Max_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Min_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Mutation_Response = {
  __typename?: 'sis__punti_rilievi_no_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Punti_Rilievi_No_Tipologia>;
};

/** input type for inserting object relation for remote table "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Obj_Rel_Insert_Input = {
  data: Sis__Punti_Rilievi_No_Tipologia_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Punti_Rilievi_No_Tipologia_On_Conflict>;
};

/** on_conflict condition type for table "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_On_Conflict = {
  constraint: Sis__Punti_Rilievi_No_Tipologia_Constraint;
  update_columns?: Array<Sis__Punti_Rilievi_No_Tipologia_Update_Column>;
  where?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._punti_rilievi_no_tipologia". */
export type Sis__Punti_Rilievi_No_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__punti_rilievi_no_tipologia */
export type Sis__Punti_Rilievi_No_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._punti_rilievi_no_tipologia" */
export enum Sis__Punti_Rilievi_No_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._punti_rilievi_no_tipologia" */
export type Sis__Punti_Rilievi_No_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Stddev_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Sum_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._punti_rilievi_no_tipologia" */
export enum Sis__Punti_Rilievi_No_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Punti_Rilievi_No_Tipologia_Variance_Fields = {
  __typename?: 'sis__punti_rilievi_no_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno = {
  __typename?: 'sis__retrovisore_esterno';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Aggregate = {
  __typename?: 'sis__retrovisore_esterno_aggregate';
  aggregate?: Maybe<Sis__Retrovisore_Esterno_Aggregate_Fields>;
  nodes: Array<Sis__Retrovisore_Esterno>;
};

/** aggregate fields of "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Aggregate_Fields = {
  __typename?: 'sis__retrovisore_esterno_aggregate_fields';
  avg?: Maybe<Sis__Retrovisore_Esterno_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Retrovisore_Esterno_Max_Fields>;
  min?: Maybe<Sis__Retrovisore_Esterno_Min_Fields>;
  stddev?: Maybe<Sis__Retrovisore_Esterno_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Retrovisore_Esterno_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Retrovisore_Esterno_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Retrovisore_Esterno_Sum_Fields>;
  var_pop?: Maybe<Sis__Retrovisore_Esterno_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Retrovisore_Esterno_Var_Samp_Fields>;
  variance?: Maybe<Sis__Retrovisore_Esterno_Variance_Fields>;
};


/** aggregate fields of "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Retrovisore_Esterno_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Retrovisore_Esterno_Avg_Fields = {
  __typename?: 'sis__retrovisore_esterno_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._retrovisore_esterno". All fields are combined with a logical 'AND'. */
export type Sis__Retrovisore_Esterno_Bool_Exp = {
  _and?: Maybe<Array<Sis__Retrovisore_Esterno_Bool_Exp>>;
  _not?: Maybe<Sis__Retrovisore_Esterno_Bool_Exp>;
  _or?: Maybe<Array<Sis__Retrovisore_Esterno_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._retrovisore_esterno" */
export enum Sis__Retrovisore_Esterno_Constraint {
  /** unique or primary key constraint */
  RetrovisoreEsternoPkey = '_retrovisore_esterno_pkey'
}

/** input type for incrementing numeric columns in table "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Retrovisore_Esterno_Max_Fields = {
  __typename?: 'sis__retrovisore_esterno_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Retrovisore_Esterno_Min_Fields = {
  __typename?: 'sis__retrovisore_esterno_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Mutation_Response = {
  __typename?: 'sis__retrovisore_esterno_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Retrovisore_Esterno>;
};

/** input type for inserting object relation for remote table "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Obj_Rel_Insert_Input = {
  data: Sis__Retrovisore_Esterno_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Retrovisore_Esterno_On_Conflict>;
};

/** on_conflict condition type for table "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_On_Conflict = {
  constraint: Sis__Retrovisore_Esterno_Constraint;
  update_columns?: Array<Sis__Retrovisore_Esterno_Update_Column>;
  where?: Maybe<Sis__Retrovisore_Esterno_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._retrovisore_esterno". */
export type Sis__Retrovisore_Esterno_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__retrovisore_esterno */
export type Sis__Retrovisore_Esterno_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._retrovisore_esterno" */
export enum Sis__Retrovisore_Esterno_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._retrovisore_esterno" */
export type Sis__Retrovisore_Esterno_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Retrovisore_Esterno_Stddev_Fields = {
  __typename?: 'sis__retrovisore_esterno_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Retrovisore_Esterno_Stddev_Pop_Fields = {
  __typename?: 'sis__retrovisore_esterno_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Retrovisore_Esterno_Stddev_Samp_Fields = {
  __typename?: 'sis__retrovisore_esterno_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Retrovisore_Esterno_Sum_Fields = {
  __typename?: 'sis__retrovisore_esterno_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._retrovisore_esterno" */
export enum Sis__Retrovisore_Esterno_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Retrovisore_Esterno_Var_Pop_Fields = {
  __typename?: 'sis__retrovisore_esterno_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Retrovisore_Esterno_Var_Samp_Fields = {
  __typename?: 'sis__retrovisore_esterno_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Retrovisore_Esterno_Variance_Fields = {
  __typename?: 'sis__retrovisore_esterno_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A = {
  __typename?: 'sis__ris_consegnato_a';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Aggregate = {
  __typename?: 'sis__ris_consegnato_a_aggregate';
  aggregate?: Maybe<Sis__Ris_Consegnato_A_Aggregate_Fields>;
  nodes: Array<Sis__Ris_Consegnato_A>;
};

/** aggregate fields of "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Aggregate_Fields = {
  __typename?: 'sis__ris_consegnato_a_aggregate_fields';
  avg?: Maybe<Sis__Ris_Consegnato_A_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Ris_Consegnato_A_Max_Fields>;
  min?: Maybe<Sis__Ris_Consegnato_A_Min_Fields>;
  stddev?: Maybe<Sis__Ris_Consegnato_A_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Ris_Consegnato_A_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Ris_Consegnato_A_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Ris_Consegnato_A_Sum_Fields>;
  var_pop?: Maybe<Sis__Ris_Consegnato_A_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Ris_Consegnato_A_Var_Samp_Fields>;
  variance?: Maybe<Sis__Ris_Consegnato_A_Variance_Fields>;
};


/** aggregate fields of "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Ris_Consegnato_A_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Ris_Consegnato_A_Avg_Fields = {
  __typename?: 'sis__ris_consegnato_a_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._ris_consegnato_a". All fields are combined with a logical 'AND'. */
export type Sis__Ris_Consegnato_A_Bool_Exp = {
  _and?: Maybe<Array<Sis__Ris_Consegnato_A_Bool_Exp>>;
  _not?: Maybe<Sis__Ris_Consegnato_A_Bool_Exp>;
  _or?: Maybe<Array<Sis__Ris_Consegnato_A_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._ris_consegnato_a" */
export enum Sis__Ris_Consegnato_A_Constraint {
  /** unique or primary key constraint */
  RisConsegnatoAPkey = '_ris_consegnato_a_pkey'
}

/** input type for incrementing numeric columns in table "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Ris_Consegnato_A_Max_Fields = {
  __typename?: 'sis__ris_consegnato_a_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Ris_Consegnato_A_Min_Fields = {
  __typename?: 'sis__ris_consegnato_a_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Mutation_Response = {
  __typename?: 'sis__ris_consegnato_a_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Ris_Consegnato_A>;
};

/** input type for inserting object relation for remote table "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Obj_Rel_Insert_Input = {
  data: Sis__Ris_Consegnato_A_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Ris_Consegnato_A_On_Conflict>;
};

/** on_conflict condition type for table "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_On_Conflict = {
  constraint: Sis__Ris_Consegnato_A_Constraint;
  update_columns?: Array<Sis__Ris_Consegnato_A_Update_Column>;
  where?: Maybe<Sis__Ris_Consegnato_A_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._ris_consegnato_a". */
export type Sis__Ris_Consegnato_A_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__ris_consegnato_a */
export type Sis__Ris_Consegnato_A_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._ris_consegnato_a" */
export enum Sis__Ris_Consegnato_A_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._ris_consegnato_a" */
export type Sis__Ris_Consegnato_A_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Ris_Consegnato_A_Stddev_Fields = {
  __typename?: 'sis__ris_consegnato_a_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Ris_Consegnato_A_Stddev_Pop_Fields = {
  __typename?: 'sis__ris_consegnato_a_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Ris_Consegnato_A_Stddev_Samp_Fields = {
  __typename?: 'sis__ris_consegnato_a_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Ris_Consegnato_A_Sum_Fields = {
  __typename?: 'sis__ris_consegnato_a_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._ris_consegnato_a" */
export enum Sis__Ris_Consegnato_A_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Ris_Consegnato_A_Var_Pop_Fields = {
  __typename?: 'sis__ris_consegnato_a_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Ris_Consegnato_A_Var_Samp_Fields = {
  __typename?: 'sis__ris_consegnato_a_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Ris_Consegnato_A_Variance_Fields = {
  __typename?: 'sis__ris_consegnato_a_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._stato_ris" */
export type Sis__Stato_Ris = {
  __typename?: 'sis__stato_ris';
  text: Scalars['String'];
};

/** aggregated selection of "sis._stato_ris" */
export type Sis__Stato_Ris_Aggregate = {
  __typename?: 'sis__stato_ris_aggregate';
  aggregate?: Maybe<Sis__Stato_Ris_Aggregate_Fields>;
  nodes: Array<Sis__Stato_Ris>;
};

/** aggregate fields of "sis._stato_ris" */
export type Sis__Stato_Ris_Aggregate_Fields = {
  __typename?: 'sis__stato_ris_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Sis__Stato_Ris_Max_Fields>;
  min?: Maybe<Sis__Stato_Ris_Min_Fields>;
};


/** aggregate fields of "sis._stato_ris" */
export type Sis__Stato_Ris_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Stato_Ris_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "sis._stato_ris". All fields are combined with a logical 'AND'. */
export type Sis__Stato_Ris_Bool_Exp = {
  _and?: Maybe<Array<Sis__Stato_Ris_Bool_Exp>>;
  _not?: Maybe<Sis__Stato_Ris_Bool_Exp>;
  _or?: Maybe<Array<Sis__Stato_Ris_Bool_Exp>>;
  text?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._stato_ris" */
export enum Sis__Stato_Ris_Constraint {
  /** unique or primary key constraint */
  StatoRisPkey = '_stato_ris_pkey'
}

export enum Sis__Stato_Ris_Enum {
  Bozza = 'BOZZA',
  Cancellato = 'CANCELLATO',
  Compilazione = 'COMPILAZIONE',
  Inviato = 'INVIATO',
  Protocollato = 'PROTOCOLLATO',
  Protocollazione = 'PROTOCOLLAZIONE'
}

/** Boolean expression to compare columns of type "sis__stato_ris_enum". All fields are combined with logical 'AND'. */
export type Sis__Stato_Ris_Enum_Comparison_Exp = {
  _eq?: Maybe<Sis__Stato_Ris_Enum>;
  _in?: Maybe<Array<Sis__Stato_Ris_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Sis__Stato_Ris_Enum>;
  _nin?: Maybe<Array<Sis__Stato_Ris_Enum>>;
};

/** input type for inserting data into table "sis._stato_ris" */
export type Sis__Stato_Ris_Insert_Input = {
  text?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Sis__Stato_Ris_Max_Fields = {
  __typename?: 'sis__stato_ris_max_fields';
  text?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Sis__Stato_Ris_Min_Fields = {
  __typename?: 'sis__stato_ris_min_fields';
  text?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "sis._stato_ris" */
export type Sis__Stato_Ris_Mutation_Response = {
  __typename?: 'sis__stato_ris_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Stato_Ris>;
};

/** on_conflict condition type for table "sis._stato_ris" */
export type Sis__Stato_Ris_On_Conflict = {
  constraint: Sis__Stato_Ris_Constraint;
  update_columns?: Array<Sis__Stato_Ris_Update_Column>;
  where?: Maybe<Sis__Stato_Ris_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._stato_ris". */
export type Sis__Stato_Ris_Order_By = {
  text?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__stato_ris */
export type Sis__Stato_Ris_Pk_Columns_Input = {
  text: Scalars['String'];
};

/** select columns of table "sis._stato_ris" */
export enum Sis__Stato_Ris_Select_Column {
  /** column name */
  Text = 'text'
}

/** input type for updating data in table "sis._stato_ris" */
export type Sis__Stato_Ris_Set_Input = {
  text?: Maybe<Scalars['String']>;
};

/** update columns of table "sis._stato_ris" */
export enum Sis__Stato_Ris_Update_Column {
  /** column name */
  Text = 'text'
}

/** columns and relationships of "sis._stato_veicolo" */
export type Sis__Stato_Veicolo = {
  __typename?: 'sis__stato_veicolo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Aggregate = {
  __typename?: 'sis__stato_veicolo_aggregate';
  aggregate?: Maybe<Sis__Stato_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis__Stato_Veicolo>;
};

/** aggregate fields of "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Aggregate_Fields = {
  __typename?: 'sis__stato_veicolo_aggregate_fields';
  avg?: Maybe<Sis__Stato_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Stato_Veicolo_Max_Fields>;
  min?: Maybe<Sis__Stato_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis__Stato_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Stato_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Stato_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Stato_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis__Stato_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Stato_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis__Stato_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Stato_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Stato_Veicolo_Avg_Fields = {
  __typename?: 'sis__stato_veicolo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._stato_veicolo". All fields are combined with a logical 'AND'. */
export type Sis__Stato_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis__Stato_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis__Stato_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis__Stato_Veicolo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._stato_veicolo" */
export enum Sis__Stato_Veicolo_Constraint {
  /** unique or primary key constraint */
  StatoVeicoloPkey = '_stato_veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Stato_Veicolo_Max_Fields = {
  __typename?: 'sis__stato_veicolo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Stato_Veicolo_Min_Fields = {
  __typename?: 'sis__stato_veicolo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Mutation_Response = {
  __typename?: 'sis__stato_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Stato_Veicolo>;
};

/** input type for inserting object relation for remote table "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Obj_Rel_Insert_Input = {
  data: Sis__Stato_Veicolo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Stato_Veicolo_On_Conflict>;
};

/** on_conflict condition type for table "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_On_Conflict = {
  constraint: Sis__Stato_Veicolo_Constraint;
  update_columns?: Array<Sis__Stato_Veicolo_Update_Column>;
  where?: Maybe<Sis__Stato_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._stato_veicolo". */
export type Sis__Stato_Veicolo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__stato_veicolo */
export type Sis__Stato_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._stato_veicolo" */
export enum Sis__Stato_Veicolo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._stato_veicolo" */
export type Sis__Stato_Veicolo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Stato_Veicolo_Stddev_Fields = {
  __typename?: 'sis__stato_veicolo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Stato_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis__stato_veicolo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Stato_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis__stato_veicolo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Stato_Veicolo_Sum_Fields = {
  __typename?: 'sis__stato_veicolo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._stato_veicolo" */
export enum Sis__Stato_Veicolo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Stato_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis__stato_veicolo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Stato_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis__stato_veicolo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Stato_Veicolo_Variance_Fields = {
  __typename?: 'sis__stato_veicolo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._tipologia_ris" */
export type Sis__Tipologia_Ris = {
  __typename?: 'sis__tipologia_ris';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Aggregate = {
  __typename?: 'sis__tipologia_ris_aggregate';
  aggregate?: Maybe<Sis__Tipologia_Ris_Aggregate_Fields>;
  nodes: Array<Sis__Tipologia_Ris>;
};

/** aggregate fields of "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Aggregate_Fields = {
  __typename?: 'sis__tipologia_ris_aggregate_fields';
  avg?: Maybe<Sis__Tipologia_Ris_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Tipologia_Ris_Max_Fields>;
  min?: Maybe<Sis__Tipologia_Ris_Min_Fields>;
  stddev?: Maybe<Sis__Tipologia_Ris_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Tipologia_Ris_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Tipologia_Ris_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Tipologia_Ris_Sum_Fields>;
  var_pop?: Maybe<Sis__Tipologia_Ris_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Tipologia_Ris_Var_Samp_Fields>;
  variance?: Maybe<Sis__Tipologia_Ris_Variance_Fields>;
};


/** aggregate fields of "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Tipologia_Ris_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Tipologia_Ris_Avg_Fields = {
  __typename?: 'sis__tipologia_ris_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._tipologia_ris". All fields are combined with a logical 'AND'. */
export type Sis__Tipologia_Ris_Bool_Exp = {
  _and?: Maybe<Array<Sis__Tipologia_Ris_Bool_Exp>>;
  _not?: Maybe<Sis__Tipologia_Ris_Bool_Exp>;
  _or?: Maybe<Array<Sis__Tipologia_Ris_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._tipologia_ris" */
export enum Sis__Tipologia_Ris_Constraint {
  /** unique or primary key constraint */
  TipologiaRisPkey = '_tipologia_ris_pkey'
}

/** input type for incrementing numeric columns in table "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Tipologia_Ris_Max_Fields = {
  __typename?: 'sis__tipologia_ris_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Tipologia_Ris_Min_Fields = {
  __typename?: 'sis__tipologia_ris_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Mutation_Response = {
  __typename?: 'sis__tipologia_ris_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Tipologia_Ris>;
};

/** input type for inserting object relation for remote table "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Obj_Rel_Insert_Input = {
  data: Sis__Tipologia_Ris_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Tipologia_Ris_On_Conflict>;
};

/** on_conflict condition type for table "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_On_Conflict = {
  constraint: Sis__Tipologia_Ris_Constraint;
  update_columns?: Array<Sis__Tipologia_Ris_Update_Column>;
  where?: Maybe<Sis__Tipologia_Ris_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._tipologia_ris". */
export type Sis__Tipologia_Ris_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__tipologia_ris */
export type Sis__Tipologia_Ris_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._tipologia_ris" */
export enum Sis__Tipologia_Ris_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._tipologia_ris" */
export type Sis__Tipologia_Ris_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Tipologia_Ris_Stddev_Fields = {
  __typename?: 'sis__tipologia_ris_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Tipologia_Ris_Stddev_Pop_Fields = {
  __typename?: 'sis__tipologia_ris_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Tipologia_Ris_Stddev_Samp_Fields = {
  __typename?: 'sis__tipologia_ris_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Tipologia_Ris_Sum_Fields = {
  __typename?: 'sis__tipologia_ris_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._tipologia_ris" */
export enum Sis__Tipologia_Ris_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Tipologia_Ris_Var_Pop_Fields = {
  __typename?: 'sis__tipologia_ris_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Tipologia_Ris_Var_Samp_Fields = {
  __typename?: 'sis__tipologia_ris_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Tipologia_Ris_Variance_Fields = {
  __typename?: 'sis__tipologia_ris_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo = {
  __typename?: 'sis__tipologia_veicolo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Aggregate = {
  __typename?: 'sis__tipologia_veicolo_aggregate';
  aggregate?: Maybe<Sis__Tipologia_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis__Tipologia_Veicolo>;
};

/** aggregate fields of "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Aggregate_Fields = {
  __typename?: 'sis__tipologia_veicolo_aggregate_fields';
  avg?: Maybe<Sis__Tipologia_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Tipologia_Veicolo_Max_Fields>;
  min?: Maybe<Sis__Tipologia_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis__Tipologia_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Tipologia_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Tipologia_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Tipologia_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis__Tipologia_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Tipologia_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis__Tipologia_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Tipologia_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Tipologia_Veicolo_Avg_Fields = {
  __typename?: 'sis__tipologia_veicolo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._tipologia_veicolo". All fields are combined with a logical 'AND'. */
export type Sis__Tipologia_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis__Tipologia_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis__Tipologia_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis__Tipologia_Veicolo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._tipologia_veicolo" */
export enum Sis__Tipologia_Veicolo_Constraint {
  /** unique or primary key constraint */
  TipologiaVeicoloPkey = '_tipologia_veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Tipologia_Veicolo_Max_Fields = {
  __typename?: 'sis__tipologia_veicolo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Tipologia_Veicolo_Min_Fields = {
  __typename?: 'sis__tipologia_veicolo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Mutation_Response = {
  __typename?: 'sis__tipologia_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Tipologia_Veicolo>;
};

/** input type for inserting object relation for remote table "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Obj_Rel_Insert_Input = {
  data: Sis__Tipologia_Veicolo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Tipologia_Veicolo_On_Conflict>;
};

/** on_conflict condition type for table "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_On_Conflict = {
  constraint: Sis__Tipologia_Veicolo_Constraint;
  update_columns?: Array<Sis__Tipologia_Veicolo_Update_Column>;
  where?: Maybe<Sis__Tipologia_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._tipologia_veicolo". */
export type Sis__Tipologia_Veicolo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__tipologia_veicolo */
export type Sis__Tipologia_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._tipologia_veicolo" */
export enum Sis__Tipologia_Veicolo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._tipologia_veicolo" */
export type Sis__Tipologia_Veicolo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Tipologia_Veicolo_Stddev_Fields = {
  __typename?: 'sis__tipologia_veicolo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Tipologia_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis__tipologia_veicolo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Tipologia_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis__tipologia_veicolo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Tipologia_Veicolo_Sum_Fields = {
  __typename?: 'sis__tipologia_veicolo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._tipologia_veicolo" */
export enum Sis__Tipologia_Veicolo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Tipologia_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis__tipologia_veicolo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Tipologia_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis__tipologia_veicolo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Tipologia_Veicolo_Variance_Fields = {
  __typename?: 'sis__tipologia_veicolo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale = {
  __typename?: 'sis__tipologia_verbale';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Aggregate = {
  __typename?: 'sis__tipologia_verbale_aggregate';
  aggregate?: Maybe<Sis__Tipologia_Verbale_Aggregate_Fields>;
  nodes: Array<Sis__Tipologia_Verbale>;
};

/** aggregate fields of "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Aggregate_Fields = {
  __typename?: 'sis__tipologia_verbale_aggregate_fields';
  avg?: Maybe<Sis__Tipologia_Verbale_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Tipologia_Verbale_Max_Fields>;
  min?: Maybe<Sis__Tipologia_Verbale_Min_Fields>;
  stddev?: Maybe<Sis__Tipologia_Verbale_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Tipologia_Verbale_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Tipologia_Verbale_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Tipologia_Verbale_Sum_Fields>;
  var_pop?: Maybe<Sis__Tipologia_Verbale_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Tipologia_Verbale_Var_Samp_Fields>;
  variance?: Maybe<Sis__Tipologia_Verbale_Variance_Fields>;
};


/** aggregate fields of "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Tipologia_Verbale_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Tipologia_Verbale_Avg_Fields = {
  __typename?: 'sis__tipologia_verbale_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._tipologia_verbale". All fields are combined with a logical 'AND'. */
export type Sis__Tipologia_Verbale_Bool_Exp = {
  _and?: Maybe<Array<Sis__Tipologia_Verbale_Bool_Exp>>;
  _not?: Maybe<Sis__Tipologia_Verbale_Bool_Exp>;
  _or?: Maybe<Array<Sis__Tipologia_Verbale_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._tipologia_verbale" */
export enum Sis__Tipologia_Verbale_Constraint {
  /** unique or primary key constraint */
  TipologiaVerbalePkey = '_tipologia_verbale_pkey'
}

/** input type for incrementing numeric columns in table "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Tipologia_Verbale_Max_Fields = {
  __typename?: 'sis__tipologia_verbale_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Tipologia_Verbale_Min_Fields = {
  __typename?: 'sis__tipologia_verbale_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Mutation_Response = {
  __typename?: 'sis__tipologia_verbale_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Tipologia_Verbale>;
};

/** input type for inserting object relation for remote table "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Obj_Rel_Insert_Input = {
  data: Sis__Tipologia_Verbale_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Tipologia_Verbale_On_Conflict>;
};

/** on_conflict condition type for table "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_On_Conflict = {
  constraint: Sis__Tipologia_Verbale_Constraint;
  update_columns?: Array<Sis__Tipologia_Verbale_Update_Column>;
  where?: Maybe<Sis__Tipologia_Verbale_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._tipologia_verbale". */
export type Sis__Tipologia_Verbale_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__tipologia_verbale */
export type Sis__Tipologia_Verbale_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._tipologia_verbale" */
export enum Sis__Tipologia_Verbale_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._tipologia_verbale" */
export type Sis__Tipologia_Verbale_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Tipologia_Verbale_Stddev_Fields = {
  __typename?: 'sis__tipologia_verbale_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Tipologia_Verbale_Stddev_Pop_Fields = {
  __typename?: 'sis__tipologia_verbale_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Tipologia_Verbale_Stddev_Samp_Fields = {
  __typename?: 'sis__tipologia_verbale_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Tipologia_Verbale_Sum_Fields = {
  __typename?: 'sis__tipologia_verbale_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._tipologia_verbale" */
export enum Sis__Tipologia_Verbale_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Tipologia_Verbale_Var_Pop_Fields = {
  __typename?: 'sis__tipologia_verbale_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Tipologia_Verbale_Var_Samp_Fields = {
  __typename?: 'sis__tipologia_verbale_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Tipologia_Verbale_Variance_Fields = {
  __typename?: 'sis__tipologia_verbale_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Aggregate = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_aggregate';
  aggregate?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis__Traccia_Suolo_Frenata_Tipologia>;
};

/** aggregate fields of "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Aggregate_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_aggregate_fields';
  avg?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Max_Fields>;
  min?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Avg_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._traccia_suolo_frenata_tipologia". All fields are combined with a logical 'AND'. */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._traccia_suolo_frenata_tipologia" */
export enum Sis__Traccia_Suolo_Frenata_Tipologia_Constraint {
  /** unique or primary key constraint */
  TracciaSuoloFrenataTipologiaPkey = '_traccia_suolo_frenata_tipologia_pkey'
}

/** input type for incrementing numeric columns in table "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Max_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Min_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Mutation_Response = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Traccia_Suolo_Frenata_Tipologia>;
};

/** input type for inserting object relation for remote table "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Obj_Rel_Insert_Input = {
  data: Sis__Traccia_Suolo_Frenata_Tipologia_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_On_Conflict>;
};

/** on_conflict condition type for table "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_On_Conflict = {
  constraint: Sis__Traccia_Suolo_Frenata_Tipologia_Constraint;
  update_columns?: Array<Sis__Traccia_Suolo_Frenata_Tipologia_Update_Column>;
  where?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._traccia_suolo_frenata_tipologia". */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__traccia_suolo_frenata_tipologia */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._traccia_suolo_frenata_tipologia" */
export enum Sis__Traccia_Suolo_Frenata_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._traccia_suolo_frenata_tipologia" */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Stddev_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Sum_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._traccia_suolo_frenata_tipologia" */
export enum Sis__Traccia_Suolo_Frenata_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Traccia_Suolo_Frenata_Tipologia_Variance_Fields = {
  __typename?: 'sis__traccia_suolo_frenata_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione = {
  __typename?: 'sis__traccia_suolo_terminazione';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Aggregate = {
  __typename?: 'sis__traccia_suolo_terminazione_aggregate';
  aggregate?: Maybe<Sis__Traccia_Suolo_Terminazione_Aggregate_Fields>;
  nodes: Array<Sis__Traccia_Suolo_Terminazione>;
};

/** aggregate fields of "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Aggregate_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_aggregate_fields';
  avg?: Maybe<Sis__Traccia_Suolo_Terminazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Traccia_Suolo_Terminazione_Max_Fields>;
  min?: Maybe<Sis__Traccia_Suolo_Terminazione_Min_Fields>;
  stddev?: Maybe<Sis__Traccia_Suolo_Terminazione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Traccia_Suolo_Terminazione_Sum_Fields>;
  var_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Var_Samp_Fields>;
  variance?: Maybe<Sis__Traccia_Suolo_Terminazione_Variance_Fields>;
};


/** aggregate fields of "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** columns and relationships of "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Aggregate = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_aggregate';
  aggregate?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Aggregate_Fields>;
  nodes: Array<Sis__Traccia_Suolo_Terminazione_Andamento>;
};

/** aggregate fields of "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Aggregate_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_aggregate_fields';
  avg?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Max_Fields>;
  min?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Min_Fields>;
  stddev?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Sum_Fields>;
  var_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Var_Samp_Fields>;
  variance?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Variance_Fields>;
};


/** aggregate fields of "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Avg_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._traccia_suolo_terminazione_andamento". All fields are combined with a logical 'AND'. */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp = {
  _and?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>>;
  _not?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>;
  _or?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._traccia_suolo_terminazione_andamento" */
export enum Sis__Traccia_Suolo_Terminazione_Andamento_Constraint {
  /** unique or primary key constraint */
  TracciaSuoloTerminazioneAndamentoPkey = '_traccia_suolo_terminazione_andamento_pkey'
}

/** input type for incrementing numeric columns in table "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Max_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Min_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Mutation_Response = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Traccia_Suolo_Terminazione_Andamento>;
};

/** input type for inserting object relation for remote table "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Obj_Rel_Insert_Input = {
  data: Sis__Traccia_Suolo_Terminazione_Andamento_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_On_Conflict>;
};

/** on_conflict condition type for table "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_On_Conflict = {
  constraint: Sis__Traccia_Suolo_Terminazione_Andamento_Constraint;
  update_columns?: Array<Sis__Traccia_Suolo_Terminazione_Andamento_Update_Column>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._traccia_suolo_terminazione_andamento". */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__traccia_suolo_terminazione_andamento */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._traccia_suolo_terminazione_andamento" */
export enum Sis__Traccia_Suolo_Terminazione_Andamento_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._traccia_suolo_terminazione_andamento" */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Stddev_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Stddev_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Stddev_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Sum_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._traccia_suolo_terminazione_andamento" */
export enum Sis__Traccia_Suolo_Terminazione_Andamento_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Var_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Var_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Traccia_Suolo_Terminazione_Andamento_Variance_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_andamento_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate avg on columns */
export type Sis__Traccia_Suolo_Terminazione_Avg_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._traccia_suolo_terminazione". All fields are combined with a logical 'AND'. */
export type Sis__Traccia_Suolo_Terminazione_Bool_Exp = {
  _and?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Bool_Exp>>;
  _not?: Maybe<Sis__Traccia_Suolo_Terminazione_Bool_Exp>;
  _or?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._traccia_suolo_terminazione" */
export enum Sis__Traccia_Suolo_Terminazione_Constraint {
  /** unique or primary key constraint */
  TracciaSuoloTerminazionePkey = '_traccia_suolo_terminazione_pkey'
}

/** columns and relationships of "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma = {
  __typename?: 'sis__traccia_suolo_terminazione_forma';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Aggregate = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_aggregate';
  aggregate?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Aggregate_Fields>;
  nodes: Array<Sis__Traccia_Suolo_Terminazione_Forma>;
};

/** aggregate fields of "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Aggregate_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_aggregate_fields';
  avg?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Max_Fields>;
  min?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Min_Fields>;
  stddev?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Sum_Fields>;
  var_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Var_Samp_Fields>;
  variance?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Variance_Fields>;
};


/** aggregate fields of "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Avg_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._traccia_suolo_terminazione_forma". All fields are combined with a logical 'AND'. */
export type Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp = {
  _and?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>>;
  _not?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>;
  _or?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._traccia_suolo_terminazione_forma" */
export enum Sis__Traccia_Suolo_Terminazione_Forma_Constraint {
  /** unique or primary key constraint */
  TracciaSuoloTerminazioneFormaPkey = '_traccia_suolo_terminazione_forma_pkey'
}

/** input type for incrementing numeric columns in table "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Max_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Min_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Mutation_Response = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Traccia_Suolo_Terminazione_Forma>;
};

/** input type for inserting object relation for remote table "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Obj_Rel_Insert_Input = {
  data: Sis__Traccia_Suolo_Terminazione_Forma_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_On_Conflict>;
};

/** on_conflict condition type for table "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_On_Conflict = {
  constraint: Sis__Traccia_Suolo_Terminazione_Forma_Constraint;
  update_columns?: Array<Sis__Traccia_Suolo_Terminazione_Forma_Update_Column>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._traccia_suolo_terminazione_forma". */
export type Sis__Traccia_Suolo_Terminazione_Forma_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__traccia_suolo_terminazione_forma */
export type Sis__Traccia_Suolo_Terminazione_Forma_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._traccia_suolo_terminazione_forma" */
export enum Sis__Traccia_Suolo_Terminazione_Forma_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._traccia_suolo_terminazione_forma" */
export type Sis__Traccia_Suolo_Terminazione_Forma_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Stddev_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Stddev_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Stddev_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Sum_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._traccia_suolo_terminazione_forma" */
export enum Sis__Traccia_Suolo_Terminazione_Forma_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Var_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Var_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Traccia_Suolo_Terminazione_Forma_Variance_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_forma_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** input type for incrementing numeric columns in table "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** columns and relationships of "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Aggregate = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_aggregate';
  aggregate?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Aggregate_Fields>;
  nodes: Array<Sis__Traccia_Suolo_Terminazione_Intensita>;
};

/** aggregate fields of "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Aggregate_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_aggregate_fields';
  avg?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Max_Fields>;
  min?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Min_Fields>;
  stddev?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Sum_Fields>;
  var_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Var_Samp_Fields>;
  variance?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Variance_Fields>;
};


/** aggregate fields of "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Avg_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._traccia_suolo_terminazione_intensita". All fields are combined with a logical 'AND'. */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp = {
  _and?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>>;
  _not?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>;
  _or?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._traccia_suolo_terminazione_intensita" */
export enum Sis__Traccia_Suolo_Terminazione_Intensita_Constraint {
  /** unique or primary key constraint */
  TracciaSuoloTerminazioneIntensitaPkey = '_traccia_suolo_terminazione_intensita_pkey'
}

/** input type for incrementing numeric columns in table "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Max_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Min_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Mutation_Response = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Traccia_Suolo_Terminazione_Intensita>;
};

/** input type for inserting object relation for remote table "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Obj_Rel_Insert_Input = {
  data: Sis__Traccia_Suolo_Terminazione_Intensita_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_On_Conflict>;
};

/** on_conflict condition type for table "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_On_Conflict = {
  constraint: Sis__Traccia_Suolo_Terminazione_Intensita_Constraint;
  update_columns?: Array<Sis__Traccia_Suolo_Terminazione_Intensita_Update_Column>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._traccia_suolo_terminazione_intensita". */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__traccia_suolo_terminazione_intensita */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._traccia_suolo_terminazione_intensita" */
export enum Sis__Traccia_Suolo_Terminazione_Intensita_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._traccia_suolo_terminazione_intensita" */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Stddev_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Stddev_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Stddev_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Sum_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._traccia_suolo_terminazione_intensita" */
export enum Sis__Traccia_Suolo_Terminazione_Intensita_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Var_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Var_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Traccia_Suolo_Terminazione_Intensita_Variance_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_intensita_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate max on columns */
export type Sis__Traccia_Suolo_Terminazione_Max_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Traccia_Suolo_Terminazione_Min_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Mutation_Response = {
  __typename?: 'sis__traccia_suolo_terminazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Traccia_Suolo_Terminazione>;
};

/** input type for inserting object relation for remote table "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Obj_Rel_Insert_Input = {
  data: Sis__Traccia_Suolo_Terminazione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_On_Conflict>;
};

/** on_conflict condition type for table "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_On_Conflict = {
  constraint: Sis__Traccia_Suolo_Terminazione_Constraint;
  update_columns?: Array<Sis__Traccia_Suolo_Terminazione_Update_Column>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._traccia_suolo_terminazione". */
export type Sis__Traccia_Suolo_Terminazione_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__traccia_suolo_terminazione */
export type Sis__Traccia_Suolo_Terminazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._traccia_suolo_terminazione" */
export enum Sis__Traccia_Suolo_Terminazione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._traccia_suolo_terminazione" */
export type Sis__Traccia_Suolo_Terminazione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Traccia_Suolo_Terminazione_Stddev_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Stddev_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Stddev_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Traccia_Suolo_Terminazione_Sum_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** columns and relationships of "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Aggregate = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_aggregate';
  aggregate?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis__Traccia_Suolo_Terminazione_Tipologia>;
};

/** aggregate fields of "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Aggregate_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_aggregate_fields';
  avg?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Max_Fields>;
  min?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Avg_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._traccia_suolo_terminazione_tipologia". All fields are combined with a logical 'AND'. */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._traccia_suolo_terminazione_tipologia" */
export enum Sis__Traccia_Suolo_Terminazione_Tipologia_Constraint {
  /** unique or primary key constraint */
  TracciaSuoloTerminazioneTipologiaPkey = '_traccia_suolo_terminazione_tipologia_pkey'
}

/** input type for incrementing numeric columns in table "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Max_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Min_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Mutation_Response = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Traccia_Suolo_Terminazione_Tipologia>;
};

/** input type for inserting object relation for remote table "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Obj_Rel_Insert_Input = {
  data: Sis__Traccia_Suolo_Terminazione_Tipologia_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_On_Conflict>;
};

/** on_conflict condition type for table "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_On_Conflict = {
  constraint: Sis__Traccia_Suolo_Terminazione_Tipologia_Constraint;
  update_columns?: Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Update_Column>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._traccia_suolo_terminazione_tipologia". */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__traccia_suolo_terminazione_tipologia */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._traccia_suolo_terminazione_tipologia" */
export enum Sis__Traccia_Suolo_Terminazione_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._traccia_suolo_terminazione_tipologia" */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Stddev_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Sum_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._traccia_suolo_terminazione_tipologia" */
export enum Sis__Traccia_Suolo_Terminazione_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Traccia_Suolo_Terminazione_Tipologia_Variance_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** update columns of table "sis._traccia_suolo_terminazione" */
export enum Sis__Traccia_Suolo_Terminazione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Traccia_Suolo_Terminazione_Var_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Traccia_Suolo_Terminazione_Var_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Traccia_Suolo_Terminazione_Variance_Fields = {
  __typename?: 'sis__traccia_suolo_terminazione_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia = {
  __typename?: 'sis__traccia_suolo_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Aggregate = {
  __typename?: 'sis__traccia_suolo_tipologia_aggregate';
  aggregate?: Maybe<Sis__Traccia_Suolo_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis__Traccia_Suolo_Tipologia>;
};

/** aggregate fields of "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Aggregate_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_aggregate_fields';
  avg?: Maybe<Sis__Traccia_Suolo_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Traccia_Suolo_Tipologia_Max_Fields>;
  min?: Maybe<Sis__Traccia_Suolo_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis__Traccia_Suolo_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Traccia_Suolo_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Traccia_Suolo_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Traccia_Suolo_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis__Traccia_Suolo_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Traccia_Suolo_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis__Traccia_Suolo_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Traccia_Suolo_Tipologia_Avg_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._traccia_suolo_tipologia". All fields are combined with a logical 'AND'. */
export type Sis__Traccia_Suolo_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis__Traccia_Suolo_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._traccia_suolo_tipologia" */
export enum Sis__Traccia_Suolo_Tipologia_Constraint {
  /** unique or primary key constraint */
  TracciaTipologiaPkey = '_traccia_tipologia_pkey'
}

/** input type for incrementing numeric columns in table "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Traccia_Suolo_Tipologia_Max_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Traccia_Suolo_Tipologia_Min_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Mutation_Response = {
  __typename?: 'sis__traccia_suolo_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Traccia_Suolo_Tipologia>;
};

/** input type for inserting object relation for remote table "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Obj_Rel_Insert_Input = {
  data: Sis__Traccia_Suolo_Tipologia_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Traccia_Suolo_Tipologia_On_Conflict>;
};

/** on_conflict condition type for table "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_On_Conflict = {
  constraint: Sis__Traccia_Suolo_Tipologia_Constraint;
  update_columns?: Array<Sis__Traccia_Suolo_Tipologia_Update_Column>;
  where?: Maybe<Sis__Traccia_Suolo_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._traccia_suolo_tipologia". */
export type Sis__Traccia_Suolo_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__traccia_suolo_tipologia */
export type Sis__Traccia_Suolo_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._traccia_suolo_tipologia" */
export enum Sis__Traccia_Suolo_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._traccia_suolo_tipologia" */
export type Sis__Traccia_Suolo_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Traccia_Suolo_Tipologia_Stddev_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Traccia_Suolo_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Traccia_Suolo_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Traccia_Suolo_Tipologia_Sum_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._traccia_suolo_tipologia" */
export enum Sis__Traccia_Suolo_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Traccia_Suolo_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Traccia_Suolo_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Traccia_Suolo_Tipologia_Variance_Fields = {
  __typename?: 'sis__traccia_suolo_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione = {
  __typename?: 'sis__trasportato_posizione';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Aggregate = {
  __typename?: 'sis__trasportato_posizione_aggregate';
  aggregate?: Maybe<Sis__Trasportato_Posizione_Aggregate_Fields>;
  nodes: Array<Sis__Trasportato_Posizione>;
};

/** aggregate fields of "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Aggregate_Fields = {
  __typename?: 'sis__trasportato_posizione_aggregate_fields';
  avg?: Maybe<Sis__Trasportato_Posizione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Trasportato_Posizione_Max_Fields>;
  min?: Maybe<Sis__Trasportato_Posizione_Min_Fields>;
  stddev?: Maybe<Sis__Trasportato_Posizione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Trasportato_Posizione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Trasportato_Posizione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Trasportato_Posizione_Sum_Fields>;
  var_pop?: Maybe<Sis__Trasportato_Posizione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Trasportato_Posizione_Var_Samp_Fields>;
  variance?: Maybe<Sis__Trasportato_Posizione_Variance_Fields>;
};


/** aggregate fields of "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Trasportato_Posizione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Trasportato_Posizione_Avg_Fields = {
  __typename?: 'sis__trasportato_posizione_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._trasportato_posizione". All fields are combined with a logical 'AND'. */
export type Sis__Trasportato_Posizione_Bool_Exp = {
  _and?: Maybe<Array<Sis__Trasportato_Posizione_Bool_Exp>>;
  _not?: Maybe<Sis__Trasportato_Posizione_Bool_Exp>;
  _or?: Maybe<Array<Sis__Trasportato_Posizione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._trasportato_posizione" */
export enum Sis__Trasportato_Posizione_Constraint {
  /** unique or primary key constraint */
  TrasportatoPosizionePkey = '_trasportato_posizione_pkey'
}

/** input type for incrementing numeric columns in table "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Trasportato_Posizione_Max_Fields = {
  __typename?: 'sis__trasportato_posizione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Trasportato_Posizione_Min_Fields = {
  __typename?: 'sis__trasportato_posizione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Mutation_Response = {
  __typename?: 'sis__trasportato_posizione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Trasportato_Posizione>;
};

/** input type for inserting object relation for remote table "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Obj_Rel_Insert_Input = {
  data: Sis__Trasportato_Posizione_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Trasportato_Posizione_On_Conflict>;
};

/** on_conflict condition type for table "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_On_Conflict = {
  constraint: Sis__Trasportato_Posizione_Constraint;
  update_columns?: Array<Sis__Trasportato_Posizione_Update_Column>;
  where?: Maybe<Sis__Trasportato_Posizione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._trasportato_posizione". */
export type Sis__Trasportato_Posizione_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__trasportato_posizione */
export type Sis__Trasportato_Posizione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._trasportato_posizione" */
export enum Sis__Trasportato_Posizione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._trasportato_posizione" */
export type Sis__Trasportato_Posizione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Trasportato_Posizione_Stddev_Fields = {
  __typename?: 'sis__trasportato_posizione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Trasportato_Posizione_Stddev_Pop_Fields = {
  __typename?: 'sis__trasportato_posizione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Trasportato_Posizione_Stddev_Samp_Fields = {
  __typename?: 'sis__trasportato_posizione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Trasportato_Posizione_Sum_Fields = {
  __typename?: 'sis__trasportato_posizione_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._trasportato_posizione" */
export enum Sis__Trasportato_Posizione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Trasportato_Posizione_Var_Pop_Fields = {
  __typename?: 'sis__trasportato_posizione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Trasportato_Posizione_Var_Samp_Fields = {
  __typename?: 'sis__trasportato_posizione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Trasportato_Posizione_Variance_Fields = {
  __typename?: 'sis__trasportato_posizione_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._trasportato_stato" */
export type Sis__Trasportato_Stato = {
  __typename?: 'sis__trasportato_stato';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Aggregate = {
  __typename?: 'sis__trasportato_stato_aggregate';
  aggregate?: Maybe<Sis__Trasportato_Stato_Aggregate_Fields>;
  nodes: Array<Sis__Trasportato_Stato>;
};

/** aggregate fields of "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Aggregate_Fields = {
  __typename?: 'sis__trasportato_stato_aggregate_fields';
  avg?: Maybe<Sis__Trasportato_Stato_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Trasportato_Stato_Max_Fields>;
  min?: Maybe<Sis__Trasportato_Stato_Min_Fields>;
  stddev?: Maybe<Sis__Trasportato_Stato_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Trasportato_Stato_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Trasportato_Stato_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Trasportato_Stato_Sum_Fields>;
  var_pop?: Maybe<Sis__Trasportato_Stato_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Trasportato_Stato_Var_Samp_Fields>;
  variance?: Maybe<Sis__Trasportato_Stato_Variance_Fields>;
};


/** aggregate fields of "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Trasportato_Stato_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Trasportato_Stato_Avg_Fields = {
  __typename?: 'sis__trasportato_stato_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._trasportato_stato". All fields are combined with a logical 'AND'. */
export type Sis__Trasportato_Stato_Bool_Exp = {
  _and?: Maybe<Array<Sis__Trasportato_Stato_Bool_Exp>>;
  _not?: Maybe<Sis__Trasportato_Stato_Bool_Exp>;
  _or?: Maybe<Array<Sis__Trasportato_Stato_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._trasportato_stato" */
export enum Sis__Trasportato_Stato_Constraint {
  /** unique or primary key constraint */
  TrasportatoStatoPkey = '_trasportato_stato_pkey'
}

/** input type for incrementing numeric columns in table "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Trasportato_Stato_Max_Fields = {
  __typename?: 'sis__trasportato_stato_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Trasportato_Stato_Min_Fields = {
  __typename?: 'sis__trasportato_stato_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Mutation_Response = {
  __typename?: 'sis__trasportato_stato_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Trasportato_Stato>;
};

/** input type for inserting object relation for remote table "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Obj_Rel_Insert_Input = {
  data: Sis__Trasportato_Stato_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Trasportato_Stato_On_Conflict>;
};

/** on_conflict condition type for table "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_On_Conflict = {
  constraint: Sis__Trasportato_Stato_Constraint;
  update_columns?: Array<Sis__Trasportato_Stato_Update_Column>;
  where?: Maybe<Sis__Trasportato_Stato_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._trasportato_stato". */
export type Sis__Trasportato_Stato_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__trasportato_stato */
export type Sis__Trasportato_Stato_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._trasportato_stato" */
export enum Sis__Trasportato_Stato_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._trasportato_stato" */
export type Sis__Trasportato_Stato_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Trasportato_Stato_Stddev_Fields = {
  __typename?: 'sis__trasportato_stato_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Trasportato_Stato_Stddev_Pop_Fields = {
  __typename?: 'sis__trasportato_stato_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Trasportato_Stato_Stddev_Samp_Fields = {
  __typename?: 'sis__trasportato_stato_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Trasportato_Stato_Sum_Fields = {
  __typename?: 'sis__trasportato_stato_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._trasportato_stato" */
export enum Sis__Trasportato_Stato_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Trasportato_Stato_Var_Pop_Fields = {
  __typename?: 'sis__trasportato_stato_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Trasportato_Stato_Var_Samp_Fields = {
  __typename?: 'sis__trasportato_stato_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Trasportato_Stato_Variance_Fields = {
  __typename?: 'sis__trasportato_stato_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._uso_veicolo" */
export type Sis__Uso_Veicolo = {
  __typename?: 'sis__uso_veicolo';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Aggregate = {
  __typename?: 'sis__uso_veicolo_aggregate';
  aggregate?: Maybe<Sis__Uso_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis__Uso_Veicolo>;
};

/** aggregate fields of "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Aggregate_Fields = {
  __typename?: 'sis__uso_veicolo_aggregate_fields';
  avg?: Maybe<Sis__Uso_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Uso_Veicolo_Max_Fields>;
  min?: Maybe<Sis__Uso_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis__Uso_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Uso_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Uso_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Uso_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis__Uso_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Uso_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis__Uso_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Uso_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Uso_Veicolo_Avg_Fields = {
  __typename?: 'sis__uso_veicolo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._uso_veicolo". All fields are combined with a logical 'AND'. */
export type Sis__Uso_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis__Uso_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis__Uso_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis__Uso_Veicolo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._uso_veicolo" */
export enum Sis__Uso_Veicolo_Constraint {
  /** unique or primary key constraint */
  UsoVeicoloPkey = '_uso_veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Uso_Veicolo_Max_Fields = {
  __typename?: 'sis__uso_veicolo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Uso_Veicolo_Min_Fields = {
  __typename?: 'sis__uso_veicolo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Mutation_Response = {
  __typename?: 'sis__uso_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Uso_Veicolo>;
};

/** input type for inserting object relation for remote table "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Obj_Rel_Insert_Input = {
  data: Sis__Uso_Veicolo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis__Uso_Veicolo_On_Conflict>;
};

/** on_conflict condition type for table "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_On_Conflict = {
  constraint: Sis__Uso_Veicolo_Constraint;
  update_columns?: Array<Sis__Uso_Veicolo_Update_Column>;
  where?: Maybe<Sis__Uso_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._uso_veicolo". */
export type Sis__Uso_Veicolo_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__uso_veicolo */
export type Sis__Uso_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._uso_veicolo" */
export enum Sis__Uso_Veicolo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._uso_veicolo" */
export type Sis__Uso_Veicolo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Uso_Veicolo_Stddev_Fields = {
  __typename?: 'sis__uso_veicolo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Uso_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis__uso_veicolo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Uso_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis__uso_veicolo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Uso_Veicolo_Sum_Fields = {
  __typename?: 'sis__uso_veicolo_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._uso_veicolo" */
export enum Sis__Uso_Veicolo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Uso_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis__uso_veicolo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Uso_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis__uso_veicolo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Uso_Veicolo_Variance_Fields = {
  __typename?: 'sis__uso_veicolo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia = {
  __typename?: 'sis__visibilita_limitata_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_Aggregate = {
  __typename?: 'sis__visibilita_limitata_tipologia_aggregate';
  aggregate?: Maybe<Sis__Visibilita_Limitata_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis__Visibilita_Limitata_Tipologia>;
};

/** aggregate fields of "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_Aggregate_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_aggregate_fields';
  avg?: Maybe<Sis__Visibilita_Limitata_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis__Visibilita_Limitata_Tipologia_Max_Fields>;
  min?: Maybe<Sis__Visibilita_Limitata_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis__Visibilita_Limitata_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis__Visibilita_Limitata_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis__Visibilita_Limitata_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis__Visibilita_Limitata_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis__Visibilita_Limitata_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis__Visibilita_Limitata_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis__Visibilita_Limitata_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Sis__Visibilita_Limitata_Tipologia_Avg_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis._visibilita_limitata_tipologia". All fields are combined with a logical 'AND'. */
export type Sis__Visibilita_Limitata_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis._visibilita_limitata_tipologia" */
export enum Sis__Visibilita_Limitata_Tipologia_Constraint {
  /** unique or primary key constraint */
  VisibilitaLimitataTipologiaPkey = '_visibilita_limitata_tipologia_pkey'
}

/** input type for incrementing numeric columns in table "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis__Visibilita_Limitata_Tipologia_Max_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis__Visibilita_Limitata_Tipologia_Min_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_Mutation_Response = {
  __typename?: 'sis__visibilita_limitata_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis__Visibilita_Limitata_Tipologia>;
};

/** on_conflict condition type for table "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_On_Conflict = {
  constraint: Sis__Visibilita_Limitata_Tipologia_Constraint;
  update_columns?: Array<Sis__Visibilita_Limitata_Tipologia_Update_Column>;
  where?: Maybe<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis._visibilita_limitata_tipologia". */
export type Sis__Visibilita_Limitata_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis__visibilita_limitata_tipologia */
export type Sis__Visibilita_Limitata_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis._visibilita_limitata_tipologia" */
export enum Sis__Visibilita_Limitata_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis._visibilita_limitata_tipologia" */
export type Sis__Visibilita_Limitata_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis__Visibilita_Limitata_Tipologia_Stddev_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis__Visibilita_Limitata_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis__Visibilita_Limitata_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis__Visibilita_Limitata_Tipologia_Sum_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis._visibilita_limitata_tipologia" */
export enum Sis__Visibilita_Limitata_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis__Visibilita_Limitata_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis__Visibilita_Limitata_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis__Visibilita_Limitata_Tipologia_Variance_Fields = {
  __typename?: 'sis__visibilita_limitata_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis.accertamento" */
export type Sis_Accertamento = {
  __typename?: 'sis_accertamento';
  centro_abitato?: Maybe<Scalars['Boolean']>;
  condizioni_meteo_illuminazione?: Maybe<Scalars['String']>;
  condizioni_meteo_tempo?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata?: Maybe<Scalars['String']>;
  /** An array relationship */
  condizioni_meteo_visibilita_limitata_tipologia: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** An aggregate relationship */
  condizioni_meteo_visibilita_limitata_tipologia_aggregate: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['timestamp']>;
  delete: Scalars['Boolean'];
  descrizione_piano_note?: Maybe<Scalars['String']>;
  descrizione_piano_pavimentazione?: Maybe<Scalars['String']>;
  descrizione_piano_stato_fondo?: Maybe<Scalars['String']>;
  direzione_a?: Maybe<Scalars['String']>;
  direzione_da?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  segnaletica?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate_n?: Maybe<Scalars['String']>;
  tipologia_strada_conformazione?: Maybe<Scalars['String']>;
  traffico?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "sis.accertamento" */
export type Sis_AccertamentoCondizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


/** columns and relationships of "sis.accertamento" */
export type Sis_AccertamentoCondizioni_Meteo_Visibilita_Limitata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};

/** aggregated selection of "sis.accertamento" */
export type Sis_Accertamento_Aggregate = {
  __typename?: 'sis_accertamento_aggregate';
  aggregate?: Maybe<Sis_Accertamento_Aggregate_Fields>;
  nodes: Array<Sis_Accertamento>;
};

/** aggregate fields of "sis.accertamento" */
export type Sis_Accertamento_Aggregate_Fields = {
  __typename?: 'sis_accertamento_aggregate_fields';
  avg?: Maybe<Sis_Accertamento_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Accertamento_Max_Fields>;
  min?: Maybe<Sis_Accertamento_Min_Fields>;
  stddev?: Maybe<Sis_Accertamento_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Accertamento_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Accertamento_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Accertamento_Sum_Fields>;
  var_pop?: Maybe<Sis_Accertamento_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Accertamento_Var_Samp_Fields>;
  variance?: Maybe<Sis_Accertamento_Variance_Fields>;
};


/** aggregate fields of "sis.accertamento" */
export type Sis_Accertamento_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Accertamento_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.accertamento" */
export type Sis_Accertamento_Aggregate_Order_By = {
  avg?: Maybe<Sis_Accertamento_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Accertamento_Max_Order_By>;
  min?: Maybe<Sis_Accertamento_Min_Order_By>;
  stddev?: Maybe<Sis_Accertamento_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Accertamento_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Accertamento_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Accertamento_Sum_Order_By>;
  var_pop?: Maybe<Sis_Accertamento_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Accertamento_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Accertamento_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.accertamento" */
export type Sis_Accertamento_Arr_Rel_Insert_Input = {
  data: Array<Sis_Accertamento_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Accertamento_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Accertamento_Avg_Fields = {
  __typename?: 'sis_accertamento_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Avg_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.accertamento". All fields are combined with a logical 'AND'. */
export type Sis_Accertamento_Bool_Exp = {
  _and?: Maybe<Array<Sis_Accertamento_Bool_Exp>>;
  _not?: Maybe<Sis_Accertamento_Bool_Exp>;
  _or?: Maybe<Array<Sis_Accertamento_Bool_Exp>>;
  centro_abitato?: Maybe<Boolean_Comparison_Exp>;
  condizioni_meteo_illuminazione?: Maybe<String_Comparison_Exp>;
  condizioni_meteo_tempo?: Maybe<String_Comparison_Exp>;
  condizioni_meteo_visibilita_limitata?: Maybe<String_Comparison_Exp>;
  condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Timestamp_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  descrizione_piano_note?: Maybe<String_Comparison_Exp>;
  descrizione_piano_pavimentazione?: Maybe<String_Comparison_Exp>;
  descrizione_piano_stato_fondo?: Maybe<String_Comparison_Exp>;
  direzione_a?: Maybe<String_Comparison_Exp>;
  direzione_da?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  segnaletica?: Maybe<String_Comparison_Exp>;
  tipologia_strada_carreggiate?: Maybe<String_Comparison_Exp>;
  tipologia_strada_carreggiate_n?: Maybe<String_Comparison_Exp>;
  tipologia_strada_conformazione?: Maybe<String_Comparison_Exp>;
  traffico?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.accertamento" */
export enum Sis_Accertamento_Constraint {
  /** unique or primary key constraint */
  AccertamentoPkey = 'accertamento_pkey'
}

/** input type for incrementing numeric columns in table "sis.accertamento" */
export type Sis_Accertamento_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.accertamento" */
export type Sis_Accertamento_Insert_Input = {
  centro_abitato?: Maybe<Scalars['Boolean']>;
  condizioni_meteo_illuminazione?: Maybe<Scalars['String']>;
  condizioni_meteo_tempo?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Arr_Rel_Insert_Input>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  descrizione_piano_note?: Maybe<Scalars['String']>;
  descrizione_piano_pavimentazione?: Maybe<Scalars['String']>;
  descrizione_piano_stato_fondo?: Maybe<Scalars['String']>;
  direzione_a?: Maybe<Scalars['String']>;
  direzione_da?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  segnaletica?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate_n?: Maybe<Scalars['String']>;
  tipologia_strada_conformazione?: Maybe<Scalars['String']>;
  traffico?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Accertamento_Max_Fields = {
  __typename?: 'sis_accertamento_max_fields';
  condizioni_meteo_illuminazione?: Maybe<Scalars['String']>;
  condizioni_meteo_tempo?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  descrizione_piano_note?: Maybe<Scalars['String']>;
  descrizione_piano_pavimentazione?: Maybe<Scalars['String']>;
  descrizione_piano_stato_fondo?: Maybe<Scalars['String']>;
  direzione_a?: Maybe<Scalars['String']>;
  direzione_da?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  segnaletica?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate_n?: Maybe<Scalars['String']>;
  tipologia_strada_conformazione?: Maybe<Scalars['String']>;
  traffico?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Max_Order_By = {
  condizioni_meteo_illuminazione?: Maybe<Order_By>;
  condizioni_meteo_tempo?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  descrizione_piano_note?: Maybe<Order_By>;
  descrizione_piano_pavimentazione?: Maybe<Order_By>;
  descrizione_piano_stato_fondo?: Maybe<Order_By>;
  direzione_a?: Maybe<Order_By>;
  direzione_da?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  segnaletica?: Maybe<Order_By>;
  tipologia_strada_carreggiate?: Maybe<Order_By>;
  tipologia_strada_carreggiate_n?: Maybe<Order_By>;
  tipologia_strada_conformazione?: Maybe<Order_By>;
  traffico?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Accertamento_Min_Fields = {
  __typename?: 'sis_accertamento_min_fields';
  condizioni_meteo_illuminazione?: Maybe<Scalars['String']>;
  condizioni_meteo_tempo?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  descrizione_piano_note?: Maybe<Scalars['String']>;
  descrizione_piano_pavimentazione?: Maybe<Scalars['String']>;
  descrizione_piano_stato_fondo?: Maybe<Scalars['String']>;
  direzione_a?: Maybe<Scalars['String']>;
  direzione_da?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  segnaletica?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate_n?: Maybe<Scalars['String']>;
  tipologia_strada_conformazione?: Maybe<Scalars['String']>;
  traffico?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Min_Order_By = {
  condizioni_meteo_illuminazione?: Maybe<Order_By>;
  condizioni_meteo_tempo?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  descrizione_piano_note?: Maybe<Order_By>;
  descrizione_piano_pavimentazione?: Maybe<Order_By>;
  descrizione_piano_stato_fondo?: Maybe<Order_By>;
  direzione_a?: Maybe<Order_By>;
  direzione_da?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  segnaletica?: Maybe<Order_By>;
  tipologia_strada_carreggiate?: Maybe<Order_By>;
  tipologia_strada_carreggiate_n?: Maybe<Order_By>;
  tipologia_strada_conformazione?: Maybe<Order_By>;
  traffico?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.accertamento" */
export type Sis_Accertamento_Mutation_Response = {
  __typename?: 'sis_accertamento_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Accertamento>;
};

/** input type for inserting object relation for remote table "sis.accertamento" */
export type Sis_Accertamento_Obj_Rel_Insert_Input = {
  data: Sis_Accertamento_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Accertamento_On_Conflict>;
};

/** on_conflict condition type for table "sis.accertamento" */
export type Sis_Accertamento_On_Conflict = {
  constraint: Sis_Accertamento_Constraint;
  update_columns?: Array<Sis_Accertamento_Update_Column>;
  where?: Maybe<Sis_Accertamento_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.accertamento". */
export type Sis_Accertamento_Order_By = {
  centro_abitato?: Maybe<Order_By>;
  condizioni_meteo_illuminazione?: Maybe<Order_By>;
  condizioni_meteo_tempo?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_aggregate?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  descrizione_piano_note?: Maybe<Order_By>;
  descrizione_piano_pavimentazione?: Maybe<Order_By>;
  descrizione_piano_stato_fondo?: Maybe<Order_By>;
  direzione_a?: Maybe<Order_By>;
  direzione_da?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  segnaletica?: Maybe<Order_By>;
  tipologia_strada_carreggiate?: Maybe<Order_By>;
  tipologia_strada_carreggiate_n?: Maybe<Order_By>;
  tipologia_strada_conformazione?: Maybe<Order_By>;
  traffico?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_accertamento */
export type Sis_Accertamento_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.accertamento" */
export enum Sis_Accertamento_Select_Column {
  /** column name */
  CentroAbitato = 'centro_abitato',
  /** column name */
  CondizioniMeteoIlluminazione = 'condizioni_meteo_illuminazione',
  /** column name */
  CondizioniMeteoTempo = 'condizioni_meteo_tempo',
  /** column name */
  CondizioniMeteoVisibilitaLimitata = 'condizioni_meteo_visibilita_limitata',
  /** column name */
  CondizioniMeteoVisibilitaLimitataTipologiaMetri = 'condizioni_meteo_visibilita_limitata_tipologia_metri',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Delete = 'delete',
  /** column name */
  DescrizionePianoNote = 'descrizione_piano_note',
  /** column name */
  DescrizionePianoPavimentazione = 'descrizione_piano_pavimentazione',
  /** column name */
  DescrizionePianoStatoFondo = 'descrizione_piano_stato_fondo',
  /** column name */
  DirezioneA = 'direzione_a',
  /** column name */
  DirezioneDa = 'direzione_da',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Segnaletica = 'segnaletica',
  /** column name */
  TipologiaStradaCarreggiate = 'tipologia_strada_carreggiate',
  /** column name */
  TipologiaStradaCarreggiateN = 'tipologia_strada_carreggiate_n',
  /** column name */
  TipologiaStradaConformazione = 'tipologia_strada_conformazione',
  /** column name */
  Traffico = 'traffico',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.accertamento" */
export type Sis_Accertamento_Set_Input = {
  centro_abitato?: Maybe<Scalars['Boolean']>;
  condizioni_meteo_illuminazione?: Maybe<Scalars['String']>;
  condizioni_meteo_tempo?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata?: Maybe<Scalars['String']>;
  condizioni_meteo_visibilita_limitata_tipologia_metri?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  descrizione_piano_note?: Maybe<Scalars['String']>;
  descrizione_piano_pavimentazione?: Maybe<Scalars['String']>;
  descrizione_piano_stato_fondo?: Maybe<Scalars['String']>;
  direzione_a?: Maybe<Scalars['String']>;
  direzione_da?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  segnaletica?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate?: Maybe<Scalars['String']>;
  tipologia_strada_carreggiate_n?: Maybe<Scalars['String']>;
  tipologia_strada_conformazione?: Maybe<Scalars['String']>;
  traffico?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Accertamento_Stddev_Fields = {
  __typename?: 'sis_accertamento_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Accertamento_Stddev_Pop_Fields = {
  __typename?: 'sis_accertamento_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Accertamento_Stddev_Samp_Fields = {
  __typename?: 'sis_accertamento_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Accertamento_Sum_Fields = {
  __typename?: 'sis_accertamento_sum_fields';
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Sum_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.accertamento" */
export enum Sis_Accertamento_Update_Column {
  /** column name */
  CentroAbitato = 'centro_abitato',
  /** column name */
  CondizioniMeteoIlluminazione = 'condizioni_meteo_illuminazione',
  /** column name */
  CondizioniMeteoTempo = 'condizioni_meteo_tempo',
  /** column name */
  CondizioniMeteoVisibilitaLimitata = 'condizioni_meteo_visibilita_limitata',
  /** column name */
  CondizioniMeteoVisibilitaLimitataTipologiaMetri = 'condizioni_meteo_visibilita_limitata_tipologia_metri',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Delete = 'delete',
  /** column name */
  DescrizionePianoNote = 'descrizione_piano_note',
  /** column name */
  DescrizionePianoPavimentazione = 'descrizione_piano_pavimentazione',
  /** column name */
  DescrizionePianoStatoFondo = 'descrizione_piano_stato_fondo',
  /** column name */
  DirezioneA = 'direzione_a',
  /** column name */
  DirezioneDa = 'direzione_da',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Segnaletica = 'segnaletica',
  /** column name */
  TipologiaStradaCarreggiate = 'tipologia_strada_carreggiate',
  /** column name */
  TipologiaStradaCarreggiateN = 'tipologia_strada_carreggiate_n',
  /** column name */
  TipologiaStradaConformazione = 'tipologia_strada_conformazione',
  /** column name */
  Traffico = 'traffico',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Accertamento_Var_Pop_Fields = {
  __typename?: 'sis_accertamento_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Accertamento_Var_Samp_Fields = {
  __typename?: 'sis_accertamento_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Accertamento_Variance_Fields = {
  __typename?: 'sis_accertamento_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.accertamento" */
export type Sis_Accertamento_Variance_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.agente_accertatore" */
export type Sis_Agente_Accertatore = {
  __typename?: 'sis_agente_accertatore';
  agente: Scalars['jsonb'];
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  username: Scalars['String'];
};


/** columns and relationships of "sis.agente_accertatore" */
export type Sis_Agente_AccertatoreAgenteArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Aggregate = {
  __typename?: 'sis_agente_accertatore_aggregate';
  aggregate?: Maybe<Sis_Agente_Accertatore_Aggregate_Fields>;
  nodes: Array<Sis_Agente_Accertatore>;
};

/** aggregate fields of "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Aggregate_Fields = {
  __typename?: 'sis_agente_accertatore_aggregate_fields';
  avg?: Maybe<Sis_Agente_Accertatore_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Agente_Accertatore_Max_Fields>;
  min?: Maybe<Sis_Agente_Accertatore_Min_Fields>;
  stddev?: Maybe<Sis_Agente_Accertatore_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Agente_Accertatore_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Agente_Accertatore_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Agente_Accertatore_Sum_Fields>;
  var_pop?: Maybe<Sis_Agente_Accertatore_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Agente_Accertatore_Var_Samp_Fields>;
  variance?: Maybe<Sis_Agente_Accertatore_Variance_Fields>;
};


/** aggregate fields of "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Agente_Accertatore_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Aggregate_Order_By = {
  avg?: Maybe<Sis_Agente_Accertatore_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Agente_Accertatore_Max_Order_By>;
  min?: Maybe<Sis_Agente_Accertatore_Min_Order_By>;
  stddev?: Maybe<Sis_Agente_Accertatore_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Agente_Accertatore_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Agente_Accertatore_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Agente_Accertatore_Sum_Order_By>;
  var_pop?: Maybe<Sis_Agente_Accertatore_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Agente_Accertatore_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Agente_Accertatore_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Sis_Agente_Accertatore_Append_Input = {
  agente?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Arr_Rel_Insert_Input = {
  data: Array<Sis_Agente_Accertatore_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Agente_Accertatore_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Agente_Accertatore_Avg_Fields = {
  __typename?: 'sis_agente_accertatore_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Avg_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.agente_accertatore". All fields are combined with a logical 'AND'. */
export type Sis_Agente_Accertatore_Bool_Exp = {
  _and?: Maybe<Array<Sis_Agente_Accertatore_Bool_Exp>>;
  _not?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
  _or?: Maybe<Array<Sis_Agente_Accertatore_Bool_Exp>>;
  agente?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  username?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.agente_accertatore" */
export enum Sis_Agente_Accertatore_Constraint {
  /** unique or primary key constraint */
  AgenteAccertatorePkey = 'agente_accertatore_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Sis_Agente_Accertatore_Delete_At_Path_Input = {
  agente?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Sis_Agente_Accertatore_Delete_Elem_Input = {
  agente?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Sis_Agente_Accertatore_Delete_Key_Input = {
  agente?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Insert_Input = {
  agente?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Sis_Agente_Accertatore_Max_Fields = {
  __typename?: 'sis_agente_accertatore_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Agente_Accertatore_Min_Fields = {
  __typename?: 'sis_agente_accertatore_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Mutation_Response = {
  __typename?: 'sis_agente_accertatore_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Agente_Accertatore>;
};

/** on_conflict condition type for table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_On_Conflict = {
  constraint: Sis_Agente_Accertatore_Constraint;
  update_columns?: Array<Sis_Agente_Accertatore_Update_Column>;
  where?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.agente_accertatore". */
export type Sis_Agente_Accertatore_Order_By = {
  agente?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_agente_accertatore */
export type Sis_Agente_Accertatore_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Sis_Agente_Accertatore_Prepend_Input = {
  agente?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "sis.agente_accertatore" */
export enum Sis_Agente_Accertatore_Select_Column {
  /** column name */
  Agente = 'agente',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Username = 'username'
}

/** input type for updating data in table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Set_Input = {
  agente?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Sis_Agente_Accertatore_Stddev_Fields = {
  __typename?: 'sis_agente_accertatore_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Agente_Accertatore_Stddev_Pop_Fields = {
  __typename?: 'sis_agente_accertatore_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Agente_Accertatore_Stddev_Samp_Fields = {
  __typename?: 'sis_agente_accertatore_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Agente_Accertatore_Sum_Fields = {
  __typename?: 'sis_agente_accertatore_sum_fields';
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Sum_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.agente_accertatore" */
export enum Sis_Agente_Accertatore_Update_Column {
  /** column name */
  Agente = 'agente',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Username = 'username'
}

/** aggregate var_pop on columns */
export type Sis_Agente_Accertatore_Var_Pop_Fields = {
  __typename?: 'sis_agente_accertatore_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Agente_Accertatore_Var_Samp_Fields = {
  __typename?: 'sis_agente_accertatore_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Agente_Accertatore_Variance_Fields = {
  __typename?: 'sis_agente_accertatore_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.agente_accertatore" */
export type Sis_Agente_Accertatore_Variance_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.altro" */
export type Sis_Altro = {
  __typename?: 'sis_altro';
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  note?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** aggregated selection of "sis.altro" */
export type Sis_Altro_Aggregate = {
  __typename?: 'sis_altro_aggregate';
  aggregate?: Maybe<Sis_Altro_Aggregate_Fields>;
  nodes: Array<Sis_Altro>;
};

/** aggregate fields of "sis.altro" */
export type Sis_Altro_Aggregate_Fields = {
  __typename?: 'sis_altro_aggregate_fields';
  avg?: Maybe<Sis_Altro_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Altro_Max_Fields>;
  min?: Maybe<Sis_Altro_Min_Fields>;
  stddev?: Maybe<Sis_Altro_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Altro_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Altro_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Altro_Sum_Fields>;
  var_pop?: Maybe<Sis_Altro_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Altro_Var_Samp_Fields>;
  variance?: Maybe<Sis_Altro_Variance_Fields>;
};


/** aggregate fields of "sis.altro" */
export type Sis_Altro_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Altro_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.altro" */
export type Sis_Altro_Aggregate_Order_By = {
  avg?: Maybe<Sis_Altro_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Altro_Max_Order_By>;
  min?: Maybe<Sis_Altro_Min_Order_By>;
  stddev?: Maybe<Sis_Altro_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Altro_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Altro_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Altro_Sum_Order_By>;
  var_pop?: Maybe<Sis_Altro_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Altro_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Altro_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.altro" */
export type Sis_Altro_Arr_Rel_Insert_Input = {
  data: Array<Sis_Altro_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Altro_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Altro_Avg_Fields = {
  __typename?: 'sis_altro_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.altro" */
export type Sis_Altro_Avg_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.altro". All fields are combined with a logical 'AND'. */
export type Sis_Altro_Bool_Exp = {
  _and?: Maybe<Array<Sis_Altro_Bool_Exp>>;
  _not?: Maybe<Sis_Altro_Bool_Exp>;
  _or?: Maybe<Array<Sis_Altro_Bool_Exp>>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.altro" */
export enum Sis_Altro_Constraint {
  /** unique or primary key constraint */
  AltroPkey = 'altro_pkey'
}

/** input type for incrementing numeric columns in table "sis.altro" */
export type Sis_Altro_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.altro" */
export type Sis_Altro_Insert_Input = {
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Sis_Altro_Max_Fields = {
  __typename?: 'sis_altro_max_fields';
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "sis.altro" */
export type Sis_Altro_Max_Order_By = {
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Altro_Min_Fields = {
  __typename?: 'sis_altro_min_fields';
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "sis.altro" */
export type Sis_Altro_Min_Order_By = {
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.altro" */
export type Sis_Altro_Mutation_Response = {
  __typename?: 'sis_altro_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Altro>;
};

/** on_conflict condition type for table "sis.altro" */
export type Sis_Altro_On_Conflict = {
  constraint: Sis_Altro_Constraint;
  update_columns?: Array<Sis_Altro_Update_Column>;
  where?: Maybe<Sis_Altro_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.altro". */
export type Sis_Altro_Order_By = {
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_altro */
export type Sis_Altro_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.altro" */
export enum Sis_Altro_Select_Column {
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  RisId = 'ris_id'
}

/** input type for updating data in table "sis.altro" */
export type Sis_Altro_Set_Input = {
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Sis_Altro_Stddev_Fields = {
  __typename?: 'sis_altro_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.altro" */
export type Sis_Altro_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Altro_Stddev_Pop_Fields = {
  __typename?: 'sis_altro_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.altro" */
export type Sis_Altro_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Altro_Stddev_Samp_Fields = {
  __typename?: 'sis_altro_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.altro" */
export type Sis_Altro_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Altro_Sum_Fields = {
  __typename?: 'sis_altro_sum_fields';
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.altro" */
export type Sis_Altro_Sum_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.altro" */
export enum Sis_Altro_Update_Column {
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  RisId = 'ris_id'
}

/** aggregate var_pop on columns */
export type Sis_Altro_Var_Pop_Fields = {
  __typename?: 'sis_altro_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.altro" */
export type Sis_Altro_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Altro_Var_Samp_Fields = {
  __typename?: 'sis_altro_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.altro" */
export type Sis_Altro_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Altro_Variance_Fields = {
  __typename?: 'sis_altro_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.altro" */
export type Sis_Altro_Variance_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia';
  /** An object relationship */
  accertamento: Sis_Accertamento;
  accertamento_id: Scalars['Int'];
  /** An object relationship */
  condizioni_meteo_visibilita_limitata_tipologia: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia;
  condizioni_meteo_visibilita_limitata_tipologia_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_aggregate';
  aggregate?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_Fields>;
  nodes: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
};

/** aggregate fields of "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_aggregate_fields';
  avg?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Max_Fields>;
  min?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Min_Fields>;
  stddev?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Variance_Fields>;
};


/** aggregate fields of "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate_Order_By = {
  avg?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Max_Order_By>;
  min?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Min_Order_By>;
  stddev?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Sum_Order_By>;
  var_pop?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Arr_Rel_Insert_Input = {
  data: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Avg_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_avg_fields';
  accertamento_id?: Maybe<Scalars['Float']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Avg_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia". All fields are combined with a logical 'AND'. */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>>;
  _not?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>>;
  accertamento?: Maybe<Sis_Accertamento_Bool_Exp>;
  accertamento_id?: Maybe<Int_Comparison_Exp>;
  condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export enum Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Constraint {
  /** unique or primary key constraint */
  AssegnazioneCondizioniMeteoVisibilitaLimitataTipologiPkey = 'assegnazione_condizioni_meteo_visibilita_limitata_tipologi_pkey'
}

/** input type for incrementing numeric columns in table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Inc_Input = {
  accertamento_id?: Maybe<Scalars['Int']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Insert_Input = {
  accertamento?: Maybe<Sis_Accertamento_Obj_Rel_Insert_Input>;
  accertamento_id?: Maybe<Scalars['Int']>;
  condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Obj_Rel_Insert_Input>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Max_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_max_fields';
  accertamento_id?: Maybe<Scalars['Int']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Max_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Min_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_min_fields';
  accertamento_id?: Maybe<Scalars['Int']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Min_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Mutation_Response = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
};

/** on_conflict condition type for table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_On_Conflict = {
  constraint: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Constraint;
  update_columns?: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Update_Column>;
  where?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia". */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By = {
  accertamento?: Maybe<Sis_Accertamento_Order_By>;
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export enum Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column {
  /** column name */
  AccertamentoId = 'accertamento_id',
  /** column name */
  CondizioniMeteoVisibilitaLimitataTipologiaId = 'condizioni_meteo_visibilita_limitata_tipologia_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Set_Input = {
  accertamento_id?: Maybe<Scalars['Int']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_stddev_fields';
  accertamento_id?: Maybe<Scalars['Float']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_stddev_pop_fields';
  accertamento_id?: Maybe<Scalars['Float']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Pop_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_stddev_samp_fields';
  accertamento_id?: Maybe<Scalars['Float']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Stddev_Samp_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Sum_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_sum_fields';
  accertamento_id?: Maybe<Scalars['Int']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Sum_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** update columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export enum Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Update_Column {
  /** column name */
  AccertamentoId = 'accertamento_id',
  /** column name */
  CondizioniMeteoVisibilitaLimitataTipologiaId = 'condizioni_meteo_visibilita_limitata_tipologia_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Pop_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_var_pop_fields';
  accertamento_id?: Maybe<Scalars['Float']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Pop_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Samp_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_var_samp_fields';
  accertamento_id?: Maybe<Scalars['Float']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Var_Samp_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Variance_Fields = {
  __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_variance_fields';
  accertamento_id?: Maybe<Scalars['Float']>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
export type Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Variance_Order_By = {
  accertamento_id?: Maybe<Order_By>;
  condizioni_meteo_visibilita_limitata_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa = {
  __typename?: 'sis_assegnazione_unita_operativa';
  caposquadra: Scalars['Boolean'];
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  inizio_validita: Scalars['timestamptz'];
  membro: Scalars['jsonb'];
  /** An object relationship */
  unita_operativa: Sis_Unita_Operativa;
  unita_operativa_id: Scalars['Int'];
  username: Scalars['String'];
};


/** columns and relationships of "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_OperativaMembroArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Aggregate = {
  __typename?: 'sis_assegnazione_unita_operativa_aggregate';
  aggregate?: Maybe<Sis_Assegnazione_Unita_Operativa_Aggregate_Fields>;
  nodes: Array<Sis_Assegnazione_Unita_Operativa>;
};

/** aggregate fields of "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Aggregate_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_aggregate_fields';
  avg?: Maybe<Sis_Assegnazione_Unita_Operativa_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Assegnazione_Unita_Operativa_Max_Fields>;
  min?: Maybe<Sis_Assegnazione_Unita_Operativa_Min_Fields>;
  stddev?: Maybe<Sis_Assegnazione_Unita_Operativa_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Assegnazione_Unita_Operativa_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Assegnazione_Unita_Operativa_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Assegnazione_Unita_Operativa_Sum_Fields>;
  var_pop?: Maybe<Sis_Assegnazione_Unita_Operativa_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Assegnazione_Unita_Operativa_Var_Samp_Fields>;
  variance?: Maybe<Sis_Assegnazione_Unita_Operativa_Variance_Fields>;
};


/** aggregate fields of "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Aggregate_Order_By = {
  avg?: Maybe<Sis_Assegnazione_Unita_Operativa_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Assegnazione_Unita_Operativa_Max_Order_By>;
  min?: Maybe<Sis_Assegnazione_Unita_Operativa_Min_Order_By>;
  stddev?: Maybe<Sis_Assegnazione_Unita_Operativa_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Assegnazione_Unita_Operativa_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Assegnazione_Unita_Operativa_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Assegnazione_Unita_Operativa_Sum_Order_By>;
  var_pop?: Maybe<Sis_Assegnazione_Unita_Operativa_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Assegnazione_Unita_Operativa_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Assegnazione_Unita_Operativa_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Sis_Assegnazione_Unita_Operativa_Append_Input = {
  membro?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Arr_Rel_Insert_Input = {
  data: Array<Sis_Assegnazione_Unita_Operativa_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Assegnazione_Unita_Operativa_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Assegnazione_Unita_Operativa_Avg_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_avg_fields';
  id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Avg_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.assegnazione_unita_operativa". All fields are combined with a logical 'AND'. */
export type Sis_Assegnazione_Unita_Operativa_Bool_Exp = {
  _and?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Bool_Exp>>;
  _not?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
  _or?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Bool_Exp>>;
  caposquadra?: Maybe<Boolean_Comparison_Exp>;
  fine_validita?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  inizio_validita?: Maybe<Timestamptz_Comparison_Exp>;
  membro?: Maybe<Jsonb_Comparison_Exp>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
  unita_operativa_id?: Maybe<Int_Comparison_Exp>;
  username?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.assegnazione_unita_operativa" */
export enum Sis_Assegnazione_Unita_Operativa_Constraint {
  /** unique or primary key constraint */
  AssegnazioneUnitaOperativaPkey = 'assegnazione_unita_operativa_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Sis_Assegnazione_Unita_Operativa_Delete_At_Path_Input = {
  membro?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Sis_Assegnazione_Unita_Operativa_Delete_Elem_Input = {
  membro?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Sis_Assegnazione_Unita_Operativa_Delete_Key_Input = {
  membro?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Insert_Input = {
  caposquadra?: Maybe<Scalars['Boolean']>;
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  membro?: Maybe<Scalars['jsonb']>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Obj_Rel_Insert_Input>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Sis_Assegnazione_Unita_Operativa_Max_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_max_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Max_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Assegnazione_Unita_Operativa_Min_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_min_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Min_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Mutation_Response = {
  __typename?: 'sis_assegnazione_unita_operativa_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Assegnazione_Unita_Operativa>;
};

/** on_conflict condition type for table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_On_Conflict = {
  constraint: Sis_Assegnazione_Unita_Operativa_Constraint;
  update_columns?: Array<Sis_Assegnazione_Unita_Operativa_Update_Column>;
  where?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.assegnazione_unita_operativa". */
export type Sis_Assegnazione_Unita_Operativa_Order_By = {
  caposquadra?: Maybe<Order_By>;
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  membro?: Maybe<Order_By>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
  username?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_assegnazione_unita_operativa */
export type Sis_Assegnazione_Unita_Operativa_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Sis_Assegnazione_Unita_Operativa_Prepend_Input = {
  membro?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "sis.assegnazione_unita_operativa" */
export enum Sis_Assegnazione_Unita_Operativa_Select_Column {
  /** column name */
  Caposquadra = 'caposquadra',
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  Membro = 'membro',
  /** column name */
  UnitaOperativaId = 'unita_operativa_id',
  /** column name */
  Username = 'username'
}

/** input type for updating data in table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Set_Input = {
  caposquadra?: Maybe<Scalars['Boolean']>;
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  membro?: Maybe<Scalars['jsonb']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Sis_Assegnazione_Unita_Operativa_Stddev_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Assegnazione_Unita_Operativa_Stddev_Pop_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Assegnazione_Unita_Operativa_Stddev_Samp_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Assegnazione_Unita_Operativa_Sum_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_sum_fields';
  id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Sum_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** update columns of table "sis.assegnazione_unita_operativa" */
export enum Sis_Assegnazione_Unita_Operativa_Update_Column {
  /** column name */
  Caposquadra = 'caposquadra',
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  Membro = 'membro',
  /** column name */
  UnitaOperativaId = 'unita_operativa_id',
  /** column name */
  Username = 'username'
}

/** aggregate var_pop on columns */
export type Sis_Assegnazione_Unita_Operativa_Var_Pop_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Assegnazione_Unita_Operativa_Var_Samp_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Assegnazione_Unita_Operativa_Variance_Fields = {
  __typename?: 'sis_assegnazione_unita_operativa_variance_fields';
  id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.assegnazione_unita_operativa" */
export type Sis_Assegnazione_Unita_Operativa_Variance_Order_By = {
  id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo = {
  __typename?: 'sis_associazione_conseguenza_veicolo';
  /** An object relationship */
  conseguenza_veicolo: Sis__Conseguenza_Veicolo;
  conseguenza_veicolo_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Aggregate = {
  __typename?: 'sis_associazione_conseguenza_veicolo_aggregate';
  aggregate?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Conseguenza_Veicolo>;
};

/** aggregate fields of "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Aggregate_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Max_Fields>;
  min?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Conseguenza_Veicolo_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Conseguenza_Veicolo_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Avg_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_avg_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Avg_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_conseguenza_veicolo". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Conseguenza_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>>;
  conseguenza_veicolo?: Maybe<Sis__Conseguenza_Veicolo_Bool_Exp>;
  conseguenza_veicolo_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_conseguenza_veicolo" */
export enum Sis_Associazione_Conseguenza_Veicolo_Constraint {
  /** unique or primary key constraint */
  AssociazioneConseguenzaVeicoloPkey = 'associazione_conseguenza_veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Inc_Input = {
  conseguenza_veicolo_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Insert_Input = {
  conseguenza_veicolo?: Maybe<Sis__Conseguenza_Veicolo_Obj_Rel_Insert_Input>;
  conseguenza_veicolo_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Max_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_max_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Max_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Min_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_min_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Min_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Mutation_Response = {
  __typename?: 'sis_associazione_conseguenza_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Conseguenza_Veicolo>;
};

/** on_conflict condition type for table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_On_Conflict = {
  constraint: Sis_Associazione_Conseguenza_Veicolo_Constraint;
  update_columns?: Array<Sis_Associazione_Conseguenza_Veicolo_Update_Column>;
  where?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_conseguenza_veicolo". */
export type Sis_Associazione_Conseguenza_Veicolo_Order_By = {
  conseguenza_veicolo?: Maybe<Sis__Conseguenza_Veicolo_Order_By>;
  conseguenza_veicolo_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_conseguenza_veicolo */
export type Sis_Associazione_Conseguenza_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_conseguenza_veicolo" */
export enum Sis_Associazione_Conseguenza_Veicolo_Select_Column {
  /** column name */
  ConseguenzaVeicoloId = 'conseguenza_veicolo_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Set_Input = {
  conseguenza_veicolo_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Stddev_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_stddev_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Stddev_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_stddev_pop_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Stddev_Pop_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_stddev_samp_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Stddev_Samp_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Sum_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_sum_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Sum_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_conseguenza_veicolo" */
export enum Sis_Associazione_Conseguenza_Veicolo_Update_Column {
  /** column name */
  ConseguenzaVeicoloId = 'conseguenza_veicolo_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_var_pop_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Var_Pop_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_var_samp_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Var_Samp_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Conseguenza_Veicolo_Variance_Fields = {
  __typename?: 'sis_associazione_conseguenza_veicolo_variance_fields';
  conseguenza_veicolo_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_conseguenza_veicolo" */
export type Sis_Associazione_Conseguenza_Veicolo_Variance_Order_By = {
  conseguenza_veicolo_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie = {
  __typename?: 'sis_associazione_decessi_tipologie';
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  decessi_tipologia: Sis__Decessi_Tipologia;
  decessi_tipologia_id: Scalars['Int'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Aggregate = {
  __typename?: 'sis_associazione_decessi_tipologie_aggregate';
  aggregate?: Maybe<Sis_Associazione_Decessi_Tipologie_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Decessi_Tipologie>;
};

/** aggregate fields of "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Aggregate_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Decessi_Tipologie_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Decessi_Tipologie_Max_Fields>;
  min?: Maybe<Sis_Associazione_Decessi_Tipologie_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Decessi_Tipologie_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Decessi_Tipologie_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Decessi_Tipologie_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Decessi_Tipologie_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Decessi_Tipologie_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Decessi_Tipologie_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Decessi_Tipologie_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Decessi_Tipologie_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Decessi_Tipologie_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Decessi_Tipologie_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Decessi_Tipologie_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Decessi_Tipologie_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Decessi_Tipologie_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Decessi_Tipologie_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Decessi_Tipologie_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Decessi_Tipologie_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Decessi_Tipologie_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Decessi_Tipologie_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Decessi_Tipologie_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Decessi_Tipologie_Avg_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_avg_fields';
  decessi_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Avg_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_decessi_tipologie". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Decessi_Tipologie_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  decessi_tipologia?: Maybe<Sis__Decessi_Tipologia_Bool_Exp>;
  decessi_tipologia_id?: Maybe<Int_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_decessi_tipologie" */
export enum Sis_Associazione_Decessi_Tipologie_Constraint {
  /** unique or primary key constraint */
  AssociazioneDecessiTipologiePkey = 'associazione_decessi_tipologie_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Inc_Input = {
  decessi_tipologia_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  decessi_tipologia?: Maybe<Sis__Decessi_Tipologia_Obj_Rel_Insert_Input>;
  decessi_tipologia_id?: Maybe<Scalars['Int']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Decessi_Tipologie_Max_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  decessi_tipologia_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Decessi_Tipologie_Min_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  decessi_tipologia_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Mutation_Response = {
  __typename?: 'sis_associazione_decessi_tipologie_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Decessi_Tipologie>;
};

/** on_conflict condition type for table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_On_Conflict = {
  constraint: Sis_Associazione_Decessi_Tipologie_Constraint;
  update_columns?: Array<Sis_Associazione_Decessi_Tipologie_Update_Column>;
  where?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_decessi_tipologie". */
export type Sis_Associazione_Decessi_Tipologie_Order_By = {
  created_at?: Maybe<Order_By>;
  decessi_tipologia?: Maybe<Sis__Decessi_Tipologia_Order_By>;
  decessi_tipologia_id?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_decessi_tipologie */
export type Sis_Associazione_Decessi_Tipologie_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_decessi_tipologie" */
export enum Sis_Associazione_Decessi_Tipologie_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DecessiTipologiaId = 'decessi_tipologia_id',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  decessi_tipologia_id?: Maybe<Scalars['Int']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Decessi_Tipologie_Stddev_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_stddev_fields';
  decessi_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Stddev_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Decessi_Tipologie_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_stddev_pop_fields';
  decessi_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Stddev_Pop_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Decessi_Tipologie_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_stddev_samp_fields';
  decessi_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Stddev_Samp_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Decessi_Tipologie_Sum_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_sum_fields';
  decessi_tipologia_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Sum_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_decessi_tipologie" */
export enum Sis_Associazione_Decessi_Tipologie_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DecessiTipologiaId = 'decessi_tipologia_id',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Decessi_Tipologie_Var_Pop_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_var_pop_fields';
  decessi_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Var_Pop_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Decessi_Tipologie_Var_Samp_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_var_samp_fields';
  decessi_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Var_Samp_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Decessi_Tipologie_Variance_Fields = {
  __typename?: 'sis_associazione_decessi_tipologie_variance_fields';
  decessi_tipologia_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_decessi_tipologie" */
export type Sis_Associazione_Decessi_Tipologie_Variance_Order_By = {
  decessi_tipologia_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento = {
  __typename?: 'sis_associazione_ente_primo_intervento';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  /** An object relationship */
  ente: Sis__Ente;
  ente_id: Scalars['Int'];
  id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  targa_auto?: Maybe<Scalars['String']>;
  tipo?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Aggregate = {
  __typename?: 'sis_associazione_ente_primo_intervento_aggregate';
  aggregate?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Ente_Primo_Intervento>;
};

/** aggregate fields of "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Aggregate_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Max_Fields>;
  min?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Ente_Primo_Intervento_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Ente_Primo_Intervento_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Avg_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_avg_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Avg_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_ente_primo_intervento". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Ente_Primo_Intervento_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  ente?: Maybe<Sis__Ente_Bool_Exp>;
  ente_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  targa_auto?: Maybe<String_Comparison_Exp>;
  tipo?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_ente_primo_intervento" */
export enum Sis_Associazione_Ente_Primo_Intervento_Constraint {
  /** unique or primary key constraint */
  AssociazioneEntePrimoInterventoPkey = 'associazione_ente_primo_intervento_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Inc_Input = {
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  ente?: Maybe<Sis__Ente_Obj_Rel_Insert_Input>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  targa_auto?: Maybe<Scalars['String']>;
  tipo?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Max_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  targa_auto?: Maybe<Scalars['String']>;
  tipo?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  targa_auto?: Maybe<Order_By>;
  tipo?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Min_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  targa_auto?: Maybe<Scalars['String']>;
  tipo?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  targa_auto?: Maybe<Order_By>;
  tipo?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Mutation_Response = {
  __typename?: 'sis_associazione_ente_primo_intervento_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Ente_Primo_Intervento>;
};

/** on_conflict condition type for table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_On_Conflict = {
  constraint: Sis_Associazione_Ente_Primo_Intervento_Constraint;
  update_columns?: Array<Sis_Associazione_Ente_Primo_Intervento_Update_Column>;
  where?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_ente_primo_intervento". */
export type Sis_Associazione_Ente_Primo_Intervento_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  ente?: Maybe<Sis__Ente_Order_By>;
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  targa_auto?: Maybe<Order_By>;
  tipo?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_ente_primo_intervento */
export type Sis_Associazione_Ente_Primo_Intervento_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_ente_primo_intervento" */
export enum Sis_Associazione_Ente_Primo_Intervento_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EnteId = 'ente_id',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  TargaAuto = 'targa_auto',
  /** column name */
  Tipo = 'tipo',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  targa_auto?: Maybe<Scalars['String']>;
  tipo?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Stddev_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_stddev_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Stddev_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_stddev_pop_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Stddev_Pop_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_stddev_samp_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Stddev_Samp_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Sum_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_sum_fields';
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Sum_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_ente_primo_intervento" */
export enum Sis_Associazione_Ente_Primo_Intervento_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EnteId = 'ente_id',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  TargaAuto = 'targa_auto',
  /** column name */
  Tipo = 'tipo',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Var_Pop_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_var_pop_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Var_Pop_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Var_Samp_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_var_samp_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Var_Samp_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Ente_Primo_Intervento_Variance_Fields = {
  __typename?: 'sis_associazione_ente_primo_intervento_variance_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_ente_primo_intervento" */
export type Sis_Associazione_Ente_Primo_Intervento_Variance_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  /** An object relationship */
  ente_secondario: Sis__Ente_Secondario;
  ente_secondario_intervenuti_id: Scalars['Int'];
  id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_aggregate';
  aggregate?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Ente_Secondario_Intervenuti>;
};

/** aggregate fields of "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Max_Fields>;
  min?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Ente_Secondario_Intervenuti_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Avg_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_avg_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Avg_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_ente_secondario_intervenuti". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  ente_secondario?: Maybe<Sis__Ente_Secondario_Bool_Exp>;
  ente_secondario_intervenuti_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_ente_secondario_intervenuti" */
export enum Sis_Associazione_Ente_Secondario_Intervenuti_Constraint {
  /** unique or primary key constraint */
  AssociazioneEnteSecondarioIntervenutiPkey = 'associazione_ente_secondario_intervenuti_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Inc_Input = {
  ente_secondario_intervenuti_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  ente_secondario?: Maybe<Sis__Ente_Secondario_Obj_Rel_Insert_Input>;
  ente_secondario_intervenuti_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Max_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ente_secondario_intervenuti_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Min_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ente_secondario_intervenuti_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Mutation_Response = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Ente_Secondario_Intervenuti>;
};

/** on_conflict condition type for table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_On_Conflict = {
  constraint: Sis_Associazione_Ente_Secondario_Intervenuti_Constraint;
  update_columns?: Array<Sis_Associazione_Ente_Secondario_Intervenuti_Update_Column>;
  where?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_ente_secondario_intervenuti". */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  ente_secondario?: Maybe<Sis__Ente_Secondario_Order_By>;
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_ente_secondario_intervenuti */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_ente_secondario_intervenuti" */
export enum Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EnteSecondarioIntervenutiId = 'ente_secondario_intervenuti_id',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  ente_secondario_intervenuti_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_stddev_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_stddev_pop_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Pop_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_stddev_samp_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Stddev_Samp_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Sum_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_sum_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Sum_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_ente_secondario_intervenuti" */
export enum Sis_Associazione_Ente_Secondario_Intervenuti_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EnteSecondarioIntervenutiId = 'ente_secondario_intervenuti_id',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Var_Pop_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_var_pop_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Var_Pop_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Var_Samp_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_var_samp_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Var_Samp_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Variance_Fields = {
  __typename?: 'sis_associazione_ente_secondario_intervenuti_variance_fields';
  ente_secondario_intervenuti_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_ente_secondario_intervenuti" */
export type Sis_Associazione_Ente_Secondario_Intervenuti_Variance_Order_By = {
  ente_secondario_intervenuti_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore = {
  __typename?: 'sis_associazione_ente_segnalatore';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  /** An object relationship */
  ente: Sis__Ente;
  ente_id: Scalars['Int'];
  id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Aggregate = {
  __typename?: 'sis_associazione_ente_segnalatore_aggregate';
  aggregate?: Maybe<Sis_Associazione_Ente_Segnalatore_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Ente_Segnalatore>;
};

/** aggregate fields of "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Aggregate_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Ente_Segnalatore_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Ente_Segnalatore_Max_Fields>;
  min?: Maybe<Sis_Associazione_Ente_Segnalatore_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Ente_Segnalatore_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Ente_Segnalatore_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Ente_Segnalatore_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Ente_Segnalatore_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Ente_Segnalatore_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Ente_Segnalatore_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Ente_Segnalatore_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Ente_Segnalatore_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Ente_Segnalatore_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Ente_Segnalatore_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Ente_Segnalatore_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Ente_Segnalatore_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Ente_Segnalatore_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Ente_Segnalatore_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Ente_Segnalatore_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Ente_Segnalatore_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Ente_Segnalatore_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Ente_Segnalatore_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Ente_Segnalatore_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Ente_Segnalatore_Avg_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_avg_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Avg_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_ente_segnalatore". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Ente_Segnalatore_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  ente?: Maybe<Sis__Ente_Bool_Exp>;
  ente_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_ente_segnalatore" */
export enum Sis_Associazione_Ente_Segnalatore_Constraint {
  /** unique or primary key constraint */
  AssociazioneEnteSegnalatorePkey = 'associazione_ente_segnalatore_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Inc_Input = {
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  ente?: Maybe<Sis__Ente_Obj_Rel_Insert_Input>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Ente_Segnalatore_Max_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Ente_Segnalatore_Min_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Mutation_Response = {
  __typename?: 'sis_associazione_ente_segnalatore_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Ente_Segnalatore>;
};

/** on_conflict condition type for table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_On_Conflict = {
  constraint: Sis_Associazione_Ente_Segnalatore_Constraint;
  update_columns?: Array<Sis_Associazione_Ente_Segnalatore_Update_Column>;
  where?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_ente_segnalatore". */
export type Sis_Associazione_Ente_Segnalatore_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  ente?: Maybe<Sis__Ente_Order_By>;
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_ente_segnalatore */
export type Sis_Associazione_Ente_Segnalatore_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_ente_segnalatore" */
export enum Sis_Associazione_Ente_Segnalatore_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EnteId = 'ente_id',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Ente_Segnalatore_Stddev_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_stddev_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Stddev_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Ente_Segnalatore_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_stddev_pop_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Stddev_Pop_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Ente_Segnalatore_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_stddev_samp_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Stddev_Samp_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Ente_Segnalatore_Sum_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_sum_fields';
  ente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Sum_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_ente_segnalatore" */
export enum Sis_Associazione_Ente_Segnalatore_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  EnteId = 'ente_id',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Ente_Segnalatore_Var_Pop_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_var_pop_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Var_Pop_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Ente_Segnalatore_Var_Samp_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_var_samp_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Var_Samp_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Ente_Segnalatore_Variance_Fields = {
  __typename?: 'sis_associazione_ente_segnalatore_variance_fields';
  ente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_ente_segnalatore" */
export type Sis_Associazione_Ente_Segnalatore_Variance_Order_By = {
  ente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico = {
  __typename?: 'sis_associazione_impianto_semaforico';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  impianto_semaforico: Sis__Impianto_Semaforico;
  impianto_semaforico_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Aggregate = {
  __typename?: 'sis_associazione_impianto_semaforico_aggregate';
  aggregate?: Maybe<Sis_Associazione_Impianto_Semaforico_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Impianto_Semaforico>;
};

/** aggregate fields of "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Aggregate_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Impianto_Semaforico_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Impianto_Semaforico_Max_Fields>;
  min?: Maybe<Sis_Associazione_Impianto_Semaforico_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Impianto_Semaforico_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Impianto_Semaforico_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Impianto_Semaforico_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Impianto_Semaforico_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Impianto_Semaforico_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Impianto_Semaforico_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Impianto_Semaforico_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Impianto_Semaforico_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Impianto_Semaforico_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Impianto_Semaforico_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Impianto_Semaforico_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Impianto_Semaforico_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Impianto_Semaforico_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Impianto_Semaforico_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Impianto_Semaforico_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Impianto_Semaforico_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Impianto_Semaforico_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Impianto_Semaforico_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Impianto_Semaforico_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Impianto_Semaforico_Avg_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_avg_fields';
  id?: Maybe<Scalars['Float']>;
  impianto_semaforico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Avg_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_impianto_semaforico". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Impianto_Semaforico_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  impianto_semaforico?: Maybe<Sis__Impianto_Semaforico_Bool_Exp>;
  impianto_semaforico_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_impianto_semaforico" */
export enum Sis_Associazione_Impianto_Semaforico_Constraint {
  /** unique or primary key constraint */
  AssociazioneImpiantoSemaforicoPkey = 'associazione_impianto_semaforico_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico?: Maybe<Sis__Impianto_Semaforico_Obj_Rel_Insert_Input>;
  impianto_semaforico_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Impianto_Semaforico_Max_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Impianto_Semaforico_Min_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Mutation_Response = {
  __typename?: 'sis_associazione_impianto_semaforico_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Impianto_Semaforico>;
};

/** on_conflict condition type for table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_On_Conflict = {
  constraint: Sis_Associazione_Impianto_Semaforico_Constraint;
  update_columns?: Array<Sis_Associazione_Impianto_Semaforico_Update_Column>;
  where?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_impianto_semaforico". */
export type Sis_Associazione_Impianto_Semaforico_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_semaforico?: Maybe<Sis__Impianto_Semaforico_Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_impianto_semaforico */
export type Sis_Associazione_Impianto_Semaforico_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_impianto_semaforico" */
export enum Sis_Associazione_Impianto_Semaforico_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  ImpiantoSemaforicoId = 'impianto_semaforico_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Impianto_Semaforico_Stddev_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  impianto_semaforico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Impianto_Semaforico_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  impianto_semaforico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Impianto_Semaforico_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  impianto_semaforico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Impianto_Semaforico_Sum_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_sum_fields';
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Sum_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_impianto_semaforico" */
export enum Sis_Associazione_Impianto_Semaforico_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  ImpiantoSemaforicoId = 'impianto_semaforico_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Impianto_Semaforico_Var_Pop_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  impianto_semaforico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Impianto_Semaforico_Var_Samp_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  impianto_semaforico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Impianto_Semaforico_Variance_Fields = {
  __typename?: 'sis_associazione_impianto_semaforico_variance_fields';
  id?: Maybe<Scalars['Float']>;
  impianto_semaforico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_impianto_semaforico" */
export type Sis_Associazione_Impianto_Semaforico_Variance_Order_By = {
  id?: Maybe<Order_By>;
  impianto_semaforico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato = {
  __typename?: 'sis_associazione_informazioni_infortunato';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  informazione: Sis__Infortunato_Informazione;
  informazione_id: Scalars['Int'];
  /** An object relationship */
  infortunato: Sis_Infortunato;
  infortunato_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Aggregate = {
  __typename?: 'sis_associazione_informazioni_infortunato_aggregate';
  aggregate?: Maybe<Sis_Associazione_Informazioni_Infortunato_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Informazioni_Infortunato>;
};

/** aggregate fields of "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Aggregate_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Informazioni_Infortunato_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Informazioni_Infortunato_Max_Fields>;
  min?: Maybe<Sis_Associazione_Informazioni_Infortunato_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Informazioni_Infortunato_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Informazioni_Infortunato_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Informazioni_Infortunato_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Informazioni_Infortunato_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Informazioni_Infortunato_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Informazioni_Infortunato_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Informazioni_Infortunato_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Informazioni_Infortunato_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Informazioni_Infortunato_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Informazioni_Infortunato_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Informazioni_Infortunato_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Informazioni_Infortunato_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Informazioni_Infortunato_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Informazioni_Infortunato_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Informazioni_Infortunato_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Informazioni_Infortunato_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Informazioni_Infortunato_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Informazioni_Infortunato_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Informazioni_Infortunato_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Informazioni_Infortunato_Avg_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_avg_fields';
  id?: Maybe<Scalars['Float']>;
  informazione_id?: Maybe<Scalars['Float']>;
  infortunato_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Avg_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_informazioni_infortunato". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Informazioni_Infortunato_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  informazione?: Maybe<Sis__Infortunato_Informazione_Bool_Exp>;
  informazione_id?: Maybe<Int_Comparison_Exp>;
  infortunato?: Maybe<Sis_Infortunato_Bool_Exp>;
  infortunato_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_informazioni_infortunato" */
export enum Sis_Associazione_Informazioni_Infortunato_Constraint {
  /** unique or primary key constraint */
  AssociazioneInformazioniInfortunatoPkey = 'associazione_informazioni_infortunato_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  informazione_id?: Maybe<Scalars['Int']>;
  infortunato_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  informazione?: Maybe<Sis__Infortunato_Informazione_Obj_Rel_Insert_Input>;
  informazione_id?: Maybe<Scalars['Int']>;
  infortunato?: Maybe<Sis_Infortunato_Obj_Rel_Insert_Input>;
  infortunato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Informazioni_Infortunato_Max_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  informazione_id?: Maybe<Scalars['Int']>;
  infortunato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Informazioni_Infortunato_Min_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  informazione_id?: Maybe<Scalars['Int']>;
  infortunato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Mutation_Response = {
  __typename?: 'sis_associazione_informazioni_infortunato_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Informazioni_Infortunato>;
};

/** on_conflict condition type for table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_On_Conflict = {
  constraint: Sis_Associazione_Informazioni_Infortunato_Constraint;
  update_columns?: Array<Sis_Associazione_Informazioni_Infortunato_Update_Column>;
  where?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_informazioni_infortunato". */
export type Sis_Associazione_Informazioni_Infortunato_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  informazione?: Maybe<Sis__Infortunato_Informazione_Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato?: Maybe<Sis_Infortunato_Order_By>;
  infortunato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_informazioni_infortunato */
export type Sis_Associazione_Informazioni_Infortunato_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_informazioni_infortunato" */
export enum Sis_Associazione_Informazioni_Infortunato_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InformazioneId = 'informazione_id',
  /** column name */
  InfortunatoId = 'infortunato_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  informazione_id?: Maybe<Scalars['Int']>;
  infortunato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Informazioni_Infortunato_Stddev_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  informazione_id?: Maybe<Scalars['Float']>;
  infortunato_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Informazioni_Infortunato_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  informazione_id?: Maybe<Scalars['Float']>;
  infortunato_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Informazioni_Infortunato_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  informazione_id?: Maybe<Scalars['Float']>;
  infortunato_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Informazioni_Infortunato_Sum_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_sum_fields';
  id?: Maybe<Scalars['Int']>;
  informazione_id?: Maybe<Scalars['Int']>;
  infortunato_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Sum_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_informazioni_infortunato" */
export enum Sis_Associazione_Informazioni_Infortunato_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  InformazioneId = 'informazione_id',
  /** column name */
  InfortunatoId = 'infortunato_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Informazioni_Infortunato_Var_Pop_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  informazione_id?: Maybe<Scalars['Float']>;
  infortunato_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Informazioni_Infortunato_Var_Samp_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  informazione_id?: Maybe<Scalars['Float']>;
  infortunato_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Informazioni_Infortunato_Variance_Fields = {
  __typename?: 'sis_associazione_informazioni_infortunato_variance_fields';
  id?: Maybe<Scalars['Float']>;
  informazione_id?: Maybe<Scalars['Float']>;
  infortunato_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_informazioni_infortunato" */
export type Sis_Associazione_Informazioni_Infortunato_Variance_Order_By = {
  id?: Maybe<Order_By>;
  informazione_id?: Maybe<Order_By>;
  infortunato_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro = {
  __typename?: 'sis_associazione_localizzazione_altro';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_altro: Sis__Localizzazione_Altro;
  localizzazione_altro_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_altro_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Altro_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Altro>;
};

/** aggregate fields of "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Altro_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Altro_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Altro_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Altro_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Altro_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Altro_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Altro_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Altro_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Altro_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Altro_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Altro_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Altro_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Altro_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Altro_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Altro_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Altro_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Altro_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Altro_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Altro_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Altro_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Altro_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Altro_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Altro_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_altro_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_altro". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Altro_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_altro?: Maybe<Sis__Localizzazione_Altro_Bool_Exp>;
  localizzazione_altro_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_altro" */
export enum Sis_Associazione_Localizzazione_Altro_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneAltroPkey = 'associazione_localizzazione_altro_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_altro_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_altro?: Maybe<Sis__Localizzazione_Altro_Obj_Rel_Insert_Input>;
  localizzazione_altro_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Altro_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_altro_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Altro_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_altro_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_altro_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Altro>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Altro_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Altro_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_altro". */
export type Sis_Associazione_Localizzazione_Altro_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_altro?: Maybe<Sis__Localizzazione_Altro_Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_altro */
export type Sis_Associazione_Localizzazione_Altro_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_altro" */
export enum Sis_Associazione_Localizzazione_Altro_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneAltroId = 'localizzazione_altro_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_altro_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Altro_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_altro_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Altro_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_altro_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Altro_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_altro_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Altro_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_altro_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_altro" */
export enum Sis_Associazione_Localizzazione_Altro_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneAltroId = 'localizzazione_altro_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Altro_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_altro_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Altro_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_altro_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Altro_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_altro_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_altro_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_altro" */
export type Sis_Associazione_Localizzazione_Altro_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_altro_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_condizioni_atmosferiche: Sis__Localizzazione_Condizioni_Atmosferiche;
  localizzazione_condizioni_atmosferiche_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
};

/** aggregate fields of "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_condizioni_atmosferiche". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_condizioni_atmosferiche?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export enum Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneCondizioniAtmosferichePkey = 'associazione_localizzazione_condizioni_atmosferiche_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_atmosferiche?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Obj_Rel_Insert_Input>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_condizioni_atmosferiche". */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_condizioni_atmosferiche */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export enum Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneCondizioniAtmosfericheId = 'localizzazione_condizioni_atmosferiche_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export enum Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneCondizioniAtmosfericheId = 'localizzazione_condizioni_atmosferiche_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_condizioni_atmosferiche" */
export type Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_extra_abitato: Sis__Localizzazione_Extra_Abitato;
  localizzazione_extra_abitato_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Extra_Abitato>;
};

/** aggregate fields of "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Extra_Abitato_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_extra_abitato". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_extra_abitato?: Maybe<Sis__Localizzazione_Extra_Abitato_Bool_Exp>;
  localizzazione_extra_abitato_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_extra_abitato" */
export enum Sis_Associazione_Localizzazione_Extra_Abitato_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneExtraAbitatoPkey = 'associazione_localizzazione_extra_abitato_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_extra_abitato?: Maybe<Sis__Localizzazione_Extra_Abitato_Obj_Rel_Insert_Input>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Extra_Abitato>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Extra_Abitato_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Extra_Abitato_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_extra_abitato". */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato?: Maybe<Sis__Localizzazione_Extra_Abitato_Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_extra_abitato */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_extra_abitato" */
export enum Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneExtraAbitatoId = 'localizzazione_extra_abitato_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_extra_abitato" */
export enum Sis_Associazione_Localizzazione_Extra_Abitato_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneExtraAbitatoId = 'localizzazione_extra_abitato_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_extra_abitato_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_extra_abitato_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_extra_abitato" */
export type Sis_Associazione_Localizzazione_Extra_Abitato_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_extra_abitato_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_fondo_stradale: Sis__Localizzazione_Fondo_Stradale;
  localizzazione_fondo_stradale_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Fondo_Stradale>;
};

/** aggregate fields of "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_fondo_stradale". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_fondo_stradale?: Maybe<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>;
  localizzazione_fondo_stradale_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_fondo_stradale" */
export enum Sis_Associazione_Localizzazione_Fondo_Stradale_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneFondoStradalePkey = 'associazione_localizzazione_fondo_stradale_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_fondo_stradale?: Maybe<Sis__Localizzazione_Fondo_Stradale_Obj_Rel_Insert_Input>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Fondo_Stradale>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Fondo_Stradale_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_fondo_stradale". */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale?: Maybe<Sis__Localizzazione_Fondo_Stradale_Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_fondo_stradale */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_fondo_stradale" */
export enum Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneFondoStradaleId = 'localizzazione_fondo_stradale_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_fondo_stradale" */
export enum Sis_Associazione_Localizzazione_Fondo_Stradale_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneFondoStradaleId = 'localizzazione_fondo_stradale_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_fondo_stradale_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_fondo_stradale_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_fondo_stradale" */
export type Sis_Associazione_Localizzazione_Fondo_Stradale_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_fondo_stradale_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione = {
  __typename?: 'sis_associazione_localizzazione_illuminazione';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_illuminazione: Sis__Localizzazione_Illuminazione;
  localizzazione_illuminazione_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Illuminazione>;
};

/** aggregate fields of "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Illuminazione_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_illuminazione". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_illuminazione?: Maybe<Sis__Localizzazione_Illuminazione_Bool_Exp>;
  localizzazione_illuminazione_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_illuminazione" */
export enum Sis_Associazione_Localizzazione_Illuminazione_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneIlluminazionePkey = 'associazione_localizzazione_illuminazione_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_illuminazione?: Maybe<Sis__Localizzazione_Illuminazione_Obj_Rel_Insert_Input>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Illuminazione>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Illuminazione_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Illuminazione_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_illuminazione". */
export type Sis_Associazione_Localizzazione_Illuminazione_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_illuminazione?: Maybe<Sis__Localizzazione_Illuminazione_Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_illuminazione */
export type Sis_Associazione_Localizzazione_Illuminazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_illuminazione" */
export enum Sis_Associazione_Localizzazione_Illuminazione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneIlluminazioneId = 'localizzazione_illuminazione_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_illuminazione" */
export enum Sis_Associazione_Localizzazione_Illuminazione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneIlluminazioneId = 'localizzazione_illuminazione_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Illuminazione_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_illuminazione_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_illuminazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_illuminazione" */
export type Sis_Associazione_Localizzazione_Illuminazione_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_illuminazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_particolarita_strada: Sis__Localizzazione_Particolarita_Strada;
  localizzazione_particolarita_strada_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Particolarita_Strada>;
};

/** aggregate fields of "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_particolarita_strada". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_particolarita_strada?: Maybe<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>;
  localizzazione_particolarita_strada_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_particolarita_strada" */
export enum Sis_Associazione_Localizzazione_Particolarita_Strada_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneParticolaritaStradaPkey = 'associazione_localizzazione_particolarita_strada_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_particolarita_strada?: Maybe<Sis__Localizzazione_Particolarita_Strada_Obj_Rel_Insert_Input>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Particolarita_Strada>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Particolarita_Strada_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_particolarita_strada". */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada?: Maybe<Sis__Localizzazione_Particolarita_Strada_Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_particolarita_strada */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_particolarita_strada" */
export enum Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneParticolaritaStradaId = 'localizzazione_particolarita_strada_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_particolarita_strada" */
export enum Sis_Associazione_Localizzazione_Particolarita_Strada_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneParticolaritaStradaId = 'localizzazione_particolarita_strada_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_particolarita_strada_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_particolarita_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_particolarita_strada" */
export type Sis_Associazione_Localizzazione_Particolarita_Strada_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_particolarita_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_pavimentazione: Sis__Localizzazione_Pavimentazione;
  localizzazione_pavimentazione_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Pavimentazione>;
};

/** aggregate fields of "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Pavimentazione_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_pavimentazione". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_pavimentazione?: Maybe<Sis__Localizzazione_Pavimentazione_Bool_Exp>;
  localizzazione_pavimentazione_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_pavimentazione" */
export enum Sis_Associazione_Localizzazione_Pavimentazione_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazionePavimentazionePkey = 'associazione_localizzazione_pavimentazione_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_pavimentazione?: Maybe<Sis__Localizzazione_Pavimentazione_Obj_Rel_Insert_Input>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Pavimentazione>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Pavimentazione_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Pavimentazione_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_pavimentazione". */
export type Sis_Associazione_Localizzazione_Pavimentazione_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione?: Maybe<Sis__Localizzazione_Pavimentazione_Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_pavimentazione */
export type Sis_Associazione_Localizzazione_Pavimentazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_pavimentazione" */
export enum Sis_Associazione_Localizzazione_Pavimentazione_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazionePavimentazioneId = 'localizzazione_pavimentazione_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_pavimentazione" */
export enum Sis_Associazione_Localizzazione_Pavimentazione_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazionePavimentazioneId = 'localizzazione_pavimentazione_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Pavimentazione_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_pavimentazione_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_pavimentazione_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_pavimentazione" */
export type Sis_Associazione_Localizzazione_Pavimentazione_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_pavimentazione_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_tipo_strada: Sis__Localizzazione_Tipo_Strada;
  localizzazione_tipo_strada_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Tipo_Strada>;
};

/** aggregate fields of "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Tipo_Strada_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_tipo_strada". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_tipo_strada?: Maybe<Sis__Localizzazione_Tipo_Strada_Bool_Exp>;
  localizzazione_tipo_strada_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_tipo_strada" */
export enum Sis_Associazione_Localizzazione_Tipo_Strada_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneTipoStradaPkey = 'associazione_localizzazione_tipo_strada_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_tipo_strada?: Maybe<Sis__Localizzazione_Tipo_Strada_Obj_Rel_Insert_Input>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Tipo_Strada>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Tipo_Strada_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Tipo_Strada_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_tipo_strada". */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada?: Maybe<Sis__Localizzazione_Tipo_Strada_Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_tipo_strada */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_tipo_strada" */
export enum Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneTipoStradaId = 'localizzazione_tipo_strada_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_tipo_strada" */
export enum Sis_Associazione_Localizzazione_Tipo_Strada_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneTipoStradaId = 'localizzazione_tipo_strada_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_tipo_strada_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_tipo_strada_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_tipo_strada" */
export type Sis_Associazione_Localizzazione_Tipo_Strada_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_tipo_strada_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita = {
  __typename?: 'sis_associazione_localizzazione_visibilita';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_visibilita: Sis__Localizzazione_Visibilita;
  localizzazione_visibilita_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Aggregate = {
  __typename?: 'sis_associazione_localizzazione_visibilita_aggregate';
  aggregate?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Localizzazione_Visibilita>;
};

/** aggregate fields of "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Aggregate_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Max_Fields>;
  min?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Localizzazione_Visibilita_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Localizzazione_Visibilita_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Avg_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_localizzazione_visibilita". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Localizzazione_Visibilita_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_visibilita?: Maybe<Sis__Localizzazione_Visibilita_Bool_Exp>;
  localizzazione_visibilita_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_localizzazione_visibilita" */
export enum Sis_Associazione_Localizzazione_Visibilita_Constraint {
  /** unique or primary key constraint */
  AssociazioneLocalizzazioneVisibilitaPkey = 'associazione_localizzazione_visibilita_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_visibilita?: Maybe<Sis__Localizzazione_Visibilita_Obj_Rel_Insert_Input>;
  localizzazione_visibilita_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Max_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Min_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Mutation_Response = {
  __typename?: 'sis_associazione_localizzazione_visibilita_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Localizzazione_Visibilita>;
};

/** on_conflict condition type for table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_On_Conflict = {
  constraint: Sis_Associazione_Localizzazione_Visibilita_Constraint;
  update_columns?: Array<Sis_Associazione_Localizzazione_Visibilita_Update_Column>;
  where?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_localizzazione_visibilita". */
export type Sis_Associazione_Localizzazione_Visibilita_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_visibilita?: Maybe<Sis__Localizzazione_Visibilita_Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_localizzazione_visibilita */
export type Sis_Associazione_Localizzazione_Visibilita_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_localizzazione_visibilita" */
export enum Sis_Associazione_Localizzazione_Visibilita_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneVisibilitaId = 'localizzazione_visibilita_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Stddev_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Sum_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_localizzazione_visibilita" */
export enum Sis_Associazione_Localizzazione_Visibilita_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneVisibilitaId = 'localizzazione_visibilita_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Var_Pop_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Var_Samp_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Localizzazione_Visibilita_Variance_Fields = {
  __typename?: 'sis_associazione_localizzazione_visibilita_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_visibilita_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_localizzazione_visibilita" */
export type Sis_Associazione_Localizzazione_Visibilita_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_visibilita_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente = {
  __typename?: 'sis_associazione_natura_incidente';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  natura_incidente: Sis__Natura_Incidente;
  natura_incidente_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Aggregate = {
  __typename?: 'sis_associazione_natura_incidente_aggregate';
  aggregate?: Maybe<Sis_Associazione_Natura_Incidente_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Natura_Incidente>;
};

/** aggregate fields of "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Aggregate_Fields = {
  __typename?: 'sis_associazione_natura_incidente_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Natura_Incidente_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Natura_Incidente_Max_Fields>;
  min?: Maybe<Sis_Associazione_Natura_Incidente_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Natura_Incidente_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Natura_Incidente_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Natura_Incidente_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Natura_Incidente_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Natura_Incidente_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Natura_Incidente_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Natura_Incidente_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Natura_Incidente_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Natura_Incidente_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Natura_Incidente_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Natura_Incidente_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Natura_Incidente_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Natura_Incidente_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Natura_Incidente_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Natura_Incidente_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Natura_Incidente_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Natura_Incidente_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Natura_Incidente_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Natura_Incidente_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Natura_Incidente_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Natura_Incidente_Avg_Fields = {
  __typename?: 'sis_associazione_natura_incidente_avg_fields';
  id?: Maybe<Scalars['Float']>;
  natura_incidente_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Avg_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_natura_incidente". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Natura_Incidente_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Natura_Incidente_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Natura_Incidente_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  natura_incidente?: Maybe<Sis__Natura_Incidente_Bool_Exp>;
  natura_incidente_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_natura_incidente" */
export enum Sis_Associazione_Natura_Incidente_Constraint {
  /** unique or primary key constraint */
  AssociazioneNaturaIncidentePkey = 'associazione_natura_incidente_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  natura_incidente_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  natura_incidente?: Maybe<Sis__Natura_Incidente_Obj_Rel_Insert_Input>;
  natura_incidente_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Natura_Incidente_Max_Fields = {
  __typename?: 'sis_associazione_natura_incidente_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  natura_incidente_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Natura_Incidente_Min_Fields = {
  __typename?: 'sis_associazione_natura_incidente_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  natura_incidente_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Mutation_Response = {
  __typename?: 'sis_associazione_natura_incidente_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Natura_Incidente>;
};

/** on_conflict condition type for table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_On_Conflict = {
  constraint: Sis_Associazione_Natura_Incidente_Constraint;
  update_columns?: Array<Sis_Associazione_Natura_Incidente_Update_Column>;
  where?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_natura_incidente". */
export type Sis_Associazione_Natura_Incidente_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  natura_incidente?: Maybe<Sis__Natura_Incidente_Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_natura_incidente */
export type Sis_Associazione_Natura_Incidente_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_natura_incidente" */
export enum Sis_Associazione_Natura_Incidente_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NaturaIncidenteId = 'natura_incidente_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  natura_incidente_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Natura_Incidente_Stddev_Fields = {
  __typename?: 'sis_associazione_natura_incidente_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  natura_incidente_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Natura_Incidente_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_natura_incidente_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  natura_incidente_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Natura_Incidente_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_natura_incidente_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  natura_incidente_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Natura_Incidente_Sum_Fields = {
  __typename?: 'sis_associazione_natura_incidente_sum_fields';
  id?: Maybe<Scalars['Int']>;
  natura_incidente_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Sum_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_natura_incidente" */
export enum Sis_Associazione_Natura_Incidente_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NaturaIncidenteId = 'natura_incidente_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Natura_Incidente_Var_Pop_Fields = {
  __typename?: 'sis_associazione_natura_incidente_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  natura_incidente_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Natura_Incidente_Var_Samp_Fields = {
  __typename?: 'sis_associazione_natura_incidente_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  natura_incidente_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Natura_Incidente_Variance_Fields = {
  __typename?: 'sis_associazione_natura_incidente_variance_fields';
  id?: Maybe<Scalars['Float']>;
  natura_incidente_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_natura_incidente" */
export type Sis_Associazione_Natura_Incidente_Variance_Order_By = {
  id?: Maybe<Order_By>;
  natura_incidente_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_patente" */
export type Sis_Associazione_Patente = {
  __typename?: 'sis_associazione_patente';
  categoria_id: Scalars['Int'];
  /** An object relationship */
  conducente: Sis_Conducente;
  conducente_id: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  patente_categoria: Sis__Patente_Categoria;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_patente" */
export type Sis_Associazione_Patente_Aggregate = {
  __typename?: 'sis_associazione_patente_aggregate';
  aggregate?: Maybe<Sis_Associazione_Patente_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Patente>;
};

/** aggregate fields of "sis.associazione_patente" */
export type Sis_Associazione_Patente_Aggregate_Fields = {
  __typename?: 'sis_associazione_patente_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Patente_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Patente_Max_Fields>;
  min?: Maybe<Sis_Associazione_Patente_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Patente_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Patente_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Patente_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Patente_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Patente_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Patente_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Patente_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_patente" */
export type Sis_Associazione_Patente_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Patente_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Patente_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Patente_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Patente_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Patente_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Patente_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Patente_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Patente_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Patente_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Patente_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Patente_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Patente_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Patente_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Patente_Avg_Fields = {
  __typename?: 'sis_associazione_patente_avg_fields';
  categoria_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Avg_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_patente". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Patente_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Patente_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Patente_Bool_Exp>>;
  categoria_id?: Maybe<Int_Comparison_Exp>;
  conducente?: Maybe<Sis_Conducente_Bool_Exp>;
  conducente_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  patente_categoria?: Maybe<Sis__Patente_Categoria_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_patente" */
export enum Sis_Associazione_Patente_Constraint {
  /** unique or primary key constraint */
  AssociazionePatentePkey = 'associazione_patente_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Inc_Input = {
  categoria_id?: Maybe<Scalars['Int']>;
  conducente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Insert_Input = {
  categoria_id?: Maybe<Scalars['Int']>;
  conducente?: Maybe<Sis_Conducente_Obj_Rel_Insert_Input>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  patente_categoria?: Maybe<Sis__Patente_Categoria_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Patente_Max_Fields = {
  __typename?: 'sis_associazione_patente_max_fields';
  categoria_id?: Maybe<Scalars['Int']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Max_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Patente_Min_Fields = {
  __typename?: 'sis_associazione_patente_min_fields';
  categoria_id?: Maybe<Scalars['Int']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Min_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Mutation_Response = {
  __typename?: 'sis_associazione_patente_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Patente>;
};

/** on_conflict condition type for table "sis.associazione_patente" */
export type Sis_Associazione_Patente_On_Conflict = {
  constraint: Sis_Associazione_Patente_Constraint;
  update_columns?: Array<Sis_Associazione_Patente_Update_Column>;
  where?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_patente". */
export type Sis_Associazione_Patente_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente?: Maybe<Sis_Conducente_Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  patente_categoria?: Maybe<Sis__Patente_Categoria_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_patente */
export type Sis_Associazione_Patente_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_patente" */
export enum Sis_Associazione_Patente_Select_Column {
  /** column name */
  CategoriaId = 'categoria_id',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Set_Input = {
  categoria_id?: Maybe<Scalars['Int']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Patente_Stddev_Fields = {
  __typename?: 'sis_associazione_patente_stddev_fields';
  categoria_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Stddev_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Patente_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_patente_stddev_pop_fields';
  categoria_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Stddev_Pop_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Patente_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_patente_stddev_samp_fields';
  categoria_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Stddev_Samp_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Patente_Sum_Fields = {
  __typename?: 'sis_associazione_patente_sum_fields';
  categoria_id?: Maybe<Scalars['Int']>;
  conducente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Sum_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_patente" */
export enum Sis_Associazione_Patente_Update_Column {
  /** column name */
  CategoriaId = 'categoria_id',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Patente_Var_Pop_Fields = {
  __typename?: 'sis_associazione_patente_var_pop_fields';
  categoria_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Var_Pop_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Patente_Var_Samp_Fields = {
  __typename?: 'sis_associazione_patente_var_samp_fields';
  categoria_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Var_Samp_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Patente_Variance_Fields = {
  __typename?: 'sis_associazione_patente_variance_fields';
  categoria_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_patente" */
export type Sis_Associazione_Patente_Variance_Order_By = {
  categoria_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  posizione_finale_veicolo_carreggiata: Sis__Posizione_Finale_Veicolo_Carreggiata;
  posizione_finale_veicolo_carreggiata_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_aggregate';
  aggregate?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
};

/** aggregate fields of "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Max_Fields>;
  min?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Avg_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_avg_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Avg_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_posizione_finale_veicolo_carreggiata". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  posizione_finale_veicolo_carreggiata?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Constraint {
  /** unique or primary key constraint */
  AssociazionePosizioneFinaleVeicoloCarreggiataPkey = 'associazione_posizione_finale_veicolo_carreggiata_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_carreggiata?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Obj_Rel_Insert_Input>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Max_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Min_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Mutation_Response = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
};

/** on_conflict condition type for table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_On_Conflict = {
  constraint: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Constraint;
  update_columns?: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Update_Column>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_posizione_finale_veicolo_carreggiata". */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_posizione_finale_veicolo_carreggiata */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  PosizioneFinaleVeicoloCarreggiataId = 'posizione_finale_veicolo_carreggiata_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Sum_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_sum_fields';
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Sum_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  PosizioneFinaleVeicoloCarreggiataId = 'posizione_finale_veicolo_carreggiata_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Pop_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Samp_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Variance_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata_variance_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_posizione_finale_veicolo_carreggiata" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Variance_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  posizione_finale_veicolo_fuori_sede: Sis__Posizione_Finale_Veicolo_Fuori_Sede;
  posizione_finale_veicolo_fuori_sede_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_aggregate';
  aggregate?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
};

/** aggregate fields of "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Max_Fields>;
  min?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Avg_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_avg_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Avg_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_posizione_finale_veicolo_fuori_sede". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  posizione_finale_veicolo_fuori_sede?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Constraint {
  /** unique or primary key constraint */
  AssociazionePosizioneFinaleVeicoloFuoriSedePkey = 'associazione_posizione_finale_veicolo_fuori_sede_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_fuori_sede?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Obj_Rel_Insert_Input>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Max_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Min_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Mutation_Response = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
};

/** on_conflict condition type for table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_On_Conflict = {
  constraint: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Constraint;
  update_columns?: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Update_Column>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_posizione_finale_veicolo_fuori_sede". */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_posizione_finale_veicolo_fuori_sede */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  PosizioneFinaleVeicoloFuoriSedeId = 'posizione_finale_veicolo_fuori_sede_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Sum_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_sum_fields';
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Sum_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  PosizioneFinaleVeicoloFuoriSedeId = 'posizione_finale_veicolo_fuori_sede_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Pop_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Samp_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Variance_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede_variance_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_posizione_finale_veicolo_fuori_sede" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Variance_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  posizione_finale_veicolo_margini: Sis__Posizione_Finale_Veicolo_Margini;
  posizione_finale_veicolo_margini_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_aggregate';
  aggregate?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
};

/** aggregate fields of "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Max_Fields>;
  min?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Avg_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_avg_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Avg_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_posizione_finale_veicolo_margini". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  posizione_finale_veicolo_margini?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>;
  posizione_finale_veicolo_margini_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_posizione_finale_veicolo_margini" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Margini_Constraint {
  /** unique or primary key constraint */
  AssociazionePosizioneFinaleVeicoloMarginiPkey = 'associazione_posizione_finale_veicolo_margini_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_margini?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Obj_Rel_Insert_Input>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Max_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Min_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Mutation_Response = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
};

/** on_conflict condition type for table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_On_Conflict = {
  constraint: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Constraint;
  update_columns?: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Update_Column>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_posizione_finale_veicolo_margini". */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_posizione_finale_veicolo_margini */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  PosizioneFinaleVeicoloMarginiId = 'posizione_finale_veicolo_margini_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Sum_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_sum_fields';
  id?: Maybe<Scalars['Int']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Sum_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export enum Sis_Associazione_Posizione_Finale_Veicolo_Margini_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  PosizioneFinaleVeicoloMarginiId = 'posizione_finale_veicolo_margini_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Pop_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Samp_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Variance_Fields = {
  __typename?: 'sis_associazione_posizione_finale_veicolo_margini_variance_fields';
  id?: Maybe<Scalars['Float']>;
  posizione_finale_veicolo_margini_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_posizione_finale_veicolo_margini" */
export type Sis_Associazione_Posizione_Finale_Veicolo_Margini_Variance_Order_By = {
  id?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris = {
  __typename?: 'sis_associazione_tipologia_ris';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  /** An object relationship */
  tipologia: Sis__Tipologia_Ris;
  tipologia_ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Aggregate = {
  __typename?: 'sis_associazione_tipologia_ris_aggregate';
  aggregate?: Maybe<Sis_Associazione_Tipologia_Ris_Aggregate_Fields>;
  nodes: Array<Sis_Associazione_Tipologia_Ris>;
};

/** aggregate fields of "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Aggregate_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_aggregate_fields';
  avg?: Maybe<Sis_Associazione_Tipologia_Ris_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associazione_Tipologia_Ris_Max_Fields>;
  min?: Maybe<Sis_Associazione_Tipologia_Ris_Min_Fields>;
  stddev?: Maybe<Sis_Associazione_Tipologia_Ris_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associazione_Tipologia_Ris_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associazione_Tipologia_Ris_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associazione_Tipologia_Ris_Sum_Fields>;
  var_pop?: Maybe<Sis_Associazione_Tipologia_Ris_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associazione_Tipologia_Ris_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associazione_Tipologia_Ris_Variance_Fields>;
};


/** aggregate fields of "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associazione_Tipologia_Ris_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associazione_Tipologia_Ris_Max_Order_By>;
  min?: Maybe<Sis_Associazione_Tipologia_Ris_Min_Order_By>;
  stddev?: Maybe<Sis_Associazione_Tipologia_Ris_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associazione_Tipologia_Ris_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associazione_Tipologia_Ris_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associazione_Tipologia_Ris_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associazione_Tipologia_Ris_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associazione_Tipologia_Ris_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associazione_Tipologia_Ris_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associazione_Tipologia_Ris_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associazione_Tipologia_Ris_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associazione_Tipologia_Ris_Avg_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  tipologia_ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Avg_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associazione_tipologia_ris". All fields are combined with a logical 'AND'. */
export type Sis_Associazione_Tipologia_Ris_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Bool_Exp>>;
  _not?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  tipologia?: Maybe<Sis__Tipologia_Ris_Bool_Exp>;
  tipologia_ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associazione_tipologia_ris" */
export enum Sis_Associazione_Tipologia_Ris_Constraint {
  /** unique or primary key constraint */
  AssociazioneTipologiaRisPkey = 'associazione_tipologia_ris_pkey'
}

/** input type for incrementing numeric columns in table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  tipologia_ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  tipologia?: Maybe<Sis__Tipologia_Ris_Obj_Rel_Insert_Input>;
  tipologia_ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associazione_Tipologia_Ris_Max_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  tipologia_ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associazione_Tipologia_Ris_Min_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  tipologia_ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Mutation_Response = {
  __typename?: 'sis_associazione_tipologia_ris_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associazione_Tipologia_Ris>;
};

/** on_conflict condition type for table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_On_Conflict = {
  constraint: Sis_Associazione_Tipologia_Ris_Constraint;
  update_columns?: Array<Sis_Associazione_Tipologia_Ris_Update_Column>;
  where?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associazione_tipologia_ris". */
export type Sis_Associazione_Tipologia_Ris_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia?: Maybe<Sis__Tipologia_Ris_Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associazione_tipologia_ris */
export type Sis_Associazione_Tipologia_Ris_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associazione_tipologia_ris" */
export enum Sis_Associazione_Tipologia_Ris_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  TipologiaRisId = 'tipologia_ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  tipologia_ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associazione_Tipologia_Ris_Stddev_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  tipologia_ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associazione_Tipologia_Ris_Stddev_Pop_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  tipologia_ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associazione_Tipologia_Ris_Stddev_Samp_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  tipologia_ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associazione_Tipologia_Ris_Sum_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_sum_fields';
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  tipologia_ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Sum_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associazione_tipologia_ris" */
export enum Sis_Associazione_Tipologia_Ris_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  TipologiaRisId = 'tipologia_ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associazione_Tipologia_Ris_Var_Pop_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  tipologia_ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associazione_Tipologia_Ris_Var_Samp_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  tipologia_ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associazione_Tipologia_Ris_Variance_Fields = {
  __typename?: 'sis_associazione_tipologia_ris_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  tipologia_ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associazione_tipologia_ris" */
export type Sis_Associazione_Tipologia_Ris_Variance_Order_By = {
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  tipologia_ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  localizzazione_condizioni_traffico: Sis__Localizzazione_Condizioni_Traffico;
  localizzazione_condizioni_traffico_id: Scalars['Int'];
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_aggregate';
  aggregate?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate_Fields>;
  nodes: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
};

/** aggregate fields of "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_aggregate_fields';
  avg?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Max_Fields>;
  min?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Min_Fields>;
  stddev?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Sum_Fields>;
  var_pop?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Samp_Fields>;
  variance?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Variance_Fields>;
};


/** aggregate fields of "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate_Order_By = {
  avg?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Max_Order_By>;
  min?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Min_Order_By>;
  stddev?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Sum_Order_By>;
  var_pop?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Arr_Rel_Insert_Input = {
  data: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Avg_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_avg_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Avg_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.associzione_localizzazione_condizioni_traffico". All fields are combined with a logical 'AND'. */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp = {
  _and?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>>;
  _not?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
  _or?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  localizzazione_condizioni_traffico?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>;
  localizzazione_condizioni_traffico_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.associzione_localizzazione_condizioni_traffico" */
export enum Sis_Associzione_Localizzazione_Condizioni_Traffico_Constraint {
  /** unique or primary key constraint */
  AssocizioneLocalizzazioneCondizioniTrafficoPkey = 'associzione_localizzazione_condizioni_traffico_pkey'
}

/** input type for incrementing numeric columns in table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_traffico?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Obj_Rel_Insert_Input>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Max_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Min_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Mutation_Response = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
};

/** on_conflict condition type for table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_On_Conflict = {
  constraint: Sis_Associzione_Localizzazione_Condizioni_Traffico_Constraint;
  update_columns?: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Update_Column>;
  where?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.associzione_localizzazione_condizioni_traffico". */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_associzione_localizzazione_condizioni_traffico */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export enum Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneCondizioniTrafficoId = 'localizzazione_condizioni_traffico_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Pop_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Samp_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Sum_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_sum_fields';
  id?: Maybe<Scalars['Int']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Sum_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export enum Sis_Associzione_Localizzazione_Condizioni_Traffico_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  LocalizzazioneCondizioniTrafficoId = 'localizzazione_condizioni_traffico_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Pop_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Samp_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Variance_Fields = {
  __typename?: 'sis_associzione_localizzazione_condizioni_traffico_variance_fields';
  id?: Maybe<Scalars['Float']>;
  localizzazione_condizioni_traffico_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.associzione_localizzazione_condizioni_traffico" */
export type Sis_Associzione_Localizzazione_Condizioni_Traffico_Variance_Order_By = {
  id?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.conducente" */
export type Sis_Conducente = {
  __typename?: 'sis_conducente';
  cap_numero?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt_data?: Maybe<Scalars['timestamp']>;
  cap_tipo?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  osservazioni_note?: Maybe<Scalars['String']>;
  /** An array relationship */
  patente: Array<Sis_Associazione_Patente>;
  /** An aggregate relationship */
  patente_aggregate: Sis_Associazione_Patente_Aggregate;
  patente_altro_note?: Maybe<Scalars['String']>;
  patente_categoria_altro?: Maybe<Scalars['String']>;
  patente_numero?: Maybe<Scalars['String']>;
  patente_prescrizioni?: Maybe<Scalars['String']>;
  patente_rilasciata_da?: Maybe<Scalars['String']>;
  /** An object relationship */
  patente_rilasciata_da_citta?: Maybe<_Citta>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Int']>;
  patente_rilasciata_data?: Maybe<Scalars['timestamp']>;
  patente_rilasciata_valida_data?: Maybe<Scalars['timestamp']>;
  /** An object relationship */
  patente_sinoaltro?: Maybe<_Sinoaltro>;
  patente_sinoaltro_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  prova_etilometro?: Maybe<Scalars['Boolean']>;
  prova_etilometro_esito?: Maybe<Scalars['String']>;
  prova_narcotest?: Maybe<Scalars['Boolean']>;
  prova_narcotest_esito?: Maybe<Scalars['String']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  richiesta_esami?: Maybe<Scalars['Boolean']>;
  richiesta_esami_effettuati_presso?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "sis.conducente" */
export type Sis_ConducentePatenteArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Patente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Patente_Order_By>>;
  where?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
};


/** columns and relationships of "sis.conducente" */
export type Sis_ConducentePatente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Patente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Patente_Order_By>>;
  where?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
};

/** aggregated selection of "sis.conducente" */
export type Sis_Conducente_Aggregate = {
  __typename?: 'sis_conducente_aggregate';
  aggregate?: Maybe<Sis_Conducente_Aggregate_Fields>;
  nodes: Array<Sis_Conducente>;
};

/** aggregate fields of "sis.conducente" */
export type Sis_Conducente_Aggregate_Fields = {
  __typename?: 'sis_conducente_aggregate_fields';
  avg?: Maybe<Sis_Conducente_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Conducente_Max_Fields>;
  min?: Maybe<Sis_Conducente_Min_Fields>;
  stddev?: Maybe<Sis_Conducente_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Conducente_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Conducente_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Conducente_Sum_Fields>;
  var_pop?: Maybe<Sis_Conducente_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Conducente_Var_Samp_Fields>;
  variance?: Maybe<Sis_Conducente_Variance_Fields>;
};


/** aggregate fields of "sis.conducente" */
export type Sis_Conducente_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Conducente_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.conducente" */
export type Sis_Conducente_Aggregate_Order_By = {
  avg?: Maybe<Sis_Conducente_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Conducente_Max_Order_By>;
  min?: Maybe<Sis_Conducente_Min_Order_By>;
  stddev?: Maybe<Sis_Conducente_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Conducente_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Conducente_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Conducente_Sum_Order_By>;
  var_pop?: Maybe<Sis_Conducente_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Conducente_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Conducente_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.conducente" */
export type Sis_Conducente_Arr_Rel_Insert_Input = {
  data: Array<Sis_Conducente_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Conducente_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Conducente_Avg_Fields = {
  __typename?: 'sis_conducente_avg_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Float']>;
  patente_sinoaltro_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.conducente" */
export type Sis_Conducente_Avg_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.conducente". All fields are combined with a logical 'AND'. */
export type Sis_Conducente_Bool_Exp = {
  _and?: Maybe<Array<Sis_Conducente_Bool_Exp>>;
  _not?: Maybe<Sis_Conducente_Bool_Exp>;
  _or?: Maybe<Array<Sis_Conducente_Bool_Exp>>;
  cap_numero?: Maybe<String_Comparison_Exp>;
  cap_rilasciata_da_ddt?: Maybe<String_Comparison_Exp>;
  cap_rilasciata_da_ddt_data?: Maybe<Timestamp_Comparison_Exp>;
  cap_tipo?: Maybe<String_Comparison_Exp>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  osservazioni_note?: Maybe<String_Comparison_Exp>;
  patente?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
  patente_altro_note?: Maybe<String_Comparison_Exp>;
  patente_categoria_altro?: Maybe<String_Comparison_Exp>;
  patente_numero?: Maybe<String_Comparison_Exp>;
  patente_prescrizioni?: Maybe<String_Comparison_Exp>;
  patente_rilasciata_da?: Maybe<String_Comparison_Exp>;
  patente_rilasciata_da_citta?: Maybe<_Citta_Bool_Exp>;
  patente_rilasciata_da_citta_id?: Maybe<Int_Comparison_Exp>;
  patente_rilasciata_data?: Maybe<Timestamp_Comparison_Exp>;
  patente_rilasciata_valida_data?: Maybe<Timestamp_Comparison_Exp>;
  patente_sinoaltro?: Maybe<_Sinoaltro_Bool_Exp>;
  patente_sinoaltro_id?: Maybe<Int_Comparison_Exp>;
  professione?: Maybe<String_Comparison_Exp>;
  prova_etilometro?: Maybe<Boolean_Comparison_Exp>;
  prova_etilometro_esito?: Maybe<String_Comparison_Exp>;
  prova_narcotest?: Maybe<Boolean_Comparison_Exp>;
  prova_narcotest_esito?: Maybe<String_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  richiesta_esami?: Maybe<Boolean_Comparison_Exp>;
  richiesta_esami_effettuati_presso?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.conducente" */
export enum Sis_Conducente_Constraint {
  /** unique or primary key constraint */
  ConducentePkey = 'conducente_pkey'
}

/** input type for incrementing numeric columns in table "sis.conducente" */
export type Sis_Conducente_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Int']>;
  patente_sinoaltro_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.conducente" */
export type Sis_Conducente_Insert_Input = {
  cap_numero?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt_data?: Maybe<Scalars['timestamp']>;
  cap_tipo?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  osservazioni_note?: Maybe<Scalars['String']>;
  patente?: Maybe<Sis_Associazione_Patente_Arr_Rel_Insert_Input>;
  patente_altro_note?: Maybe<Scalars['String']>;
  patente_categoria_altro?: Maybe<Scalars['String']>;
  patente_numero?: Maybe<Scalars['String']>;
  patente_prescrizioni?: Maybe<Scalars['String']>;
  patente_rilasciata_da?: Maybe<Scalars['String']>;
  patente_rilasciata_da_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Int']>;
  patente_rilasciata_data?: Maybe<Scalars['timestamp']>;
  patente_rilasciata_valida_data?: Maybe<Scalars['timestamp']>;
  patente_sinoaltro?: Maybe<_Sinoaltro_Obj_Rel_Insert_Input>;
  patente_sinoaltro_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  prova_etilometro?: Maybe<Scalars['Boolean']>;
  prova_etilometro_esito?: Maybe<Scalars['String']>;
  prova_narcotest?: Maybe<Scalars['Boolean']>;
  prova_narcotest_esito?: Maybe<Scalars['String']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  richiesta_esami?: Maybe<Scalars['Boolean']>;
  richiesta_esami_effettuati_presso?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Conducente_Max_Fields = {
  __typename?: 'sis_conducente_max_fields';
  cap_numero?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt_data?: Maybe<Scalars['timestamp']>;
  cap_tipo?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  osservazioni_note?: Maybe<Scalars['String']>;
  patente_altro_note?: Maybe<Scalars['String']>;
  patente_categoria_altro?: Maybe<Scalars['String']>;
  patente_numero?: Maybe<Scalars['String']>;
  patente_prescrizioni?: Maybe<Scalars['String']>;
  patente_rilasciata_da?: Maybe<Scalars['String']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Int']>;
  patente_rilasciata_data?: Maybe<Scalars['timestamp']>;
  patente_rilasciata_valida_data?: Maybe<Scalars['timestamp']>;
  patente_sinoaltro_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  prova_etilometro_esito?: Maybe<Scalars['String']>;
  prova_narcotest_esito?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  richiesta_esami_effettuati_presso?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.conducente" */
export type Sis_Conducente_Max_Order_By = {
  cap_numero?: Maybe<Order_By>;
  cap_rilasciata_da_ddt?: Maybe<Order_By>;
  cap_rilasciata_da_ddt_data?: Maybe<Order_By>;
  cap_tipo?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  osservazioni_note?: Maybe<Order_By>;
  patente_altro_note?: Maybe<Order_By>;
  patente_categoria_altro?: Maybe<Order_By>;
  patente_numero?: Maybe<Order_By>;
  patente_prescrizioni?: Maybe<Order_By>;
  patente_rilasciata_da?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_rilasciata_data?: Maybe<Order_By>;
  patente_rilasciata_valida_data?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  professione?: Maybe<Order_By>;
  prova_etilometro_esito?: Maybe<Order_By>;
  prova_narcotest_esito?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  richiesta_esami_effettuati_presso?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Conducente_Min_Fields = {
  __typename?: 'sis_conducente_min_fields';
  cap_numero?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt_data?: Maybe<Scalars['timestamp']>;
  cap_tipo?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  osservazioni_note?: Maybe<Scalars['String']>;
  patente_altro_note?: Maybe<Scalars['String']>;
  patente_categoria_altro?: Maybe<Scalars['String']>;
  patente_numero?: Maybe<Scalars['String']>;
  patente_prescrizioni?: Maybe<Scalars['String']>;
  patente_rilasciata_da?: Maybe<Scalars['String']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Int']>;
  patente_rilasciata_data?: Maybe<Scalars['timestamp']>;
  patente_rilasciata_valida_data?: Maybe<Scalars['timestamp']>;
  patente_sinoaltro_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  prova_etilometro_esito?: Maybe<Scalars['String']>;
  prova_narcotest_esito?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  richiesta_esami_effettuati_presso?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.conducente" */
export type Sis_Conducente_Min_Order_By = {
  cap_numero?: Maybe<Order_By>;
  cap_rilasciata_da_ddt?: Maybe<Order_By>;
  cap_rilasciata_da_ddt_data?: Maybe<Order_By>;
  cap_tipo?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  osservazioni_note?: Maybe<Order_By>;
  patente_altro_note?: Maybe<Order_By>;
  patente_categoria_altro?: Maybe<Order_By>;
  patente_numero?: Maybe<Order_By>;
  patente_prescrizioni?: Maybe<Order_By>;
  patente_rilasciata_da?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_rilasciata_data?: Maybe<Order_By>;
  patente_rilasciata_valida_data?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  professione?: Maybe<Order_By>;
  prova_etilometro_esito?: Maybe<Order_By>;
  prova_narcotest_esito?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  richiesta_esami_effettuati_presso?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.conducente" */
export type Sis_Conducente_Mutation_Response = {
  __typename?: 'sis_conducente_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Conducente>;
};

/** input type for inserting object relation for remote table "sis.conducente" */
export type Sis_Conducente_Obj_Rel_Insert_Input = {
  data: Sis_Conducente_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Conducente_On_Conflict>;
};

/** on_conflict condition type for table "sis.conducente" */
export type Sis_Conducente_On_Conflict = {
  constraint: Sis_Conducente_Constraint;
  update_columns?: Array<Sis_Conducente_Update_Column>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.conducente". */
export type Sis_Conducente_Order_By = {
  cap_numero?: Maybe<Order_By>;
  cap_rilasciata_da_ddt?: Maybe<Order_By>;
  cap_rilasciata_da_ddt_data?: Maybe<Order_By>;
  cap_tipo?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  osservazioni_note?: Maybe<Order_By>;
  patente_aggregate?: Maybe<Sis_Associazione_Patente_Aggregate_Order_By>;
  patente_altro_note?: Maybe<Order_By>;
  patente_categoria_altro?: Maybe<Order_By>;
  patente_numero?: Maybe<Order_By>;
  patente_prescrizioni?: Maybe<Order_By>;
  patente_rilasciata_da?: Maybe<Order_By>;
  patente_rilasciata_da_citta?: Maybe<_Citta_Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_rilasciata_data?: Maybe<Order_By>;
  patente_rilasciata_valida_data?: Maybe<Order_By>;
  patente_sinoaltro?: Maybe<_Sinoaltro_Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  professione?: Maybe<Order_By>;
  prova_etilometro?: Maybe<Order_By>;
  prova_etilometro_esito?: Maybe<Order_By>;
  prova_narcotest?: Maybe<Order_By>;
  prova_narcotest_esito?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  richiesta_esami?: Maybe<Order_By>;
  richiesta_esami_effettuati_presso?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_conducente */
export type Sis_Conducente_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.conducente" */
export enum Sis_Conducente_Select_Column {
  /** column name */
  CapNumero = 'cap_numero',
  /** column name */
  CapRilasciataDaDdt = 'cap_rilasciata_da_ddt',
  /** column name */
  CapRilasciataDaDdtData = 'cap_rilasciata_da_ddt_data',
  /** column name */
  CapTipo = 'cap_tipo',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  OsservazioniNote = 'osservazioni_note',
  /** column name */
  PatenteAltroNote = 'patente_altro_note',
  /** column name */
  PatenteCategoriaAltro = 'patente_categoria_altro',
  /** column name */
  PatenteNumero = 'patente_numero',
  /** column name */
  PatentePrescrizioni = 'patente_prescrizioni',
  /** column name */
  PatenteRilasciataDa = 'patente_rilasciata_da',
  /** column name */
  PatenteRilasciataDaCittaId = 'patente_rilasciata_da_citta_id',
  /** column name */
  PatenteRilasciataData = 'patente_rilasciata_data',
  /** column name */
  PatenteRilasciataValidaData = 'patente_rilasciata_valida_data',
  /** column name */
  PatenteSinoaltroId = 'patente_sinoaltro_id',
  /** column name */
  Professione = 'professione',
  /** column name */
  ProvaEtilometro = 'prova_etilometro',
  /** column name */
  ProvaEtilometroEsito = 'prova_etilometro_esito',
  /** column name */
  ProvaNarcotest = 'prova_narcotest',
  /** column name */
  ProvaNarcotestEsito = 'prova_narcotest_esito',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RichiestaEsami = 'richiesta_esami',
  /** column name */
  RichiestaEsamiEffettuatiPresso = 'richiesta_esami_effettuati_presso',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.conducente" */
export type Sis_Conducente_Set_Input = {
  cap_numero?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt?: Maybe<Scalars['String']>;
  cap_rilasciata_da_ddt_data?: Maybe<Scalars['timestamp']>;
  cap_tipo?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  osservazioni_note?: Maybe<Scalars['String']>;
  patente_altro_note?: Maybe<Scalars['String']>;
  patente_categoria_altro?: Maybe<Scalars['String']>;
  patente_numero?: Maybe<Scalars['String']>;
  patente_prescrizioni?: Maybe<Scalars['String']>;
  patente_rilasciata_da?: Maybe<Scalars['String']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Int']>;
  patente_rilasciata_data?: Maybe<Scalars['timestamp']>;
  patente_rilasciata_valida_data?: Maybe<Scalars['timestamp']>;
  patente_sinoaltro_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  prova_etilometro?: Maybe<Scalars['Boolean']>;
  prova_etilometro_esito?: Maybe<Scalars['String']>;
  prova_narcotest?: Maybe<Scalars['Boolean']>;
  prova_narcotest_esito?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  richiesta_esami?: Maybe<Scalars['Boolean']>;
  richiesta_esami_effettuati_presso?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Conducente_Stddev_Fields = {
  __typename?: 'sis_conducente_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Float']>;
  patente_sinoaltro_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.conducente" */
export type Sis_Conducente_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Conducente_Stddev_Pop_Fields = {
  __typename?: 'sis_conducente_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Float']>;
  patente_sinoaltro_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.conducente" */
export type Sis_Conducente_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Conducente_Stddev_Samp_Fields = {
  __typename?: 'sis_conducente_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Float']>;
  patente_sinoaltro_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.conducente" */
export type Sis_Conducente_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Conducente_Sum_Fields = {
  __typename?: 'sis_conducente_sum_fields';
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Int']>;
  patente_sinoaltro_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.conducente" */
export type Sis_Conducente_Sum_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.conducente" */
export enum Sis_Conducente_Update_Column {
  /** column name */
  CapNumero = 'cap_numero',
  /** column name */
  CapRilasciataDaDdt = 'cap_rilasciata_da_ddt',
  /** column name */
  CapRilasciataDaDdtData = 'cap_rilasciata_da_ddt_data',
  /** column name */
  CapTipo = 'cap_tipo',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  OsservazioniNote = 'osservazioni_note',
  /** column name */
  PatenteAltroNote = 'patente_altro_note',
  /** column name */
  PatenteCategoriaAltro = 'patente_categoria_altro',
  /** column name */
  PatenteNumero = 'patente_numero',
  /** column name */
  PatentePrescrizioni = 'patente_prescrizioni',
  /** column name */
  PatenteRilasciataDa = 'patente_rilasciata_da',
  /** column name */
  PatenteRilasciataDaCittaId = 'patente_rilasciata_da_citta_id',
  /** column name */
  PatenteRilasciataData = 'patente_rilasciata_data',
  /** column name */
  PatenteRilasciataValidaData = 'patente_rilasciata_valida_data',
  /** column name */
  PatenteSinoaltroId = 'patente_sinoaltro_id',
  /** column name */
  Professione = 'professione',
  /** column name */
  ProvaEtilometro = 'prova_etilometro',
  /** column name */
  ProvaEtilometroEsito = 'prova_etilometro_esito',
  /** column name */
  ProvaNarcotest = 'prova_narcotest',
  /** column name */
  ProvaNarcotestEsito = 'prova_narcotest_esito',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RichiestaEsami = 'richiesta_esami',
  /** column name */
  RichiestaEsamiEffettuatiPresso = 'richiesta_esami_effettuati_presso',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Conducente_Var_Pop_Fields = {
  __typename?: 'sis_conducente_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Float']>;
  patente_sinoaltro_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.conducente" */
export type Sis_Conducente_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Conducente_Var_Samp_Fields = {
  __typename?: 'sis_conducente_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Float']>;
  patente_sinoaltro_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.conducente" */
export type Sis_Conducente_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Conducente_Variance_Fields = {
  __typename?: 'sis_conducente_variance_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  patente_rilasciata_da_citta_id?: Maybe<Scalars['Float']>;
  patente_sinoaltro_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.conducente" */
export type Sis_Conducente_Variance_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  patente_rilasciata_da_citta_id?: Maybe<Order_By>;
  patente_sinoaltro_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.evento_sis" */
export type Sis_Evento_Sis = {
  __typename?: 'sis_evento_sis';
  cancellatore?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  motivazione_cancellazione?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  /** An object relationship */
  protocollo?: Maybe<Protocollo_Protocollo>;
  protocollo_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  ris: Sis_Ris;
  ris_id: Scalars['Int'];
  stato: Sis__Stato_Ris_Enum;
};


/** columns and relationships of "sis.evento_sis" */
export type Sis_Evento_SisCancellatoreArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "sis.evento_sis" */
export type Sis_Evento_Sis_Aggregate = {
  __typename?: 'sis_evento_sis_aggregate';
  aggregate?: Maybe<Sis_Evento_Sis_Aggregate_Fields>;
  nodes: Array<Sis_Evento_Sis>;
};

/** aggregate fields of "sis.evento_sis" */
export type Sis_Evento_Sis_Aggregate_Fields = {
  __typename?: 'sis_evento_sis_aggregate_fields';
  avg?: Maybe<Sis_Evento_Sis_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Evento_Sis_Max_Fields>;
  min?: Maybe<Sis_Evento_Sis_Min_Fields>;
  stddev?: Maybe<Sis_Evento_Sis_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Evento_Sis_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Evento_Sis_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Evento_Sis_Sum_Fields>;
  var_pop?: Maybe<Sis_Evento_Sis_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Evento_Sis_Var_Samp_Fields>;
  variance?: Maybe<Sis_Evento_Sis_Variance_Fields>;
};


/** aggregate fields of "sis.evento_sis" */
export type Sis_Evento_Sis_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Evento_Sis_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.evento_sis" */
export type Sis_Evento_Sis_Aggregate_Order_By = {
  avg?: Maybe<Sis_Evento_Sis_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Evento_Sis_Max_Order_By>;
  min?: Maybe<Sis_Evento_Sis_Min_Order_By>;
  stddev?: Maybe<Sis_Evento_Sis_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Evento_Sis_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Evento_Sis_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Evento_Sis_Sum_Order_By>;
  var_pop?: Maybe<Sis_Evento_Sis_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Evento_Sis_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Evento_Sis_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Sis_Evento_Sis_Append_Input = {
  cancellatore?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "sis.evento_sis" */
export type Sis_Evento_Sis_Arr_Rel_Insert_Input = {
  data: Array<Sis_Evento_Sis_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Evento_Sis_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Evento_Sis_Avg_Fields = {
  __typename?: 'sis_evento_sis_avg_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Avg_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.evento_sis". All fields are combined with a logical 'AND'. */
export type Sis_Evento_Sis_Bool_Exp = {
  _and?: Maybe<Array<Sis_Evento_Sis_Bool_Exp>>;
  _not?: Maybe<Sis_Evento_Sis_Bool_Exp>;
  _or?: Maybe<Array<Sis_Evento_Sis_Bool_Exp>>;
  cancellatore?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  motivazione_cancellazione?: Maybe<String_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  protocollo?: Maybe<Protocollo_Protocollo_Bool_Exp>;
  protocollo_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  stato?: Maybe<Sis__Stato_Ris_Enum_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.evento_sis" */
export enum Sis_Evento_Sis_Constraint {
  /** unique or primary key constraint */
  EventoSisPkey = 'evento_sis_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Sis_Evento_Sis_Delete_At_Path_Input = {
  cancellatore?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Sis_Evento_Sis_Delete_Elem_Input = {
  cancellatore?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Sis_Evento_Sis_Delete_Key_Input = {
  cancellatore?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "sis.evento_sis" */
export type Sis_Evento_Sis_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.evento_sis" */
export type Sis_Evento_Sis_Insert_Input = {
  cancellatore?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  motivazione_cancellazione?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  protocollo?: Maybe<Protocollo_Protocollo_Obj_Rel_Insert_Input>;
  protocollo_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  stato?: Maybe<Sis__Stato_Ris_Enum>;
};

/** aggregate max on columns */
export type Sis_Evento_Sis_Max_Fields = {
  __typename?: 'sis_evento_sis_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  motivazione_cancellazione?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  motivazione_cancellazione?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Evento_Sis_Min_Fields = {
  __typename?: 'sis_evento_sis_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  motivazione_cancellazione?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  motivazione_cancellazione?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.evento_sis" */
export type Sis_Evento_Sis_Mutation_Response = {
  __typename?: 'sis_evento_sis_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Evento_Sis>;
};

/** on_conflict condition type for table "sis.evento_sis" */
export type Sis_Evento_Sis_On_Conflict = {
  constraint: Sis_Evento_Sis_Constraint;
  update_columns?: Array<Sis_Evento_Sis_Update_Column>;
  where?: Maybe<Sis_Evento_Sis_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.evento_sis". */
export type Sis_Evento_Sis_Order_By = {
  cancellatore?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  motivazione_cancellazione?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  protocollo?: Maybe<Protocollo_Protocollo_Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  stato?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_evento_sis */
export type Sis_Evento_Sis_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Sis_Evento_Sis_Prepend_Input = {
  cancellatore?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "sis.evento_sis" */
export enum Sis_Evento_Sis_Select_Column {
  /** column name */
  Cancellatore = 'cancellatore',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  MotivazioneCancellazione = 'motivazione_cancellazione',
  /** column name */
  Note = 'note',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Stato = 'stato'
}

/** input type for updating data in table "sis.evento_sis" */
export type Sis_Evento_Sis_Set_Input = {
  cancellatore?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  motivazione_cancellazione?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  stato?: Maybe<Sis__Stato_Ris_Enum>;
};

/** aggregate stddev on columns */
export type Sis_Evento_Sis_Stddev_Fields = {
  __typename?: 'sis_evento_sis_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Evento_Sis_Stddev_Pop_Fields = {
  __typename?: 'sis_evento_sis_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Evento_Sis_Stddev_Samp_Fields = {
  __typename?: 'sis_evento_sis_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Evento_Sis_Sum_Fields = {
  __typename?: 'sis_evento_sis_sum_fields';
  id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Sum_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.evento_sis" */
export enum Sis_Evento_Sis_Update_Column {
  /** column name */
  Cancellatore = 'cancellatore',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  MotivazioneCancellazione = 'motivazione_cancellazione',
  /** column name */
  Note = 'note',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Stato = 'stato'
}

/** aggregate var_pop on columns */
export type Sis_Evento_Sis_Var_Pop_Fields = {
  __typename?: 'sis_evento_sis_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Evento_Sis_Var_Samp_Fields = {
  __typename?: 'sis_evento_sis_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Evento_Sis_Variance_Fields = {
  __typename?: 'sis_evento_sis_variance_fields';
  id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.evento_sis" */
export type Sis_Evento_Sis_Variance_Order_By = {
  id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.infortunato" */
export type Sis_Infortunato = {
  __typename?: 'sis_infortunato';
  cognome?: Maybe<Scalars['String']>;
  /** An object relationship */
  conducente?: Maybe<Sis_Conducente>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  cura_da_parte?: Maybe<Scalars['String']>;
  danni_lamentati?: Maybe<Scalars['String']>;
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An array relationship */
  informazioni: Array<Sis_Associazione_Informazioni_Infortunato>;
  /** An aggregate relationship */
  informazioni_aggregate: Sis_Associazione_Informazioni_Infortunato_Aggregate;
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  ospedale_altro?: Maybe<Scalars['String']>;
  ospedale_diagnosi?: Maybe<Scalars['String']>;
  ospedale_prognosi?: Maybe<Scalars['String']>;
  ospedale_referto?: Maybe<Scalars['String']>;
  ospedale_referto_rilasciato_da?: Maybe<Scalars['String']>;
  ospedale_ricoverato?: Maybe<Scalars['String']>;
  /** An object relationship */
  pedone?: Maybe<Sis_Pedone>;
  pedone_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  rifiuta_cure_immediate?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  scheda_118?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  trasportato?: Maybe<Sis_Trasportato>;
  /** An object relationship */
  trasportato_ambulanza?: Maybe<Sis__Intortunato_Tasportato>;
  trasportato_ambulanza_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  trasportato_richiesta?: Maybe<Scalars['String']>;
  trasportato_targa_auto?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  veicolo?: Maybe<Sis_Veicolo>;
  veicolo_id?: Maybe<Scalars['Int']>;
};


/** columns and relationships of "sis.infortunato" */
export type Sis_InfortunatoInformazioniArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Order_By>>;
  where?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
};


/** columns and relationships of "sis.infortunato" */
export type Sis_InfortunatoInformazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Order_By>>;
  where?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
};

/** aggregated selection of "sis.infortunato" */
export type Sis_Infortunato_Aggregate = {
  __typename?: 'sis_infortunato_aggregate';
  aggregate?: Maybe<Sis_Infortunato_Aggregate_Fields>;
  nodes: Array<Sis_Infortunato>;
};

/** aggregate fields of "sis.infortunato" */
export type Sis_Infortunato_Aggregate_Fields = {
  __typename?: 'sis_infortunato_aggregate_fields';
  avg?: Maybe<Sis_Infortunato_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Infortunato_Max_Fields>;
  min?: Maybe<Sis_Infortunato_Min_Fields>;
  stddev?: Maybe<Sis_Infortunato_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Infortunato_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Infortunato_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Infortunato_Sum_Fields>;
  var_pop?: Maybe<Sis_Infortunato_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Infortunato_Var_Samp_Fields>;
  variance?: Maybe<Sis_Infortunato_Variance_Fields>;
};


/** aggregate fields of "sis.infortunato" */
export type Sis_Infortunato_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Infortunato_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.infortunato" */
export type Sis_Infortunato_Aggregate_Order_By = {
  avg?: Maybe<Sis_Infortunato_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Infortunato_Max_Order_By>;
  min?: Maybe<Sis_Infortunato_Min_Order_By>;
  stddev?: Maybe<Sis_Infortunato_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Infortunato_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Infortunato_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Infortunato_Sum_Order_By>;
  var_pop?: Maybe<Sis_Infortunato_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Infortunato_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Infortunato_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.infortunato" */
export type Sis_Infortunato_Arr_Rel_Insert_Input = {
  data: Array<Sis_Infortunato_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Infortunato_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Infortunato_Avg_Fields = {
  __typename?: 'sis_infortunato_avg_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  scheda_118?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Avg_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.infortunato". All fields are combined with a logical 'AND'. */
export type Sis_Infortunato_Bool_Exp = {
  _and?: Maybe<Array<Sis_Infortunato_Bool_Exp>>;
  _not?: Maybe<Sis_Infortunato_Bool_Exp>;
  _or?: Maybe<Array<Sis_Infortunato_Bool_Exp>>;
  cognome?: Maybe<String_Comparison_Exp>;
  conducente?: Maybe<Sis_Conducente_Bool_Exp>;
  conducente_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  cura_da_parte?: Maybe<String_Comparison_Exp>;
  danni_lamentati?: Maybe<String_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  informazioni?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  ospedale_altro?: Maybe<String_Comparison_Exp>;
  ospedale_diagnosi?: Maybe<String_Comparison_Exp>;
  ospedale_prognosi?: Maybe<String_Comparison_Exp>;
  ospedale_referto?: Maybe<String_Comparison_Exp>;
  ospedale_referto_rilasciato_da?: Maybe<String_Comparison_Exp>;
  ospedale_ricoverato?: Maybe<String_Comparison_Exp>;
  pedone?: Maybe<Sis_Pedone_Bool_Exp>;
  pedone_id?: Maybe<Int_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  rifiuta_cure_immediate?: Maybe<Boolean_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  scheda_118?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  trasportato?: Maybe<Sis_Trasportato_Bool_Exp>;
  trasportato_ambulanza?: Maybe<Sis__Intortunato_Tasportato_Bool_Exp>;
  trasportato_ambulanza_id?: Maybe<Int_Comparison_Exp>;
  trasportato_id?: Maybe<Int_Comparison_Exp>;
  trasportato_richiesta?: Maybe<String_Comparison_Exp>;
  trasportato_targa_auto?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  veicolo?: Maybe<Sis_Veicolo_Bool_Exp>;
  veicolo_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.infortunato" */
export enum Sis_Infortunato_Constraint {
  /** unique or primary key constraint */
  InfortunatoPkey = 'infortunato_pkey'
}

/** input type for incrementing numeric columns in table "sis.infortunato" */
export type Sis_Infortunato_Inc_Input = {
  conducente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  pedone_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  scheda_118?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.infortunato" */
export type Sis_Infortunato_Insert_Input = {
  cognome?: Maybe<Scalars['String']>;
  conducente?: Maybe<Sis_Conducente_Obj_Rel_Insert_Input>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cura_da_parte?: Maybe<Scalars['String']>;
  danni_lamentati?: Maybe<Scalars['String']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  informazioni?: Maybe<Sis_Associazione_Informazioni_Infortunato_Arr_Rel_Insert_Input>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  ospedale_altro?: Maybe<Scalars['String']>;
  ospedale_diagnosi?: Maybe<Scalars['String']>;
  ospedale_prognosi?: Maybe<Scalars['String']>;
  ospedale_referto?: Maybe<Scalars['String']>;
  ospedale_referto_rilasciato_da?: Maybe<Scalars['String']>;
  ospedale_ricoverato?: Maybe<Scalars['String']>;
  pedone?: Maybe<Sis_Pedone_Obj_Rel_Insert_Input>;
  pedone_id?: Maybe<Scalars['Int']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  rifiuta_cure_immediate?: Maybe<Scalars['Boolean']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  scheda_118?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato?: Maybe<Sis_Trasportato_Obj_Rel_Insert_Input>;
  trasportato_ambulanza?: Maybe<Sis__Intortunato_Tasportato_Obj_Rel_Insert_Input>;
  trasportato_ambulanza_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  trasportato_richiesta?: Maybe<Scalars['String']>;
  trasportato_targa_auto?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo?: Maybe<Sis_Veicolo_Obj_Rel_Insert_Input>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Sis_Infortunato_Max_Fields = {
  __typename?: 'sis_infortunato_max_fields';
  cognome?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cura_da_parte?: Maybe<Scalars['String']>;
  danni_lamentati?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  ospedale_altro?: Maybe<Scalars['String']>;
  ospedale_diagnosi?: Maybe<Scalars['String']>;
  ospedale_prognosi?: Maybe<Scalars['String']>;
  ospedale_referto?: Maybe<Scalars['String']>;
  ospedale_referto_rilasciato_da?: Maybe<Scalars['String']>;
  ospedale_ricoverato?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  scheda_118?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  trasportato_richiesta?: Maybe<Scalars['String']>;
  trasportato_targa_auto?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Max_Order_By = {
  cognome?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  cura_da_parte?: Maybe<Order_By>;
  danni_lamentati?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  ospedale_altro?: Maybe<Order_By>;
  ospedale_diagnosi?: Maybe<Order_By>;
  ospedale_prognosi?: Maybe<Order_By>;
  ospedale_referto?: Maybe<Order_By>;
  ospedale_referto_rilasciato_da?: Maybe<Order_By>;
  ospedale_ricoverato?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  trasportato_richiesta?: Maybe<Order_By>;
  trasportato_targa_auto?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Infortunato_Min_Fields = {
  __typename?: 'sis_infortunato_min_fields';
  cognome?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cura_da_parte?: Maybe<Scalars['String']>;
  danni_lamentati?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  ospedale_altro?: Maybe<Scalars['String']>;
  ospedale_diagnosi?: Maybe<Scalars['String']>;
  ospedale_prognosi?: Maybe<Scalars['String']>;
  ospedale_referto?: Maybe<Scalars['String']>;
  ospedale_referto_rilasciato_da?: Maybe<Scalars['String']>;
  ospedale_ricoverato?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  scheda_118?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  trasportato_richiesta?: Maybe<Scalars['String']>;
  trasportato_targa_auto?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Min_Order_By = {
  cognome?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  cura_da_parte?: Maybe<Order_By>;
  danni_lamentati?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  ospedale_altro?: Maybe<Order_By>;
  ospedale_diagnosi?: Maybe<Order_By>;
  ospedale_prognosi?: Maybe<Order_By>;
  ospedale_referto?: Maybe<Order_By>;
  ospedale_referto_rilasciato_da?: Maybe<Order_By>;
  ospedale_ricoverato?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  trasportato_richiesta?: Maybe<Order_By>;
  trasportato_targa_auto?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.infortunato" */
export type Sis_Infortunato_Mutation_Response = {
  __typename?: 'sis_infortunato_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Infortunato>;
};

/** input type for inserting object relation for remote table "sis.infortunato" */
export type Sis_Infortunato_Obj_Rel_Insert_Input = {
  data: Sis_Infortunato_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Infortunato_On_Conflict>;
};

/** on_conflict condition type for table "sis.infortunato" */
export type Sis_Infortunato_On_Conflict = {
  constraint: Sis_Infortunato_Constraint;
  update_columns?: Array<Sis_Infortunato_Update_Column>;
  where?: Maybe<Sis_Infortunato_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.infortunato". */
export type Sis_Infortunato_Order_By = {
  cognome?: Maybe<Order_By>;
  conducente?: Maybe<Sis_Conducente_Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  cura_da_parte?: Maybe<Order_By>;
  danni_lamentati?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  informazioni_aggregate?: Maybe<Sis_Associazione_Informazioni_Infortunato_Aggregate_Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  ospedale_altro?: Maybe<Order_By>;
  ospedale_diagnosi?: Maybe<Order_By>;
  ospedale_prognosi?: Maybe<Order_By>;
  ospedale_referto?: Maybe<Order_By>;
  ospedale_referto_rilasciato_da?: Maybe<Order_By>;
  ospedale_ricoverato?: Maybe<Order_By>;
  pedone?: Maybe<Sis_Pedone_Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  rifiuta_cure_immediate?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato?: Maybe<Sis_Trasportato_Order_By>;
  trasportato_ambulanza?: Maybe<Sis__Intortunato_Tasportato_Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  trasportato_richiesta?: Maybe<Order_By>;
  trasportato_targa_auto?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo?: Maybe<Sis_Veicolo_Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_infortunato */
export type Sis_Infortunato_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.infortunato" */
export enum Sis_Infortunato_Select_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CuraDaParte = 'cura_da_parte',
  /** column name */
  DanniLamentati = 'danni_lamentati',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  OspedaleAltro = 'ospedale_altro',
  /** column name */
  OspedaleDiagnosi = 'ospedale_diagnosi',
  /** column name */
  OspedalePrognosi = 'ospedale_prognosi',
  /** column name */
  OspedaleReferto = 'ospedale_referto',
  /** column name */
  OspedaleRefertoRilasciatoDa = 'ospedale_referto_rilasciato_da',
  /** column name */
  OspedaleRicoverato = 'ospedale_ricoverato',
  /** column name */
  PedoneId = 'pedone_id',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RifiutaCureImmediate = 'rifiuta_cure_immediate',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Scheda_118 = 'scheda_118',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  TrasportatoAmbulanzaId = 'trasportato_ambulanza_id',
  /** column name */
  TrasportatoId = 'trasportato_id',
  /** column name */
  TrasportatoRichiesta = 'trasportato_richiesta',
  /** column name */
  TrasportatoTargaAuto = 'trasportato_targa_auto',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VeicoloId = 'veicolo_id'
}

/** input type for updating data in table "sis.infortunato" */
export type Sis_Infortunato_Set_Input = {
  cognome?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cura_da_parte?: Maybe<Scalars['String']>;
  danni_lamentati?: Maybe<Scalars['String']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  ospedale_altro?: Maybe<Scalars['String']>;
  ospedale_diagnosi?: Maybe<Scalars['String']>;
  ospedale_prognosi?: Maybe<Scalars['String']>;
  ospedale_referto?: Maybe<Scalars['String']>;
  ospedale_referto_rilasciato_da?: Maybe<Scalars['String']>;
  ospedale_ricoverato?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  rifiuta_cure_immediate?: Maybe<Scalars['Boolean']>;
  ris_id?: Maybe<Scalars['Int']>;
  scheda_118?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  trasportato_richiesta?: Maybe<Scalars['String']>;
  trasportato_targa_auto?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Sis_Infortunato_Stddev_Fields = {
  __typename?: 'sis_infortunato_stddev_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  scheda_118?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Stddev_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Infortunato_Stddev_Pop_Fields = {
  __typename?: 'sis_infortunato_stddev_pop_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  scheda_118?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Stddev_Pop_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Infortunato_Stddev_Samp_Fields = {
  __typename?: 'sis_infortunato_stddev_samp_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  scheda_118?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Stddev_Samp_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Infortunato_Sum_Fields = {
  __typename?: 'sis_infortunato_sum_fields';
  conducente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  pedone_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  scheda_118?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Sum_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.infortunato" */
export enum Sis_Infortunato_Update_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CuraDaParte = 'cura_da_parte',
  /** column name */
  DanniLamentati = 'danni_lamentati',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  OspedaleAltro = 'ospedale_altro',
  /** column name */
  OspedaleDiagnosi = 'ospedale_diagnosi',
  /** column name */
  OspedalePrognosi = 'ospedale_prognosi',
  /** column name */
  OspedaleReferto = 'ospedale_referto',
  /** column name */
  OspedaleRefertoRilasciatoDa = 'ospedale_referto_rilasciato_da',
  /** column name */
  OspedaleRicoverato = 'ospedale_ricoverato',
  /** column name */
  PedoneId = 'pedone_id',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RifiutaCureImmediate = 'rifiuta_cure_immediate',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Scheda_118 = 'scheda_118',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  TrasportatoAmbulanzaId = 'trasportato_ambulanza_id',
  /** column name */
  TrasportatoId = 'trasportato_id',
  /** column name */
  TrasportatoRichiesta = 'trasportato_richiesta',
  /** column name */
  TrasportatoTargaAuto = 'trasportato_targa_auto',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VeicoloId = 'veicolo_id'
}

/** aggregate var_pop on columns */
export type Sis_Infortunato_Var_Pop_Fields = {
  __typename?: 'sis_infortunato_var_pop_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  scheda_118?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Var_Pop_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Infortunato_Var_Samp_Fields = {
  __typename?: 'sis_infortunato_var_samp_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  scheda_118?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Var_Samp_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Infortunato_Variance_Fields = {
  __typename?: 'sis_infortunato_variance_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  scheda_118?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_ambulanza_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.infortunato" */
export type Sis_Infortunato_Variance_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  scheda_118?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_ambulanza_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.infrazione" */
export type Sis_Infrazione = {
  __typename?: 'sis_infrazione';
  art_80_data?: Maybe<Scalars['timestamp']>;
  art_80_dtt?: Maybe<Scalars['String']>;
  articolo?: Maybe<Scalars['String']>;
  /** An object relationship */
  conducente?: Maybe<Sis_Conducente>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  data_trasmissione_rapporto?: Maybe<Scalars['timestamp']>;
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  note?: Maybe<Scalars['String']>;
  /** An object relationship */
  pedone?: Maybe<Sis_Pedone>;
  pedone_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  uffici_provinciale?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  utg_prefettura?: Maybe<Scalars['String']>;
  /** An object relationship */
  veicolo?: Maybe<Sis_Veicolo>;
  veicolo_id?: Maybe<Scalars['Int']>;
  verbale_data?: Maybe<Scalars['timestamp']>;
  verbale_n?: Maybe<Scalars['String']>;
};

/** aggregated selection of "sis.infrazione" */
export type Sis_Infrazione_Aggregate = {
  __typename?: 'sis_infrazione_aggregate';
  aggregate?: Maybe<Sis_Infrazione_Aggregate_Fields>;
  nodes: Array<Sis_Infrazione>;
};

/** aggregate fields of "sis.infrazione" */
export type Sis_Infrazione_Aggregate_Fields = {
  __typename?: 'sis_infrazione_aggregate_fields';
  avg?: Maybe<Sis_Infrazione_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Infrazione_Max_Fields>;
  min?: Maybe<Sis_Infrazione_Min_Fields>;
  stddev?: Maybe<Sis_Infrazione_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Infrazione_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Infrazione_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Infrazione_Sum_Fields>;
  var_pop?: Maybe<Sis_Infrazione_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Infrazione_Var_Samp_Fields>;
  variance?: Maybe<Sis_Infrazione_Variance_Fields>;
};


/** aggregate fields of "sis.infrazione" */
export type Sis_Infrazione_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Infrazione_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.infrazione" */
export type Sis_Infrazione_Aggregate_Order_By = {
  avg?: Maybe<Sis_Infrazione_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Infrazione_Max_Order_By>;
  min?: Maybe<Sis_Infrazione_Min_Order_By>;
  stddev?: Maybe<Sis_Infrazione_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Infrazione_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Infrazione_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Infrazione_Sum_Order_By>;
  var_pop?: Maybe<Sis_Infrazione_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Infrazione_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Infrazione_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.infrazione" */
export type Sis_Infrazione_Arr_Rel_Insert_Input = {
  data: Array<Sis_Infrazione_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Infrazione_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Infrazione_Avg_Fields = {
  __typename?: 'sis_infrazione_avg_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Avg_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.infrazione". All fields are combined with a logical 'AND'. */
export type Sis_Infrazione_Bool_Exp = {
  _and?: Maybe<Array<Sis_Infrazione_Bool_Exp>>;
  _not?: Maybe<Sis_Infrazione_Bool_Exp>;
  _or?: Maybe<Array<Sis_Infrazione_Bool_Exp>>;
  art_80_data?: Maybe<Timestamp_Comparison_Exp>;
  art_80_dtt?: Maybe<String_Comparison_Exp>;
  articolo?: Maybe<String_Comparison_Exp>;
  conducente?: Maybe<Sis_Conducente_Bool_Exp>;
  conducente_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data_trasmissione_rapporto?: Maybe<Timestamp_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  pedone?: Maybe<Sis_Pedone_Bool_Exp>;
  pedone_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  uffici_provinciale?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  utg_prefettura?: Maybe<String_Comparison_Exp>;
  veicolo?: Maybe<Sis_Veicolo_Bool_Exp>;
  veicolo_id?: Maybe<Int_Comparison_Exp>;
  verbale_data?: Maybe<Timestamp_Comparison_Exp>;
  verbale_n?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.infrazione" */
export enum Sis_Infrazione_Constraint {
  /** unique or primary key constraint */
  InfrazionePkey = 'infrazione_pkey'
}

/** input type for incrementing numeric columns in table "sis.infrazione" */
export type Sis_Infrazione_Inc_Input = {
  conducente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  pedone_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.infrazione" */
export type Sis_Infrazione_Insert_Input = {
  art_80_data?: Maybe<Scalars['timestamp']>;
  art_80_dtt?: Maybe<Scalars['String']>;
  articolo?: Maybe<Scalars['String']>;
  conducente?: Maybe<Sis_Conducente_Obj_Rel_Insert_Input>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_trasmissione_rapporto?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  pedone?: Maybe<Sis_Pedone_Obj_Rel_Insert_Input>;
  pedone_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  uffici_provinciale?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utg_prefettura?: Maybe<Scalars['String']>;
  veicolo?: Maybe<Sis_Veicolo_Obj_Rel_Insert_Input>;
  veicolo_id?: Maybe<Scalars['Int']>;
  verbale_data?: Maybe<Scalars['timestamp']>;
  verbale_n?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Sis_Infrazione_Max_Fields = {
  __typename?: 'sis_infrazione_max_fields';
  art_80_data?: Maybe<Scalars['timestamp']>;
  art_80_dtt?: Maybe<Scalars['String']>;
  articolo?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_trasmissione_rapporto?: Maybe<Scalars['timestamp']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  uffici_provinciale?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utg_prefettura?: Maybe<Scalars['String']>;
  veicolo_id?: Maybe<Scalars['Int']>;
  verbale_data?: Maybe<Scalars['timestamp']>;
  verbale_n?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Max_Order_By = {
  art_80_data?: Maybe<Order_By>;
  art_80_dtt?: Maybe<Order_By>;
  articolo?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data_trasmissione_rapporto?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  uffici_provinciale?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utg_prefettura?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
  verbale_data?: Maybe<Order_By>;
  verbale_n?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Infrazione_Min_Fields = {
  __typename?: 'sis_infrazione_min_fields';
  art_80_data?: Maybe<Scalars['timestamp']>;
  art_80_dtt?: Maybe<Scalars['String']>;
  articolo?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_trasmissione_rapporto?: Maybe<Scalars['timestamp']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  uffici_provinciale?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utg_prefettura?: Maybe<Scalars['String']>;
  veicolo_id?: Maybe<Scalars['Int']>;
  verbale_data?: Maybe<Scalars['timestamp']>;
  verbale_n?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Min_Order_By = {
  art_80_data?: Maybe<Order_By>;
  art_80_dtt?: Maybe<Order_By>;
  articolo?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data_trasmissione_rapporto?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  uffici_provinciale?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utg_prefettura?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
  verbale_data?: Maybe<Order_By>;
  verbale_n?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.infrazione" */
export type Sis_Infrazione_Mutation_Response = {
  __typename?: 'sis_infrazione_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Infrazione>;
};

/** on_conflict condition type for table "sis.infrazione" */
export type Sis_Infrazione_On_Conflict = {
  constraint: Sis_Infrazione_Constraint;
  update_columns?: Array<Sis_Infrazione_Update_Column>;
  where?: Maybe<Sis_Infrazione_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.infrazione". */
export type Sis_Infrazione_Order_By = {
  art_80_data?: Maybe<Order_By>;
  art_80_dtt?: Maybe<Order_By>;
  articolo?: Maybe<Order_By>;
  conducente?: Maybe<Sis_Conducente_Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data_trasmissione_rapporto?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  pedone?: Maybe<Sis_Pedone_Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  uffici_provinciale?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utg_prefettura?: Maybe<Order_By>;
  veicolo?: Maybe<Sis_Veicolo_Order_By>;
  veicolo_id?: Maybe<Order_By>;
  verbale_data?: Maybe<Order_By>;
  verbale_n?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_infrazione */
export type Sis_Infrazione_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.infrazione" */
export enum Sis_Infrazione_Select_Column {
  /** column name */
  Art_80Data = 'art_80_data',
  /** column name */
  Art_80Dtt = 'art_80_dtt',
  /** column name */
  Articolo = 'articolo',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DataTrasmissioneRapporto = 'data_trasmissione_rapporto',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  PedoneId = 'pedone_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UfficiProvinciale = 'uffici_provinciale',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtgPrefettura = 'utg_prefettura',
  /** column name */
  VeicoloId = 'veicolo_id',
  /** column name */
  VerbaleData = 'verbale_data',
  /** column name */
  VerbaleN = 'verbale_n'
}

/** input type for updating data in table "sis.infrazione" */
export type Sis_Infrazione_Set_Input = {
  art_80_data?: Maybe<Scalars['timestamp']>;
  art_80_dtt?: Maybe<Scalars['String']>;
  articolo?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data_trasmissione_rapporto?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  uffici_provinciale?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utg_prefettura?: Maybe<Scalars['String']>;
  veicolo_id?: Maybe<Scalars['Int']>;
  verbale_data?: Maybe<Scalars['timestamp']>;
  verbale_n?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Sis_Infrazione_Stddev_Fields = {
  __typename?: 'sis_infrazione_stddev_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Stddev_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Infrazione_Stddev_Pop_Fields = {
  __typename?: 'sis_infrazione_stddev_pop_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Stddev_Pop_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Infrazione_Stddev_Samp_Fields = {
  __typename?: 'sis_infrazione_stddev_samp_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Stddev_Samp_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Infrazione_Sum_Fields = {
  __typename?: 'sis_infrazione_sum_fields';
  conducente_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  pedone_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Sum_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.infrazione" */
export enum Sis_Infrazione_Update_Column {
  /** column name */
  Art_80Data = 'art_80_data',
  /** column name */
  Art_80Dtt = 'art_80_dtt',
  /** column name */
  Articolo = 'articolo',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DataTrasmissioneRapporto = 'data_trasmissione_rapporto',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  PedoneId = 'pedone_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  UfficiProvinciale = 'uffici_provinciale',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtgPrefettura = 'utg_prefettura',
  /** column name */
  VeicoloId = 'veicolo_id',
  /** column name */
  VerbaleData = 'verbale_data',
  /** column name */
  VerbaleN = 'verbale_n'
}

/** aggregate var_pop on columns */
export type Sis_Infrazione_Var_Pop_Fields = {
  __typename?: 'sis_infrazione_var_pop_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Var_Pop_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Infrazione_Var_Samp_Fields = {
  __typename?: 'sis_infrazione_var_samp_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Var_Samp_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Infrazione_Variance_Fields = {
  __typename?: 'sis_infrazione_variance_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.infrazione" */
export type Sis_Infrazione_Variance_Order_By = {
  conducente_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.locatario" */
export type Sis_Locatario = {
  __typename?: 'sis_locatario';
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.locatario" */
export type Sis_Locatario_Aggregate = {
  __typename?: 'sis_locatario_aggregate';
  aggregate?: Maybe<Sis_Locatario_Aggregate_Fields>;
  nodes: Array<Sis_Locatario>;
};

/** aggregate fields of "sis.locatario" */
export type Sis_Locatario_Aggregate_Fields = {
  __typename?: 'sis_locatario_aggregate_fields';
  avg?: Maybe<Sis_Locatario_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Locatario_Max_Fields>;
  min?: Maybe<Sis_Locatario_Min_Fields>;
  stddev?: Maybe<Sis_Locatario_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Locatario_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Locatario_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Locatario_Sum_Fields>;
  var_pop?: Maybe<Sis_Locatario_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Locatario_Var_Samp_Fields>;
  variance?: Maybe<Sis_Locatario_Variance_Fields>;
};


/** aggregate fields of "sis.locatario" */
export type Sis_Locatario_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Locatario_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.locatario" */
export type Sis_Locatario_Aggregate_Order_By = {
  avg?: Maybe<Sis_Locatario_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Locatario_Max_Order_By>;
  min?: Maybe<Sis_Locatario_Min_Order_By>;
  stddev?: Maybe<Sis_Locatario_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Locatario_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Locatario_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Locatario_Sum_Order_By>;
  var_pop?: Maybe<Sis_Locatario_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Locatario_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Locatario_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.locatario" */
export type Sis_Locatario_Arr_Rel_Insert_Input = {
  data: Array<Sis_Locatario_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Locatario_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Locatario_Avg_Fields = {
  __typename?: 'sis_locatario_avg_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.locatario" */
export type Sis_Locatario_Avg_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.locatario". All fields are combined with a logical 'AND'. */
export type Sis_Locatario_Bool_Exp = {
  _and?: Maybe<Array<Sis_Locatario_Bool_Exp>>;
  _not?: Maybe<Sis_Locatario_Bool_Exp>;
  _or?: Maybe<Array<Sis_Locatario_Bool_Exp>>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.locatario" */
export enum Sis_Locatario_Constraint {
  /** unique or primary key constraint */
  LocatarioPkey = 'locatario_pkey'
}

/** input type for incrementing numeric columns in table "sis.locatario" */
export type Sis_Locatario_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.locatario" */
export type Sis_Locatario_Insert_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Locatario_Max_Fields = {
  __typename?: 'sis_locatario_max_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.locatario" */
export type Sis_Locatario_Max_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Locatario_Min_Fields = {
  __typename?: 'sis_locatario_min_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.locatario" */
export type Sis_Locatario_Min_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.locatario" */
export type Sis_Locatario_Mutation_Response = {
  __typename?: 'sis_locatario_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Locatario>;
};

/** input type for inserting object relation for remote table "sis.locatario" */
export type Sis_Locatario_Obj_Rel_Insert_Input = {
  data: Sis_Locatario_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Locatario_On_Conflict>;
};

/** on_conflict condition type for table "sis.locatario" */
export type Sis_Locatario_On_Conflict = {
  constraint: Sis_Locatario_Constraint;
  update_columns?: Array<Sis_Locatario_Update_Column>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.locatario". */
export type Sis_Locatario_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_locatario */
export type Sis_Locatario_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.locatario" */
export enum Sis_Locatario_Select_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.locatario" */
export type Sis_Locatario_Set_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Locatario_Stddev_Fields = {
  __typename?: 'sis_locatario_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.locatario" */
export type Sis_Locatario_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Locatario_Stddev_Pop_Fields = {
  __typename?: 'sis_locatario_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.locatario" */
export type Sis_Locatario_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Locatario_Stddev_Samp_Fields = {
  __typename?: 'sis_locatario_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.locatario" */
export type Sis_Locatario_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Locatario_Sum_Fields = {
  __typename?: 'sis_locatario_sum_fields';
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.locatario" */
export type Sis_Locatario_Sum_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.locatario" */
export enum Sis_Locatario_Update_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Locatario_Var_Pop_Fields = {
  __typename?: 'sis_locatario_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.locatario" */
export type Sis_Locatario_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Locatario_Var_Samp_Fields = {
  __typename?: 'sis_locatario_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.locatario" */
export type Sis_Locatario_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Locatario_Variance_Fields = {
  __typename?: 'sis_locatario_variance_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.locatario" */
export type Sis_Locatario_Variance_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.pedone" */
export type Sis_Pedone = {
  __typename?: 'sis_pedone';
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  /** An object relationship */
  documento_rilasciato_da_citta?: Maybe<_Citta>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.pedone" */
export type Sis_Pedone_Aggregate = {
  __typename?: 'sis_pedone_aggregate';
  aggregate?: Maybe<Sis_Pedone_Aggregate_Fields>;
  nodes: Array<Sis_Pedone>;
};

/** aggregate fields of "sis.pedone" */
export type Sis_Pedone_Aggregate_Fields = {
  __typename?: 'sis_pedone_aggregate_fields';
  avg?: Maybe<Sis_Pedone_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Pedone_Max_Fields>;
  min?: Maybe<Sis_Pedone_Min_Fields>;
  stddev?: Maybe<Sis_Pedone_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Pedone_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Pedone_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Pedone_Sum_Fields>;
  var_pop?: Maybe<Sis_Pedone_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Pedone_Var_Samp_Fields>;
  variance?: Maybe<Sis_Pedone_Variance_Fields>;
};


/** aggregate fields of "sis.pedone" */
export type Sis_Pedone_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Pedone_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.pedone" */
export type Sis_Pedone_Aggregate_Order_By = {
  avg?: Maybe<Sis_Pedone_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Pedone_Max_Order_By>;
  min?: Maybe<Sis_Pedone_Min_Order_By>;
  stddev?: Maybe<Sis_Pedone_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Pedone_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Pedone_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Pedone_Sum_Order_By>;
  var_pop?: Maybe<Sis_Pedone_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Pedone_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Pedone_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.pedone" */
export type Sis_Pedone_Arr_Rel_Insert_Input = {
  data: Array<Sis_Pedone_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Pedone_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Pedone_Avg_Fields = {
  __typename?: 'sis_pedone_avg_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.pedone" */
export type Sis_Pedone_Avg_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.pedone". All fields are combined with a logical 'AND'. */
export type Sis_Pedone_Bool_Exp = {
  _and?: Maybe<Array<Sis_Pedone_Bool_Exp>>;
  _not?: Maybe<Sis_Pedone_Bool_Exp>;
  _or?: Maybe<Array<Sis_Pedone_Bool_Exp>>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  documento_numero?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Bool_Exp>;
  documento_rilasciato_da_citta_id?: Maybe<Int_Comparison_Exp>;
  documento_rilasciato_data?: Maybe<Timestamp_Comparison_Exp>;
  documento_tipo?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.pedone" */
export enum Sis_Pedone_Constraint {
  /** unique or primary key constraint */
  PedonePkey = 'pedone_pkey'
}

/** input type for incrementing numeric columns in table "sis.pedone" */
export type Sis_Pedone_Inc_Input = {
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.pedone" */
export type Sis_Pedone_Insert_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Pedone_Max_Fields = {
  __typename?: 'sis_pedone_max_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.pedone" */
export type Sis_Pedone_Max_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Pedone_Min_Fields = {
  __typename?: 'sis_pedone_min_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.pedone" */
export type Sis_Pedone_Min_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.pedone" */
export type Sis_Pedone_Mutation_Response = {
  __typename?: 'sis_pedone_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Pedone>;
};

/** input type for inserting object relation for remote table "sis.pedone" */
export type Sis_Pedone_Obj_Rel_Insert_Input = {
  data: Sis_Pedone_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Pedone_On_Conflict>;
};

/** on_conflict condition type for table "sis.pedone" */
export type Sis_Pedone_On_Conflict = {
  constraint: Sis_Pedone_Constraint;
  update_columns?: Array<Sis_Pedone_Update_Column>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.pedone". */
export type Sis_Pedone_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_pedone */
export type Sis_Pedone_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.pedone" */
export enum Sis_Pedone_Select_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.pedone" */
export type Sis_Pedone_Set_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Pedone_Stddev_Fields = {
  __typename?: 'sis_pedone_stddev_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.pedone" */
export type Sis_Pedone_Stddev_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Pedone_Stddev_Pop_Fields = {
  __typename?: 'sis_pedone_stddev_pop_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.pedone" */
export type Sis_Pedone_Stddev_Pop_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Pedone_Stddev_Samp_Fields = {
  __typename?: 'sis_pedone_stddev_samp_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.pedone" */
export type Sis_Pedone_Stddev_Samp_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Pedone_Sum_Fields = {
  __typename?: 'sis_pedone_sum_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.pedone" */
export type Sis_Pedone_Sum_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.pedone" */
export enum Sis_Pedone_Update_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Pedone_Var_Pop_Fields = {
  __typename?: 'sis_pedone_var_pop_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.pedone" */
export type Sis_Pedone_Var_Pop_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Pedone_Var_Samp_Fields = {
  __typename?: 'sis_pedone_var_samp_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.pedone" */
export type Sis_Pedone_Var_Samp_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Pedone_Variance_Fields = {
  __typename?: 'sis_pedone_variance_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.pedone" */
export type Sis_Pedone_Variance_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.proprietario" */
export type Sis_Proprietario = {
  __typename?: 'sis_proprietario';
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.proprietario" */
export type Sis_Proprietario_Aggregate = {
  __typename?: 'sis_proprietario_aggregate';
  aggregate?: Maybe<Sis_Proprietario_Aggregate_Fields>;
  nodes: Array<Sis_Proprietario>;
};

/** aggregate fields of "sis.proprietario" */
export type Sis_Proprietario_Aggregate_Fields = {
  __typename?: 'sis_proprietario_aggregate_fields';
  avg?: Maybe<Sis_Proprietario_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Proprietario_Max_Fields>;
  min?: Maybe<Sis_Proprietario_Min_Fields>;
  stddev?: Maybe<Sis_Proprietario_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Proprietario_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Proprietario_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Proprietario_Sum_Fields>;
  var_pop?: Maybe<Sis_Proprietario_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Proprietario_Var_Samp_Fields>;
  variance?: Maybe<Sis_Proprietario_Variance_Fields>;
};


/** aggregate fields of "sis.proprietario" */
export type Sis_Proprietario_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Proprietario_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.proprietario" */
export type Sis_Proprietario_Aggregate_Order_By = {
  avg?: Maybe<Sis_Proprietario_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Proprietario_Max_Order_By>;
  min?: Maybe<Sis_Proprietario_Min_Order_By>;
  stddev?: Maybe<Sis_Proprietario_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Proprietario_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Proprietario_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Proprietario_Sum_Order_By>;
  var_pop?: Maybe<Sis_Proprietario_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Proprietario_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Proprietario_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.proprietario" */
export type Sis_Proprietario_Arr_Rel_Insert_Input = {
  data: Array<Sis_Proprietario_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Proprietario_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Proprietario_Avg_Fields = {
  __typename?: 'sis_proprietario_avg_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Avg_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.proprietario". All fields are combined with a logical 'AND'. */
export type Sis_Proprietario_Bool_Exp = {
  _and?: Maybe<Array<Sis_Proprietario_Bool_Exp>>;
  _not?: Maybe<Sis_Proprietario_Bool_Exp>;
  _or?: Maybe<Array<Sis_Proprietario_Bool_Exp>>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.proprietario" */
export enum Sis_Proprietario_Constraint {
  /** unique or primary key constraint */
  ProprietarioPkey = 'proprietario_pkey'
}

/** columns and relationships of "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico = {
  __typename?: 'sis_proprietario_giuridico';
  /** An object relationship */
  citta?: Maybe<_Citta>;
  citta_altro?: Maybe<Scalars['String']>;
  citta_id?: Maybe<Scalars['Int']>;
  codice_fiscale?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  indirizzo?: Maybe<Scalars['String']>;
  partita_iva?: Maybe<Scalars['String']>;
  ragione_sociale?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Aggregate = {
  __typename?: 'sis_proprietario_giuridico_aggregate';
  aggregate?: Maybe<Sis_Proprietario_Giuridico_Aggregate_Fields>;
  nodes: Array<Sis_Proprietario_Giuridico>;
};

/** aggregate fields of "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Aggregate_Fields = {
  __typename?: 'sis_proprietario_giuridico_aggregate_fields';
  avg?: Maybe<Sis_Proprietario_Giuridico_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Proprietario_Giuridico_Max_Fields>;
  min?: Maybe<Sis_Proprietario_Giuridico_Min_Fields>;
  stddev?: Maybe<Sis_Proprietario_Giuridico_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Proprietario_Giuridico_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Proprietario_Giuridico_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Proprietario_Giuridico_Sum_Fields>;
  var_pop?: Maybe<Sis_Proprietario_Giuridico_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Proprietario_Giuridico_Var_Samp_Fields>;
  variance?: Maybe<Sis_Proprietario_Giuridico_Variance_Fields>;
};


/** aggregate fields of "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Proprietario_Giuridico_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Aggregate_Order_By = {
  avg?: Maybe<Sis_Proprietario_Giuridico_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Proprietario_Giuridico_Max_Order_By>;
  min?: Maybe<Sis_Proprietario_Giuridico_Min_Order_By>;
  stddev?: Maybe<Sis_Proprietario_Giuridico_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Proprietario_Giuridico_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Proprietario_Giuridico_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Proprietario_Giuridico_Sum_Order_By>;
  var_pop?: Maybe<Sis_Proprietario_Giuridico_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Proprietario_Giuridico_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Proprietario_Giuridico_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Arr_Rel_Insert_Input = {
  data: Array<Sis_Proprietario_Giuridico_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Proprietario_Giuridico_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Proprietario_Giuridico_Avg_Fields = {
  __typename?: 'sis_proprietario_giuridico_avg_fields';
  citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Avg_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.proprietario_giuridico". All fields are combined with a logical 'AND'. */
export type Sis_Proprietario_Giuridico_Bool_Exp = {
  _and?: Maybe<Array<Sis_Proprietario_Giuridico_Bool_Exp>>;
  _not?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
  _or?: Maybe<Array<Sis_Proprietario_Giuridico_Bool_Exp>>;
  citta?: Maybe<_Citta_Bool_Exp>;
  citta_altro?: Maybe<String_Comparison_Exp>;
  citta_id?: Maybe<Int_Comparison_Exp>;
  codice_fiscale?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  indirizzo?: Maybe<String_Comparison_Exp>;
  partita_iva?: Maybe<String_Comparison_Exp>;
  ragione_sociale?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.proprietario_giuridico" */
export enum Sis_Proprietario_Giuridico_Constraint {
  /** unique or primary key constraint */
  ProprietarioGiuridicoPkey = 'proprietario_giuridico_pkey'
}

/** input type for incrementing numeric columns in table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Inc_Input = {
  citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Insert_Input = {
  citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  citta_altro?: Maybe<Scalars['String']>;
  citta_id?: Maybe<Scalars['Int']>;
  codice_fiscale?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  indirizzo?: Maybe<Scalars['String']>;
  partita_iva?: Maybe<Scalars['String']>;
  ragione_sociale?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Proprietario_Giuridico_Max_Fields = {
  __typename?: 'sis_proprietario_giuridico_max_fields';
  citta_altro?: Maybe<Scalars['String']>;
  citta_id?: Maybe<Scalars['Int']>;
  codice_fiscale?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  indirizzo?: Maybe<Scalars['String']>;
  partita_iva?: Maybe<Scalars['String']>;
  ragione_sociale?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Max_Order_By = {
  citta_altro?: Maybe<Order_By>;
  citta_id?: Maybe<Order_By>;
  codice_fiscale?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  indirizzo?: Maybe<Order_By>;
  partita_iva?: Maybe<Order_By>;
  ragione_sociale?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Proprietario_Giuridico_Min_Fields = {
  __typename?: 'sis_proprietario_giuridico_min_fields';
  citta_altro?: Maybe<Scalars['String']>;
  citta_id?: Maybe<Scalars['Int']>;
  codice_fiscale?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  indirizzo?: Maybe<Scalars['String']>;
  partita_iva?: Maybe<Scalars['String']>;
  ragione_sociale?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Min_Order_By = {
  citta_altro?: Maybe<Order_By>;
  citta_id?: Maybe<Order_By>;
  codice_fiscale?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  indirizzo?: Maybe<Order_By>;
  partita_iva?: Maybe<Order_By>;
  ragione_sociale?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Mutation_Response = {
  __typename?: 'sis_proprietario_giuridico_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Proprietario_Giuridico>;
};

/** input type for inserting object relation for remote table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Obj_Rel_Insert_Input = {
  data: Sis_Proprietario_Giuridico_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Proprietario_Giuridico_On_Conflict>;
};

/** on_conflict condition type for table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_On_Conflict = {
  constraint: Sis_Proprietario_Giuridico_Constraint;
  update_columns?: Array<Sis_Proprietario_Giuridico_Update_Column>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.proprietario_giuridico". */
export type Sis_Proprietario_Giuridico_Order_By = {
  citta?: Maybe<_Citta_Order_By>;
  citta_altro?: Maybe<Order_By>;
  citta_id?: Maybe<Order_By>;
  codice_fiscale?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  indirizzo?: Maybe<Order_By>;
  partita_iva?: Maybe<Order_By>;
  ragione_sociale?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_proprietario_giuridico */
export type Sis_Proprietario_Giuridico_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.proprietario_giuridico" */
export enum Sis_Proprietario_Giuridico_Select_Column {
  /** column name */
  CittaAltro = 'citta_altro',
  /** column name */
  CittaId = 'citta_id',
  /** column name */
  CodiceFiscale = 'codice_fiscale',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  Indirizzo = 'indirizzo',
  /** column name */
  PartitaIva = 'partita_iva',
  /** column name */
  RagioneSociale = 'ragione_sociale',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Set_Input = {
  citta_altro?: Maybe<Scalars['String']>;
  citta_id?: Maybe<Scalars['Int']>;
  codice_fiscale?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  indirizzo?: Maybe<Scalars['String']>;
  partita_iva?: Maybe<Scalars['String']>;
  ragione_sociale?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Proprietario_Giuridico_Stddev_Fields = {
  __typename?: 'sis_proprietario_giuridico_stddev_fields';
  citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Stddev_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Proprietario_Giuridico_Stddev_Pop_Fields = {
  __typename?: 'sis_proprietario_giuridico_stddev_pop_fields';
  citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Stddev_Pop_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Proprietario_Giuridico_Stddev_Samp_Fields = {
  __typename?: 'sis_proprietario_giuridico_stddev_samp_fields';
  citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Stddev_Samp_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Proprietario_Giuridico_Sum_Fields = {
  __typename?: 'sis_proprietario_giuridico_sum_fields';
  citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Sum_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** update columns of table "sis.proprietario_giuridico" */
export enum Sis_Proprietario_Giuridico_Update_Column {
  /** column name */
  CittaAltro = 'citta_altro',
  /** column name */
  CittaId = 'citta_id',
  /** column name */
  CodiceFiscale = 'codice_fiscale',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  Indirizzo = 'indirizzo',
  /** column name */
  PartitaIva = 'partita_iva',
  /** column name */
  RagioneSociale = 'ragione_sociale',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Proprietario_Giuridico_Var_Pop_Fields = {
  __typename?: 'sis_proprietario_giuridico_var_pop_fields';
  citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Var_Pop_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Proprietario_Giuridico_Var_Samp_Fields = {
  __typename?: 'sis_proprietario_giuridico_var_samp_fields';
  citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Var_Samp_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Proprietario_Giuridico_Variance_Fields = {
  __typename?: 'sis_proprietario_giuridico_variance_fields';
  citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.proprietario_giuridico" */
export type Sis_Proprietario_Giuridico_Variance_Order_By = {
  citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
};

/** input type for incrementing numeric columns in table "sis.proprietario" */
export type Sis_Proprietario_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.proprietario" */
export type Sis_Proprietario_Insert_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Proprietario_Max_Fields = {
  __typename?: 'sis_proprietario_max_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Max_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Proprietario_Min_Fields = {
  __typename?: 'sis_proprietario_min_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Min_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.proprietario" */
export type Sis_Proprietario_Mutation_Response = {
  __typename?: 'sis_proprietario_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Proprietario>;
};

/** input type for inserting object relation for remote table "sis.proprietario" */
export type Sis_Proprietario_Obj_Rel_Insert_Input = {
  data: Sis_Proprietario_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Proprietario_On_Conflict>;
};

/** on_conflict condition type for table "sis.proprietario" */
export type Sis_Proprietario_On_Conflict = {
  constraint: Sis_Proprietario_Constraint;
  update_columns?: Array<Sis_Proprietario_Update_Column>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.proprietario". */
export type Sis_Proprietario_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_proprietario */
export type Sis_Proprietario_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.proprietario" */
export enum Sis_Proprietario_Select_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.proprietario" */
export type Sis_Proprietario_Set_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Proprietario_Stddev_Fields = {
  __typename?: 'sis_proprietario_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Proprietario_Stddev_Pop_Fields = {
  __typename?: 'sis_proprietario_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Proprietario_Stddev_Samp_Fields = {
  __typename?: 'sis_proprietario_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Proprietario_Sum_Fields = {
  __typename?: 'sis_proprietario_sum_fields';
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Sum_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.proprietario" */
export enum Sis_Proprietario_Update_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Proprietario_Var_Pop_Fields = {
  __typename?: 'sis_proprietario_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Proprietario_Var_Samp_Fields = {
  __typename?: 'sis_proprietario_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Proprietario_Variance_Fields = {
  __typename?: 'sis_proprietario_variance_fields';
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.proprietario" */
export type Sis_Proprietario_Variance_Order_By = {
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.ris" */
export type Sis_Ris = {
  __typename?: 'sis_ris';
  /** An array relationship */
  accertamenti: Array<Sis_Accertamento>;
  /** An aggregate relationship */
  accertamenti_aggregate: Sis_Accertamento_Aggregate;
  /** An array relationship */
  agenti_accertatori: Array<Sis_Agente_Accertatore>;
  /** An aggregate relationship */
  agenti_accertatori_aggregate: Sis_Agente_Accertatore_Aggregate;
  /** An array relationship */
  altri: Array<Sis_Altro>;
  /** An aggregate relationship */
  altri_aggregate: Sis_Altro_Aggregate;
  altro?: Maybe<Scalars['String']>;
  /** An array relationship */
  conducenti: Array<Sis_Conducente>;
  /** An aggregate relationship */
  conducenti_aggregate: Sis_Conducente_Aggregate;
  conseguenza_veicolo_note?: Maybe<Scalars['String']>;
  /** An array relationship */
  conseguenze_veicolo: Array<Sis_Associazione_Conseguenza_Veicolo>;
  /** An aggregate relationship */
  conseguenze_veicolo_aggregate: Sis_Associazione_Conseguenza_Veicolo_Aggregate;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['timestamptz']>;
  data_intervento?: Maybe<Scalars['timestamptz']>;
  data_presunta?: Maybe<Scalars['timestamptz']>;
  data_segnalazione?: Maybe<Scalars['timestamptz']>;
  decessi_certificato?: Maybe<Scalars['Boolean']>;
  decessi_certificato_redattore?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_in_servizio?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_recapito?: Maybe<Scalars['String']>;
  decessi_intervento_polizia_mortuaria?: Maybe<Scalars['Boolean']>;
  decessi_note?: Maybe<Scalars['String']>;
  decessi_notiziato_pm?: Maybe<Scalars['Boolean']>;
  decessi_numero?: Maybe<Scalars['Int']>;
  decessi_oggetti_rinvenuti?: Maybe<Scalars['Boolean']>;
  decessi_successivo_data?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  decessi_tipologie: Array<Sis_Associazione_Decessi_Tipologie>;
  /** An aggregate relationship */
  decessi_tipologie_aggregate: Sis_Associazione_Decessi_Tipologie_Aggregate;
  decessi_trasporto_salme_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_presso?: Maybe<Scalars['String']>;
  decessi_verbale_riconoscimento_salma?: Maybe<Scalars['Boolean']>;
  dinamica?: Maybe<Scalars['String']>;
  ente_primo_intervento_note?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_altro?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_motivazione?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_gia_intervenuti?: Maybe<Scalars['Boolean']>;
  ente_segnalatore_note?: Maybe<Scalars['String']>;
  /** An array relationship */
  enti_primo_intervento: Array<Sis_Associazione_Ente_Primo_Intervento>;
  /** An aggregate relationship */
  enti_primo_intervento_aggregate: Sis_Associazione_Ente_Primo_Intervento_Aggregate;
  /** An array relationship */
  enti_secondario_intervenuti: Array<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** An aggregate relationship */
  enti_secondario_intervenuti_aggregate: Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate;
  /** An array relationship */
  enti_segnalatori: Array<Sis_Associazione_Ente_Segnalatore>;
  /** An aggregate relationship */
  enti_segnalatori_aggregate: Sis_Associazione_Ente_Segnalatore_Aggregate;
  /** An array relationship */
  eventi: Array<Sis_Evento_Sis>;
  /** An aggregate relationship */
  eventi_aggregate: Sis_Evento_Sis_Aggregate;
  id: Scalars['Int'];
  /** An array relationship */
  impianti_semaforici: Array<Sis_Associazione_Impianto_Semaforico>;
  /** An aggregate relationship */
  impianti_semaforici_aggregate: Sis_Associazione_Impianto_Semaforico_Aggregate;
  impianto_semaforico_note?: Maybe<Scalars['String']>;
  /** An array relationship */
  infortunati: Array<Sis_Infortunato>;
  /** An aggregate relationship */
  infortunati_aggregate: Sis_Infortunato_Aggregate;
  /** An array relationship */
  infrazioni: Array<Sis_Infrazione>;
  /** An aggregate relationship */
  infrazioni_aggregate: Sis_Infrazione_Aggregate;
  localizzazione_altro_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_traffico_note?: Maybe<Scalars['String']>;
  localizzazione_extra_abitato_note?: Maybe<Scalars['String']>;
  localizzazione_fondo_stradale_note?: Maybe<Scalars['String']>;
  localizzazione_illuminazione_note?: Maybe<Scalars['String']>;
  localizzazione_note?: Maybe<Scalars['String']>;
  localizzazione_particolarita_strada_note?: Maybe<Scalars['String']>;
  localizzazione_pavimentazione_note?: Maybe<Scalars['String']>;
  localizzazione_tipo_strada_note?: Maybe<Scalars['String']>;
  localizzazione_visibilita_note?: Maybe<Scalars['String']>;
  /** An array relationship */
  localizzazioni_altro: Array<Sis_Associazione_Localizzazione_Altro>;
  /** An aggregate relationship */
  localizzazioni_altro_aggregate: Sis_Associazione_Localizzazione_Altro_Aggregate;
  /** An array relationship */
  localizzazioni_condizioni_atmosferiche: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** An aggregate relationship */
  localizzazioni_condizioni_atmosferiche_aggregate: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate;
  /** An array relationship */
  localizzazioni_condizioni_traffico: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** An aggregate relationship */
  localizzazioni_condizioni_traffico_aggregate: Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate;
  /** An array relationship */
  localizzazioni_extra_abitato: Array<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** An aggregate relationship */
  localizzazioni_extra_abitato_aggregate: Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate;
  /** An array relationship */
  localizzazioni_fondo_stradale: Array<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** An aggregate relationship */
  localizzazioni_fondo_stradale_aggregate: Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate;
  /** An array relationship */
  localizzazioni_illuminazione: Array<Sis_Associazione_Localizzazione_Illuminazione>;
  /** An aggregate relationship */
  localizzazioni_illuminazione_aggregate: Sis_Associazione_Localizzazione_Illuminazione_Aggregate;
  /** An array relationship */
  localizzazioni_particolarita_strada: Array<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** An aggregate relationship */
  localizzazioni_particolarita_strada_aggregate: Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate;
  /** An array relationship */
  localizzazioni_pavimentazione: Array<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** An aggregate relationship */
  localizzazioni_pavimentazione_aggregate: Sis_Associazione_Localizzazione_Pavimentazione_Aggregate;
  /** An array relationship */
  localizzazioni_tipo_strade: Array<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** An aggregate relationship */
  localizzazioni_tipo_strade_aggregate: Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate;
  /** An array relationship */
  localizzazioni_visibilita: Array<Sis_Associazione_Localizzazione_Visibilita>;
  /** An aggregate relationship */
  localizzazioni_visibilita_aggregate: Sis_Associazione_Localizzazione_Visibilita_Aggregate;
  /** An array relationship */
  locatari: Array<Sis_Locatario>;
  /** An aggregate relationship */
  locatari_aggregate: Sis_Locatario_Aggregate;
  /** An object relationship */
  municipalita?: Maybe<Toponomastica_Municipalita>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  natura_incidente_note?: Maybe<Scalars['String']>;
  /** An array relationship */
  nature_incidente: Array<Sis_Associazione_Natura_Incidente>;
  /** An aggregate relationship */
  nature_incidente_aggregate: Sis_Associazione_Natura_Incidente_Aggregate;
  note_intervento?: Maybe<Scalars['String']>;
  operazione_terminate_data?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  pedoni: Array<Sis_Pedone>;
  /** An aggregate relationship */
  pedoni_aggregate: Sis_Pedone_Aggregate;
  /** An object relationship */
  posizionamento_toponimo?: Maybe<Gis_Posizionamento_Toponimo>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_margini_note?: Maybe<Scalars['String']>;
  posizione_statica_descrizione_analitica?: Maybe<Scalars['String']>;
  posizione_statica_rilievi?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  posizione_statica_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  posizione_statica_rilievi_veicoli_rimossi?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  posizioni_finali_veicolo_carreggiata: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** An aggregate relationship */
  posizioni_finali_veicolo_carreggiata_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate;
  /** An array relationship */
  posizioni_finali_veicolo_fuori_sede: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** An aggregate relationship */
  posizioni_finali_veicolo_fuori_sede_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate;
  /** An array relationship */
  posizioni_finali_veicolo_margini: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** An aggregate relationship */
  posizioni_finali_veicolo_margini_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate;
  /** An array relationship */
  proprietari: Array<Sis_Proprietario>;
  /** An aggregate relationship */
  proprietari_aggregate: Sis_Proprietario_Aggregate;
  /** An array relationship */
  proprietari_giuridico: Array<Sis_Proprietario_Giuridico>;
  /** An aggregate relationship */
  proprietari_giuridico_aggregate: Sis_Proprietario_Giuridico_Aggregate;
  /** An object relationship */
  protocollo?: Maybe<Protocollo_Protocollo>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punti_descrizione_analitica?: Maybe<Scalars['String']>;
  punti_investimento?: Maybe<Scalars['Boolean']>;
  punti_investimento_multiplo?: Maybe<Scalars['Boolean']>;
  punti_rilievi?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  punti_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  punti_urto?: Maybe<Scalars['Boolean']>;
  punti_urto_accorda?: Maybe<Scalars['String']>;
  punti_urto_multiplo?: Maybe<Scalars['Boolean']>;
  punti_urto_note?: Maybe<Scalars['String']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  quartiere?: Maybe<Toponomastica_Quartiere>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  ris_consegnato_a?: Maybe<Sis__Ris_Consegnato_A>;
  ris_consegnato_a_altro?: Maybe<Scalars['String']>;
  ris_consegnato_a_id?: Maybe<Scalars['Int']>;
  ris_consegnato_data?: Maybe<Scalars['timestamptz']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  stato: Sis__Stato_Ris_Enum;
  /** An array relationship */
  testimoni: Array<Sis_Testimone>;
  /** An aggregate relationship */
  testimoni_aggregate: Sis_Testimone_Aggregate;
  /** An array relationship */
  tipologie_ris: Array<Sis_Associazione_Tipologia_Ris>;
  /** An aggregate relationship */
  tipologie_ris_aggregate: Sis_Associazione_Tipologia_Ris_Aggregate;
  /** An object relationship */
  toponimo?: Maybe<Toponomastica_Toponimo>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  trasportati: Array<Sis_Trasportato>;
  /** An aggregate relationship */
  trasportati_aggregate: Sis_Trasportato_Aggregate;
  /** An object relationship */
  unita_operativa?: Maybe<Sis_Unita_Operativa>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
  utente_inseritore?: Maybe<Scalars['String']>;
  /** An array relationship */
  veicoli: Array<Sis_Veicolo>;
  /** An aggregate relationship */
  veicoli_aggregate: Sis_Veicolo_Aggregate;
  /** An array relationship */
  verbali: Array<Sis_Verbale>;
  /** An aggregate relationship */
  verbali_aggregate: Sis_Verbale_Aggregate;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisAccertamentiArgs = {
  distinct_on?: Maybe<Array<Sis_Accertamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Accertamento_Order_By>>;
  where?: Maybe<Sis_Accertamento_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisAccertamenti_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Accertamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Accertamento_Order_By>>;
  where?: Maybe<Sis_Accertamento_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisAgenti_AccertatoriArgs = {
  distinct_on?: Maybe<Array<Sis_Agente_Accertatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Agente_Accertatore_Order_By>>;
  where?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisAgenti_Accertatori_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Agente_Accertatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Agente_Accertatore_Order_By>>;
  where?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisAltriArgs = {
  distinct_on?: Maybe<Array<Sis_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Altro_Order_By>>;
  where?: Maybe<Sis_Altro_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisAltri_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Altro_Order_By>>;
  where?: Maybe<Sis_Altro_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisConducentiArgs = {
  distinct_on?: Maybe<Array<Sis_Conducente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Conducente_Order_By>>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisConducenti_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Conducente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Conducente_Order_By>>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisConseguenze_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisConseguenze_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisDecessi_TipologieArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Order_By>>;
  where?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisDecessi_Tipologie_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Order_By>>;
  where?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEnti_Primo_InterventoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEnti_Primo_Intervento_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEnti_Secondario_IntervenutiArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEnti_Secondario_Intervenuti_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEnti_SegnalatoriArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEnti_Segnalatori_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEventiArgs = {
  distinct_on?: Maybe<Array<Sis_Evento_Sis_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Evento_Sis_Order_By>>;
  where?: Maybe<Sis_Evento_Sis_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisEventi_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Evento_Sis_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Evento_Sis_Order_By>>;
  where?: Maybe<Sis_Evento_Sis_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisImpianti_SemaforiciArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisImpianti_Semaforici_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisInfortunatiArgs = {
  distinct_on?: Maybe<Array<Sis_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infortunato_Order_By>>;
  where?: Maybe<Sis_Infortunato_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisInfortunati_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infortunato_Order_By>>;
  where?: Maybe<Sis_Infortunato_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisInfrazioniArgs = {
  distinct_on?: Maybe<Array<Sis_Infrazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infrazione_Order_By>>;
  where?: Maybe<Sis_Infrazione_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisInfrazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Infrazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infrazione_Order_By>>;
  where?: Maybe<Sis_Infrazione_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_AltroArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Altro_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Condizioni_AtmosfericheArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Condizioni_Atmosferiche_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Condizioni_TrafficoArgs = {
  distinct_on?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Condizioni_Traffico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Extra_AbitatoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Extra_Abitato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Fondo_StradaleArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Fondo_Stradale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_IlluminazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Illuminazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Particolarita_StradaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Particolarita_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_PavimentazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Pavimentazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Tipo_StradeArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Tipo_Strade_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_VisibilitaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocalizzazioni_Visibilita_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocatariArgs = {
  distinct_on?: Maybe<Array<Sis_Locatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Locatario_Order_By>>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisLocatari_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Locatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Locatario_Order_By>>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisMunicipalita_StoricaArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisNature_IncidenteArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Natura_Incidente_Order_By>>;
  where?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisNature_Incidente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Natura_Incidente_Order_By>>;
  where?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPedoniArgs = {
  distinct_on?: Maybe<Array<Sis_Pedone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Pedone_Order_By>>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPedoni_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Pedone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Pedone_Order_By>>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPosizioni_Finali_Veicolo_CarreggiataArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPosizioni_Finali_Veicolo_Carreggiata_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPosizioni_Finali_Veicolo_Fuori_SedeArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPosizioni_Finali_Veicolo_Fuori_Sede_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPosizioni_Finali_Veicolo_MarginiArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisPosizioni_Finali_Veicolo_Margini_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisProprietariArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Order_By>>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisProprietari_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Order_By>>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisProprietari_GiuridicoArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Giuridico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Giuridico_Order_By>>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisProprietari_Giuridico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Giuridico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Giuridico_Order_By>>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisQuartiere_StoricoArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisTestimoniArgs = {
  distinct_on?: Maybe<Array<Sis_Testimone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Testimone_Order_By>>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisTestimoni_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Testimone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Testimone_Order_By>>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisTipologie_RisArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisTipologie_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisToponimo_StoricoArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisTrasportatiArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportato_Order_By>>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisTrasportati_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportato_Order_By>>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisVeicoliArgs = {
  distinct_on?: Maybe<Array<Sis_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Veicolo_Order_By>>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisVeicoli_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Veicolo_Order_By>>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisVerbaliArgs = {
  distinct_on?: Maybe<Array<Sis_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Verbale_Order_By>>;
  where?: Maybe<Sis_Verbale_Bool_Exp>;
};


/** columns and relationships of "sis.ris" */
export type Sis_RisVerbali_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Verbale_Order_By>>;
  where?: Maybe<Sis_Verbale_Bool_Exp>;
};

/** aggregated selection of "sis.ris" */
export type Sis_Ris_Aggregate = {
  __typename?: 'sis_ris_aggregate';
  aggregate?: Maybe<Sis_Ris_Aggregate_Fields>;
  nodes: Array<Sis_Ris>;
};

/** aggregate fields of "sis.ris" */
export type Sis_Ris_Aggregate_Fields = {
  __typename?: 'sis_ris_aggregate_fields';
  avg?: Maybe<Sis_Ris_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Ris_Max_Fields>;
  min?: Maybe<Sis_Ris_Min_Fields>;
  stddev?: Maybe<Sis_Ris_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Ris_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Ris_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Ris_Sum_Fields>;
  var_pop?: Maybe<Sis_Ris_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Ris_Var_Samp_Fields>;
  variance?: Maybe<Sis_Ris_Variance_Fields>;
};


/** aggregate fields of "sis.ris" */
export type Sis_Ris_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Ris_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.ris" */
export type Sis_Ris_Aggregate_Order_By = {
  avg?: Maybe<Sis_Ris_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Ris_Max_Order_By>;
  min?: Maybe<Sis_Ris_Min_Order_By>;
  stddev?: Maybe<Sis_Ris_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Ris_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Ris_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Ris_Sum_Order_By>;
  var_pop?: Maybe<Sis_Ris_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Ris_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Ris_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Sis_Ris_Append_Input = {
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "sis.ris" */
export type Sis_Ris_Arr_Rel_Insert_Input = {
  data: Array<Sis_Ris_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Ris_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Ris_Avg_Fields = {
  __typename?: 'sis_ris_avg_fields';
  decessi_numero?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  ris_consegnato_a_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.ris" */
export type Sis_Ris_Avg_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.ris". All fields are combined with a logical 'AND'. */
export type Sis_Ris_Bool_Exp = {
  _and?: Maybe<Array<Sis_Ris_Bool_Exp>>;
  _not?: Maybe<Sis_Ris_Bool_Exp>;
  _or?: Maybe<Array<Sis_Ris_Bool_Exp>>;
  accertamenti?: Maybe<Sis_Accertamento_Bool_Exp>;
  agenti_accertatori?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
  altri?: Maybe<Sis_Altro_Bool_Exp>;
  altro?: Maybe<String_Comparison_Exp>;
  conducenti?: Maybe<Sis_Conducente_Bool_Exp>;
  conseguenza_veicolo_note?: Maybe<String_Comparison_Exp>;
  conseguenze_veicolo?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Timestamptz_Comparison_Exp>;
  data_intervento?: Maybe<Timestamptz_Comparison_Exp>;
  data_presunta?: Maybe<Timestamptz_Comparison_Exp>;
  data_segnalazione?: Maybe<Timestamptz_Comparison_Exp>;
  decessi_certificato?: Maybe<Boolean_Comparison_Exp>;
  decessi_certificato_redattore?: Maybe<String_Comparison_Exp>;
  decessi_certificato_redattore_in_servizio?: Maybe<String_Comparison_Exp>;
  decessi_certificato_redattore_recapito?: Maybe<String_Comparison_Exp>;
  decessi_intervento_polizia_mortuaria?: Maybe<Boolean_Comparison_Exp>;
  decessi_note?: Maybe<String_Comparison_Exp>;
  decessi_notiziato_pm?: Maybe<Boolean_Comparison_Exp>;
  decessi_numero?: Maybe<Int_Comparison_Exp>;
  decessi_oggetti_rinvenuti?: Maybe<Boolean_Comparison_Exp>;
  decessi_successivo_data?: Maybe<Timestamptz_Comparison_Exp>;
  decessi_tipologie?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
  decessi_trasporto_salme_data?: Maybe<Timestamptz_Comparison_Exp>;
  decessi_trasporto_salme_presso?: Maybe<String_Comparison_Exp>;
  decessi_verbale_riconoscimento_salma?: Maybe<Boolean_Comparison_Exp>;
  dinamica?: Maybe<String_Comparison_Exp>;
  ente_primo_intervento_note?: Maybe<String_Comparison_Exp>;
  ente_secondario_intervenuti_altro?: Maybe<String_Comparison_Exp>;
  ente_secondario_intervenuti_motivazione?: Maybe<String_Comparison_Exp>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<String_Comparison_Exp>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<String_Comparison_Exp>;
  ente_secondario_intervenuti_vvff_gia_intervenuti?: Maybe<Boolean_Comparison_Exp>;
  ente_segnalatore_note?: Maybe<String_Comparison_Exp>;
  enti_primo_intervento?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
  enti_secondario_intervenuti?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
  enti_segnalatori?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
  eventi?: Maybe<Sis_Evento_Sis_Bool_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  impianti_semaforici?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
  impianto_semaforico_note?: Maybe<String_Comparison_Exp>;
  infortunati?: Maybe<Sis_Infortunato_Bool_Exp>;
  infrazioni?: Maybe<Sis_Infrazione_Bool_Exp>;
  localizzazione_altro_note?: Maybe<String_Comparison_Exp>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<String_Comparison_Exp>;
  localizzazione_condizioni_traffico_note?: Maybe<String_Comparison_Exp>;
  localizzazione_extra_abitato_note?: Maybe<String_Comparison_Exp>;
  localizzazione_fondo_stradale_note?: Maybe<String_Comparison_Exp>;
  localizzazione_illuminazione_note?: Maybe<String_Comparison_Exp>;
  localizzazione_note?: Maybe<String_Comparison_Exp>;
  localizzazione_particolarita_strada_note?: Maybe<String_Comparison_Exp>;
  localizzazione_pavimentazione_note?: Maybe<String_Comparison_Exp>;
  localizzazione_tipo_strada_note?: Maybe<String_Comparison_Exp>;
  localizzazione_visibilita_note?: Maybe<String_Comparison_Exp>;
  localizzazioni_altro?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
  localizzazioni_condizioni_atmosferiche?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
  localizzazioni_condizioni_traffico?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
  localizzazioni_extra_abitato?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
  localizzazioni_fondo_stradale?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
  localizzazioni_illuminazione?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
  localizzazioni_particolarita_strada?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
  localizzazioni_pavimentazione?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
  localizzazioni_tipo_strade?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
  localizzazioni_visibilita?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
  locatari?: Maybe<Sis_Locatario_Bool_Exp>;
  municipalita?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
  municipalita_id?: Maybe<Int_Comparison_Exp>;
  municipalita_storica?: Maybe<Jsonb_Comparison_Exp>;
  natura_incidente_note?: Maybe<String_Comparison_Exp>;
  nature_incidente?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
  note_intervento?: Maybe<String_Comparison_Exp>;
  operazione_terminate_data?: Maybe<Timestamptz_Comparison_Exp>;
  pedoni?: Maybe<Sis_Pedone_Bool_Exp>;
  posizionamento_toponimo?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<String_Comparison_Exp>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<String_Comparison_Exp>;
  posizione_finale_veicolo_margini_note?: Maybe<String_Comparison_Exp>;
  posizione_statica_descrizione_analitica?: Maybe<String_Comparison_Exp>;
  posizione_statica_rilievi?: Maybe<Boolean_Comparison_Exp>;
  posizione_statica_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Int_Comparison_Exp>;
  posizione_statica_rilievi_veicoli_rimossi?: Maybe<Boolean_Comparison_Exp>;
  posizioni_finali_veicolo_carreggiata?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
  posizioni_finali_veicolo_fuori_sede?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
  posizioni_finali_veicolo_margini?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
  proprietari?: Maybe<Sis_Proprietario_Bool_Exp>;
  proprietari_giuridico?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
  protocollo?: Maybe<Protocollo_Protocollo_Bool_Exp>;
  protocollo_id?: Maybe<Int_Comparison_Exp>;
  punti_descrizione_analitica?: Maybe<String_Comparison_Exp>;
  punti_investimento?: Maybe<Boolean_Comparison_Exp>;
  punti_investimento_multiplo?: Maybe<Boolean_Comparison_Exp>;
  punti_rilievi?: Maybe<Boolean_Comparison_Exp>;
  punti_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
  punti_rilievi_no_tipologia_id?: Maybe<Int_Comparison_Exp>;
  punti_urto?: Maybe<Boolean_Comparison_Exp>;
  punti_urto_accorda?: Maybe<String_Comparison_Exp>;
  punti_urto_multiplo?: Maybe<Boolean_Comparison_Exp>;
  punti_urto_note?: Maybe<String_Comparison_Exp>;
  punto_iniziale_posizionamento_id?: Maybe<Int_Comparison_Exp>;
  quartiere?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  quartiere_id?: Maybe<Int_Comparison_Exp>;
  quartiere_storico?: Maybe<Jsonb_Comparison_Exp>;
  ris_consegnato_a?: Maybe<Sis__Ris_Consegnato_A_Bool_Exp>;
  ris_consegnato_a_altro?: Maybe<String_Comparison_Exp>;
  ris_consegnato_a_id?: Maybe<Int_Comparison_Exp>;
  ris_consegnato_data?: Maybe<Timestamptz_Comparison_Exp>;
  role4?: Maybe<String_Comparison_Exp>;
  role5?: Maybe<String_Comparison_Exp>;
  role8?: Maybe<String_Comparison_Exp>;
  stato?: Maybe<Sis__Stato_Ris_Enum_Comparison_Exp>;
  testimoni?: Maybe<Sis_Testimone_Bool_Exp>;
  tipologie_ris?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
  toponimo?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  toponimo_id?: Maybe<Int_Comparison_Exp>;
  toponimo_storico?: Maybe<Jsonb_Comparison_Exp>;
  trasportati?: Maybe<Sis_Trasportato_Bool_Exp>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
  unita_operativa_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  utente_inseritore?: Maybe<String_Comparison_Exp>;
  veicoli?: Maybe<Sis_Veicolo_Bool_Exp>;
  verbali?: Maybe<Sis_Verbale_Bool_Exp>;
};

/** unique or primary key constraints on table "sis.ris" */
export enum Sis_Ris_Constraint {
  /** unique or primary key constraint */
  RisPkey = 'ris_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Sis_Ris_Delete_At_Path_Input = {
  municipalita_storica?: Maybe<Array<Scalars['String']>>;
  quartiere_storico?: Maybe<Array<Scalars['String']>>;
  toponimo_storico?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Sis_Ris_Delete_Elem_Input = {
  municipalita_storica?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Sis_Ris_Delete_Key_Input = {
  municipalita_storica?: Maybe<Scalars['String']>;
  quartiere_storico?: Maybe<Scalars['String']>;
  toponimo_storico?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "sis.ris" */
export type Sis_Ris_Inc_Input = {
  decessi_numero?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  ris_consegnato_a_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.ris" */
export type Sis_Ris_Insert_Input = {
  accertamenti?: Maybe<Sis_Accertamento_Arr_Rel_Insert_Input>;
  agenti_accertatori?: Maybe<Sis_Agente_Accertatore_Arr_Rel_Insert_Input>;
  altri?: Maybe<Sis_Altro_Arr_Rel_Insert_Input>;
  altro?: Maybe<Scalars['String']>;
  conducenti?: Maybe<Sis_Conducente_Arr_Rel_Insert_Input>;
  conseguenza_veicolo_note?: Maybe<Scalars['String']>;
  conseguenze_veicolo?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  data_intervento?: Maybe<Scalars['timestamptz']>;
  data_presunta?: Maybe<Scalars['timestamptz']>;
  data_segnalazione?: Maybe<Scalars['timestamptz']>;
  decessi_certificato?: Maybe<Scalars['Boolean']>;
  decessi_certificato_redattore?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_in_servizio?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_recapito?: Maybe<Scalars['String']>;
  decessi_intervento_polizia_mortuaria?: Maybe<Scalars['Boolean']>;
  decessi_note?: Maybe<Scalars['String']>;
  decessi_notiziato_pm?: Maybe<Scalars['Boolean']>;
  decessi_numero?: Maybe<Scalars['Int']>;
  decessi_oggetti_rinvenuti?: Maybe<Scalars['Boolean']>;
  decessi_successivo_data?: Maybe<Scalars['timestamptz']>;
  decessi_tipologie?: Maybe<Sis_Associazione_Decessi_Tipologie_Arr_Rel_Insert_Input>;
  decessi_trasporto_salme_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_presso?: Maybe<Scalars['String']>;
  decessi_verbale_riconoscimento_salma?: Maybe<Scalars['Boolean']>;
  dinamica?: Maybe<Scalars['String']>;
  ente_primo_intervento_note?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_altro?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_motivazione?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_gia_intervenuti?: Maybe<Scalars['Boolean']>;
  ente_segnalatore_note?: Maybe<Scalars['String']>;
  enti_primo_intervento?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Arr_Rel_Insert_Input>;
  enti_secondario_intervenuti?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Arr_Rel_Insert_Input>;
  enti_segnalatori?: Maybe<Sis_Associazione_Ente_Segnalatore_Arr_Rel_Insert_Input>;
  eventi?: Maybe<Sis_Evento_Sis_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['Int']>;
  impianti_semaforici?: Maybe<Sis_Associazione_Impianto_Semaforico_Arr_Rel_Insert_Input>;
  impianto_semaforico_note?: Maybe<Scalars['String']>;
  infortunati?: Maybe<Sis_Infortunato_Arr_Rel_Insert_Input>;
  infrazioni?: Maybe<Sis_Infrazione_Arr_Rel_Insert_Input>;
  localizzazione_altro_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_traffico_note?: Maybe<Scalars['String']>;
  localizzazione_extra_abitato_note?: Maybe<Scalars['String']>;
  localizzazione_fondo_stradale_note?: Maybe<Scalars['String']>;
  localizzazione_illuminazione_note?: Maybe<Scalars['String']>;
  localizzazione_note?: Maybe<Scalars['String']>;
  localizzazione_particolarita_strada_note?: Maybe<Scalars['String']>;
  localizzazione_pavimentazione_note?: Maybe<Scalars['String']>;
  localizzazione_tipo_strada_note?: Maybe<Scalars['String']>;
  localizzazione_visibilita_note?: Maybe<Scalars['String']>;
  localizzazioni_altro?: Maybe<Sis_Associazione_Localizzazione_Altro_Arr_Rel_Insert_Input>;
  localizzazioni_condizioni_atmosferiche?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Arr_Rel_Insert_Input>;
  localizzazioni_condizioni_traffico?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Arr_Rel_Insert_Input>;
  localizzazioni_extra_abitato?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Arr_Rel_Insert_Input>;
  localizzazioni_fondo_stradale?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Arr_Rel_Insert_Input>;
  localizzazioni_illuminazione?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Arr_Rel_Insert_Input>;
  localizzazioni_particolarita_strada?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Arr_Rel_Insert_Input>;
  localizzazioni_pavimentazione?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Arr_Rel_Insert_Input>;
  localizzazioni_tipo_strade?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Arr_Rel_Insert_Input>;
  localizzazioni_visibilita?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Arr_Rel_Insert_Input>;
  locatari?: Maybe<Sis_Locatario_Arr_Rel_Insert_Input>;
  municipalita?: Maybe<Toponomastica_Municipalita_Obj_Rel_Insert_Input>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  natura_incidente_note?: Maybe<Scalars['String']>;
  nature_incidente?: Maybe<Sis_Associazione_Natura_Incidente_Arr_Rel_Insert_Input>;
  note_intervento?: Maybe<Scalars['String']>;
  operazione_terminate_data?: Maybe<Scalars['timestamptz']>;
  pedoni?: Maybe<Sis_Pedone_Arr_Rel_Insert_Input>;
  posizionamento_toponimo?: Maybe<Gis_Posizionamento_Toponimo_Obj_Rel_Insert_Input>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_margini_note?: Maybe<Scalars['String']>;
  posizione_statica_descrizione_analitica?: Maybe<Scalars['String']>;
  posizione_statica_rilievi?: Maybe<Scalars['Boolean']>;
  posizione_statica_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Obj_Rel_Insert_Input>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  posizione_statica_rilievi_veicoli_rimossi?: Maybe<Scalars['Boolean']>;
  posizioni_finali_veicolo_carreggiata?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Arr_Rel_Insert_Input>;
  posizioni_finali_veicolo_fuori_sede?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Arr_Rel_Insert_Input>;
  posizioni_finali_veicolo_margini?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Arr_Rel_Insert_Input>;
  proprietari?: Maybe<Sis_Proprietario_Arr_Rel_Insert_Input>;
  proprietari_giuridico?: Maybe<Sis_Proprietario_Giuridico_Arr_Rel_Insert_Input>;
  protocollo?: Maybe<Protocollo_Protocollo_Obj_Rel_Insert_Input>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punti_descrizione_analitica?: Maybe<Scalars['String']>;
  punti_investimento?: Maybe<Scalars['Boolean']>;
  punti_investimento_multiplo?: Maybe<Scalars['Boolean']>;
  punti_rilievi?: Maybe<Scalars['Boolean']>;
  punti_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Obj_Rel_Insert_Input>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  punti_urto?: Maybe<Scalars['Boolean']>;
  punti_urto_accorda?: Maybe<Scalars['String']>;
  punti_urto_multiplo?: Maybe<Scalars['Boolean']>;
  punti_urto_note?: Maybe<Scalars['String']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere?: Maybe<Toponomastica_Quartiere_Obj_Rel_Insert_Input>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  ris_consegnato_a?: Maybe<Sis__Ris_Consegnato_A_Obj_Rel_Insert_Input>;
  ris_consegnato_a_altro?: Maybe<Scalars['String']>;
  ris_consegnato_a_id?: Maybe<Scalars['Int']>;
  ris_consegnato_data?: Maybe<Scalars['timestamptz']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  stato?: Maybe<Sis__Stato_Ris_Enum>;
  testimoni?: Maybe<Sis_Testimone_Arr_Rel_Insert_Input>;
  tipologie_ris?: Maybe<Sis_Associazione_Tipologia_Ris_Arr_Rel_Insert_Input>;
  toponimo?: Maybe<Toponomastica_Toponimo_Obj_Rel_Insert_Input>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  trasportati?: Maybe<Sis_Trasportato_Arr_Rel_Insert_Input>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Obj_Rel_Insert_Input>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
  veicoli?: Maybe<Sis_Veicolo_Arr_Rel_Insert_Input>;
  verbali?: Maybe<Sis_Verbale_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Sis_Ris_Max_Fields = {
  __typename?: 'sis_ris_max_fields';
  altro?: Maybe<Scalars['String']>;
  conseguenza_veicolo_note?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  data_intervento?: Maybe<Scalars['timestamptz']>;
  data_presunta?: Maybe<Scalars['timestamptz']>;
  data_segnalazione?: Maybe<Scalars['timestamptz']>;
  decessi_certificato_redattore?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_in_servizio?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_recapito?: Maybe<Scalars['String']>;
  decessi_note?: Maybe<Scalars['String']>;
  decessi_numero?: Maybe<Scalars['Int']>;
  decessi_successivo_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_presso?: Maybe<Scalars['String']>;
  dinamica?: Maybe<Scalars['String']>;
  ente_primo_intervento_note?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_altro?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_motivazione?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Scalars['String']>;
  ente_segnalatore_note?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_note?: Maybe<Scalars['String']>;
  localizzazione_altro_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_traffico_note?: Maybe<Scalars['String']>;
  localizzazione_extra_abitato_note?: Maybe<Scalars['String']>;
  localizzazione_fondo_stradale_note?: Maybe<Scalars['String']>;
  localizzazione_illuminazione_note?: Maybe<Scalars['String']>;
  localizzazione_note?: Maybe<Scalars['String']>;
  localizzazione_particolarita_strada_note?: Maybe<Scalars['String']>;
  localizzazione_pavimentazione_note?: Maybe<Scalars['String']>;
  localizzazione_tipo_strada_note?: Maybe<Scalars['String']>;
  localizzazione_visibilita_note?: Maybe<Scalars['String']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  natura_incidente_note?: Maybe<Scalars['String']>;
  note_intervento?: Maybe<Scalars['String']>;
  operazione_terminate_data?: Maybe<Scalars['timestamptz']>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_margini_note?: Maybe<Scalars['String']>;
  posizione_statica_descrizione_analitica?: Maybe<Scalars['String']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punti_descrizione_analitica?: Maybe<Scalars['String']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  punti_urto_accorda?: Maybe<Scalars['String']>;
  punti_urto_note?: Maybe<Scalars['String']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  ris_consegnato_a_altro?: Maybe<Scalars['String']>;
  ris_consegnato_a_id?: Maybe<Scalars['Int']>;
  ris_consegnato_data?: Maybe<Scalars['timestamptz']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "sis.ris" */
export type Sis_Ris_Max_Order_By = {
  altro?: Maybe<Order_By>;
  conseguenza_veicolo_note?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  data_intervento?: Maybe<Order_By>;
  data_presunta?: Maybe<Order_By>;
  data_segnalazione?: Maybe<Order_By>;
  decessi_certificato_redattore?: Maybe<Order_By>;
  decessi_certificato_redattore_in_servizio?: Maybe<Order_By>;
  decessi_certificato_redattore_recapito?: Maybe<Order_By>;
  decessi_note?: Maybe<Order_By>;
  decessi_numero?: Maybe<Order_By>;
  decessi_successivo_data?: Maybe<Order_By>;
  decessi_trasporto_salme_data?: Maybe<Order_By>;
  decessi_trasporto_salme_presso?: Maybe<Order_By>;
  dinamica?: Maybe<Order_By>;
  ente_primo_intervento_note?: Maybe<Order_By>;
  ente_secondario_intervenuti_altro?: Maybe<Order_By>;
  ente_secondario_intervenuti_motivazione?: Maybe<Order_By>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Order_By>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Order_By>;
  ente_segnalatore_note?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_semaforico_note?: Maybe<Order_By>;
  localizzazione_altro_note?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_note?: Maybe<Order_By>;
  localizzazione_extra_abitato_note?: Maybe<Order_By>;
  localizzazione_fondo_stradale_note?: Maybe<Order_By>;
  localizzazione_illuminazione_note?: Maybe<Order_By>;
  localizzazione_note?: Maybe<Order_By>;
  localizzazione_particolarita_strada_note?: Maybe<Order_By>;
  localizzazione_pavimentazione_note?: Maybe<Order_By>;
  localizzazione_tipo_strada_note?: Maybe<Order_By>;
  localizzazione_visibilita_note?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  natura_incidente_note?: Maybe<Order_By>;
  note_intervento?: Maybe<Order_By>;
  operazione_terminate_data?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_note?: Maybe<Order_By>;
  posizione_statica_descrizione_analitica?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_descrizione_analitica?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punti_urto_accorda?: Maybe<Order_By>;
  punti_urto_note?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_altro?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  ris_consegnato_data?: Maybe<Order_By>;
  role4?: Maybe<Order_By>;
  role5?: Maybe<Order_By>;
  role8?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utente_inseritore?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Ris_Min_Fields = {
  __typename?: 'sis_ris_min_fields';
  altro?: Maybe<Scalars['String']>;
  conseguenza_veicolo_note?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  data_intervento?: Maybe<Scalars['timestamptz']>;
  data_presunta?: Maybe<Scalars['timestamptz']>;
  data_segnalazione?: Maybe<Scalars['timestamptz']>;
  decessi_certificato_redattore?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_in_servizio?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_recapito?: Maybe<Scalars['String']>;
  decessi_note?: Maybe<Scalars['String']>;
  decessi_numero?: Maybe<Scalars['Int']>;
  decessi_successivo_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_presso?: Maybe<Scalars['String']>;
  dinamica?: Maybe<Scalars['String']>;
  ente_primo_intervento_note?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_altro?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_motivazione?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Scalars['String']>;
  ente_segnalatore_note?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_note?: Maybe<Scalars['String']>;
  localizzazione_altro_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_traffico_note?: Maybe<Scalars['String']>;
  localizzazione_extra_abitato_note?: Maybe<Scalars['String']>;
  localizzazione_fondo_stradale_note?: Maybe<Scalars['String']>;
  localizzazione_illuminazione_note?: Maybe<Scalars['String']>;
  localizzazione_note?: Maybe<Scalars['String']>;
  localizzazione_particolarita_strada_note?: Maybe<Scalars['String']>;
  localizzazione_pavimentazione_note?: Maybe<Scalars['String']>;
  localizzazione_tipo_strada_note?: Maybe<Scalars['String']>;
  localizzazione_visibilita_note?: Maybe<Scalars['String']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  natura_incidente_note?: Maybe<Scalars['String']>;
  note_intervento?: Maybe<Scalars['String']>;
  operazione_terminate_data?: Maybe<Scalars['timestamptz']>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_margini_note?: Maybe<Scalars['String']>;
  posizione_statica_descrizione_analitica?: Maybe<Scalars['String']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punti_descrizione_analitica?: Maybe<Scalars['String']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  punti_urto_accorda?: Maybe<Scalars['String']>;
  punti_urto_note?: Maybe<Scalars['String']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  ris_consegnato_a_altro?: Maybe<Scalars['String']>;
  ris_consegnato_a_id?: Maybe<Scalars['Int']>;
  ris_consegnato_data?: Maybe<Scalars['timestamptz']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "sis.ris" */
export type Sis_Ris_Min_Order_By = {
  altro?: Maybe<Order_By>;
  conseguenza_veicolo_note?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  data_intervento?: Maybe<Order_By>;
  data_presunta?: Maybe<Order_By>;
  data_segnalazione?: Maybe<Order_By>;
  decessi_certificato_redattore?: Maybe<Order_By>;
  decessi_certificato_redattore_in_servizio?: Maybe<Order_By>;
  decessi_certificato_redattore_recapito?: Maybe<Order_By>;
  decessi_note?: Maybe<Order_By>;
  decessi_numero?: Maybe<Order_By>;
  decessi_successivo_data?: Maybe<Order_By>;
  decessi_trasporto_salme_data?: Maybe<Order_By>;
  decessi_trasporto_salme_presso?: Maybe<Order_By>;
  dinamica?: Maybe<Order_By>;
  ente_primo_intervento_note?: Maybe<Order_By>;
  ente_secondario_intervenuti_altro?: Maybe<Order_By>;
  ente_secondario_intervenuti_motivazione?: Maybe<Order_By>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Order_By>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Order_By>;
  ente_segnalatore_note?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_semaforico_note?: Maybe<Order_By>;
  localizzazione_altro_note?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_note?: Maybe<Order_By>;
  localizzazione_extra_abitato_note?: Maybe<Order_By>;
  localizzazione_fondo_stradale_note?: Maybe<Order_By>;
  localizzazione_illuminazione_note?: Maybe<Order_By>;
  localizzazione_note?: Maybe<Order_By>;
  localizzazione_particolarita_strada_note?: Maybe<Order_By>;
  localizzazione_pavimentazione_note?: Maybe<Order_By>;
  localizzazione_tipo_strada_note?: Maybe<Order_By>;
  localizzazione_visibilita_note?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  natura_incidente_note?: Maybe<Order_By>;
  note_intervento?: Maybe<Order_By>;
  operazione_terminate_data?: Maybe<Order_By>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_note?: Maybe<Order_By>;
  posizione_statica_descrizione_analitica?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_descrizione_analitica?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punti_urto_accorda?: Maybe<Order_By>;
  punti_urto_note?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_altro?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  ris_consegnato_data?: Maybe<Order_By>;
  role4?: Maybe<Order_By>;
  role5?: Maybe<Order_By>;
  role8?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utente_inseritore?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.ris" */
export type Sis_Ris_Mutation_Response = {
  __typename?: 'sis_ris_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Ris>;
};

/** input type for inserting object relation for remote table "sis.ris" */
export type Sis_Ris_Obj_Rel_Insert_Input = {
  data: Sis_Ris_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Ris_On_Conflict>;
};

/** on_conflict condition type for table "sis.ris" */
export type Sis_Ris_On_Conflict = {
  constraint: Sis_Ris_Constraint;
  update_columns?: Array<Sis_Ris_Update_Column>;
  where?: Maybe<Sis_Ris_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.ris". */
export type Sis_Ris_Order_By = {
  accertamenti_aggregate?: Maybe<Sis_Accertamento_Aggregate_Order_By>;
  agenti_accertatori_aggregate?: Maybe<Sis_Agente_Accertatore_Aggregate_Order_By>;
  altri_aggregate?: Maybe<Sis_Altro_Aggregate_Order_By>;
  altro?: Maybe<Order_By>;
  conducenti_aggregate?: Maybe<Sis_Conducente_Aggregate_Order_By>;
  conseguenza_veicolo_note?: Maybe<Order_By>;
  conseguenze_veicolo_aggregate?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  data_intervento?: Maybe<Order_By>;
  data_presunta?: Maybe<Order_By>;
  data_segnalazione?: Maybe<Order_By>;
  decessi_certificato?: Maybe<Order_By>;
  decessi_certificato_redattore?: Maybe<Order_By>;
  decessi_certificato_redattore_in_servizio?: Maybe<Order_By>;
  decessi_certificato_redattore_recapito?: Maybe<Order_By>;
  decessi_intervento_polizia_mortuaria?: Maybe<Order_By>;
  decessi_note?: Maybe<Order_By>;
  decessi_notiziato_pm?: Maybe<Order_By>;
  decessi_numero?: Maybe<Order_By>;
  decessi_oggetti_rinvenuti?: Maybe<Order_By>;
  decessi_successivo_data?: Maybe<Order_By>;
  decessi_tipologie_aggregate?: Maybe<Sis_Associazione_Decessi_Tipologie_Aggregate_Order_By>;
  decessi_trasporto_salme_data?: Maybe<Order_By>;
  decessi_trasporto_salme_presso?: Maybe<Order_By>;
  decessi_verbale_riconoscimento_salma?: Maybe<Order_By>;
  dinamica?: Maybe<Order_By>;
  ente_primo_intervento_note?: Maybe<Order_By>;
  ente_secondario_intervenuti_altro?: Maybe<Order_By>;
  ente_secondario_intervenuti_motivazione?: Maybe<Order_By>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Order_By>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Order_By>;
  ente_secondario_intervenuti_vvff_gia_intervenuti?: Maybe<Order_By>;
  ente_segnalatore_note?: Maybe<Order_By>;
  enti_primo_intervento_aggregate?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Aggregate_Order_By>;
  enti_secondario_intervenuti_aggregate?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate_Order_By>;
  enti_segnalatori_aggregate?: Maybe<Sis_Associazione_Ente_Segnalatore_Aggregate_Order_By>;
  eventi_aggregate?: Maybe<Sis_Evento_Sis_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  impianti_semaforici_aggregate?: Maybe<Sis_Associazione_Impianto_Semaforico_Aggregate_Order_By>;
  impianto_semaforico_note?: Maybe<Order_By>;
  infortunati_aggregate?: Maybe<Sis_Infortunato_Aggregate_Order_By>;
  infrazioni_aggregate?: Maybe<Sis_Infrazione_Aggregate_Order_By>;
  localizzazione_altro_note?: Maybe<Order_By>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Order_By>;
  localizzazione_condizioni_traffico_note?: Maybe<Order_By>;
  localizzazione_extra_abitato_note?: Maybe<Order_By>;
  localizzazione_fondo_stradale_note?: Maybe<Order_By>;
  localizzazione_illuminazione_note?: Maybe<Order_By>;
  localizzazione_note?: Maybe<Order_By>;
  localizzazione_particolarita_strada_note?: Maybe<Order_By>;
  localizzazione_pavimentazione_note?: Maybe<Order_By>;
  localizzazione_tipo_strada_note?: Maybe<Order_By>;
  localizzazione_visibilita_note?: Maybe<Order_By>;
  localizzazioni_altro_aggregate?: Maybe<Sis_Associazione_Localizzazione_Altro_Aggregate_Order_By>;
  localizzazioni_condizioni_atmosferiche_aggregate?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate_Order_By>;
  localizzazioni_condizioni_traffico_aggregate?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate_Order_By>;
  localizzazioni_extra_abitato_aggregate?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate_Order_By>;
  localizzazioni_fondo_stradale_aggregate?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate_Order_By>;
  localizzazioni_illuminazione_aggregate?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Aggregate_Order_By>;
  localizzazioni_particolarita_strada_aggregate?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate_Order_By>;
  localizzazioni_pavimentazione_aggregate?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Aggregate_Order_By>;
  localizzazioni_tipo_strade_aggregate?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate_Order_By>;
  localizzazioni_visibilita_aggregate?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Aggregate_Order_By>;
  locatari_aggregate?: Maybe<Sis_Locatario_Aggregate_Order_By>;
  municipalita?: Maybe<Toponomastica_Municipalita_Order_By>;
  municipalita_id?: Maybe<Order_By>;
  municipalita_storica?: Maybe<Order_By>;
  natura_incidente_note?: Maybe<Order_By>;
  nature_incidente_aggregate?: Maybe<Sis_Associazione_Natura_Incidente_Aggregate_Order_By>;
  note_intervento?: Maybe<Order_By>;
  operazione_terminate_data?: Maybe<Order_By>;
  pedoni_aggregate?: Maybe<Sis_Pedone_Aggregate_Order_By>;
  posizionamento_toponimo?: Maybe<Gis_Posizionamento_Toponimo_Order_By>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Order_By>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Order_By>;
  posizione_finale_veicolo_margini_note?: Maybe<Order_By>;
  posizione_statica_descrizione_analitica?: Maybe<Order_By>;
  posizione_statica_rilievi?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  posizione_statica_rilievi_veicoli_rimossi?: Maybe<Order_By>;
  posizioni_finali_veicolo_carreggiata_aggregate?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate_Order_By>;
  posizioni_finali_veicolo_fuori_sede_aggregate?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate_Order_By>;
  posizioni_finali_veicolo_margini_aggregate?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate_Order_By>;
  proprietari_aggregate?: Maybe<Sis_Proprietario_Aggregate_Order_By>;
  proprietari_giuridico_aggregate?: Maybe<Sis_Proprietario_Giuridico_Aggregate_Order_By>;
  protocollo?: Maybe<Protocollo_Protocollo_Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_descrizione_analitica?: Maybe<Order_By>;
  punti_investimento?: Maybe<Order_By>;
  punti_investimento_multiplo?: Maybe<Order_By>;
  punti_rilievi?: Maybe<Order_By>;
  punti_rilievi_no_tipologia?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punti_urto?: Maybe<Order_By>;
  punti_urto_accorda?: Maybe<Order_By>;
  punti_urto_multiplo?: Maybe<Order_By>;
  punti_urto_note?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere?: Maybe<Toponomastica_Quartiere_Order_By>;
  quartiere_id?: Maybe<Order_By>;
  quartiere_storico?: Maybe<Order_By>;
  ris_consegnato_a?: Maybe<Sis__Ris_Consegnato_A_Order_By>;
  ris_consegnato_a_altro?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  ris_consegnato_data?: Maybe<Order_By>;
  role4?: Maybe<Order_By>;
  role5?: Maybe<Order_By>;
  role8?: Maybe<Order_By>;
  stato?: Maybe<Order_By>;
  testimoni_aggregate?: Maybe<Sis_Testimone_Aggregate_Order_By>;
  tipologie_ris_aggregate?: Maybe<Sis_Associazione_Tipologia_Ris_Aggregate_Order_By>;
  toponimo?: Maybe<Toponomastica_Toponimo_Order_By>;
  toponimo_id?: Maybe<Order_By>;
  toponimo_storico?: Maybe<Order_By>;
  trasportati_aggregate?: Maybe<Sis_Trasportato_Aggregate_Order_By>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  utente_inseritore?: Maybe<Order_By>;
  veicoli_aggregate?: Maybe<Sis_Veicolo_Aggregate_Order_By>;
  verbali_aggregate?: Maybe<Sis_Verbale_Aggregate_Order_By>;
};

/** primary key columns input for table: sis_ris */
export type Sis_Ris_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Sis_Ris_Prepend_Input = {
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "sis.ris" */
export enum Sis_Ris_Select_Column {
  /** column name */
  Altro = 'altro',
  /** column name */
  ConseguenzaVeicoloNote = 'conseguenza_veicolo_note',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DataIntervento = 'data_intervento',
  /** column name */
  DataPresunta = 'data_presunta',
  /** column name */
  DataSegnalazione = 'data_segnalazione',
  /** column name */
  DecessiCertificato = 'decessi_certificato',
  /** column name */
  DecessiCertificatoRedattore = 'decessi_certificato_redattore',
  /** column name */
  DecessiCertificatoRedattoreInServizio = 'decessi_certificato_redattore_in_servizio',
  /** column name */
  DecessiCertificatoRedattoreRecapito = 'decessi_certificato_redattore_recapito',
  /** column name */
  DecessiInterventoPoliziaMortuaria = 'decessi_intervento_polizia_mortuaria',
  /** column name */
  DecessiNote = 'decessi_note',
  /** column name */
  DecessiNotiziatoPm = 'decessi_notiziato_pm',
  /** column name */
  DecessiNumero = 'decessi_numero',
  /** column name */
  DecessiOggettiRinvenuti = 'decessi_oggetti_rinvenuti',
  /** column name */
  DecessiSuccessivoData = 'decessi_successivo_data',
  /** column name */
  DecessiTrasportoSalmeData = 'decessi_trasporto_salme_data',
  /** column name */
  DecessiTrasportoSalmePresso = 'decessi_trasporto_salme_presso',
  /** column name */
  DecessiVerbaleRiconoscimentoSalma = 'decessi_verbale_riconoscimento_salma',
  /** column name */
  Dinamica = 'dinamica',
  /** column name */
  EntePrimoInterventoNote = 'ente_primo_intervento_note',
  /** column name */
  EnteSecondarioIntervenutiAltro = 'ente_secondario_intervenuti_altro',
  /** column name */
  EnteSecondarioIntervenutiMotivazione = 'ente_secondario_intervenuti_motivazione',
  /** column name */
  EnteSecondarioIntervenutiVvffCapoPattuglia = 'ente_secondario_intervenuti_vvff_capo_pattuglia',
  /** column name */
  EnteSecondarioIntervenutiVvffComando = 'ente_secondario_intervenuti_vvff_comando',
  /** column name */
  EnteSecondarioIntervenutiVvffGiaIntervenuti = 'ente_secondario_intervenuti_vvff_gia_intervenuti',
  /** column name */
  EnteSegnalatoreNote = 'ente_segnalatore_note',
  /** column name */
  Id = 'id',
  /** column name */
  ImpiantoSemaforicoNote = 'impianto_semaforico_note',
  /** column name */
  LocalizzazioneAltroNote = 'localizzazione_altro_note',
  /** column name */
  LocalizzazioneCondizioniAtmosfericheNote = 'localizzazione_condizioni_atmosferiche_note',
  /** column name */
  LocalizzazioneCondizioniTrafficoNote = 'localizzazione_condizioni_traffico_note',
  /** column name */
  LocalizzazioneExtraAbitatoNote = 'localizzazione_extra_abitato_note',
  /** column name */
  LocalizzazioneFondoStradaleNote = 'localizzazione_fondo_stradale_note',
  /** column name */
  LocalizzazioneIlluminazioneNote = 'localizzazione_illuminazione_note',
  /** column name */
  LocalizzazioneNote = 'localizzazione_note',
  /** column name */
  LocalizzazioneParticolaritaStradaNote = 'localizzazione_particolarita_strada_note',
  /** column name */
  LocalizzazionePavimentazioneNote = 'localizzazione_pavimentazione_note',
  /** column name */
  LocalizzazioneTipoStradaNote = 'localizzazione_tipo_strada_note',
  /** column name */
  LocalizzazioneVisibilitaNote = 'localizzazione_visibilita_note',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  MunicipalitaStorica = 'municipalita_storica',
  /** column name */
  NaturaIncidenteNote = 'natura_incidente_note',
  /** column name */
  NoteIntervento = 'note_intervento',
  /** column name */
  OperazioneTerminateData = 'operazione_terminate_data',
  /** column name */
  PosizioneFinaleVeicoloCarreggiataNote = 'posizione_finale_veicolo_carreggiata_note',
  /** column name */
  PosizioneFinaleVeicoloFuoriSedeNote = 'posizione_finale_veicolo_fuori_sede_note',
  /** column name */
  PosizioneFinaleVeicoloMarginiNote = 'posizione_finale_veicolo_margini_note',
  /** column name */
  PosizioneStaticaDescrizioneAnalitica = 'posizione_statica_descrizione_analitica',
  /** column name */
  PosizioneStaticaRilievi = 'posizione_statica_rilievi',
  /** column name */
  PosizioneStaticaRilieviNoTipologiaId = 'posizione_statica_rilievi_no_tipologia_id',
  /** column name */
  PosizioneStaticaRilieviVeicoliRimossi = 'posizione_statica_rilievi_veicoli_rimossi',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  PuntiDescrizioneAnalitica = 'punti_descrizione_analitica',
  /** column name */
  PuntiInvestimento = 'punti_investimento',
  /** column name */
  PuntiInvestimentoMultiplo = 'punti_investimento_multiplo',
  /** column name */
  PuntiRilievi = 'punti_rilievi',
  /** column name */
  PuntiRilieviNoTipologiaId = 'punti_rilievi_no_tipologia_id',
  /** column name */
  PuntiUrto = 'punti_urto',
  /** column name */
  PuntiUrtoAccorda = 'punti_urto_accorda',
  /** column name */
  PuntiUrtoMultiplo = 'punti_urto_multiplo',
  /** column name */
  PuntiUrtoNote = 'punti_urto_note',
  /** column name */
  PuntoInizialePosizionamentoId = 'punto_iniziale_posizionamento_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  QuartiereStorico = 'quartiere_storico',
  /** column name */
  RisConsegnatoAAltro = 'ris_consegnato_a_altro',
  /** column name */
  RisConsegnatoAId = 'ris_consegnato_a_id',
  /** column name */
  RisConsegnatoData = 'ris_consegnato_data',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Stato = 'stato',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  ToponimoStorico = 'toponimo_storico',
  /** column name */
  UnitaOperativaId = 'unita_operativa_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtenteInseritore = 'utente_inseritore'
}

/** input type for updating data in table "sis.ris" */
export type Sis_Ris_Set_Input = {
  altro?: Maybe<Scalars['String']>;
  conseguenza_veicolo_note?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamptz']>;
  data_intervento?: Maybe<Scalars['timestamptz']>;
  data_presunta?: Maybe<Scalars['timestamptz']>;
  data_segnalazione?: Maybe<Scalars['timestamptz']>;
  decessi_certificato?: Maybe<Scalars['Boolean']>;
  decessi_certificato_redattore?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_in_servizio?: Maybe<Scalars['String']>;
  decessi_certificato_redattore_recapito?: Maybe<Scalars['String']>;
  decessi_intervento_polizia_mortuaria?: Maybe<Scalars['Boolean']>;
  decessi_note?: Maybe<Scalars['String']>;
  decessi_notiziato_pm?: Maybe<Scalars['Boolean']>;
  decessi_numero?: Maybe<Scalars['Int']>;
  decessi_oggetti_rinvenuti?: Maybe<Scalars['Boolean']>;
  decessi_successivo_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_data?: Maybe<Scalars['timestamptz']>;
  decessi_trasporto_salme_presso?: Maybe<Scalars['String']>;
  decessi_verbale_riconoscimento_salma?: Maybe<Scalars['Boolean']>;
  dinamica?: Maybe<Scalars['String']>;
  ente_primo_intervento_note?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_altro?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_motivazione?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_capo_pattuglia?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_comando?: Maybe<Scalars['String']>;
  ente_secondario_intervenuti_vvff_gia_intervenuti?: Maybe<Scalars['Boolean']>;
  ente_segnalatore_note?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  impianto_semaforico_note?: Maybe<Scalars['String']>;
  localizzazione_altro_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_atmosferiche_note?: Maybe<Scalars['String']>;
  localizzazione_condizioni_traffico_note?: Maybe<Scalars['String']>;
  localizzazione_extra_abitato_note?: Maybe<Scalars['String']>;
  localizzazione_fondo_stradale_note?: Maybe<Scalars['String']>;
  localizzazione_illuminazione_note?: Maybe<Scalars['String']>;
  localizzazione_note?: Maybe<Scalars['String']>;
  localizzazione_particolarita_strada_note?: Maybe<Scalars['String']>;
  localizzazione_pavimentazione_note?: Maybe<Scalars['String']>;
  localizzazione_tipo_strada_note?: Maybe<Scalars['String']>;
  localizzazione_visibilita_note?: Maybe<Scalars['String']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  municipalita_storica?: Maybe<Scalars['jsonb']>;
  natura_incidente_note?: Maybe<Scalars['String']>;
  note_intervento?: Maybe<Scalars['String']>;
  operazione_terminate_data?: Maybe<Scalars['timestamptz']>;
  posizione_finale_veicolo_carreggiata_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_fuori_sede_note?: Maybe<Scalars['String']>;
  posizione_finale_veicolo_margini_note?: Maybe<Scalars['String']>;
  posizione_statica_descrizione_analitica?: Maybe<Scalars['String']>;
  posizione_statica_rilievi?: Maybe<Scalars['Boolean']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  posizione_statica_rilievi_veicoli_rimossi?: Maybe<Scalars['Boolean']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punti_descrizione_analitica?: Maybe<Scalars['String']>;
  punti_investimento?: Maybe<Scalars['Boolean']>;
  punti_investimento_multiplo?: Maybe<Scalars['Boolean']>;
  punti_rilievi?: Maybe<Scalars['Boolean']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  punti_urto?: Maybe<Scalars['Boolean']>;
  punti_urto_accorda?: Maybe<Scalars['String']>;
  punti_urto_multiplo?: Maybe<Scalars['Boolean']>;
  punti_urto_note?: Maybe<Scalars['String']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  quartiere_storico?: Maybe<Scalars['jsonb']>;
  ris_consegnato_a_altro?: Maybe<Scalars['String']>;
  ris_consegnato_a_id?: Maybe<Scalars['Int']>;
  ris_consegnato_data?: Maybe<Scalars['timestamptz']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  stato?: Maybe<Sis__Stato_Ris_Enum>;
  toponimo_id?: Maybe<Scalars['Int']>;
  toponimo_storico?: Maybe<Scalars['jsonb']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  utente_inseritore?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Sis_Ris_Stddev_Fields = {
  __typename?: 'sis_ris_stddev_fields';
  decessi_numero?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  ris_consegnato_a_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.ris" */
export type Sis_Ris_Stddev_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Ris_Stddev_Pop_Fields = {
  __typename?: 'sis_ris_stddev_pop_fields';
  decessi_numero?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  ris_consegnato_a_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.ris" */
export type Sis_Ris_Stddev_Pop_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Ris_Stddev_Samp_Fields = {
  __typename?: 'sis_ris_stddev_samp_fields';
  decessi_numero?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  ris_consegnato_a_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.ris" */
export type Sis_Ris_Stddev_Samp_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Ris_Sum_Fields = {
  __typename?: 'sis_ris_sum_fields';
  decessi_numero?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  protocollo_id?: Maybe<Scalars['Int']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Int']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  ris_consegnato_a_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.ris" */
export type Sis_Ris_Sum_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** update columns of table "sis.ris" */
export enum Sis_Ris_Update_Column {
  /** column name */
  Altro = 'altro',
  /** column name */
  ConseguenzaVeicoloNote = 'conseguenza_veicolo_note',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DataIntervento = 'data_intervento',
  /** column name */
  DataPresunta = 'data_presunta',
  /** column name */
  DataSegnalazione = 'data_segnalazione',
  /** column name */
  DecessiCertificato = 'decessi_certificato',
  /** column name */
  DecessiCertificatoRedattore = 'decessi_certificato_redattore',
  /** column name */
  DecessiCertificatoRedattoreInServizio = 'decessi_certificato_redattore_in_servizio',
  /** column name */
  DecessiCertificatoRedattoreRecapito = 'decessi_certificato_redattore_recapito',
  /** column name */
  DecessiInterventoPoliziaMortuaria = 'decessi_intervento_polizia_mortuaria',
  /** column name */
  DecessiNote = 'decessi_note',
  /** column name */
  DecessiNotiziatoPm = 'decessi_notiziato_pm',
  /** column name */
  DecessiNumero = 'decessi_numero',
  /** column name */
  DecessiOggettiRinvenuti = 'decessi_oggetti_rinvenuti',
  /** column name */
  DecessiSuccessivoData = 'decessi_successivo_data',
  /** column name */
  DecessiTrasportoSalmeData = 'decessi_trasporto_salme_data',
  /** column name */
  DecessiTrasportoSalmePresso = 'decessi_trasporto_salme_presso',
  /** column name */
  DecessiVerbaleRiconoscimentoSalma = 'decessi_verbale_riconoscimento_salma',
  /** column name */
  Dinamica = 'dinamica',
  /** column name */
  EntePrimoInterventoNote = 'ente_primo_intervento_note',
  /** column name */
  EnteSecondarioIntervenutiAltro = 'ente_secondario_intervenuti_altro',
  /** column name */
  EnteSecondarioIntervenutiMotivazione = 'ente_secondario_intervenuti_motivazione',
  /** column name */
  EnteSecondarioIntervenutiVvffCapoPattuglia = 'ente_secondario_intervenuti_vvff_capo_pattuglia',
  /** column name */
  EnteSecondarioIntervenutiVvffComando = 'ente_secondario_intervenuti_vvff_comando',
  /** column name */
  EnteSecondarioIntervenutiVvffGiaIntervenuti = 'ente_secondario_intervenuti_vvff_gia_intervenuti',
  /** column name */
  EnteSegnalatoreNote = 'ente_segnalatore_note',
  /** column name */
  Id = 'id',
  /** column name */
  ImpiantoSemaforicoNote = 'impianto_semaforico_note',
  /** column name */
  LocalizzazioneAltroNote = 'localizzazione_altro_note',
  /** column name */
  LocalizzazioneCondizioniAtmosfericheNote = 'localizzazione_condizioni_atmosferiche_note',
  /** column name */
  LocalizzazioneCondizioniTrafficoNote = 'localizzazione_condizioni_traffico_note',
  /** column name */
  LocalizzazioneExtraAbitatoNote = 'localizzazione_extra_abitato_note',
  /** column name */
  LocalizzazioneFondoStradaleNote = 'localizzazione_fondo_stradale_note',
  /** column name */
  LocalizzazioneIlluminazioneNote = 'localizzazione_illuminazione_note',
  /** column name */
  LocalizzazioneNote = 'localizzazione_note',
  /** column name */
  LocalizzazioneParticolaritaStradaNote = 'localizzazione_particolarita_strada_note',
  /** column name */
  LocalizzazionePavimentazioneNote = 'localizzazione_pavimentazione_note',
  /** column name */
  LocalizzazioneTipoStradaNote = 'localizzazione_tipo_strada_note',
  /** column name */
  LocalizzazioneVisibilitaNote = 'localizzazione_visibilita_note',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  MunicipalitaStorica = 'municipalita_storica',
  /** column name */
  NaturaIncidenteNote = 'natura_incidente_note',
  /** column name */
  NoteIntervento = 'note_intervento',
  /** column name */
  OperazioneTerminateData = 'operazione_terminate_data',
  /** column name */
  PosizioneFinaleVeicoloCarreggiataNote = 'posizione_finale_veicolo_carreggiata_note',
  /** column name */
  PosizioneFinaleVeicoloFuoriSedeNote = 'posizione_finale_veicolo_fuori_sede_note',
  /** column name */
  PosizioneFinaleVeicoloMarginiNote = 'posizione_finale_veicolo_margini_note',
  /** column name */
  PosizioneStaticaDescrizioneAnalitica = 'posizione_statica_descrizione_analitica',
  /** column name */
  PosizioneStaticaRilievi = 'posizione_statica_rilievi',
  /** column name */
  PosizioneStaticaRilieviNoTipologiaId = 'posizione_statica_rilievi_no_tipologia_id',
  /** column name */
  PosizioneStaticaRilieviVeicoliRimossi = 'posizione_statica_rilievi_veicoli_rimossi',
  /** column name */
  ProtocolloId = 'protocollo_id',
  /** column name */
  PuntiDescrizioneAnalitica = 'punti_descrizione_analitica',
  /** column name */
  PuntiInvestimento = 'punti_investimento',
  /** column name */
  PuntiInvestimentoMultiplo = 'punti_investimento_multiplo',
  /** column name */
  PuntiRilievi = 'punti_rilievi',
  /** column name */
  PuntiRilieviNoTipologiaId = 'punti_rilievi_no_tipologia_id',
  /** column name */
  PuntiUrto = 'punti_urto',
  /** column name */
  PuntiUrtoAccorda = 'punti_urto_accorda',
  /** column name */
  PuntiUrtoMultiplo = 'punti_urto_multiplo',
  /** column name */
  PuntiUrtoNote = 'punti_urto_note',
  /** column name */
  PuntoInizialePosizionamentoId = 'punto_iniziale_posizionamento_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  QuartiereStorico = 'quartiere_storico',
  /** column name */
  RisConsegnatoAAltro = 'ris_consegnato_a_altro',
  /** column name */
  RisConsegnatoAId = 'ris_consegnato_a_id',
  /** column name */
  RisConsegnatoData = 'ris_consegnato_data',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Stato = 'stato',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  ToponimoStorico = 'toponimo_storico',
  /** column name */
  UnitaOperativaId = 'unita_operativa_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UtenteInseritore = 'utente_inseritore'
}

/** aggregate var_pop on columns */
export type Sis_Ris_Var_Pop_Fields = {
  __typename?: 'sis_ris_var_pop_fields';
  decessi_numero?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  ris_consegnato_a_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.ris" */
export type Sis_Ris_Var_Pop_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Ris_Var_Samp_Fields = {
  __typename?: 'sis_ris_var_samp_fields';
  decessi_numero?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  ris_consegnato_a_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.ris" */
export type Sis_Ris_Var_Samp_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Ris_Variance_Fields = {
  __typename?: 'sis_ris_variance_fields';
  decessi_numero?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  protocollo_id?: Maybe<Scalars['Float']>;
  punti_rilievi_no_tipologia_id?: Maybe<Scalars['Float']>;
  punto_iniziale_posizionamento_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  ris_consegnato_a_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.ris" */
export type Sis_Ris_Variance_Order_By = {
  decessi_numero?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  posizione_statica_rilievi_no_tipologia_id?: Maybe<Order_By>;
  protocollo_id?: Maybe<Order_By>;
  punti_rilievi_no_tipologia_id?: Maybe<Order_By>;
  punto_iniziale_posizionamento_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  ris_consegnato_a_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.testimone" */
export type Sis_Testimone = {
  __typename?: 'sis_testimone';
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  /** An object relationship */
  documento_rilasciato_da_citta?: Maybe<_Citta>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.testimone" */
export type Sis_Testimone_Aggregate = {
  __typename?: 'sis_testimone_aggregate';
  aggregate?: Maybe<Sis_Testimone_Aggregate_Fields>;
  nodes: Array<Sis_Testimone>;
};

/** aggregate fields of "sis.testimone" */
export type Sis_Testimone_Aggregate_Fields = {
  __typename?: 'sis_testimone_aggregate_fields';
  avg?: Maybe<Sis_Testimone_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Testimone_Max_Fields>;
  min?: Maybe<Sis_Testimone_Min_Fields>;
  stddev?: Maybe<Sis_Testimone_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Testimone_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Testimone_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Testimone_Sum_Fields>;
  var_pop?: Maybe<Sis_Testimone_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Testimone_Var_Samp_Fields>;
  variance?: Maybe<Sis_Testimone_Variance_Fields>;
};


/** aggregate fields of "sis.testimone" */
export type Sis_Testimone_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Testimone_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.testimone" */
export type Sis_Testimone_Aggregate_Order_By = {
  avg?: Maybe<Sis_Testimone_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Testimone_Max_Order_By>;
  min?: Maybe<Sis_Testimone_Min_Order_By>;
  stddev?: Maybe<Sis_Testimone_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Testimone_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Testimone_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Testimone_Sum_Order_By>;
  var_pop?: Maybe<Sis_Testimone_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Testimone_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Testimone_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.testimone" */
export type Sis_Testimone_Arr_Rel_Insert_Input = {
  data: Array<Sis_Testimone_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Testimone_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Testimone_Avg_Fields = {
  __typename?: 'sis_testimone_avg_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.testimone" */
export type Sis_Testimone_Avg_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.testimone". All fields are combined with a logical 'AND'. */
export type Sis_Testimone_Bool_Exp = {
  _and?: Maybe<Array<Sis_Testimone_Bool_Exp>>;
  _not?: Maybe<Sis_Testimone_Bool_Exp>;
  _or?: Maybe<Array<Sis_Testimone_Bool_Exp>>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  documento_numero?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Bool_Exp>;
  documento_rilasciato_da_citta_id?: Maybe<Int_Comparison_Exp>;
  documento_rilasciato_data?: Maybe<Timestamp_Comparison_Exp>;
  documento_tipo?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.testimone" */
export enum Sis_Testimone_Constraint {
  /** unique or primary key constraint */
  TestimonePkey = 'testimone_pkey'
}

/** input type for incrementing numeric columns in table "sis.testimone" */
export type Sis_Testimone_Inc_Input = {
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.testimone" */
export type Sis_Testimone_Insert_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Testimone_Max_Fields = {
  __typename?: 'sis_testimone_max_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.testimone" */
export type Sis_Testimone_Max_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Testimone_Min_Fields = {
  __typename?: 'sis_testimone_min_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.testimone" */
export type Sis_Testimone_Min_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.testimone" */
export type Sis_Testimone_Mutation_Response = {
  __typename?: 'sis_testimone_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Testimone>;
};

/** input type for inserting object relation for remote table "sis.testimone" */
export type Sis_Testimone_Obj_Rel_Insert_Input = {
  data: Sis_Testimone_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Testimone_On_Conflict>;
};

/** on_conflict condition type for table "sis.testimone" */
export type Sis_Testimone_On_Conflict = {
  constraint: Sis_Testimone_Constraint;
  update_columns?: Array<Sis_Testimone_Update_Column>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.testimone". */
export type Sis_Testimone_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_testimone */
export type Sis_Testimone_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.testimone" */
export enum Sis_Testimone_Select_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.testimone" */
export type Sis_Testimone_Set_Input = {
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Testimone_Stddev_Fields = {
  __typename?: 'sis_testimone_stddev_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.testimone" */
export type Sis_Testimone_Stddev_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Testimone_Stddev_Pop_Fields = {
  __typename?: 'sis_testimone_stddev_pop_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.testimone" */
export type Sis_Testimone_Stddev_Pop_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Testimone_Stddev_Samp_Fields = {
  __typename?: 'sis_testimone_stddev_samp_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.testimone" */
export type Sis_Testimone_Stddev_Samp_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Testimone_Sum_Fields = {
  __typename?: 'sis_testimone_sum_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.testimone" */
export type Sis_Testimone_Sum_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.testimone" */
export enum Sis_Testimone_Update_Column {
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Testimone_Var_Pop_Fields = {
  __typename?: 'sis_testimone_var_pop_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.testimone" */
export type Sis_Testimone_Var_Pop_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Testimone_Var_Samp_Fields = {
  __typename?: 'sis_testimone_var_samp_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.testimone" */
export type Sis_Testimone_Var_Samp_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Testimone_Variance_Fields = {
  __typename?: 'sis_testimone_variance_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.testimone" */
export type Sis_Testimone_Variance_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo = {
  __typename?: 'sis_trasportati_veicolo';
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  id: Scalars['Int'];
  /** An object relationship */
  trasportato: Sis_Trasportato;
  trasportato_id: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  veicolo: Sis_Veicolo;
  veicolo_id: Scalars['Int'];
};

/** aggregated selection of "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Aggregate = {
  __typename?: 'sis_trasportati_veicolo_aggregate';
  aggregate?: Maybe<Sis_Trasportati_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis_Trasportati_Veicolo>;
};

/** aggregate fields of "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Aggregate_Fields = {
  __typename?: 'sis_trasportati_veicolo_aggregate_fields';
  avg?: Maybe<Sis_Trasportati_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Trasportati_Veicolo_Max_Fields>;
  min?: Maybe<Sis_Trasportati_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis_Trasportati_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Trasportati_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Trasportati_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Trasportati_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis_Trasportati_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Trasportati_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis_Trasportati_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Trasportati_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Aggregate_Order_By = {
  avg?: Maybe<Sis_Trasportati_Veicolo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Trasportati_Veicolo_Max_Order_By>;
  min?: Maybe<Sis_Trasportati_Veicolo_Min_Order_By>;
  stddev?: Maybe<Sis_Trasportati_Veicolo_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Trasportati_Veicolo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Trasportati_Veicolo_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Trasportati_Veicolo_Sum_Order_By>;
  var_pop?: Maybe<Sis_Trasportati_Veicolo_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Trasportati_Veicolo_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Trasportati_Veicolo_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Arr_Rel_Insert_Input = {
  data: Array<Sis_Trasportati_Veicolo_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Trasportati_Veicolo_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Trasportati_Veicolo_Avg_Fields = {
  __typename?: 'sis_trasportati_veicolo_avg_fields';
  id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Avg_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.trasportati_veicolo". All fields are combined with a logical 'AND'. */
export type Sis_Trasportati_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis_Trasportati_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis_Trasportati_Veicolo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  trasportato?: Maybe<Sis_Trasportato_Bool_Exp>;
  trasportato_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  veicolo?: Maybe<Sis_Veicolo_Bool_Exp>;
  veicolo_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.trasportati_veicolo" */
export enum Sis_Trasportati_Veicolo_Constraint {
  /** unique or primary key constraint */
  TrasportatiVeicoloPkey = 'trasportati_veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  trasportato?: Maybe<Sis_Trasportato_Obj_Rel_Insert_Input>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo?: Maybe<Sis_Veicolo_Obj_Rel_Insert_Input>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Sis_Trasportati_Veicolo_Max_Fields = {
  __typename?: 'sis_trasportati_veicolo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Trasportati_Veicolo_Min_Fields = {
  __typename?: 'sis_trasportati_veicolo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Mutation_Response = {
  __typename?: 'sis_trasportati_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Trasportati_Veicolo>;
};

/** on_conflict condition type for table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_On_Conflict = {
  constraint: Sis_Trasportati_Veicolo_Constraint;
  update_columns?: Array<Sis_Trasportati_Veicolo_Update_Column>;
  where?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.trasportati_veicolo". */
export type Sis_Trasportati_Veicolo_Order_By = {
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  trasportato?: Maybe<Sis_Trasportato_Order_By>;
  trasportato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo?: Maybe<Sis_Veicolo_Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_trasportati_veicolo */
export type Sis_Trasportati_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.trasportati_veicolo" */
export enum Sis_Trasportati_Veicolo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  TrasportatoId = 'trasportato_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VeicoloId = 'veicolo_id'
}

/** input type for updating data in table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Sis_Trasportati_Veicolo_Stddev_Fields = {
  __typename?: 'sis_trasportati_veicolo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Trasportati_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis_trasportati_veicolo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Trasportati_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis_trasportati_veicolo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Trasportati_Veicolo_Sum_Fields = {
  __typename?: 'sis_trasportati_veicolo_sum_fields';
  id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Sum_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.trasportati_veicolo" */
export enum Sis_Trasportati_Veicolo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  Id = 'id',
  /** column name */
  TrasportatoId = 'trasportato_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VeicoloId = 'veicolo_id'
}

/** aggregate var_pop on columns */
export type Sis_Trasportati_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis_trasportati_veicolo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Trasportati_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis_trasportati_veicolo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Trasportati_Veicolo_Variance_Fields = {
  __typename?: 'sis_trasportati_veicolo_variance_fields';
  id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.trasportati_veicolo" */
export type Sis_Trasportati_Veicolo_Variance_Order_By = {
  id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.trasportato" */
export type Sis_Trasportato = {
  __typename?: 'sis_trasportato';
  accertamento_attivazione_airbag?: Maybe<Scalars['Boolean']>;
  accertamento_uso_casco?: Maybe<Scalars['Boolean']>;
  accertamento_uso_cintura?: Maybe<Scalars['Boolean']>;
  accertamento_uso_sistema_bambini?: Maybe<Scalars['Boolean']>;
  cognome?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  delete: Scalars['Boolean'];
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  /** An object relationship */
  documento_rilasciato_da_citta?: Maybe<_Citta>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  /** An object relationship */
  posizione?: Maybe<Sis__Trasportato_Posizione>;
  posizione_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  stato?: Maybe<Sis__Trasportato_Stato>;
  stato_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "sis.trasportato" */
export type Sis_Trasportato_Aggregate = {
  __typename?: 'sis_trasportato_aggregate';
  aggregate?: Maybe<Sis_Trasportato_Aggregate_Fields>;
  nodes: Array<Sis_Trasportato>;
};

/** aggregate fields of "sis.trasportato" */
export type Sis_Trasportato_Aggregate_Fields = {
  __typename?: 'sis_trasportato_aggregate_fields';
  avg?: Maybe<Sis_Trasportato_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Trasportato_Max_Fields>;
  min?: Maybe<Sis_Trasportato_Min_Fields>;
  stddev?: Maybe<Sis_Trasportato_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Trasportato_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Trasportato_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Trasportato_Sum_Fields>;
  var_pop?: Maybe<Sis_Trasportato_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Trasportato_Var_Samp_Fields>;
  variance?: Maybe<Sis_Trasportato_Variance_Fields>;
};


/** aggregate fields of "sis.trasportato" */
export type Sis_Trasportato_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Trasportato_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.trasportato" */
export type Sis_Trasportato_Aggregate_Order_By = {
  avg?: Maybe<Sis_Trasportato_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Trasportato_Max_Order_By>;
  min?: Maybe<Sis_Trasportato_Min_Order_By>;
  stddev?: Maybe<Sis_Trasportato_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Trasportato_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Trasportato_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Trasportato_Sum_Order_By>;
  var_pop?: Maybe<Sis_Trasportato_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Trasportato_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Trasportato_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.trasportato" */
export type Sis_Trasportato_Arr_Rel_Insert_Input = {
  data: Array<Sis_Trasportato_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Trasportato_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Trasportato_Avg_Fields = {
  __typename?: 'sis_trasportato_avg_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  posizione_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Avg_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.trasportato". All fields are combined with a logical 'AND'. */
export type Sis_Trasportato_Bool_Exp = {
  _and?: Maybe<Array<Sis_Trasportato_Bool_Exp>>;
  _not?: Maybe<Sis_Trasportato_Bool_Exp>;
  _or?: Maybe<Array<Sis_Trasportato_Bool_Exp>>;
  accertamento_attivazione_airbag?: Maybe<Boolean_Comparison_Exp>;
  accertamento_uso_casco?: Maybe<Boolean_Comparison_Exp>;
  accertamento_uso_cintura?: Maybe<Boolean_Comparison_Exp>;
  accertamento_uso_sistema_bambini?: Maybe<Boolean_Comparison_Exp>;
  cognome?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  documento_numero?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Bool_Exp>;
  documento_rilasciato_da_citta_id?: Maybe<Int_Comparison_Exp>;
  documento_rilasciato_data?: Maybe<Timestamp_Comparison_Exp>;
  documento_tipo?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  posizione?: Maybe<Sis__Trasportato_Posizione_Bool_Exp>;
  posizione_id?: Maybe<Int_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  stato?: Maybe<Sis__Trasportato_Stato_Bool_Exp>;
  stato_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.trasportato" */
export enum Sis_Trasportato_Constraint {
  /** unique or primary key constraint */
  TrasportatoPkey = 'trasportato_pkey'
}

/** input type for incrementing numeric columns in table "sis.trasportato" */
export type Sis_Trasportato_Inc_Input = {
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  posizione_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.trasportato" */
export type Sis_Trasportato_Insert_Input = {
  accertamento_attivazione_airbag?: Maybe<Scalars['Boolean']>;
  accertamento_uso_casco?: Maybe<Scalars['Boolean']>;
  accertamento_uso_cintura?: Maybe<Scalars['Boolean']>;
  accertamento_uso_sistema_bambini?: Maybe<Scalars['Boolean']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  posizione?: Maybe<Sis__Trasportato_Posizione_Obj_Rel_Insert_Input>;
  posizione_id?: Maybe<Scalars['Int']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  stato?: Maybe<Sis__Trasportato_Stato_Obj_Rel_Insert_Input>;
  stato_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Sis_Trasportato_Max_Fields = {
  __typename?: 'sis_trasportato_max_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  posizione_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Max_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Trasportato_Min_Fields = {
  __typename?: 'sis_trasportato_min_fields';
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  posizione_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Min_Order_By = {
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.trasportato" */
export type Sis_Trasportato_Mutation_Response = {
  __typename?: 'sis_trasportato_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Trasportato>;
};

/** input type for inserting object relation for remote table "sis.trasportato" */
export type Sis_Trasportato_Obj_Rel_Insert_Input = {
  data: Sis_Trasportato_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Trasportato_On_Conflict>;
};

/** on_conflict condition type for table "sis.trasportato" */
export type Sis_Trasportato_On_Conflict = {
  constraint: Sis_Trasportato_Constraint;
  update_columns?: Array<Sis_Trasportato_Update_Column>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.trasportato". */
export type Sis_Trasportato_Order_By = {
  accertamento_attivazione_airbag?: Maybe<Order_By>;
  accertamento_uso_casco?: Maybe<Order_By>;
  accertamento_uso_cintura?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  posizione?: Maybe<Sis__Trasportato_Posizione_Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato?: Maybe<Sis__Trasportato_Stato_Order_By>;
  stato_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_trasportato */
export type Sis_Trasportato_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.trasportato" */
export enum Sis_Trasportato_Select_Column {
  /** column name */
  AccertamentoAttivazioneAirbag = 'accertamento_attivazione_airbag',
  /** column name */
  AccertamentoUsoCasco = 'accertamento_uso_casco',
  /** column name */
  AccertamentoUsoCintura = 'accertamento_uso_cintura',
  /** column name */
  AccertamentoUsoSistemaBambini = 'accertamento_uso_sistema_bambini',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  PosizioneId = 'posizione_id',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  StatoId = 'stato_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.trasportato" */
export type Sis_Trasportato_Set_Input = {
  accertamento_attivazione_airbag?: Maybe<Scalars['Boolean']>;
  accertamento_uso_casco?: Maybe<Scalars['Boolean']>;
  accertamento_uso_cintura?: Maybe<Scalars['Boolean']>;
  accertamento_uso_sistema_bambini?: Maybe<Scalars['Boolean']>;
  cognome?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  delete?: Maybe<Scalars['Boolean']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  posizione_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  titolo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Trasportato_Stddev_Fields = {
  __typename?: 'sis_trasportato_stddev_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  posizione_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Stddev_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Trasportato_Stddev_Pop_Fields = {
  __typename?: 'sis_trasportato_stddev_pop_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  posizione_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Stddev_Pop_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Trasportato_Stddev_Samp_Fields = {
  __typename?: 'sis_trasportato_stddev_samp_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  posizione_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Stddev_Samp_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Trasportato_Sum_Fields = {
  __typename?: 'sis_trasportato_sum_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  posizione_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Sum_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.trasportato" */
export enum Sis_Trasportato_Update_Column {
  /** column name */
  AccertamentoAttivazioneAirbag = 'accertamento_attivazione_airbag',
  /** column name */
  AccertamentoUsoCasco = 'accertamento_uso_casco',
  /** column name */
  AccertamentoUsoCintura = 'accertamento_uso_cintura',
  /** column name */
  AccertamentoUsoSistemaBambini = 'accertamento_uso_sistema_bambini',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Delete = 'delete',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  PosizioneId = 'posizione_id',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  StatoId = 'stato_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Trasportato_Var_Pop_Fields = {
  __typename?: 'sis_trasportato_var_pop_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  posizione_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Var_Pop_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Trasportato_Var_Samp_Fields = {
  __typename?: 'sis_trasportato_var_samp_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  posizione_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Var_Samp_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Trasportato_Variance_Fields = {
  __typename?: 'sis_trasportato_variance_fields';
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  posizione_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.trasportato" */
export type Sis_Trasportato_Variance_Order_By = {
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  posizione_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_Operativa = {
  __typename?: 'sis_unita_operativa';
  civico?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An array relationship */
  membri: Array<Sis_Assegnazione_Unita_Operativa>;
  /** An aggregate relationship */
  membri_aggregate: Sis_Assegnazione_Unita_Operativa_Aggregate;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  /** An array relationship */
  ris: Array<Sis_Ris>;
  /** An aggregate relationship */
  ris_aggregate: Sis_Ris_Aggregate;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  toponimo?: Maybe<Scalars['jsonb']>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  vecchie_denominazioni: Array<Sis_Vecchia_Unita_Operativa>;
  /** An aggregate relationship */
  vecchie_denominazioni_aggregate: Sis_Vecchia_Unita_Operativa_Aggregate;
};


/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_OperativaMembriArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
};


/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_OperativaMembri_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
};


/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_OperativaRisArgs = {
  distinct_on?: Maybe<Array<Sis_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Ris_Order_By>>;
  where?: Maybe<Sis_Ris_Bool_Exp>;
};


/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_OperativaRis_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Ris_Order_By>>;
  where?: Maybe<Sis_Ris_Bool_Exp>;
};


/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_OperativaToponimoArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_OperativaVecchie_DenominazioniArgs = {
  distinct_on?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};


/** columns and relationships of "sis.unita_operativa" */
export type Sis_Unita_OperativaVecchie_Denominazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};

/** aggregated selection of "sis.unita_operativa" */
export type Sis_Unita_Operativa_Aggregate = {
  __typename?: 'sis_unita_operativa_aggregate';
  aggregate?: Maybe<Sis_Unita_Operativa_Aggregate_Fields>;
  nodes: Array<Sis_Unita_Operativa>;
};

/** aggregate fields of "sis.unita_operativa" */
export type Sis_Unita_Operativa_Aggregate_Fields = {
  __typename?: 'sis_unita_operativa_aggregate_fields';
  avg?: Maybe<Sis_Unita_Operativa_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Unita_Operativa_Max_Fields>;
  min?: Maybe<Sis_Unita_Operativa_Min_Fields>;
  stddev?: Maybe<Sis_Unita_Operativa_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Unita_Operativa_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Unita_Operativa_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Unita_Operativa_Sum_Fields>;
  var_pop?: Maybe<Sis_Unita_Operativa_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Unita_Operativa_Var_Samp_Fields>;
  variance?: Maybe<Sis_Unita_Operativa_Variance_Fields>;
};


/** aggregate fields of "sis.unita_operativa" */
export type Sis_Unita_Operativa_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Unita_Operativa_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Sis_Unita_Operativa_Append_Input = {
  toponimo?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Sis_Unita_Operativa_Avg_Fields = {
  __typename?: 'sis_unita_operativa_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "sis.unita_operativa". All fields are combined with a logical 'AND'. */
export type Sis_Unita_Operativa_Bool_Exp = {
  _and?: Maybe<Array<Sis_Unita_Operativa_Bool_Exp>>;
  _not?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
  _or?: Maybe<Array<Sis_Unita_Operativa_Bool_Exp>>;
  civico?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  membri?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  role4?: Maybe<String_Comparison_Exp>;
  role5?: Maybe<String_Comparison_Exp>;
  role8?: Maybe<String_Comparison_Exp>;
  toponimo?: Maybe<Jsonb_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  vecchie_denominazioni?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};

/** unique or primary key constraints on table "sis.unita_operativa" */
export enum Sis_Unita_Operativa_Constraint {
  /** unique or primary key constraint */
  UnitaOperativaPkey = 'unita_operativa_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Sis_Unita_Operativa_Delete_At_Path_Input = {
  toponimo?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Sis_Unita_Operativa_Delete_Elem_Input = {
  toponimo?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Sis_Unita_Operativa_Delete_Key_Input = {
  toponimo?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "sis.unita_operativa" */
export type Sis_Unita_Operativa_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.unita_operativa" */
export type Sis_Unita_Operativa_Insert_Input = {
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  membri?: Maybe<Sis_Assegnazione_Unita_Operativa_Arr_Rel_Insert_Input>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Arr_Rel_Insert_Input>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  toponimo?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  vecchie_denominazioni?: Maybe<Sis_Vecchia_Unita_Operativa_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Sis_Unita_Operativa_Max_Fields = {
  __typename?: 'sis_unita_operativa_max_fields';
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Sis_Unita_Operativa_Min_Fields = {
  __typename?: 'sis_unita_operativa_min_fields';
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "sis.unita_operativa" */
export type Sis_Unita_Operativa_Mutation_Response = {
  __typename?: 'sis_unita_operativa_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Unita_Operativa>;
};

/** input type for inserting object relation for remote table "sis.unita_operativa" */
export type Sis_Unita_Operativa_Obj_Rel_Insert_Input = {
  data: Sis_Unita_Operativa_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Unita_Operativa_On_Conflict>;
};

/** on_conflict condition type for table "sis.unita_operativa" */
export type Sis_Unita_Operativa_On_Conflict = {
  constraint: Sis_Unita_Operativa_Constraint;
  update_columns?: Array<Sis_Unita_Operativa_Update_Column>;
  where?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.unita_operativa". */
export type Sis_Unita_Operativa_Order_By = {
  civico?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  membri_aggregate?: Maybe<Sis_Assegnazione_Unita_Operativa_Aggregate_Order_By>;
  nome?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  ris_aggregate?: Maybe<Sis_Ris_Aggregate_Order_By>;
  role4?: Maybe<Order_By>;
  role5?: Maybe<Order_By>;
  role8?: Maybe<Order_By>;
  toponimo?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  vecchie_denominazioni_aggregate?: Maybe<Sis_Vecchia_Unita_Operativa_Aggregate_Order_By>;
};

/** primary key columns input for table: sis_unita_operativa */
export type Sis_Unita_Operativa_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Sis_Unita_Operativa_Prepend_Input = {
  toponimo?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "sis.unita_operativa" */
export enum Sis_Unita_Operativa_Select_Column {
  /** column name */
  Civico = 'civico',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Note = 'note',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Toponimo = 'toponimo',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "sis.unita_operativa" */
export type Sis_Unita_Operativa_Set_Input = {
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  toponimo?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Sis_Unita_Operativa_Stddev_Fields = {
  __typename?: 'sis_unita_operativa_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Sis_Unita_Operativa_Stddev_Pop_Fields = {
  __typename?: 'sis_unita_operativa_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Sis_Unita_Operativa_Stddev_Samp_Fields = {
  __typename?: 'sis_unita_operativa_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Sis_Unita_Operativa_Sum_Fields = {
  __typename?: 'sis_unita_operativa_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "sis.unita_operativa" */
export enum Sis_Unita_Operativa_Update_Column {
  /** column name */
  Civico = 'civico',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Note = 'note',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Toponimo = 'toponimo',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Sis_Unita_Operativa_Var_Pop_Fields = {
  __typename?: 'sis_unita_operativa_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Sis_Unita_Operativa_Var_Samp_Fields = {
  __typename?: 'sis_unita_operativa_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Sis_Unita_Operativa_Variance_Fields = {
  __typename?: 'sis_unita_operativa_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa = {
  __typename?: 'sis_vecchia_unita_operativa';
  civico?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  unita_operativa: Sis_Unita_Operativa;
  unita_operativa_id: Scalars['Int'];
};

/** aggregated selection of "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Aggregate = {
  __typename?: 'sis_vecchia_unita_operativa_aggregate';
  aggregate?: Maybe<Sis_Vecchia_Unita_Operativa_Aggregate_Fields>;
  nodes: Array<Sis_Vecchia_Unita_Operativa>;
};

/** aggregate fields of "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Aggregate_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_aggregate_fields';
  avg?: Maybe<Sis_Vecchia_Unita_Operativa_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Vecchia_Unita_Operativa_Max_Fields>;
  min?: Maybe<Sis_Vecchia_Unita_Operativa_Min_Fields>;
  stddev?: Maybe<Sis_Vecchia_Unita_Operativa_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Vecchia_Unita_Operativa_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Vecchia_Unita_Operativa_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Vecchia_Unita_Operativa_Sum_Fields>;
  var_pop?: Maybe<Sis_Vecchia_Unita_Operativa_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Vecchia_Unita_Operativa_Var_Samp_Fields>;
  variance?: Maybe<Sis_Vecchia_Unita_Operativa_Variance_Fields>;
};


/** aggregate fields of "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Aggregate_Order_By = {
  avg?: Maybe<Sis_Vecchia_Unita_Operativa_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Vecchia_Unita_Operativa_Max_Order_By>;
  min?: Maybe<Sis_Vecchia_Unita_Operativa_Min_Order_By>;
  stddev?: Maybe<Sis_Vecchia_Unita_Operativa_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Vecchia_Unita_Operativa_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Vecchia_Unita_Operativa_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Vecchia_Unita_Operativa_Sum_Order_By>;
  var_pop?: Maybe<Sis_Vecchia_Unita_Operativa_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Vecchia_Unita_Operativa_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Vecchia_Unita_Operativa_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Arr_Rel_Insert_Input = {
  data: Array<Sis_Vecchia_Unita_Operativa_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Vecchia_Unita_Operativa_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Vecchia_Unita_Operativa_Avg_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_avg_fields';
  id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Avg_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.vecchia_unita_operativa". All fields are combined with a logical 'AND'. */
export type Sis_Vecchia_Unita_Operativa_Bool_Exp = {
  _and?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Bool_Exp>>;
  _not?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
  _or?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Bool_Exp>>;
  civico?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  toponimo_id?: Maybe<Int_Comparison_Exp>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
  unita_operativa_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.vecchia_unita_operativa" */
export enum Sis_Vecchia_Unita_Operativa_Constraint {
  /** unique or primary key constraint */
  VecchiaUnitaOperativaPkey = 'vecchia_unita_operativa_pkey'
}

/** input type for incrementing numeric columns in table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Insert_Input = {
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Obj_Rel_Insert_Input>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Sis_Vecchia_Unita_Operativa_Max_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_max_fields';
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Max_Order_By = {
  civico?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Vecchia_Unita_Operativa_Min_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_min_fields';
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Min_Order_By = {
  civico?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Mutation_Response = {
  __typename?: 'sis_vecchia_unita_operativa_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Vecchia_Unita_Operativa>;
};

/** on_conflict condition type for table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_On_Conflict = {
  constraint: Sis_Vecchia_Unita_Operativa_Constraint;
  update_columns?: Array<Sis_Vecchia_Unita_Operativa_Update_Column>;
  where?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.vecchia_unita_operativa". */
export type Sis_Vecchia_Unita_Operativa_Order_By = {
  civico?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa?: Maybe<Sis_Unita_Operativa_Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_vecchia_unita_operativa */
export type Sis_Vecchia_Unita_Operativa_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.vecchia_unita_operativa" */
export enum Sis_Vecchia_Unita_Operativa_Select_Column {
  /** column name */
  Civico = 'civico',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Note = 'note',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  UnitaOperativaId = 'unita_operativa_id'
}

/** input type for updating data in table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Set_Input = {
  civico?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Sis_Vecchia_Unita_Operativa_Stddev_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Vecchia_Unita_Operativa_Stddev_Pop_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Vecchia_Unita_Operativa_Stddev_Samp_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Vecchia_Unita_Operativa_Sum_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_sum_fields';
  id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
  unita_operativa_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Sum_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** update columns of table "sis.vecchia_unita_operativa" */
export enum Sis_Vecchia_Unita_Operativa_Update_Column {
  /** column name */
  Civico = 'civico',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Note = 'note',
  /** column name */
  ToponimoId = 'toponimo_id',
  /** column name */
  UnitaOperativaId = 'unita_operativa_id'
}

/** aggregate var_pop on columns */
export type Sis_Vecchia_Unita_Operativa_Var_Pop_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Vecchia_Unita_Operativa_Var_Samp_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Vecchia_Unita_Operativa_Variance_Fields = {
  __typename?: 'sis_vecchia_unita_operativa_variance_fields';
  id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
  unita_operativa_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.vecchia_unita_operativa" */
export type Sis_Vecchia_Unita_Operativa_Variance_Order_By = {
  id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
  unita_operativa_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.veicolo" */
export type Sis_Veicolo = {
  __typename?: 'sis_veicolo';
  accertamenti_abs?: Maybe<Scalars['Boolean']>;
  accertamenti_attivazione?: Maybe<Scalars['Boolean']>;
  accertamenti_uso_casco_altro_note?: Maybe<Scalars['String']>;
  /** An object relationship */
  accertamenti_uso_casco_sinoaltro?: Maybe<_Sinoaltro>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamenti_uso_cintura_altro_note?: Maybe<Scalars['String']>;
  /** An object relationship */
  accertamenti_uso_cintura_sinoaltro?: Maybe<_Sinoaltro>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Scalars['String']>;
  /** An object relationship */
  accertamento_uso_antiabbandono_sinoaltro?: Maybe<_Sinoaltro>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Scalars['String']>;
  /** An object relationship */
  accertamento_uso_sistema_bambini_sinoaltro?: Maybe<_Sinoaltro>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  alimentazione?: Maybe<Sis__Alimentazione_Veicolo>;
  alimentazione_id?: Maybe<Scalars['Int']>;
  alimentazione_note?: Maybe<Scalars['String']>;
  anno_prima_immatricolazione?: Maybe<Scalars['String']>;
  assicurazione_agenzia?: Maybe<Scalars['String']>;
  assicurazione_altro_note?: Maybe<Scalars['String']>;
  assicurazione_data_fine?: Maybe<Scalars['timestamp']>;
  assicurazione_data_inizio?: Maybe<Scalars['timestamp']>;
  assicurazione_polizza?: Maybe<Scalars['String']>;
  /** An object relationship */
  assicurazione_sinoaltro?: Maybe<_Sinoaltro>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  assicurazione_societa?: Maybe<Scalars['String']>;
  carta_circolazione?: Maybe<Scalars['String']>;
  carta_circolazione_altro_note?: Maybe<Scalars['String']>;
  carta_circolazione_data?: Maybe<Scalars['timestamp']>;
  carta_circolazione_ddt?: Maybe<Scalars['String']>;
  carta_circolazione_ril?: Maybe<Scalars['String']>;
  /** An object relationship */
  carta_circolazione_sinoaltro?: Maybe<_Sinoaltro>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  cilindrata?: Maybe<Scalars['String']>;
  codice_merce_pericolasa?: Maybe<Scalars['String']>;
  codice_pericolo?: Maybe<Scalars['String']>;
  colore_carrozzeria?: Maybe<Scalars['String']>;
  /** An object relationship */
  conducente?: Maybe<Sis_Conducente>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  danni_del_veicolo_a_cose?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo?: Maybe<Scalars['Boolean']>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_difensore?: Maybe<Scalars['Boolean']>;
  danni_del_veicolo_a_cose_rilievo_presente?: Maybe<Scalars['Boolean']>;
  danni_su_veicolo_constatati?: Maybe<Scalars['String']>;
  data_ultima_revisione?: Maybe<Scalars['timestamp']>;
  delete: Scalars['Boolean'];
  destinazione_data?: Maybe<Scalars['timestamp']>;
  /** An object relationship */
  destinazione_decisione?: Maybe<Sis__Destinazione_Decisione>;
  destinazione_decisione_altro?: Maybe<Scalars['String']>;
  destinazione_decisione_id?: Maybe<Scalars['Int']>;
  destinazione_persona_affidataria?: Maybe<Scalars['String']>;
  destinazione_ritirato?: Maybe<Scalars['Boolean']>;
  destinazione_sequestrato?: Maybe<Scalars['Boolean']>;
  destinazione_trasportato_presso?: Maybe<Scalars['String']>;
  dispositivi_acustici?: Maybe<Scalars['String']>;
  dotazione_airbag?: Maybe<Scalars['Boolean']>;
  dotazione_cinture?: Maybe<Scalars['Boolean']>;
  generale?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  impianto_illuminazione?: Maybe<Scalars['String']>;
  indicatori_direzione?: Maybe<Scalars['String']>;
  km_percorsi?: Maybe<Scalars['String']>;
  /** An object relationship */
  locatario?: Maybe<Sis_Locatario>;
  locatario_id?: Maybe<Scalars['Int']>;
  luci_arresto?: Maybe<Scalars['String']>;
  marca?: Maybe<Scalars['String']>;
  marcia_inserita?: Maybe<Scalars['String']>;
  modello?: Maybe<Scalars['String']>;
  /** An object relationship */
  nazione?: Maybe<_Nazione>;
  nazione_id?: Maybe<Scalars['Int']>;
  p_c?: Maybe<Scalars['String']>;
  p_u?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['String']>;
  posti?: Maybe<Scalars['String']>;
  /** An object relationship */
  proprietario?: Maybe<Sis_Proprietario>;
  /** An object relationship */
  proprietario_giuridico?: Maybe<Sis_Proprietario_Giuridico>;
  proprietario_giuridico_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  retrovisore_esterno?: Maybe<Sis__Retrovisore_Esterno>;
  retrovisore_esterno_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  stato?: Maybe<Sis__Stato_Veicolo>;
  stato_id?: Maybe<Scalars['Int']>;
  stato_pneumatici?: Maybe<Scalars['String']>;
  tara?: Maybe<Scalars['String']>;
  targa?: Maybe<Scalars['String']>;
  telaio?: Maybe<Scalars['String']>;
  /** An object relationship */
  tipologia_veicolo?: Maybe<Sis__Tipologia_Veicolo>;
  tipologia_veicolo_id?: Maybe<Scalars['Int']>;
  tipologia_veicolo_note?: Maybe<Scalars['String']>;
  traccia_suolo?: Maybe<Scalars['Boolean']>;
  traccia_suolo_abs?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  traccia_suolo_frenata_tipologia?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_metri?: Maybe<Scalars['String']>;
  /** An object relationship */
  traccia_suolo_terminazione?: Maybe<Sis__Traccia_Suolo_Terminazione>;
  /** An object relationship */
  traccia_suolo_terminazione_andamento?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  traccia_suolo_terminazione_forma?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  traccia_suolo_terminazione_intensita?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_metri?: Maybe<Scalars['String']>;
  /** An object relationship */
  traccia_suolo_terminazione_tipologia?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  traccia_suolo_tipologia?: Maybe<Sis__Traccia_Suolo_Tipologia>;
  /** An array relationship */
  trasportati: Array<Sis_Trasportati_Veicolo>;
  /** An aggregate relationship */
  trasportati_aggregate: Sis_Trasportati_Veicolo_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  uso_veicolo?: Maybe<Sis__Uso_Veicolo>;
  uso_veicolo_id?: Maybe<Scalars['Int']>;
  velocita_presunta?: Maybe<Scalars['String']>;
};


/** columns and relationships of "sis.veicolo" */
export type Sis_VeicoloTrasportatiArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportati_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportati_Veicolo_Order_By>>;
  where?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
};


/** columns and relationships of "sis.veicolo" */
export type Sis_VeicoloTrasportati_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportati_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportati_Veicolo_Order_By>>;
  where?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
};

/** aggregated selection of "sis.veicolo" */
export type Sis_Veicolo_Aggregate = {
  __typename?: 'sis_veicolo_aggregate';
  aggregate?: Maybe<Sis_Veicolo_Aggregate_Fields>;
  nodes: Array<Sis_Veicolo>;
};

/** aggregate fields of "sis.veicolo" */
export type Sis_Veicolo_Aggregate_Fields = {
  __typename?: 'sis_veicolo_aggregate_fields';
  avg?: Maybe<Sis_Veicolo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Veicolo_Max_Fields>;
  min?: Maybe<Sis_Veicolo_Min_Fields>;
  stddev?: Maybe<Sis_Veicolo_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Veicolo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Veicolo_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Veicolo_Sum_Fields>;
  var_pop?: Maybe<Sis_Veicolo_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Veicolo_Var_Samp_Fields>;
  variance?: Maybe<Sis_Veicolo_Variance_Fields>;
};


/** aggregate fields of "sis.veicolo" */
export type Sis_Veicolo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Veicolo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.veicolo" */
export type Sis_Veicolo_Aggregate_Order_By = {
  avg?: Maybe<Sis_Veicolo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Veicolo_Max_Order_By>;
  min?: Maybe<Sis_Veicolo_Min_Order_By>;
  stddev?: Maybe<Sis_Veicolo_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Veicolo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Veicolo_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Veicolo_Sum_Order_By>;
  var_pop?: Maybe<Sis_Veicolo_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Veicolo_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Veicolo_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.veicolo" */
export type Sis_Veicolo_Arr_Rel_Insert_Input = {
  data: Array<Sis_Veicolo_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Veicolo_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Veicolo_Avg_Fields = {
  __typename?: 'sis_veicolo_avg_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Float']>;
  alimentazione_id?: Maybe<Scalars['Float']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  destinazione_decisione_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nazione_id?: Maybe<Scalars['Float']>;
  proprietario_giuridico_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  retrovisore_esterno_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  tipologia_veicolo_id?: Maybe<Scalars['Float']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Float']>;
  uso_veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Avg_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.veicolo". All fields are combined with a logical 'AND'. */
export type Sis_Veicolo_Bool_Exp = {
  _and?: Maybe<Array<Sis_Veicolo_Bool_Exp>>;
  _not?: Maybe<Sis_Veicolo_Bool_Exp>;
  _or?: Maybe<Array<Sis_Veicolo_Bool_Exp>>;
  accertamenti_abs?: Maybe<Boolean_Comparison_Exp>;
  accertamenti_attivazione?: Maybe<Boolean_Comparison_Exp>;
  accertamenti_uso_casco_altro_note?: Maybe<String_Comparison_Exp>;
  accertamenti_uso_casco_sinoaltro?: Maybe<_Sinoaltro_Bool_Exp>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Int_Comparison_Exp>;
  accertamenti_uso_cintura_altro_note?: Maybe<String_Comparison_Exp>;
  accertamenti_uso_cintura_sinoaltro?: Maybe<_Sinoaltro_Bool_Exp>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Int_Comparison_Exp>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<String_Comparison_Exp>;
  accertamento_uso_antiabbandono_sinoaltro?: Maybe<_Sinoaltro_Bool_Exp>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Int_Comparison_Exp>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<String_Comparison_Exp>;
  accertamento_uso_sistema_bambini_sinoaltro?: Maybe<_Sinoaltro_Bool_Exp>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Int_Comparison_Exp>;
  alimentazione?: Maybe<Sis__Alimentazione_Veicolo_Bool_Exp>;
  alimentazione_id?: Maybe<Int_Comparison_Exp>;
  alimentazione_note?: Maybe<String_Comparison_Exp>;
  anno_prima_immatricolazione?: Maybe<String_Comparison_Exp>;
  assicurazione_agenzia?: Maybe<String_Comparison_Exp>;
  assicurazione_altro_note?: Maybe<String_Comparison_Exp>;
  assicurazione_data_fine?: Maybe<Timestamp_Comparison_Exp>;
  assicurazione_data_inizio?: Maybe<Timestamp_Comparison_Exp>;
  assicurazione_polizza?: Maybe<String_Comparison_Exp>;
  assicurazione_sinoaltro?: Maybe<_Sinoaltro_Bool_Exp>;
  assicurazione_sinoaltro_id?: Maybe<Int_Comparison_Exp>;
  assicurazione_societa?: Maybe<String_Comparison_Exp>;
  carta_circolazione?: Maybe<String_Comparison_Exp>;
  carta_circolazione_altro_note?: Maybe<String_Comparison_Exp>;
  carta_circolazione_data?: Maybe<Timestamp_Comparison_Exp>;
  carta_circolazione_ddt?: Maybe<String_Comparison_Exp>;
  carta_circolazione_ril?: Maybe<String_Comparison_Exp>;
  carta_circolazione_sinoaltro?: Maybe<_Sinoaltro_Bool_Exp>;
  carta_circolazione_sinoaltro_id?: Maybe<Int_Comparison_Exp>;
  cilindrata?: Maybe<String_Comparison_Exp>;
  codice_merce_pericolasa?: Maybe<String_Comparison_Exp>;
  codice_pericolo?: Maybe<String_Comparison_Exp>;
  colore_carrozzeria?: Maybe<String_Comparison_Exp>;
  conducente?: Maybe<Sis_Conducente_Bool_Exp>;
  conducente_id?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  danni_del_veicolo_a_cose?: Maybe<String_Comparison_Exp>;
  danni_del_veicolo_a_cose_rilievo?: Maybe<Boolean_Comparison_Exp>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<String_Comparison_Exp>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<String_Comparison_Exp>;
  danni_del_veicolo_a_cose_rilievo_difensore?: Maybe<Boolean_Comparison_Exp>;
  danni_del_veicolo_a_cose_rilievo_presente?: Maybe<Boolean_Comparison_Exp>;
  danni_su_veicolo_constatati?: Maybe<String_Comparison_Exp>;
  data_ultima_revisione?: Maybe<Timestamp_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  destinazione_data?: Maybe<Timestamp_Comparison_Exp>;
  destinazione_decisione?: Maybe<Sis__Destinazione_Decisione_Bool_Exp>;
  destinazione_decisione_altro?: Maybe<String_Comparison_Exp>;
  destinazione_decisione_id?: Maybe<Int_Comparison_Exp>;
  destinazione_persona_affidataria?: Maybe<String_Comparison_Exp>;
  destinazione_ritirato?: Maybe<Boolean_Comparison_Exp>;
  destinazione_sequestrato?: Maybe<Boolean_Comparison_Exp>;
  destinazione_trasportato_presso?: Maybe<String_Comparison_Exp>;
  dispositivi_acustici?: Maybe<String_Comparison_Exp>;
  dotazione_airbag?: Maybe<Boolean_Comparison_Exp>;
  dotazione_cinture?: Maybe<Boolean_Comparison_Exp>;
  generale?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  impianto_illuminazione?: Maybe<String_Comparison_Exp>;
  indicatori_direzione?: Maybe<String_Comparison_Exp>;
  km_percorsi?: Maybe<String_Comparison_Exp>;
  locatario?: Maybe<Sis_Locatario_Bool_Exp>;
  locatario_id?: Maybe<Int_Comparison_Exp>;
  luci_arresto?: Maybe<String_Comparison_Exp>;
  marca?: Maybe<String_Comparison_Exp>;
  marcia_inserita?: Maybe<String_Comparison_Exp>;
  modello?: Maybe<String_Comparison_Exp>;
  nazione?: Maybe<_Nazione_Bool_Exp>;
  nazione_id?: Maybe<Int_Comparison_Exp>;
  p_c?: Maybe<String_Comparison_Exp>;
  p_u?: Maybe<String_Comparison_Exp>;
  peso?: Maybe<String_Comparison_Exp>;
  posti?: Maybe<String_Comparison_Exp>;
  proprietario?: Maybe<Sis_Proprietario_Bool_Exp>;
  proprietario_giuridico?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
  proprietario_giuridico_id?: Maybe<Int_Comparison_Exp>;
  proprietario_id?: Maybe<Int_Comparison_Exp>;
  retrovisore_esterno?: Maybe<Sis__Retrovisore_Esterno_Bool_Exp>;
  retrovisore_esterno_id?: Maybe<Int_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  stato?: Maybe<Sis__Stato_Veicolo_Bool_Exp>;
  stato_id?: Maybe<Int_Comparison_Exp>;
  stato_pneumatici?: Maybe<String_Comparison_Exp>;
  tara?: Maybe<String_Comparison_Exp>;
  targa?: Maybe<String_Comparison_Exp>;
  telaio?: Maybe<String_Comparison_Exp>;
  tipologia_veicolo?: Maybe<Sis__Tipologia_Veicolo_Bool_Exp>;
  tipologia_veicolo_id?: Maybe<Int_Comparison_Exp>;
  tipologia_veicolo_note?: Maybe<String_Comparison_Exp>;
  traccia_suolo?: Maybe<Boolean_Comparison_Exp>;
  traccia_suolo_abs?: Maybe<Boolean_Comparison_Exp>;
  traccia_suolo_frenata_tipologia?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Int_Comparison_Exp>;
  traccia_suolo_metri?: Maybe<String_Comparison_Exp>;
  traccia_suolo_terminazione?: Maybe<Sis__Traccia_Suolo_Terminazione_Bool_Exp>;
  traccia_suolo_terminazione_andamento?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Int_Comparison_Exp>;
  traccia_suolo_terminazione_forma?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>;
  traccia_suolo_terminazione_forma_id?: Maybe<Int_Comparison_Exp>;
  traccia_suolo_terminazione_id?: Maybe<Int_Comparison_Exp>;
  traccia_suolo_terminazione_intensita?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Int_Comparison_Exp>;
  traccia_suolo_terminazione_metri?: Maybe<String_Comparison_Exp>;
  traccia_suolo_terminazione_tipologia?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Int_Comparison_Exp>;
  traccia_suolo_tipo_id?: Maybe<Int_Comparison_Exp>;
  traccia_suolo_tipologia?: Maybe<Sis__Traccia_Suolo_Tipologia_Bool_Exp>;
  trasportati?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  uso_veicolo?: Maybe<Sis__Uso_Veicolo_Bool_Exp>;
  uso_veicolo_id?: Maybe<Int_Comparison_Exp>;
  velocita_presunta?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.veicolo" */
export enum Sis_Veicolo_Constraint {
  /** unique or primary key constraint */
  VeicoloPkey = 'veicolo_pkey'
}

/** input type for incrementing numeric columns in table "sis.veicolo" */
export type Sis_Veicolo_Inc_Input = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Int']>;
  alimentazione_id?: Maybe<Scalars['Int']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  conducente_id?: Maybe<Scalars['Int']>;
  destinazione_decisione_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  locatario_id?: Maybe<Scalars['Int']>;
  nazione_id?: Maybe<Scalars['Int']>;
  proprietario_giuridico_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  retrovisore_esterno_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  tipologia_veicolo_id?: Maybe<Scalars['Int']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Int']>;
  uso_veicolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.veicolo" */
export type Sis_Veicolo_Insert_Input = {
  accertamenti_abs?: Maybe<Scalars['Boolean']>;
  accertamenti_attivazione?: Maybe<Scalars['Boolean']>;
  accertamenti_uso_casco_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_casco_sinoaltro?: Maybe<_Sinoaltro_Obj_Rel_Insert_Input>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamenti_uso_cintura_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_cintura_sinoaltro?: Maybe<_Sinoaltro_Obj_Rel_Insert_Input>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_antiabbandono_sinoaltro?: Maybe<_Sinoaltro_Obj_Rel_Insert_Input>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_sistema_bambini_sinoaltro?: Maybe<_Sinoaltro_Obj_Rel_Insert_Input>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Int']>;
  alimentazione?: Maybe<Sis__Alimentazione_Veicolo_Obj_Rel_Insert_Input>;
  alimentazione_id?: Maybe<Scalars['Int']>;
  alimentazione_note?: Maybe<Scalars['String']>;
  anno_prima_immatricolazione?: Maybe<Scalars['String']>;
  assicurazione_agenzia?: Maybe<Scalars['String']>;
  assicurazione_altro_note?: Maybe<Scalars['String']>;
  assicurazione_data_fine?: Maybe<Scalars['timestamp']>;
  assicurazione_data_inizio?: Maybe<Scalars['timestamp']>;
  assicurazione_polizza?: Maybe<Scalars['String']>;
  assicurazione_sinoaltro?: Maybe<_Sinoaltro_Obj_Rel_Insert_Input>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  assicurazione_societa?: Maybe<Scalars['String']>;
  carta_circolazione?: Maybe<Scalars['String']>;
  carta_circolazione_altro_note?: Maybe<Scalars['String']>;
  carta_circolazione_data?: Maybe<Scalars['timestamp']>;
  carta_circolazione_ddt?: Maybe<Scalars['String']>;
  carta_circolazione_ril?: Maybe<Scalars['String']>;
  carta_circolazione_sinoaltro?: Maybe<_Sinoaltro_Obj_Rel_Insert_Input>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  cilindrata?: Maybe<Scalars['String']>;
  codice_merce_pericolasa?: Maybe<Scalars['String']>;
  codice_pericolo?: Maybe<Scalars['String']>;
  colore_carrozzeria?: Maybe<Scalars['String']>;
  conducente?: Maybe<Sis_Conducente_Obj_Rel_Insert_Input>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  danni_del_veicolo_a_cose?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo?: Maybe<Scalars['Boolean']>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_difensore?: Maybe<Scalars['Boolean']>;
  danni_del_veicolo_a_cose_rilievo_presente?: Maybe<Scalars['Boolean']>;
  danni_su_veicolo_constatati?: Maybe<Scalars['String']>;
  data_ultima_revisione?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  destinazione_data?: Maybe<Scalars['timestamp']>;
  destinazione_decisione?: Maybe<Sis__Destinazione_Decisione_Obj_Rel_Insert_Input>;
  destinazione_decisione_altro?: Maybe<Scalars['String']>;
  destinazione_decisione_id?: Maybe<Scalars['Int']>;
  destinazione_persona_affidataria?: Maybe<Scalars['String']>;
  destinazione_ritirato?: Maybe<Scalars['Boolean']>;
  destinazione_sequestrato?: Maybe<Scalars['Boolean']>;
  destinazione_trasportato_presso?: Maybe<Scalars['String']>;
  dispositivi_acustici?: Maybe<Scalars['String']>;
  dotazione_airbag?: Maybe<Scalars['Boolean']>;
  dotazione_cinture?: Maybe<Scalars['Boolean']>;
  generale?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  impianto_illuminazione?: Maybe<Scalars['String']>;
  indicatori_direzione?: Maybe<Scalars['String']>;
  km_percorsi?: Maybe<Scalars['String']>;
  locatario?: Maybe<Sis_Locatario_Obj_Rel_Insert_Input>;
  locatario_id?: Maybe<Scalars['Int']>;
  luci_arresto?: Maybe<Scalars['String']>;
  marca?: Maybe<Scalars['String']>;
  marcia_inserita?: Maybe<Scalars['String']>;
  modello?: Maybe<Scalars['String']>;
  nazione?: Maybe<_Nazione_Obj_Rel_Insert_Input>;
  nazione_id?: Maybe<Scalars['Int']>;
  p_c?: Maybe<Scalars['String']>;
  p_u?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['String']>;
  posti?: Maybe<Scalars['String']>;
  proprietario?: Maybe<Sis_Proprietario_Obj_Rel_Insert_Input>;
  proprietario_giuridico?: Maybe<Sis_Proprietario_Giuridico_Obj_Rel_Insert_Input>;
  proprietario_giuridico_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  retrovisore_esterno?: Maybe<Sis__Retrovisore_Esterno_Obj_Rel_Insert_Input>;
  retrovisore_esterno_id?: Maybe<Scalars['Int']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  stato?: Maybe<Sis__Stato_Veicolo_Obj_Rel_Insert_Input>;
  stato_id?: Maybe<Scalars['Int']>;
  stato_pneumatici?: Maybe<Scalars['String']>;
  tara?: Maybe<Scalars['String']>;
  targa?: Maybe<Scalars['String']>;
  telaio?: Maybe<Scalars['String']>;
  tipologia_veicolo?: Maybe<Sis__Tipologia_Veicolo_Obj_Rel_Insert_Input>;
  tipologia_veicolo_id?: Maybe<Scalars['Int']>;
  tipologia_veicolo_note?: Maybe<Scalars['String']>;
  traccia_suolo?: Maybe<Scalars['Boolean']>;
  traccia_suolo_abs?: Maybe<Scalars['Boolean']>;
  traccia_suolo_frenata_tipologia?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Obj_Rel_Insert_Input>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione?: Maybe<Sis__Traccia_Suolo_Terminazione_Obj_Rel_Insert_Input>;
  traccia_suolo_terminazione_andamento?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Obj_Rel_Insert_Input>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_forma?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Obj_Rel_Insert_Input>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_intensita?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Obj_Rel_Insert_Input>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione_tipologia?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Obj_Rel_Insert_Input>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipologia?: Maybe<Sis__Traccia_Suolo_Tipologia_Obj_Rel_Insert_Input>;
  trasportati?: Maybe<Sis_Trasportati_Veicolo_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uso_veicolo?: Maybe<Sis__Uso_Veicolo_Obj_Rel_Insert_Input>;
  uso_veicolo_id?: Maybe<Scalars['Int']>;
  velocita_presunta?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Sis_Veicolo_Max_Fields = {
  __typename?: 'sis_veicolo_max_fields';
  accertamenti_uso_casco_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamenti_uso_cintura_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Int']>;
  alimentazione_id?: Maybe<Scalars['Int']>;
  alimentazione_note?: Maybe<Scalars['String']>;
  anno_prima_immatricolazione?: Maybe<Scalars['String']>;
  assicurazione_agenzia?: Maybe<Scalars['String']>;
  assicurazione_altro_note?: Maybe<Scalars['String']>;
  assicurazione_data_fine?: Maybe<Scalars['timestamp']>;
  assicurazione_data_inizio?: Maybe<Scalars['timestamp']>;
  assicurazione_polizza?: Maybe<Scalars['String']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  assicurazione_societa?: Maybe<Scalars['String']>;
  carta_circolazione?: Maybe<Scalars['String']>;
  carta_circolazione_altro_note?: Maybe<Scalars['String']>;
  carta_circolazione_data?: Maybe<Scalars['timestamp']>;
  carta_circolazione_ddt?: Maybe<Scalars['String']>;
  carta_circolazione_ril?: Maybe<Scalars['String']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  cilindrata?: Maybe<Scalars['String']>;
  codice_merce_pericolasa?: Maybe<Scalars['String']>;
  codice_pericolo?: Maybe<Scalars['String']>;
  colore_carrozzeria?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  danni_del_veicolo_a_cose?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Scalars['String']>;
  danni_su_veicolo_constatati?: Maybe<Scalars['String']>;
  data_ultima_revisione?: Maybe<Scalars['timestamp']>;
  destinazione_data?: Maybe<Scalars['timestamp']>;
  destinazione_decisione_altro?: Maybe<Scalars['String']>;
  destinazione_decisione_id?: Maybe<Scalars['Int']>;
  destinazione_persona_affidataria?: Maybe<Scalars['String']>;
  destinazione_trasportato_presso?: Maybe<Scalars['String']>;
  dispositivi_acustici?: Maybe<Scalars['String']>;
  generale?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  impianto_illuminazione?: Maybe<Scalars['String']>;
  indicatori_direzione?: Maybe<Scalars['String']>;
  km_percorsi?: Maybe<Scalars['String']>;
  locatario_id?: Maybe<Scalars['Int']>;
  luci_arresto?: Maybe<Scalars['String']>;
  marca?: Maybe<Scalars['String']>;
  marcia_inserita?: Maybe<Scalars['String']>;
  modello?: Maybe<Scalars['String']>;
  nazione_id?: Maybe<Scalars['Int']>;
  p_c?: Maybe<Scalars['String']>;
  p_u?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['String']>;
  posti?: Maybe<Scalars['String']>;
  proprietario_giuridico_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  retrovisore_esterno_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  stato_pneumatici?: Maybe<Scalars['String']>;
  tara?: Maybe<Scalars['String']>;
  targa?: Maybe<Scalars['String']>;
  telaio?: Maybe<Scalars['String']>;
  tipologia_veicolo_id?: Maybe<Scalars['Int']>;
  tipologia_veicolo_note?: Maybe<Scalars['String']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uso_veicolo_id?: Maybe<Scalars['Int']>;
  velocita_presunta?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Max_Order_By = {
  accertamenti_uso_casco_altro_note?: Maybe<Order_By>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_altro_note?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  alimentazione_note?: Maybe<Order_By>;
  anno_prima_immatricolazione?: Maybe<Order_By>;
  assicurazione_agenzia?: Maybe<Order_By>;
  assicurazione_altro_note?: Maybe<Order_By>;
  assicurazione_data_fine?: Maybe<Order_By>;
  assicurazione_data_inizio?: Maybe<Order_By>;
  assicurazione_polizza?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  assicurazione_societa?: Maybe<Order_By>;
  carta_circolazione?: Maybe<Order_By>;
  carta_circolazione_altro_note?: Maybe<Order_By>;
  carta_circolazione_data?: Maybe<Order_By>;
  carta_circolazione_ddt?: Maybe<Order_By>;
  carta_circolazione_ril?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  cilindrata?: Maybe<Order_By>;
  codice_merce_pericolasa?: Maybe<Order_By>;
  codice_pericolo?: Maybe<Order_By>;
  colore_carrozzeria?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  danni_del_veicolo_a_cose?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Order_By>;
  danni_su_veicolo_constatati?: Maybe<Order_By>;
  data_ultima_revisione?: Maybe<Order_By>;
  destinazione_data?: Maybe<Order_By>;
  destinazione_decisione_altro?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  destinazione_persona_affidataria?: Maybe<Order_By>;
  destinazione_trasportato_presso?: Maybe<Order_By>;
  dispositivi_acustici?: Maybe<Order_By>;
  generale?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_illuminazione?: Maybe<Order_By>;
  indicatori_direzione?: Maybe<Order_By>;
  km_percorsi?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  luci_arresto?: Maybe<Order_By>;
  marca?: Maybe<Order_By>;
  marcia_inserita?: Maybe<Order_By>;
  modello?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  p_c?: Maybe<Order_By>;
  p_u?: Maybe<Order_By>;
  peso?: Maybe<Order_By>;
  posti?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  stato_pneumatici?: Maybe<Order_By>;
  tara?: Maybe<Order_By>;
  targa?: Maybe<Order_By>;
  telaio?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  tipologia_veicolo_note?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_metri?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_metri?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
  velocita_presunta?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Veicolo_Min_Fields = {
  __typename?: 'sis_veicolo_min_fields';
  accertamenti_uso_casco_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamenti_uso_cintura_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Int']>;
  alimentazione_id?: Maybe<Scalars['Int']>;
  alimentazione_note?: Maybe<Scalars['String']>;
  anno_prima_immatricolazione?: Maybe<Scalars['String']>;
  assicurazione_agenzia?: Maybe<Scalars['String']>;
  assicurazione_altro_note?: Maybe<Scalars['String']>;
  assicurazione_data_fine?: Maybe<Scalars['timestamp']>;
  assicurazione_data_inizio?: Maybe<Scalars['timestamp']>;
  assicurazione_polizza?: Maybe<Scalars['String']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  assicurazione_societa?: Maybe<Scalars['String']>;
  carta_circolazione?: Maybe<Scalars['String']>;
  carta_circolazione_altro_note?: Maybe<Scalars['String']>;
  carta_circolazione_data?: Maybe<Scalars['timestamp']>;
  carta_circolazione_ddt?: Maybe<Scalars['String']>;
  carta_circolazione_ril?: Maybe<Scalars['String']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  cilindrata?: Maybe<Scalars['String']>;
  codice_merce_pericolasa?: Maybe<Scalars['String']>;
  codice_pericolo?: Maybe<Scalars['String']>;
  colore_carrozzeria?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  danni_del_veicolo_a_cose?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Scalars['String']>;
  danni_su_veicolo_constatati?: Maybe<Scalars['String']>;
  data_ultima_revisione?: Maybe<Scalars['timestamp']>;
  destinazione_data?: Maybe<Scalars['timestamp']>;
  destinazione_decisione_altro?: Maybe<Scalars['String']>;
  destinazione_decisione_id?: Maybe<Scalars['Int']>;
  destinazione_persona_affidataria?: Maybe<Scalars['String']>;
  destinazione_trasportato_presso?: Maybe<Scalars['String']>;
  dispositivi_acustici?: Maybe<Scalars['String']>;
  generale?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  impianto_illuminazione?: Maybe<Scalars['String']>;
  indicatori_direzione?: Maybe<Scalars['String']>;
  km_percorsi?: Maybe<Scalars['String']>;
  locatario_id?: Maybe<Scalars['Int']>;
  luci_arresto?: Maybe<Scalars['String']>;
  marca?: Maybe<Scalars['String']>;
  marcia_inserita?: Maybe<Scalars['String']>;
  modello?: Maybe<Scalars['String']>;
  nazione_id?: Maybe<Scalars['Int']>;
  p_c?: Maybe<Scalars['String']>;
  p_u?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['String']>;
  posti?: Maybe<Scalars['String']>;
  proprietario_giuridico_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  retrovisore_esterno_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  stato_pneumatici?: Maybe<Scalars['String']>;
  tara?: Maybe<Scalars['String']>;
  targa?: Maybe<Scalars['String']>;
  telaio?: Maybe<Scalars['String']>;
  tipologia_veicolo_id?: Maybe<Scalars['Int']>;
  tipologia_veicolo_note?: Maybe<Scalars['String']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uso_veicolo_id?: Maybe<Scalars['Int']>;
  velocita_presunta?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Min_Order_By = {
  accertamenti_uso_casco_altro_note?: Maybe<Order_By>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_altro_note?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  alimentazione_note?: Maybe<Order_By>;
  anno_prima_immatricolazione?: Maybe<Order_By>;
  assicurazione_agenzia?: Maybe<Order_By>;
  assicurazione_altro_note?: Maybe<Order_By>;
  assicurazione_data_fine?: Maybe<Order_By>;
  assicurazione_data_inizio?: Maybe<Order_By>;
  assicurazione_polizza?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  assicurazione_societa?: Maybe<Order_By>;
  carta_circolazione?: Maybe<Order_By>;
  carta_circolazione_altro_note?: Maybe<Order_By>;
  carta_circolazione_data?: Maybe<Order_By>;
  carta_circolazione_ddt?: Maybe<Order_By>;
  carta_circolazione_ril?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  cilindrata?: Maybe<Order_By>;
  codice_merce_pericolasa?: Maybe<Order_By>;
  codice_pericolo?: Maybe<Order_By>;
  colore_carrozzeria?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  danni_del_veicolo_a_cose?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Order_By>;
  danni_su_veicolo_constatati?: Maybe<Order_By>;
  data_ultima_revisione?: Maybe<Order_By>;
  destinazione_data?: Maybe<Order_By>;
  destinazione_decisione_altro?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  destinazione_persona_affidataria?: Maybe<Order_By>;
  destinazione_trasportato_presso?: Maybe<Order_By>;
  dispositivi_acustici?: Maybe<Order_By>;
  generale?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_illuminazione?: Maybe<Order_By>;
  indicatori_direzione?: Maybe<Order_By>;
  km_percorsi?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  luci_arresto?: Maybe<Order_By>;
  marca?: Maybe<Order_By>;
  marcia_inserita?: Maybe<Order_By>;
  modello?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  p_c?: Maybe<Order_By>;
  p_u?: Maybe<Order_By>;
  peso?: Maybe<Order_By>;
  posti?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  stato_pneumatici?: Maybe<Order_By>;
  tara?: Maybe<Order_By>;
  targa?: Maybe<Order_By>;
  telaio?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  tipologia_veicolo_note?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_metri?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_metri?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
  velocita_presunta?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.veicolo" */
export type Sis_Veicolo_Mutation_Response = {
  __typename?: 'sis_veicolo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Veicolo>;
};

/** input type for inserting object relation for remote table "sis.veicolo" */
export type Sis_Veicolo_Obj_Rel_Insert_Input = {
  data: Sis_Veicolo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Veicolo_On_Conflict>;
};

/** on_conflict condition type for table "sis.veicolo" */
export type Sis_Veicolo_On_Conflict = {
  constraint: Sis_Veicolo_Constraint;
  update_columns?: Array<Sis_Veicolo_Update_Column>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.veicolo". */
export type Sis_Veicolo_Order_By = {
  accertamenti_abs?: Maybe<Order_By>;
  accertamenti_attivazione?: Maybe<Order_By>;
  accertamenti_uso_casco_altro_note?: Maybe<Order_By>;
  accertamenti_uso_casco_sinoaltro?: Maybe<_Sinoaltro_Order_By>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_altro_note?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro?: Maybe<_Sinoaltro_Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro?: Maybe<_Sinoaltro_Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro?: Maybe<_Sinoaltro_Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione?: Maybe<Sis__Alimentazione_Veicolo_Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  alimentazione_note?: Maybe<Order_By>;
  anno_prima_immatricolazione?: Maybe<Order_By>;
  assicurazione_agenzia?: Maybe<Order_By>;
  assicurazione_altro_note?: Maybe<Order_By>;
  assicurazione_data_fine?: Maybe<Order_By>;
  assicurazione_data_inizio?: Maybe<Order_By>;
  assicurazione_polizza?: Maybe<Order_By>;
  assicurazione_sinoaltro?: Maybe<_Sinoaltro_Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  assicurazione_societa?: Maybe<Order_By>;
  carta_circolazione?: Maybe<Order_By>;
  carta_circolazione_altro_note?: Maybe<Order_By>;
  carta_circolazione_data?: Maybe<Order_By>;
  carta_circolazione_ddt?: Maybe<Order_By>;
  carta_circolazione_ril?: Maybe<Order_By>;
  carta_circolazione_sinoaltro?: Maybe<_Sinoaltro_Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  cilindrata?: Maybe<Order_By>;
  codice_merce_pericolasa?: Maybe<Order_By>;
  codice_pericolo?: Maybe<Order_By>;
  colore_carrozzeria?: Maybe<Order_By>;
  conducente?: Maybe<Sis_Conducente_Order_By>;
  conducente_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  danni_del_veicolo_a_cose?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_difensore?: Maybe<Order_By>;
  danni_del_veicolo_a_cose_rilievo_presente?: Maybe<Order_By>;
  danni_su_veicolo_constatati?: Maybe<Order_By>;
  data_ultima_revisione?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  destinazione_data?: Maybe<Order_By>;
  destinazione_decisione?: Maybe<Sis__Destinazione_Decisione_Order_By>;
  destinazione_decisione_altro?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  destinazione_persona_affidataria?: Maybe<Order_By>;
  destinazione_ritirato?: Maybe<Order_By>;
  destinazione_sequestrato?: Maybe<Order_By>;
  destinazione_trasportato_presso?: Maybe<Order_By>;
  dispositivi_acustici?: Maybe<Order_By>;
  dotazione_airbag?: Maybe<Order_By>;
  dotazione_cinture?: Maybe<Order_By>;
  generale?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  impianto_illuminazione?: Maybe<Order_By>;
  indicatori_direzione?: Maybe<Order_By>;
  km_percorsi?: Maybe<Order_By>;
  locatario?: Maybe<Sis_Locatario_Order_By>;
  locatario_id?: Maybe<Order_By>;
  luci_arresto?: Maybe<Order_By>;
  marca?: Maybe<Order_By>;
  marcia_inserita?: Maybe<Order_By>;
  modello?: Maybe<Order_By>;
  nazione?: Maybe<_Nazione_Order_By>;
  nazione_id?: Maybe<Order_By>;
  p_c?: Maybe<Order_By>;
  p_u?: Maybe<Order_By>;
  peso?: Maybe<Order_By>;
  posti?: Maybe<Order_By>;
  proprietario?: Maybe<Sis_Proprietario_Order_By>;
  proprietario_giuridico?: Maybe<Sis_Proprietario_Giuridico_Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno?: Maybe<Sis__Retrovisore_Esterno_Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  stato?: Maybe<Sis__Stato_Veicolo_Order_By>;
  stato_id?: Maybe<Order_By>;
  stato_pneumatici?: Maybe<Order_By>;
  tara?: Maybe<Order_By>;
  targa?: Maybe<Order_By>;
  telaio?: Maybe<Order_By>;
  tipologia_veicolo?: Maybe<Sis__Tipologia_Veicolo_Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  tipologia_veicolo_note?: Maybe<Order_By>;
  traccia_suolo?: Maybe<Order_By>;
  traccia_suolo_abs?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_metri?: Maybe<Order_By>;
  traccia_suolo_terminazione?: Maybe<Sis__Traccia_Suolo_Terminazione_Order_By>;
  traccia_suolo_terminazione_andamento?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_metri?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  traccia_suolo_tipologia?: Maybe<Sis__Traccia_Suolo_Tipologia_Order_By>;
  trasportati_aggregate?: Maybe<Sis_Trasportati_Veicolo_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  uso_veicolo?: Maybe<Sis__Uso_Veicolo_Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
  velocita_presunta?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_veicolo */
export type Sis_Veicolo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.veicolo" */
export enum Sis_Veicolo_Select_Column {
  /** column name */
  AccertamentiAbs = 'accertamenti_abs',
  /** column name */
  AccertamentiAttivazione = 'accertamenti_attivazione',
  /** column name */
  AccertamentiUsoCascoAltroNote = 'accertamenti_uso_casco_altro_note',
  /** column name */
  AccertamentiUsoCascoSinoaltroId = 'accertamenti_uso_casco_sinoaltro_id',
  /** column name */
  AccertamentiUsoCinturaAltroNote = 'accertamenti_uso_cintura_altro_note',
  /** column name */
  AccertamentiUsoCinturaSinoaltroId = 'accertamenti_uso_cintura_sinoaltro_id',
  /** column name */
  AccertamentoUsoAntiabbandonoAltroNote = 'accertamento_uso_antiabbandono_altro_note',
  /** column name */
  AccertamentoUsoAntiabbandonoSinoaltroId = 'accertamento_uso_antiabbandono_sinoaltro_id',
  /** column name */
  AccertamentoUsoSistemaBambiniAltroNote = 'accertamento_uso_sistema_bambini_altro_note',
  /** column name */
  AccertamentoUsoSistemaBambiniSinoaltroId = 'accertamento_uso_sistema_bambini_sinoaltro_id',
  /** column name */
  AlimentazioneId = 'alimentazione_id',
  /** column name */
  AlimentazioneNote = 'alimentazione_note',
  /** column name */
  AnnoPrimaImmatricolazione = 'anno_prima_immatricolazione',
  /** column name */
  AssicurazioneAgenzia = 'assicurazione_agenzia',
  /** column name */
  AssicurazioneAltroNote = 'assicurazione_altro_note',
  /** column name */
  AssicurazioneDataFine = 'assicurazione_data_fine',
  /** column name */
  AssicurazioneDataInizio = 'assicurazione_data_inizio',
  /** column name */
  AssicurazionePolizza = 'assicurazione_polizza',
  /** column name */
  AssicurazioneSinoaltroId = 'assicurazione_sinoaltro_id',
  /** column name */
  AssicurazioneSocieta = 'assicurazione_societa',
  /** column name */
  CartaCircolazione = 'carta_circolazione',
  /** column name */
  CartaCircolazioneAltroNote = 'carta_circolazione_altro_note',
  /** column name */
  CartaCircolazioneData = 'carta_circolazione_data',
  /** column name */
  CartaCircolazioneDdt = 'carta_circolazione_ddt',
  /** column name */
  CartaCircolazioneRil = 'carta_circolazione_ril',
  /** column name */
  CartaCircolazioneSinoaltroId = 'carta_circolazione_sinoaltro_id',
  /** column name */
  Cilindrata = 'cilindrata',
  /** column name */
  CodiceMercePericolasa = 'codice_merce_pericolasa',
  /** column name */
  CodicePericolo = 'codice_pericolo',
  /** column name */
  ColoreCarrozzeria = 'colore_carrozzeria',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DanniDelVeicoloACose = 'danni_del_veicolo_a_cose',
  /** column name */
  DanniDelVeicoloACoseRilievo = 'danni_del_veicolo_a_cose_rilievo',
  /** column name */
  DanniDelVeicoloACoseRilievoDataFine = 'danni_del_veicolo_a_cose_rilievo_data_fine',
  /** column name */
  DanniDelVeicoloACoseRilievoDataInizio = 'danni_del_veicolo_a_cose_rilievo_data_inizio',
  /** column name */
  DanniDelVeicoloACoseRilievoDifensore = 'danni_del_veicolo_a_cose_rilievo_difensore',
  /** column name */
  DanniDelVeicoloACoseRilievoPresente = 'danni_del_veicolo_a_cose_rilievo_presente',
  /** column name */
  DanniSuVeicoloConstatati = 'danni_su_veicolo_constatati',
  /** column name */
  DataUltimaRevisione = 'data_ultima_revisione',
  /** column name */
  Delete = 'delete',
  /** column name */
  DestinazioneData = 'destinazione_data',
  /** column name */
  DestinazioneDecisioneAltro = 'destinazione_decisione_altro',
  /** column name */
  DestinazioneDecisioneId = 'destinazione_decisione_id',
  /** column name */
  DestinazionePersonaAffidataria = 'destinazione_persona_affidataria',
  /** column name */
  DestinazioneRitirato = 'destinazione_ritirato',
  /** column name */
  DestinazioneSequestrato = 'destinazione_sequestrato',
  /** column name */
  DestinazioneTrasportatoPresso = 'destinazione_trasportato_presso',
  /** column name */
  DispositiviAcustici = 'dispositivi_acustici',
  /** column name */
  DotazioneAirbag = 'dotazione_airbag',
  /** column name */
  DotazioneCinture = 'dotazione_cinture',
  /** column name */
  Generale = 'generale',
  /** column name */
  Id = 'id',
  /** column name */
  ImpiantoIlluminazione = 'impianto_illuminazione',
  /** column name */
  IndicatoriDirezione = 'indicatori_direzione',
  /** column name */
  KmPercorsi = 'km_percorsi',
  /** column name */
  LocatarioId = 'locatario_id',
  /** column name */
  LuciArresto = 'luci_arresto',
  /** column name */
  Marca = 'marca',
  /** column name */
  MarciaInserita = 'marcia_inserita',
  /** column name */
  Modello = 'modello',
  /** column name */
  NazioneId = 'nazione_id',
  /** column name */
  PC = 'p_c',
  /** column name */
  PU = 'p_u',
  /** column name */
  Peso = 'peso',
  /** column name */
  Posti = 'posti',
  /** column name */
  ProprietarioGiuridicoId = 'proprietario_giuridico_id',
  /** column name */
  ProprietarioId = 'proprietario_id',
  /** column name */
  RetrovisoreEsternoId = 'retrovisore_esterno_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  StatoId = 'stato_id',
  /** column name */
  StatoPneumatici = 'stato_pneumatici',
  /** column name */
  Tara = 'tara',
  /** column name */
  Targa = 'targa',
  /** column name */
  Telaio = 'telaio',
  /** column name */
  TipologiaVeicoloId = 'tipologia_veicolo_id',
  /** column name */
  TipologiaVeicoloNote = 'tipologia_veicolo_note',
  /** column name */
  TracciaSuolo = 'traccia_suolo',
  /** column name */
  TracciaSuoloAbs = 'traccia_suolo_abs',
  /** column name */
  TracciaSuoloFrenataTipologiaId = 'traccia_suolo_frenata_tipologia_id',
  /** column name */
  TracciaSuoloMetri = 'traccia_suolo_metri',
  /** column name */
  TracciaSuoloTerminazioneAndamentoId = 'traccia_suolo_terminazione_andamento_id',
  /** column name */
  TracciaSuoloTerminazioneFormaId = 'traccia_suolo_terminazione_forma_id',
  /** column name */
  TracciaSuoloTerminazioneId = 'traccia_suolo_terminazione_id',
  /** column name */
  TracciaSuoloTerminazioneIntensitaId = 'traccia_suolo_terminazione_intensita_id',
  /** column name */
  TracciaSuoloTerminazioneMetri = 'traccia_suolo_terminazione_metri',
  /** column name */
  TracciaSuoloTerminazioneTipologiaId = 'traccia_suolo_terminazione_tipologia_id',
  /** column name */
  TracciaSuoloTipoId = 'traccia_suolo_tipo_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UsoVeicoloId = 'uso_veicolo_id',
  /** column name */
  VelocitaPresunta = 'velocita_presunta'
}

/** input type for updating data in table "sis.veicolo" */
export type Sis_Veicolo_Set_Input = {
  accertamenti_abs?: Maybe<Scalars['Boolean']>;
  accertamenti_attivazione?: Maybe<Scalars['Boolean']>;
  accertamenti_uso_casco_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamenti_uso_cintura_altro_note?: Maybe<Scalars['String']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_antiabbandono_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_sistema_bambini_altro_note?: Maybe<Scalars['String']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Int']>;
  alimentazione_id?: Maybe<Scalars['Int']>;
  alimentazione_note?: Maybe<Scalars['String']>;
  anno_prima_immatricolazione?: Maybe<Scalars['String']>;
  assicurazione_agenzia?: Maybe<Scalars['String']>;
  assicurazione_altro_note?: Maybe<Scalars['String']>;
  assicurazione_data_fine?: Maybe<Scalars['timestamp']>;
  assicurazione_data_inizio?: Maybe<Scalars['timestamp']>;
  assicurazione_polizza?: Maybe<Scalars['String']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  assicurazione_societa?: Maybe<Scalars['String']>;
  carta_circolazione?: Maybe<Scalars['String']>;
  carta_circolazione_altro_note?: Maybe<Scalars['String']>;
  carta_circolazione_data?: Maybe<Scalars['timestamp']>;
  carta_circolazione_ddt?: Maybe<Scalars['String']>;
  carta_circolazione_ril?: Maybe<Scalars['String']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  cilindrata?: Maybe<Scalars['String']>;
  codice_merce_pericolasa?: Maybe<Scalars['String']>;
  codice_pericolo?: Maybe<Scalars['String']>;
  colore_carrozzeria?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  danni_del_veicolo_a_cose?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo?: Maybe<Scalars['Boolean']>;
  danni_del_veicolo_a_cose_rilievo_data_fine?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_data_inizio?: Maybe<Scalars['String']>;
  danni_del_veicolo_a_cose_rilievo_difensore?: Maybe<Scalars['Boolean']>;
  danni_del_veicolo_a_cose_rilievo_presente?: Maybe<Scalars['Boolean']>;
  danni_su_veicolo_constatati?: Maybe<Scalars['String']>;
  data_ultima_revisione?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  destinazione_data?: Maybe<Scalars['timestamp']>;
  destinazione_decisione_altro?: Maybe<Scalars['String']>;
  destinazione_decisione_id?: Maybe<Scalars['Int']>;
  destinazione_persona_affidataria?: Maybe<Scalars['String']>;
  destinazione_ritirato?: Maybe<Scalars['Boolean']>;
  destinazione_sequestrato?: Maybe<Scalars['Boolean']>;
  destinazione_trasportato_presso?: Maybe<Scalars['String']>;
  dispositivi_acustici?: Maybe<Scalars['String']>;
  dotazione_airbag?: Maybe<Scalars['Boolean']>;
  dotazione_cinture?: Maybe<Scalars['Boolean']>;
  generale?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  impianto_illuminazione?: Maybe<Scalars['String']>;
  indicatori_direzione?: Maybe<Scalars['String']>;
  km_percorsi?: Maybe<Scalars['String']>;
  locatario_id?: Maybe<Scalars['Int']>;
  luci_arresto?: Maybe<Scalars['String']>;
  marca?: Maybe<Scalars['String']>;
  marcia_inserita?: Maybe<Scalars['String']>;
  modello?: Maybe<Scalars['String']>;
  nazione_id?: Maybe<Scalars['Int']>;
  p_c?: Maybe<Scalars['String']>;
  p_u?: Maybe<Scalars['String']>;
  peso?: Maybe<Scalars['String']>;
  posti?: Maybe<Scalars['String']>;
  proprietario_giuridico_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  retrovisore_esterno_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  stato_pneumatici?: Maybe<Scalars['String']>;
  tara?: Maybe<Scalars['String']>;
  targa?: Maybe<Scalars['String']>;
  telaio?: Maybe<Scalars['String']>;
  tipologia_veicolo_id?: Maybe<Scalars['Int']>;
  tipologia_veicolo_note?: Maybe<Scalars['String']>;
  traccia_suolo?: Maybe<Scalars['Boolean']>;
  traccia_suolo_abs?: Maybe<Scalars['Boolean']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_metri?: Maybe<Scalars['String']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uso_veicolo_id?: Maybe<Scalars['Int']>;
  velocita_presunta?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Sis_Veicolo_Stddev_Fields = {
  __typename?: 'sis_veicolo_stddev_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Float']>;
  alimentazione_id?: Maybe<Scalars['Float']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  destinazione_decisione_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nazione_id?: Maybe<Scalars['Float']>;
  proprietario_giuridico_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  retrovisore_esterno_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  tipologia_veicolo_id?: Maybe<Scalars['Float']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Float']>;
  uso_veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Stddev_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Veicolo_Stddev_Pop_Fields = {
  __typename?: 'sis_veicolo_stddev_pop_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Float']>;
  alimentazione_id?: Maybe<Scalars['Float']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  destinazione_decisione_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nazione_id?: Maybe<Scalars['Float']>;
  proprietario_giuridico_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  retrovisore_esterno_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  tipologia_veicolo_id?: Maybe<Scalars['Float']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Float']>;
  uso_veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Stddev_Pop_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Veicolo_Stddev_Samp_Fields = {
  __typename?: 'sis_veicolo_stddev_samp_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Float']>;
  alimentazione_id?: Maybe<Scalars['Float']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  destinazione_decisione_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nazione_id?: Maybe<Scalars['Float']>;
  proprietario_giuridico_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  retrovisore_esterno_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  tipologia_veicolo_id?: Maybe<Scalars['Float']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Float']>;
  uso_veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Stddev_Samp_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Veicolo_Sum_Fields = {
  __typename?: 'sis_veicolo_sum_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Int']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Int']>;
  alimentazione_id?: Maybe<Scalars['Int']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Int']>;
  conducente_id?: Maybe<Scalars['Int']>;
  destinazione_decisione_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  locatario_id?: Maybe<Scalars['Int']>;
  nazione_id?: Maybe<Scalars['Int']>;
  proprietario_giuridico_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  retrovisore_esterno_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  stato_id?: Maybe<Scalars['Int']>;
  tipologia_veicolo_id?: Maybe<Scalars['Int']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Int']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Int']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Int']>;
  uso_veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Sum_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.veicolo" */
export enum Sis_Veicolo_Update_Column {
  /** column name */
  AccertamentiAbs = 'accertamenti_abs',
  /** column name */
  AccertamentiAttivazione = 'accertamenti_attivazione',
  /** column name */
  AccertamentiUsoCascoAltroNote = 'accertamenti_uso_casco_altro_note',
  /** column name */
  AccertamentiUsoCascoSinoaltroId = 'accertamenti_uso_casco_sinoaltro_id',
  /** column name */
  AccertamentiUsoCinturaAltroNote = 'accertamenti_uso_cintura_altro_note',
  /** column name */
  AccertamentiUsoCinturaSinoaltroId = 'accertamenti_uso_cintura_sinoaltro_id',
  /** column name */
  AccertamentoUsoAntiabbandonoAltroNote = 'accertamento_uso_antiabbandono_altro_note',
  /** column name */
  AccertamentoUsoAntiabbandonoSinoaltroId = 'accertamento_uso_antiabbandono_sinoaltro_id',
  /** column name */
  AccertamentoUsoSistemaBambiniAltroNote = 'accertamento_uso_sistema_bambini_altro_note',
  /** column name */
  AccertamentoUsoSistemaBambiniSinoaltroId = 'accertamento_uso_sistema_bambini_sinoaltro_id',
  /** column name */
  AlimentazioneId = 'alimentazione_id',
  /** column name */
  AlimentazioneNote = 'alimentazione_note',
  /** column name */
  AnnoPrimaImmatricolazione = 'anno_prima_immatricolazione',
  /** column name */
  AssicurazioneAgenzia = 'assicurazione_agenzia',
  /** column name */
  AssicurazioneAltroNote = 'assicurazione_altro_note',
  /** column name */
  AssicurazioneDataFine = 'assicurazione_data_fine',
  /** column name */
  AssicurazioneDataInizio = 'assicurazione_data_inizio',
  /** column name */
  AssicurazionePolizza = 'assicurazione_polizza',
  /** column name */
  AssicurazioneSinoaltroId = 'assicurazione_sinoaltro_id',
  /** column name */
  AssicurazioneSocieta = 'assicurazione_societa',
  /** column name */
  CartaCircolazione = 'carta_circolazione',
  /** column name */
  CartaCircolazioneAltroNote = 'carta_circolazione_altro_note',
  /** column name */
  CartaCircolazioneData = 'carta_circolazione_data',
  /** column name */
  CartaCircolazioneDdt = 'carta_circolazione_ddt',
  /** column name */
  CartaCircolazioneRil = 'carta_circolazione_ril',
  /** column name */
  CartaCircolazioneSinoaltroId = 'carta_circolazione_sinoaltro_id',
  /** column name */
  Cilindrata = 'cilindrata',
  /** column name */
  CodiceMercePericolasa = 'codice_merce_pericolasa',
  /** column name */
  CodicePericolo = 'codice_pericolo',
  /** column name */
  ColoreCarrozzeria = 'colore_carrozzeria',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DanniDelVeicoloACose = 'danni_del_veicolo_a_cose',
  /** column name */
  DanniDelVeicoloACoseRilievo = 'danni_del_veicolo_a_cose_rilievo',
  /** column name */
  DanniDelVeicoloACoseRilievoDataFine = 'danni_del_veicolo_a_cose_rilievo_data_fine',
  /** column name */
  DanniDelVeicoloACoseRilievoDataInizio = 'danni_del_veicolo_a_cose_rilievo_data_inizio',
  /** column name */
  DanniDelVeicoloACoseRilievoDifensore = 'danni_del_veicolo_a_cose_rilievo_difensore',
  /** column name */
  DanniDelVeicoloACoseRilievoPresente = 'danni_del_veicolo_a_cose_rilievo_presente',
  /** column name */
  DanniSuVeicoloConstatati = 'danni_su_veicolo_constatati',
  /** column name */
  DataUltimaRevisione = 'data_ultima_revisione',
  /** column name */
  Delete = 'delete',
  /** column name */
  DestinazioneData = 'destinazione_data',
  /** column name */
  DestinazioneDecisioneAltro = 'destinazione_decisione_altro',
  /** column name */
  DestinazioneDecisioneId = 'destinazione_decisione_id',
  /** column name */
  DestinazionePersonaAffidataria = 'destinazione_persona_affidataria',
  /** column name */
  DestinazioneRitirato = 'destinazione_ritirato',
  /** column name */
  DestinazioneSequestrato = 'destinazione_sequestrato',
  /** column name */
  DestinazioneTrasportatoPresso = 'destinazione_trasportato_presso',
  /** column name */
  DispositiviAcustici = 'dispositivi_acustici',
  /** column name */
  DotazioneAirbag = 'dotazione_airbag',
  /** column name */
  DotazioneCinture = 'dotazione_cinture',
  /** column name */
  Generale = 'generale',
  /** column name */
  Id = 'id',
  /** column name */
  ImpiantoIlluminazione = 'impianto_illuminazione',
  /** column name */
  IndicatoriDirezione = 'indicatori_direzione',
  /** column name */
  KmPercorsi = 'km_percorsi',
  /** column name */
  LocatarioId = 'locatario_id',
  /** column name */
  LuciArresto = 'luci_arresto',
  /** column name */
  Marca = 'marca',
  /** column name */
  MarciaInserita = 'marcia_inserita',
  /** column name */
  Modello = 'modello',
  /** column name */
  NazioneId = 'nazione_id',
  /** column name */
  PC = 'p_c',
  /** column name */
  PU = 'p_u',
  /** column name */
  Peso = 'peso',
  /** column name */
  Posti = 'posti',
  /** column name */
  ProprietarioGiuridicoId = 'proprietario_giuridico_id',
  /** column name */
  ProprietarioId = 'proprietario_id',
  /** column name */
  RetrovisoreEsternoId = 'retrovisore_esterno_id',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  StatoId = 'stato_id',
  /** column name */
  StatoPneumatici = 'stato_pneumatici',
  /** column name */
  Tara = 'tara',
  /** column name */
  Targa = 'targa',
  /** column name */
  Telaio = 'telaio',
  /** column name */
  TipologiaVeicoloId = 'tipologia_veicolo_id',
  /** column name */
  TipologiaVeicoloNote = 'tipologia_veicolo_note',
  /** column name */
  TracciaSuolo = 'traccia_suolo',
  /** column name */
  TracciaSuoloAbs = 'traccia_suolo_abs',
  /** column name */
  TracciaSuoloFrenataTipologiaId = 'traccia_suolo_frenata_tipologia_id',
  /** column name */
  TracciaSuoloMetri = 'traccia_suolo_metri',
  /** column name */
  TracciaSuoloTerminazioneAndamentoId = 'traccia_suolo_terminazione_andamento_id',
  /** column name */
  TracciaSuoloTerminazioneFormaId = 'traccia_suolo_terminazione_forma_id',
  /** column name */
  TracciaSuoloTerminazioneId = 'traccia_suolo_terminazione_id',
  /** column name */
  TracciaSuoloTerminazioneIntensitaId = 'traccia_suolo_terminazione_intensita_id',
  /** column name */
  TracciaSuoloTerminazioneMetri = 'traccia_suolo_terminazione_metri',
  /** column name */
  TracciaSuoloTerminazioneTipologiaId = 'traccia_suolo_terminazione_tipologia_id',
  /** column name */
  TracciaSuoloTipoId = 'traccia_suolo_tipo_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UsoVeicoloId = 'uso_veicolo_id',
  /** column name */
  VelocitaPresunta = 'velocita_presunta'
}

/** aggregate var_pop on columns */
export type Sis_Veicolo_Var_Pop_Fields = {
  __typename?: 'sis_veicolo_var_pop_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Float']>;
  alimentazione_id?: Maybe<Scalars['Float']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  destinazione_decisione_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nazione_id?: Maybe<Scalars['Float']>;
  proprietario_giuridico_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  retrovisore_esterno_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  tipologia_veicolo_id?: Maybe<Scalars['Float']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Float']>;
  uso_veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Var_Pop_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Veicolo_Var_Samp_Fields = {
  __typename?: 'sis_veicolo_var_samp_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Float']>;
  alimentazione_id?: Maybe<Scalars['Float']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  destinazione_decisione_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nazione_id?: Maybe<Scalars['Float']>;
  proprietario_giuridico_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  retrovisore_esterno_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  tipologia_veicolo_id?: Maybe<Scalars['Float']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Float']>;
  uso_veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Var_Samp_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Veicolo_Variance_Fields = {
  __typename?: 'sis_veicolo_variance_fields';
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Scalars['Float']>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Scalars['Float']>;
  alimentazione_id?: Maybe<Scalars['Float']>;
  assicurazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  carta_circolazione_sinoaltro_id?: Maybe<Scalars['Float']>;
  conducente_id?: Maybe<Scalars['Float']>;
  destinazione_decisione_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nazione_id?: Maybe<Scalars['Float']>;
  proprietario_giuridico_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  retrovisore_esterno_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  stato_id?: Maybe<Scalars['Float']>;
  tipologia_veicolo_id?: Maybe<Scalars['Float']>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_forma_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Scalars['Float']>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Scalars['Float']>;
  traccia_suolo_tipo_id?: Maybe<Scalars['Float']>;
  uso_veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.veicolo" */
export type Sis_Veicolo_Variance_Order_By = {
  accertamenti_uso_casco_sinoaltro_id?: Maybe<Order_By>;
  accertamenti_uso_cintura_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_antiabbandono_sinoaltro_id?: Maybe<Order_By>;
  accertamento_uso_sistema_bambini_sinoaltro_id?: Maybe<Order_By>;
  alimentazione_id?: Maybe<Order_By>;
  assicurazione_sinoaltro_id?: Maybe<Order_By>;
  carta_circolazione_sinoaltro_id?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  destinazione_decisione_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nazione_id?: Maybe<Order_By>;
  proprietario_giuridico_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  retrovisore_esterno_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  stato_id?: Maybe<Order_By>;
  tipologia_veicolo_id?: Maybe<Order_By>;
  traccia_suolo_frenata_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_andamento_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_forma_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_intensita_id?: Maybe<Order_By>;
  traccia_suolo_terminazione_tipologia_id?: Maybe<Order_By>;
  traccia_suolo_tipo_id?: Maybe<Order_By>;
  uso_veicolo_id?: Maybe<Order_By>;
};

/** columns and relationships of "sis.verbale" */
export type Sis_Verbale = {
  __typename?: 'sis_verbale';
  cellulare?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  /** An object relationship */
  conducente?: Maybe<Sis_Conducente>;
  conducente_id?: Maybe<Scalars['Int']>;
  coniugato?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['timestamp']>;
  delete: Scalars['Boolean'];
  dichiarazione?: Maybe<Scalars['String']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  /** An object relationship */
  documento_rilasciato_da_citta?: Maybe<_Citta>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  locatario?: Maybe<Sis_Locatario>;
  locatario_id?: Maybe<Scalars['Int']>;
  motivazione_no_sottoscrizione?: Maybe<Scalars['String']>;
  /** An object relationship */
  nascita_citta?: Maybe<_Citta>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  /** An object relationship */
  pedone?: Maybe<Sis_Pedone>;
  pedone_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  /** An object relationship */
  proprietario?: Maybe<Sis_Proprietario>;
  proprietario_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  residente_citta?: Maybe<_Citta>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  /** An object relationship */
  ris?: Maybe<Sis_Ris>;
  ris_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  sesso?: Maybe<_Sesso>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  /** An object relationship */
  testimone?: Maybe<Sis_Testimone>;
  testimone_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  tipologia_verbale?: Maybe<Sis__Tipologia_Verbale>;
  tipologia_verbale_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  titolo?: Maybe<_Titolo>;
  titolo_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  trasportato?: Maybe<Sis_Trasportato>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  veicolo?: Maybe<Sis_Veicolo>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** aggregated selection of "sis.verbale" */
export type Sis_Verbale_Aggregate = {
  __typename?: 'sis_verbale_aggregate';
  aggregate?: Maybe<Sis_Verbale_Aggregate_Fields>;
  nodes: Array<Sis_Verbale>;
};

/** aggregate fields of "sis.verbale" */
export type Sis_Verbale_Aggregate_Fields = {
  __typename?: 'sis_verbale_aggregate_fields';
  avg?: Maybe<Sis_Verbale_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Sis_Verbale_Max_Fields>;
  min?: Maybe<Sis_Verbale_Min_Fields>;
  stddev?: Maybe<Sis_Verbale_Stddev_Fields>;
  stddev_pop?: Maybe<Sis_Verbale_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Sis_Verbale_Stddev_Samp_Fields>;
  sum?: Maybe<Sis_Verbale_Sum_Fields>;
  var_pop?: Maybe<Sis_Verbale_Var_Pop_Fields>;
  var_samp?: Maybe<Sis_Verbale_Var_Samp_Fields>;
  variance?: Maybe<Sis_Verbale_Variance_Fields>;
};


/** aggregate fields of "sis.verbale" */
export type Sis_Verbale_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Sis_Verbale_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "sis.verbale" */
export type Sis_Verbale_Aggregate_Order_By = {
  avg?: Maybe<Sis_Verbale_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Sis_Verbale_Max_Order_By>;
  min?: Maybe<Sis_Verbale_Min_Order_By>;
  stddev?: Maybe<Sis_Verbale_Stddev_Order_By>;
  stddev_pop?: Maybe<Sis_Verbale_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Sis_Verbale_Stddev_Samp_Order_By>;
  sum?: Maybe<Sis_Verbale_Sum_Order_By>;
  var_pop?: Maybe<Sis_Verbale_Var_Pop_Order_By>;
  var_samp?: Maybe<Sis_Verbale_Var_Samp_Order_By>;
  variance?: Maybe<Sis_Verbale_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "sis.verbale" */
export type Sis_Verbale_Arr_Rel_Insert_Input = {
  data: Array<Sis_Verbale_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Sis_Verbale_On_Conflict>;
};

/** aggregate avg on columns */
export type Sis_Verbale_Avg_Fields = {
  __typename?: 'sis_verbale_avg_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  coniugato?: Maybe<Scalars['Float']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  testimone_id?: Maybe<Scalars['Float']>;
  tipologia_verbale_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "sis.verbale" */
export type Sis_Verbale_Avg_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "sis.verbale". All fields are combined with a logical 'AND'. */
export type Sis_Verbale_Bool_Exp = {
  _and?: Maybe<Array<Sis_Verbale_Bool_Exp>>;
  _not?: Maybe<Sis_Verbale_Bool_Exp>;
  _or?: Maybe<Array<Sis_Verbale_Bool_Exp>>;
  cellulare?: Maybe<String_Comparison_Exp>;
  cognome?: Maybe<String_Comparison_Exp>;
  conducente?: Maybe<Sis_Conducente_Bool_Exp>;
  conducente_id?: Maybe<Int_Comparison_Exp>;
  coniugato?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Timestamp_Comparison_Exp>;
  delete?: Maybe<Boolean_Comparison_Exp>;
  dichiarazione?: Maybe<String_Comparison_Exp>;
  documento_numero?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da?: Maybe<String_Comparison_Exp>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Bool_Exp>;
  documento_rilasciato_da_citta_id?: Maybe<Int_Comparison_Exp>;
  documento_rilasciato_data?: Maybe<Timestamp_Comparison_Exp>;
  documento_tipo?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  locatario?: Maybe<Sis_Locatario_Bool_Exp>;
  locatario_id?: Maybe<Int_Comparison_Exp>;
  motivazione_no_sottoscrizione?: Maybe<String_Comparison_Exp>;
  nascita_citta?: Maybe<_Citta_Bool_Exp>;
  nascita_citta_altro?: Maybe<String_Comparison_Exp>;
  nascita_citta_id?: Maybe<Int_Comparison_Exp>;
  nascita_data?: Maybe<Timestamp_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  pedone?: Maybe<Sis_Pedone_Bool_Exp>;
  pedone_id?: Maybe<Int_Comparison_Exp>;
  professione?: Maybe<String_Comparison_Exp>;
  proprietario?: Maybe<Sis_Proprietario_Bool_Exp>;
  proprietario_id?: Maybe<Int_Comparison_Exp>;
  residente_citta?: Maybe<_Citta_Bool_Exp>;
  residente_citta_altro?: Maybe<String_Comparison_Exp>;
  residente_citta_id?: Maybe<Int_Comparison_Exp>;
  residente_indirizzo?: Maybe<String_Comparison_Exp>;
  ris?: Maybe<Sis_Ris_Bool_Exp>;
  ris_id?: Maybe<Int_Comparison_Exp>;
  sesso?: Maybe<_Sesso_Bool_Exp>;
  sesso_id?: Maybe<Int_Comparison_Exp>;
  telefono?: Maybe<String_Comparison_Exp>;
  testimone?: Maybe<Sis_Testimone_Bool_Exp>;
  testimone_id?: Maybe<Int_Comparison_Exp>;
  tipologia_verbale?: Maybe<Sis__Tipologia_Verbale_Bool_Exp>;
  tipologia_verbale_id?: Maybe<Int_Comparison_Exp>;
  titolo?: Maybe<_Titolo_Bool_Exp>;
  titolo_id?: Maybe<Int_Comparison_Exp>;
  trasportato?: Maybe<Sis_Trasportato_Bool_Exp>;
  trasportato_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  veicolo?: Maybe<Sis_Veicolo_Bool_Exp>;
  veicolo_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "sis.verbale" */
export enum Sis_Verbale_Constraint {
  /** unique or primary key constraint */
  VerbalePkey = 'verbale_pkey'
}

/** input type for incrementing numeric columns in table "sis.verbale" */
export type Sis_Verbale_Inc_Input = {
  conducente_id?: Maybe<Scalars['Int']>;
  coniugato?: Maybe<Scalars['Int']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  locatario_id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  pedone_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  testimone_id?: Maybe<Scalars['Int']>;
  tipologia_verbale_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "sis.verbale" */
export type Sis_Verbale_Insert_Input = {
  cellulare?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  conducente?: Maybe<Sis_Conducente_Obj_Rel_Insert_Input>;
  conducente_id?: Maybe<Scalars['Int']>;
  coniugato?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  dichiarazione?: Maybe<Scalars['String']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  locatario?: Maybe<Sis_Locatario_Obj_Rel_Insert_Input>;
  locatario_id?: Maybe<Scalars['Int']>;
  motivazione_no_sottoscrizione?: Maybe<Scalars['String']>;
  nascita_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  pedone?: Maybe<Sis_Pedone_Obj_Rel_Insert_Input>;
  pedone_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  proprietario?: Maybe<Sis_Proprietario_Obj_Rel_Insert_Input>;
  proprietario_id?: Maybe<Scalars['Int']>;
  residente_citta?: Maybe<_Citta_Obj_Rel_Insert_Input>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris?: Maybe<Sis_Ris_Obj_Rel_Insert_Input>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso?: Maybe<_Sesso_Obj_Rel_Insert_Input>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  testimone?: Maybe<Sis_Testimone_Obj_Rel_Insert_Input>;
  testimone_id?: Maybe<Scalars['Int']>;
  tipologia_verbale?: Maybe<Sis__Tipologia_Verbale_Obj_Rel_Insert_Input>;
  tipologia_verbale_id?: Maybe<Scalars['Int']>;
  titolo?: Maybe<_Titolo_Obj_Rel_Insert_Input>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato?: Maybe<Sis_Trasportato_Obj_Rel_Insert_Input>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo?: Maybe<Sis_Veicolo_Obj_Rel_Insert_Input>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Sis_Verbale_Max_Fields = {
  __typename?: 'sis_verbale_max_fields';
  cellulare?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  coniugato?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  dichiarazione?: Maybe<Scalars['String']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  locatario_id?: Maybe<Scalars['Int']>;
  motivazione_no_sottoscrizione?: Maybe<Scalars['String']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  testimone_id?: Maybe<Scalars['Int']>;
  tipologia_verbale_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "sis.verbale" */
export type Sis_Verbale_Max_Order_By = {
  cellulare?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  dichiarazione?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  motivazione_no_sottoscrizione?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  professione?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Sis_Verbale_Min_Fields = {
  __typename?: 'sis_verbale_min_fields';
  cellulare?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  coniugato?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  dichiarazione?: Maybe<Scalars['String']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  locatario_id?: Maybe<Scalars['Int']>;
  motivazione_no_sottoscrizione?: Maybe<Scalars['String']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  testimone_id?: Maybe<Scalars['Int']>;
  tipologia_verbale_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "sis.verbale" */
export type Sis_Verbale_Min_Order_By = {
  cellulare?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  dichiarazione?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  motivazione_no_sottoscrizione?: Maybe<Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  professione?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "sis.verbale" */
export type Sis_Verbale_Mutation_Response = {
  __typename?: 'sis_verbale_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sis_Verbale>;
};

/** on_conflict condition type for table "sis.verbale" */
export type Sis_Verbale_On_Conflict = {
  constraint: Sis_Verbale_Constraint;
  update_columns?: Array<Sis_Verbale_Update_Column>;
  where?: Maybe<Sis_Verbale_Bool_Exp>;
};

/** Ordering options when selecting data from "sis.verbale". */
export type Sis_Verbale_Order_By = {
  cellulare?: Maybe<Order_By>;
  cognome?: Maybe<Order_By>;
  conducente?: Maybe<Sis_Conducente_Order_By>;
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  delete?: Maybe<Order_By>;
  dichiarazione?: Maybe<Order_By>;
  documento_numero?: Maybe<Order_By>;
  documento_rilasciato_da?: Maybe<Order_By>;
  documento_rilasciato_da_citta?: Maybe<_Citta_Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  documento_rilasciato_data?: Maybe<Order_By>;
  documento_tipo?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario?: Maybe<Sis_Locatario_Order_By>;
  locatario_id?: Maybe<Order_By>;
  motivazione_no_sottoscrizione?: Maybe<Order_By>;
  nascita_citta?: Maybe<_Citta_Order_By>;
  nascita_citta_altro?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  nascita_data?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  pedone?: Maybe<Sis_Pedone_Order_By>;
  pedone_id?: Maybe<Order_By>;
  professione?: Maybe<Order_By>;
  proprietario?: Maybe<Sis_Proprietario_Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta?: Maybe<_Citta_Order_By>;
  residente_citta_altro?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  residente_indirizzo?: Maybe<Order_By>;
  ris?: Maybe<Sis_Ris_Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso?: Maybe<_Sesso_Order_By>;
  sesso_id?: Maybe<Order_By>;
  telefono?: Maybe<Order_By>;
  testimone?: Maybe<Sis_Testimone_Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale?: Maybe<Sis__Tipologia_Verbale_Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo?: Maybe<_Titolo_Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato?: Maybe<Sis_Trasportato_Order_By>;
  trasportato_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  veicolo?: Maybe<Sis_Veicolo_Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** primary key columns input for table: sis_verbale */
export type Sis_Verbale_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "sis.verbale" */
export enum Sis_Verbale_Select_Column {
  /** column name */
  Cellulare = 'cellulare',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  Coniugato = 'coniugato',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Delete = 'delete',
  /** column name */
  Dichiarazione = 'dichiarazione',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  LocatarioId = 'locatario_id',
  /** column name */
  MotivazioneNoSottoscrizione = 'motivazione_no_sottoscrizione',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  PedoneId = 'pedone_id',
  /** column name */
  Professione = 'professione',
  /** column name */
  ProprietarioId = 'proprietario_id',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TestimoneId = 'testimone_id',
  /** column name */
  TipologiaVerbaleId = 'tipologia_verbale_id',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  TrasportatoId = 'trasportato_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VeicoloId = 'veicolo_id'
}

/** input type for updating data in table "sis.verbale" */
export type Sis_Verbale_Set_Input = {
  cellulare?: Maybe<Scalars['String']>;
  cognome?: Maybe<Scalars['String']>;
  conducente_id?: Maybe<Scalars['Int']>;
  coniugato?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['timestamp']>;
  delete?: Maybe<Scalars['Boolean']>;
  dichiarazione?: Maybe<Scalars['String']>;
  documento_numero?: Maybe<Scalars['String']>;
  documento_rilasciato_da?: Maybe<Scalars['String']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  documento_rilasciato_data?: Maybe<Scalars['timestamp']>;
  documento_tipo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  locatario_id?: Maybe<Scalars['Int']>;
  motivazione_no_sottoscrizione?: Maybe<Scalars['String']>;
  nascita_citta_altro?: Maybe<Scalars['String']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  nascita_data?: Maybe<Scalars['timestamp']>;
  nome?: Maybe<Scalars['String']>;
  pedone_id?: Maybe<Scalars['Int']>;
  professione?: Maybe<Scalars['String']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  residente_citta_altro?: Maybe<Scalars['String']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  residente_indirizzo?: Maybe<Scalars['String']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  telefono?: Maybe<Scalars['String']>;
  testimone_id?: Maybe<Scalars['Int']>;
  tipologia_verbale_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Sis_Verbale_Stddev_Fields = {
  __typename?: 'sis_verbale_stddev_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  coniugato?: Maybe<Scalars['Float']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  testimone_id?: Maybe<Scalars['Float']>;
  tipologia_verbale_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "sis.verbale" */
export type Sis_Verbale_Stddev_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Sis_Verbale_Stddev_Pop_Fields = {
  __typename?: 'sis_verbale_stddev_pop_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  coniugato?: Maybe<Scalars['Float']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  testimone_id?: Maybe<Scalars['Float']>;
  tipologia_verbale_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "sis.verbale" */
export type Sis_Verbale_Stddev_Pop_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Sis_Verbale_Stddev_Samp_Fields = {
  __typename?: 'sis_verbale_stddev_samp_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  coniugato?: Maybe<Scalars['Float']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  testimone_id?: Maybe<Scalars['Float']>;
  tipologia_verbale_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "sis.verbale" */
export type Sis_Verbale_Stddev_Samp_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Sis_Verbale_Sum_Fields = {
  __typename?: 'sis_verbale_sum_fields';
  conducente_id?: Maybe<Scalars['Int']>;
  coniugato?: Maybe<Scalars['Int']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  locatario_id?: Maybe<Scalars['Int']>;
  nascita_citta_id?: Maybe<Scalars['Int']>;
  pedone_id?: Maybe<Scalars['Int']>;
  proprietario_id?: Maybe<Scalars['Int']>;
  residente_citta_id?: Maybe<Scalars['Int']>;
  ris_id?: Maybe<Scalars['Int']>;
  sesso_id?: Maybe<Scalars['Int']>;
  testimone_id?: Maybe<Scalars['Int']>;
  tipologia_verbale_id?: Maybe<Scalars['Int']>;
  titolo_id?: Maybe<Scalars['Int']>;
  trasportato_id?: Maybe<Scalars['Int']>;
  veicolo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "sis.verbale" */
export type Sis_Verbale_Sum_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** update columns of table "sis.verbale" */
export enum Sis_Verbale_Update_Column {
  /** column name */
  Cellulare = 'cellulare',
  /** column name */
  Cognome = 'cognome',
  /** column name */
  ConducenteId = 'conducente_id',
  /** column name */
  Coniugato = 'coniugato',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Delete = 'delete',
  /** column name */
  Dichiarazione = 'dichiarazione',
  /** column name */
  DocumentoNumero = 'documento_numero',
  /** column name */
  DocumentoRilasciatoDa = 'documento_rilasciato_da',
  /** column name */
  DocumentoRilasciatoDaCittaId = 'documento_rilasciato_da_citta_id',
  /** column name */
  DocumentoRilasciatoData = 'documento_rilasciato_data',
  /** column name */
  DocumentoTipo = 'documento_tipo',
  /** column name */
  Id = 'id',
  /** column name */
  LocatarioId = 'locatario_id',
  /** column name */
  MotivazioneNoSottoscrizione = 'motivazione_no_sottoscrizione',
  /** column name */
  NascitaCittaAltro = 'nascita_citta_altro',
  /** column name */
  NascitaCittaId = 'nascita_citta_id',
  /** column name */
  NascitaData = 'nascita_data',
  /** column name */
  Nome = 'nome',
  /** column name */
  PedoneId = 'pedone_id',
  /** column name */
  Professione = 'professione',
  /** column name */
  ProprietarioId = 'proprietario_id',
  /** column name */
  ResidenteCittaAltro = 'residente_citta_altro',
  /** column name */
  ResidenteCittaId = 'residente_citta_id',
  /** column name */
  ResidenteIndirizzo = 'residente_indirizzo',
  /** column name */
  RisId = 'ris_id',
  /** column name */
  SessoId = 'sesso_id',
  /** column name */
  Telefono = 'telefono',
  /** column name */
  TestimoneId = 'testimone_id',
  /** column name */
  TipologiaVerbaleId = 'tipologia_verbale_id',
  /** column name */
  TitoloId = 'titolo_id',
  /** column name */
  TrasportatoId = 'trasportato_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VeicoloId = 'veicolo_id'
}

/** aggregate var_pop on columns */
export type Sis_Verbale_Var_Pop_Fields = {
  __typename?: 'sis_verbale_var_pop_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  coniugato?: Maybe<Scalars['Float']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  testimone_id?: Maybe<Scalars['Float']>;
  tipologia_verbale_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "sis.verbale" */
export type Sis_Verbale_Var_Pop_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Sis_Verbale_Var_Samp_Fields = {
  __typename?: 'sis_verbale_var_samp_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  coniugato?: Maybe<Scalars['Float']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  testimone_id?: Maybe<Scalars['Float']>;
  tipologia_verbale_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "sis.verbale" */
export type Sis_Verbale_Var_Samp_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Sis_Verbale_Variance_Fields = {
  __typename?: 'sis_verbale_variance_fields';
  conducente_id?: Maybe<Scalars['Float']>;
  coniugato?: Maybe<Scalars['Float']>;
  documento_rilasciato_da_citta_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  locatario_id?: Maybe<Scalars['Float']>;
  nascita_citta_id?: Maybe<Scalars['Float']>;
  pedone_id?: Maybe<Scalars['Float']>;
  proprietario_id?: Maybe<Scalars['Float']>;
  residente_citta_id?: Maybe<Scalars['Float']>;
  ris_id?: Maybe<Scalars['Float']>;
  sesso_id?: Maybe<Scalars['Float']>;
  testimone_id?: Maybe<Scalars['Float']>;
  tipologia_verbale_id?: Maybe<Scalars['Float']>;
  titolo_id?: Maybe<Scalars['Float']>;
  trasportato_id?: Maybe<Scalars['Float']>;
  veicolo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "sis.verbale" */
export type Sis_Verbale_Variance_Order_By = {
  conducente_id?: Maybe<Order_By>;
  coniugato?: Maybe<Order_By>;
  documento_rilasciato_da_citta_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  locatario_id?: Maybe<Order_By>;
  nascita_citta_id?: Maybe<Order_By>;
  pedone_id?: Maybe<Order_By>;
  proprietario_id?: Maybe<Order_By>;
  residente_citta_id?: Maybe<Order_By>;
  ris_id?: Maybe<Order_By>;
  sesso_id?: Maybe<Order_By>;
  testimone_id?: Maybe<Order_By>;
  tipologia_verbale_id?: Maybe<Order_By>;
  titolo_id?: Maybe<Order_By>;
  trasportato_id?: Maybe<Order_By>;
  veicolo_id?: Maybe<Order_By>;
};

export type St_D_Within_Geography_Input = {
  distance: Scalars['Float'];
  from: Scalars['geography'];
  use_spheroid?: Maybe<Scalars['Boolean']>;
};

export type St_D_Within_Input = {
  distance: Scalars['Float'];
  from: Scalars['geometry'];
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "_citta" */
  _citta: Array<_Citta>;
  /** fetch aggregated fields from the table: "_citta" */
  _citta_aggregate: _Citta_Aggregate;
  /** fetch data from the table: "_citta" using primary key columns */
  _citta_by_pk?: Maybe<_Citta>;
  /** fetch data from the table: "_nazione" */
  _nazione: Array<_Nazione>;
  /** fetch aggregated fields from the table: "_nazione" */
  _nazione_aggregate: _Nazione_Aggregate;
  /** fetch data from the table: "_nazione" using primary key columns */
  _nazione_by_pk?: Maybe<_Nazione>;
  /** fetch data from the table: "_sesso" */
  _sesso: Array<_Sesso>;
  /** fetch aggregated fields from the table: "_sesso" */
  _sesso_aggregate: _Sesso_Aggregate;
  /** fetch data from the table: "_sesso" using primary key columns */
  _sesso_by_pk?: Maybe<_Sesso>;
  /** fetch data from the table: "_sinoaltro" */
  _sinoaltro: Array<_Sinoaltro>;
  /** fetch aggregated fields from the table: "_sinoaltro" */
  _sinoaltro_aggregate: _Sinoaltro_Aggregate;
  /** fetch data from the table: "_sinoaltro" using primary key columns */
  _sinoaltro_by_pk?: Maybe<_Sinoaltro>;
  /** fetch data from the table: "_titolo" */
  _titolo: Array<_Titolo>;
  /** fetch aggregated fields from the table: "_titolo" */
  _titolo_aggregate: _Titolo_Aggregate;
  /** fetch data from the table: "_titolo" using primary key columns */
  _titolo_by_pk?: Maybe<_Titolo>;
  /** fetch data from the table: "agcos.agcos" */
  agcos_agcos: Array<Agcos_Agcos>;
  /** fetch aggregated fields from the table: "agcos.agcos" */
  agcos_agcos_aggregate: Agcos_Agcos_Aggregate;
  /** fetch data from the table: "agcos.agcos" using primary key columns */
  agcos_agcos_by_pk?: Maybe<Agcos_Agcos>;
  /** fetch data from the table: "agcos.import" */
  agcos_import: Array<Agcos_Import>;
  /** fetch aggregated fields from the table: "agcos.import" */
  agcos_import_aggregate: Agcos_Import_Aggregate;
  /** fetch data from the table: "agcos.import" using primary key columns */
  agcos_import_by_pk?: Maybe<Agcos_Import>;
  /** fetch data from the table: "gis._specifica_posizionamento_toponimo" */
  gis__specifica_posizionamento_toponimo: Array<Gis__Specifica_Posizionamento_Toponimo>;
  /** fetch aggregated fields from the table: "gis._specifica_posizionamento_toponimo" */
  gis__specifica_posizionamento_toponimo_aggregate: Gis__Specifica_Posizionamento_Toponimo_Aggregate;
  /** fetch data from the table: "gis._specifica_posizionamento_toponimo" using primary key columns */
  gis__specifica_posizionamento_toponimo_by_pk?: Maybe<Gis__Specifica_Posizionamento_Toponimo>;
  /** fetch data from the table: "gis._tipologia_posizionamento_toponimo" */
  gis__tipologia_posizionamento_toponimo: Array<Gis__Tipologia_Posizionamento_Toponimo>;
  /** fetch aggregated fields from the table: "gis._tipologia_posizionamento_toponimo" */
  gis__tipologia_posizionamento_toponimo_aggregate: Gis__Tipologia_Posizionamento_Toponimo_Aggregate;
  /** fetch data from the table: "gis._tipologia_posizionamento_toponimo" using primary key columns */
  gis__tipologia_posizionamento_toponimo_by_pk?: Maybe<Gis__Tipologia_Posizionamento_Toponimo>;
  /** fetch data from the table: "gis.civico" */
  gis_civico: Array<Gis_Civico>;
  /** fetch aggregated fields from the table: "gis.civico" */
  gis_civico_aggregate: Gis_Civico_Aggregate;
  /** fetch data from the table: "gis.civico" using primary key columns */
  gis_civico_by_pk?: Maybe<Gis_Civico>;
  /** fetch data from the table: "gis.connessione_grafo" */
  gis_connessione_grafo: Array<Gis_Connessione_Grafo>;
  /** fetch aggregated fields from the table: "gis.connessione_grafo" */
  gis_connessione_grafo_aggregate: Gis_Connessione_Grafo_Aggregate;
  /** fetch data from the table: "gis.connessione_grafo" using primary key columns */
  gis_connessione_grafo_by_pk?: Maybe<Gis_Connessione_Grafo>;
  /** fetch data from the table: "gis.posizionamento_toponimo" */
  gis_posizionamento_toponimo: Array<Gis_Posizionamento_Toponimo>;
  /** fetch aggregated fields from the table: "gis.posizionamento_toponimo" */
  gis_posizionamento_toponimo_aggregate: Gis_Posizionamento_Toponimo_Aggregate;
  /** fetch data from the table: "gis.posizionamento_toponimo" using primary key columns */
  gis_posizionamento_toponimo_by_pk?: Maybe<Gis_Posizionamento_Toponimo>;
  /** fetch data from the table: "gis.sostegno_ipi" */
  gis_sostegno_ipi: Array<Gis_Sostegno_Ipi>;
  /** fetch aggregated fields from the table: "gis.sostegno_ipi" */
  gis_sostegno_ipi_aggregate: Gis_Sostegno_Ipi_Aggregate;
  /** fetch data from the table: "gis.sostegno_ipi" using primary key columns */
  gis_sostegno_ipi_by_pk?: Maybe<Gis_Sostegno_Ipi>;
  /** fetch data from the table: "pis._condizioni_traffico" */
  pis__condizioni_traffico: Array<Pis__Condizioni_Traffico>;
  /** fetch aggregated fields from the table: "pis._condizioni_traffico" */
  pis__condizioni_traffico_aggregate: Pis__Condizioni_Traffico_Aggregate;
  /** fetch data from the table: "pis._condizioni_traffico" using primary key columns */
  pis__condizioni_traffico_by_pk?: Maybe<Pis__Condizioni_Traffico>;
  /** fetch data from the table: "pis._forma_dissesto" */
  pis__forma_dissesto: Array<Pis__Forma_Dissesto>;
  /** fetch aggregated fields from the table: "pis._forma_dissesto" */
  pis__forma_dissesto_aggregate: Pis__Forma_Dissesto_Aggregate;
  /** fetch data from the table: "pis._forma_dissesto" using primary key columns */
  pis__forma_dissesto_by_pk?: Maybe<Pis__Forma_Dissesto>;
  /** fetch data from the table: "pis._giorni_trascorsi" */
  pis__giorni_trascorsi: Array<Pis__Giorni_Trascorsi>;
  /** fetch aggregated fields from the table: "pis._giorni_trascorsi" */
  pis__giorni_trascorsi_aggregate: Pis__Giorni_Trascorsi_Aggregate;
  /** fetch data from the table: "pis._giorni_trascorsi" using primary key columns */
  pis__giorni_trascorsi_by_pk?: Maybe<Pis__Giorni_Trascorsi>;
  /** fetch data from the table: "pis._materiale" */
  pis__materiale: Array<Pis__Materiale>;
  /** fetch aggregated fields from the table: "pis._materiale" */
  pis__materiale_aggregate: Pis__Materiale_Aggregate;
  /** fetch data from the table: "pis._materiale" using primary key columns */
  pis__materiale_by_pk?: Maybe<Pis__Materiale>;
  /** fetch data from the table: "pis._priorita" */
  pis__priorita: Array<Pis__Priorita>;
  /** fetch aggregated fields from the table: "pis._priorita" */
  pis__priorita_aggregate: Pis__Priorita_Aggregate;
  /** fetch data from the table: "pis._priorita" using primary key columns */
  pis__priorita_by_pk?: Maybe<Pis__Priorita>;
  /** fetch data from the table: "pis._stato_segnalazione" */
  pis__stato_segnalazione: Array<Pis__Stato_Segnalazione>;
  /** fetch aggregated fields from the table: "pis._stato_segnalazione" */
  pis__stato_segnalazione_aggregate: Pis__Stato_Segnalazione_Aggregate;
  /** fetch data from the table: "pis._stato_segnalazione" using primary key columns */
  pis__stato_segnalazione_by_pk?: Maybe<Pis__Stato_Segnalazione>;
  /** fetch data from the table: "pis._tipologia_dissesto" */
  pis__tipologia_dissesto: Array<Pis__Tipologia_Dissesto>;
  /** fetch aggregated fields from the table: "pis._tipologia_dissesto" */
  pis__tipologia_dissesto_aggregate: Pis__Tipologia_Dissesto_Aggregate;
  /** fetch data from the table: "pis._tipologia_dissesto" using primary key columns */
  pis__tipologia_dissesto_by_pk?: Maybe<Pis__Tipologia_Dissesto>;
  /** fetch data from the table: "pis.assegnazione_squadra" */
  pis_assegnazione_squadra: Array<Pis_Assegnazione_Squadra>;
  /** fetch aggregated fields from the table: "pis.assegnazione_squadra" */
  pis_assegnazione_squadra_aggregate: Pis_Assegnazione_Squadra_Aggregate;
  /** fetch data from the table: "pis.assegnazione_squadra" using primary key columns */
  pis_assegnazione_squadra_by_pk?: Maybe<Pis_Assegnazione_Squadra>;
  /** fetch data from the table: "pis.attrezzature_impiegate" */
  pis_attrezzature_impiegate: Array<Pis_Attrezzature_Impiegate>;
  /** fetch aggregated fields from the table: "pis.attrezzature_impiegate" */
  pis_attrezzature_impiegate_aggregate: Pis_Attrezzature_Impiegate_Aggregate;
  /** fetch data from the table: "pis.attrezzature_impiegate" using primary key columns */
  pis_attrezzature_impiegate_by_pk?: Maybe<Pis_Attrezzature_Impiegate>;
  /** fetch data from the table: "pis.diario" */
  pis_diario: Array<Pis_Diario>;
  /** fetch aggregated fields from the table: "pis.diario" */
  pis_diario_aggregate: Pis_Diario_Aggregate;
  /** fetch data from the table: "pis.diario" using primary key columns */
  pis_diario_by_pk?: Maybe<Pis_Diario>;
  /** fetch data from the table: "pis.dissesto" */
  pis_dissesto: Array<Pis_Dissesto>;
  /** fetch aggregated fields from the table: "pis.dissesto" */
  pis_dissesto_aggregate: Pis_Dissesto_Aggregate;
  /** fetch data from the table: "pis.dissesto" using primary key columns */
  pis_dissesto_by_pk?: Maybe<Pis_Dissesto>;
  /** fetch data from the table: "pis.evento" */
  pis_evento: Array<Pis_Evento>;
  /** fetch aggregated fields from the table: "pis.evento" */
  pis_evento_aggregate: Pis_Evento_Aggregate;
  /** fetch data from the table: "pis.evento" using primary key columns */
  pis_evento_by_pk?: Maybe<Pis_Evento>;
  /** fetch data from the table: "pis.intervento" */
  pis_intervento: Array<Pis_Intervento>;
  /** fetch aggregated fields from the table: "pis.intervento" */
  pis_intervento_aggregate: Pis_Intervento_Aggregate;
  /** fetch data from the table: "pis.intervento" using primary key columns */
  pis_intervento_by_pk?: Maybe<Pis_Intervento>;
  /** fetch data from the table: "pis.intervento_straordinario" */
  pis_intervento_straordinario: Array<Pis_Intervento_Straordinario>;
  /** fetch aggregated fields from the table: "pis.intervento_straordinario" */
  pis_intervento_straordinario_aggregate: Pis_Intervento_Straordinario_Aggregate;
  /** fetch data from the table: "pis.intervento_straordinario" using primary key columns */
  pis_intervento_straordinario_by_pk?: Maybe<Pis_Intervento_Straordinario>;
  /** fetch data from the table: "pis.materiale_dissesto" */
  pis_materiale_dissesto: Array<Pis_Materiale_Dissesto>;
  /** fetch aggregated fields from the table: "pis.materiale_dissesto" */
  pis_materiale_dissesto_aggregate: Pis_Materiale_Dissesto_Aggregate;
  /** fetch data from the table: "pis.materiale_dissesto" using primary key columns */
  pis_materiale_dissesto_by_pk?: Maybe<Pis_Materiale_Dissesto>;
  /** fetch data from the table: "pis.segnalazione" */
  pis_segnalazione: Array<Pis_Segnalazione>;
  /** fetch aggregated fields from the table: "pis.segnalazione" */
  pis_segnalazione_aggregate: Pis_Segnalazione_Aggregate;
  /** fetch data from the table: "pis.segnalazione" using primary key columns */
  pis_segnalazione_by_pk?: Maybe<Pis_Segnalazione>;
  /** fetch data from the table: "pis.segnalazione_collegata" */
  pis_segnalazione_collegata: Array<Pis_Segnalazione_Collegata>;
  /** fetch aggregated fields from the table: "pis.segnalazione_collegata" */
  pis_segnalazione_collegata_aggregate: Pis_Segnalazione_Collegata_Aggregate;
  /** fetch data from the table: "pis.segnalazione_collegata" using primary key columns */
  pis_segnalazione_collegata_by_pk?: Maybe<Pis_Segnalazione_Collegata>;
  /** fetch data from the table: "pis.segnaletica_lasciata" */
  pis_segnaletica_lasciata: Array<Pis_Segnaletica_Lasciata>;
  /** fetch aggregated fields from the table: "pis.segnaletica_lasciata" */
  pis_segnaletica_lasciata_aggregate: Pis_Segnaletica_Lasciata_Aggregate;
  /** fetch data from the table: "pis.segnaletica_lasciata" using primary key columns */
  pis_segnaletica_lasciata_by_pk?: Maybe<Pis_Segnaletica_Lasciata>;
  /** fetch data from the table: "pis.squadra" */
  pis_squadra: Array<Pis_Squadra>;
  /** fetch aggregated fields from the table: "pis.squadra" */
  pis_squadra_aggregate: Pis_Squadra_Aggregate;
  /** fetch data from the table: "pis.squadra" using primary key columns */
  pis_squadra_by_pk?: Maybe<Pis_Squadra>;
  /** fetch data from the table: "pis.tecnico_referente" */
  pis_tecnico_referente: Array<Pis_Tecnico_Referente>;
  /** fetch aggregated fields from the table: "pis.tecnico_referente" */
  pis_tecnico_referente_aggregate: Pis_Tecnico_Referente_Aggregate;
  /** fetch data from the table: "pis.tecnico_referente" using primary key columns */
  pis_tecnico_referente_by_pk?: Maybe<Pis_Tecnico_Referente>;
  /** fetch data from the table: "pis.vecchia_squadra" */
  pis_vecchia_squadra: Array<Pis_Vecchia_Squadra>;
  /** fetch aggregated fields from the table: "pis.vecchia_squadra" */
  pis_vecchia_squadra_aggregate: Pis_Vecchia_Squadra_Aggregate;
  /** fetch data from the table: "pis.vecchia_squadra" using primary key columns */
  pis_vecchia_squadra_by_pk?: Maybe<Pis_Vecchia_Squadra>;
  /** fetch data from the table: "pis.veicoli_impiegati" */
  pis_veicoli_impiegati: Array<Pis_Veicoli_Impiegati>;
  /** fetch aggregated fields from the table: "pis.veicoli_impiegati" */
  pis_veicoli_impiegati_aggregate: Pis_Veicoli_Impiegati_Aggregate;
  /** fetch data from the table: "pis.veicoli_impiegati" using primary key columns */
  pis_veicoli_impiegati_by_pk?: Maybe<Pis_Veicoli_Impiegati>;
  /** fetch data from the table: "protocollo._sezione_protocollo" */
  protocollo__sezione_protocollo: Array<Protocollo__Sezione_Protocollo>;
  /** fetch aggregated fields from the table: "protocollo._sezione_protocollo" */
  protocollo__sezione_protocollo_aggregate: Protocollo__Sezione_Protocollo_Aggregate;
  /** fetch data from the table: "protocollo._sezione_protocollo" using primary key columns */
  protocollo__sezione_protocollo_by_pk?: Maybe<Protocollo__Sezione_Protocollo>;
  /** fetch data from the table: "protocollo.protocollo" */
  protocollo_protocollo: Array<Protocollo_Protocollo>;
  /** fetch aggregated fields from the table: "protocollo.protocollo" */
  protocollo_protocollo_aggregate: Protocollo_Protocollo_Aggregate;
  /** fetch data from the table: "protocollo.protocollo" using primary key columns */
  protocollo_protocollo_by_pk?: Maybe<Protocollo_Protocollo>;
  /** fetch data from the table: "protocollo.protocollo_destinatario" */
  protocollo_protocollo_destinatario: Array<Protocollo_Protocollo_Destinatario>;
  /** fetch aggregated fields from the table: "protocollo.protocollo_destinatario" */
  protocollo_protocollo_destinatario_aggregate: Protocollo_Protocollo_Destinatario_Aggregate;
  /** fetch data from the table: "protocollo.protocollo_destinatario" using primary key columns */
  protocollo_protocollo_destinatario_by_pk?: Maybe<Protocollo_Protocollo_Destinatario>;
  /** fetch data from the table: "protocollo.protocollo_destinatario_esterno" */
  protocollo_protocollo_destinatario_esterno: Array<Protocollo_Protocollo_Destinatario_Esterno>;
  /** fetch aggregated fields from the table: "protocollo.protocollo_destinatario_esterno" */
  protocollo_protocollo_destinatario_esterno_aggregate: Protocollo_Protocollo_Destinatario_Esterno_Aggregate;
  /** fetch data from the table: "protocollo.protocollo_destinatario_esterno" using primary key columns */
  protocollo_protocollo_destinatario_esterno_by_pk?: Maybe<Protocollo_Protocollo_Destinatario_Esterno>;
  /** fetch data from the table: "sis._alimentazione_veicolo" */
  sis__alimentazione_veicolo: Array<Sis__Alimentazione_Veicolo>;
  /** fetch aggregated fields from the table: "sis._alimentazione_veicolo" */
  sis__alimentazione_veicolo_aggregate: Sis__Alimentazione_Veicolo_Aggregate;
  /** fetch data from the table: "sis._alimentazione_veicolo" using primary key columns */
  sis__alimentazione_veicolo_by_pk?: Maybe<Sis__Alimentazione_Veicolo>;
  /** fetch data from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  sis__condizioni_meteo_visibilita_limitata_tipologia: Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch aggregated fields from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" */
  sis__condizioni_meteo_visibilita_limitata_tipologia_aggregate: Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate;
  /** fetch data from the table: "sis._condizioni_meteo_visibilita_limitata_tipologia" using primary key columns */
  sis__condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch data from the table: "sis._conseguenza_veicolo" */
  sis__conseguenza_veicolo: Array<Sis__Conseguenza_Veicolo>;
  /** fetch aggregated fields from the table: "sis._conseguenza_veicolo" */
  sis__conseguenza_veicolo_aggregate: Sis__Conseguenza_Veicolo_Aggregate;
  /** fetch data from the table: "sis._conseguenza_veicolo" using primary key columns */
  sis__conseguenza_veicolo_by_pk?: Maybe<Sis__Conseguenza_Veicolo>;
  /** fetch data from the table: "sis._decessi_tipologia" */
  sis__decessi_tipologia: Array<Sis__Decessi_Tipologia>;
  /** fetch aggregated fields from the table: "sis._decessi_tipologia" */
  sis__decessi_tipologia_aggregate: Sis__Decessi_Tipologia_Aggregate;
  /** fetch data from the table: "sis._decessi_tipologia" using primary key columns */
  sis__decessi_tipologia_by_pk?: Maybe<Sis__Decessi_Tipologia>;
  /** fetch data from the table: "sis._destinazione_decisione" */
  sis__destinazione_decisione: Array<Sis__Destinazione_Decisione>;
  /** fetch aggregated fields from the table: "sis._destinazione_decisione" */
  sis__destinazione_decisione_aggregate: Sis__Destinazione_Decisione_Aggregate;
  /** fetch data from the table: "sis._destinazione_decisione" using primary key columns */
  sis__destinazione_decisione_by_pk?: Maybe<Sis__Destinazione_Decisione>;
  /** fetch data from the table: "sis._ente" */
  sis__ente: Array<Sis__Ente>;
  /** fetch aggregated fields from the table: "sis._ente" */
  sis__ente_aggregate: Sis__Ente_Aggregate;
  /** fetch data from the table: "sis._ente" using primary key columns */
  sis__ente_by_pk?: Maybe<Sis__Ente>;
  /** fetch data from the table: "sis._ente_secondario" */
  sis__ente_secondario: Array<Sis__Ente_Secondario>;
  /** fetch aggregated fields from the table: "sis._ente_secondario" */
  sis__ente_secondario_aggregate: Sis__Ente_Secondario_Aggregate;
  /** fetch data from the table: "sis._ente_secondario" using primary key columns */
  sis__ente_secondario_by_pk?: Maybe<Sis__Ente_Secondario>;
  /** fetch data from the table: "sis._impianto_semaforico" */
  sis__impianto_semaforico: Array<Sis__Impianto_Semaforico>;
  /** fetch aggregated fields from the table: "sis._impianto_semaforico" */
  sis__impianto_semaforico_aggregate: Sis__Impianto_Semaforico_Aggregate;
  /** fetch data from the table: "sis._impianto_semaforico" using primary key columns */
  sis__impianto_semaforico_by_pk?: Maybe<Sis__Impianto_Semaforico>;
  /** fetch data from the table: "sis._infortunato_informazione" */
  sis__infortunato_informazione: Array<Sis__Infortunato_Informazione>;
  /** fetch aggregated fields from the table: "sis._infortunato_informazione" */
  sis__infortunato_informazione_aggregate: Sis__Infortunato_Informazione_Aggregate;
  /** fetch data from the table: "sis._infortunato_informazione" using primary key columns */
  sis__infortunato_informazione_by_pk?: Maybe<Sis__Infortunato_Informazione>;
  /** fetch data from the table: "sis._intortunato_tasportato" */
  sis__intortunato_tasportato: Array<Sis__Intortunato_Tasportato>;
  /** fetch aggregated fields from the table: "sis._intortunato_tasportato" */
  sis__intortunato_tasportato_aggregate: Sis__Intortunato_Tasportato_Aggregate;
  /** fetch data from the table: "sis._intortunato_tasportato" using primary key columns */
  sis__intortunato_tasportato_by_pk?: Maybe<Sis__Intortunato_Tasportato>;
  /** fetch data from the table: "sis._localizzazione_altro" */
  sis__localizzazione_altro: Array<Sis__Localizzazione_Altro>;
  /** fetch aggregated fields from the table: "sis._localizzazione_altro" */
  sis__localizzazione_altro_aggregate: Sis__Localizzazione_Altro_Aggregate;
  /** fetch data from the table: "sis._localizzazione_altro" using primary key columns */
  sis__localizzazione_altro_by_pk?: Maybe<Sis__Localizzazione_Altro>;
  /** fetch data from the table: "sis._localizzazione_condizioni_atmosferiche" */
  sis__localizzazione_condizioni_atmosferiche: Array<Sis__Localizzazione_Condizioni_Atmosferiche>;
  /** fetch aggregated fields from the table: "sis._localizzazione_condizioni_atmosferiche" */
  sis__localizzazione_condizioni_atmosferiche_aggregate: Sis__Localizzazione_Condizioni_Atmosferiche_Aggregate;
  /** fetch data from the table: "sis._localizzazione_condizioni_atmosferiche" using primary key columns */
  sis__localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche>;
  /** fetch data from the table: "sis._localizzazione_condizioni_traffico" */
  sis__localizzazione_condizioni_traffico: Array<Sis__Localizzazione_Condizioni_Traffico>;
  /** fetch aggregated fields from the table: "sis._localizzazione_condizioni_traffico" */
  sis__localizzazione_condizioni_traffico_aggregate: Sis__Localizzazione_Condizioni_Traffico_Aggregate;
  /** fetch data from the table: "sis._localizzazione_condizioni_traffico" using primary key columns */
  sis__localizzazione_condizioni_traffico_by_pk?: Maybe<Sis__Localizzazione_Condizioni_Traffico>;
  /** fetch data from the table: "sis._localizzazione_extra_abitato" */
  sis__localizzazione_extra_abitato: Array<Sis__Localizzazione_Extra_Abitato>;
  /** fetch aggregated fields from the table: "sis._localizzazione_extra_abitato" */
  sis__localizzazione_extra_abitato_aggregate: Sis__Localizzazione_Extra_Abitato_Aggregate;
  /** fetch data from the table: "sis._localizzazione_extra_abitato" using primary key columns */
  sis__localizzazione_extra_abitato_by_pk?: Maybe<Sis__Localizzazione_Extra_Abitato>;
  /** fetch data from the table: "sis._localizzazione_fondo_stradale" */
  sis__localizzazione_fondo_stradale: Array<Sis__Localizzazione_Fondo_Stradale>;
  /** fetch aggregated fields from the table: "sis._localizzazione_fondo_stradale" */
  sis__localizzazione_fondo_stradale_aggregate: Sis__Localizzazione_Fondo_Stradale_Aggregate;
  /** fetch data from the table: "sis._localizzazione_fondo_stradale" using primary key columns */
  sis__localizzazione_fondo_stradale_by_pk?: Maybe<Sis__Localizzazione_Fondo_Stradale>;
  /** fetch data from the table: "sis._localizzazione_illuminazione" */
  sis__localizzazione_illuminazione: Array<Sis__Localizzazione_Illuminazione>;
  /** fetch aggregated fields from the table: "sis._localizzazione_illuminazione" */
  sis__localizzazione_illuminazione_aggregate: Sis__Localizzazione_Illuminazione_Aggregate;
  /** fetch data from the table: "sis._localizzazione_illuminazione" using primary key columns */
  sis__localizzazione_illuminazione_by_pk?: Maybe<Sis__Localizzazione_Illuminazione>;
  /** fetch data from the table: "sis._localizzazione_particolarita_strada" */
  sis__localizzazione_particolarita_strada: Array<Sis__Localizzazione_Particolarita_Strada>;
  /** fetch aggregated fields from the table: "sis._localizzazione_particolarita_strada" */
  sis__localizzazione_particolarita_strada_aggregate: Sis__Localizzazione_Particolarita_Strada_Aggregate;
  /** fetch data from the table: "sis._localizzazione_particolarita_strada" using primary key columns */
  sis__localizzazione_particolarita_strada_by_pk?: Maybe<Sis__Localizzazione_Particolarita_Strada>;
  /** fetch data from the table: "sis._localizzazione_pavimentazione" */
  sis__localizzazione_pavimentazione: Array<Sis__Localizzazione_Pavimentazione>;
  /** fetch aggregated fields from the table: "sis._localizzazione_pavimentazione" */
  sis__localizzazione_pavimentazione_aggregate: Sis__Localizzazione_Pavimentazione_Aggregate;
  /** fetch data from the table: "sis._localizzazione_pavimentazione" using primary key columns */
  sis__localizzazione_pavimentazione_by_pk?: Maybe<Sis__Localizzazione_Pavimentazione>;
  /** fetch data from the table: "sis._localizzazione_tipo_strada" */
  sis__localizzazione_tipo_strada: Array<Sis__Localizzazione_Tipo_Strada>;
  /** fetch aggregated fields from the table: "sis._localizzazione_tipo_strada" */
  sis__localizzazione_tipo_strada_aggregate: Sis__Localizzazione_Tipo_Strada_Aggregate;
  /** fetch data from the table: "sis._localizzazione_tipo_strada" using primary key columns */
  sis__localizzazione_tipo_strada_by_pk?: Maybe<Sis__Localizzazione_Tipo_Strada>;
  /** fetch data from the table: "sis._localizzazione_visibilita" */
  sis__localizzazione_visibilita: Array<Sis__Localizzazione_Visibilita>;
  /** fetch aggregated fields from the table: "sis._localizzazione_visibilita" */
  sis__localizzazione_visibilita_aggregate: Sis__Localizzazione_Visibilita_Aggregate;
  /** fetch data from the table: "sis._localizzazione_visibilita" using primary key columns */
  sis__localizzazione_visibilita_by_pk?: Maybe<Sis__Localizzazione_Visibilita>;
  /** fetch data from the table: "sis._natura_incidente" */
  sis__natura_incidente: Array<Sis__Natura_Incidente>;
  /** fetch aggregated fields from the table: "sis._natura_incidente" */
  sis__natura_incidente_aggregate: Sis__Natura_Incidente_Aggregate;
  /** fetch data from the table: "sis._natura_incidente" using primary key columns */
  sis__natura_incidente_by_pk?: Maybe<Sis__Natura_Incidente>;
  /** fetch data from the table: "sis._patente_categoria" */
  sis__patente_categoria: Array<Sis__Patente_Categoria>;
  /** fetch aggregated fields from the table: "sis._patente_categoria" */
  sis__patente_categoria_aggregate: Sis__Patente_Categoria_Aggregate;
  /** fetch data from the table: "sis._patente_categoria" using primary key columns */
  sis__patente_categoria_by_pk?: Maybe<Sis__Patente_Categoria>;
  /** fetch data from the table: "sis._posizione_finale_veicolo_carreggiata" */
  sis__posizione_finale_veicolo_carreggiata: Array<Sis__Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch aggregated fields from the table: "sis._posizione_finale_veicolo_carreggiata" */
  sis__posizione_finale_veicolo_carreggiata_aggregate: Sis__Posizione_Finale_Veicolo_Carreggiata_Aggregate;
  /** fetch data from the table: "sis._posizione_finale_veicolo_carreggiata" using primary key columns */
  sis__posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch data from the table: "sis._posizione_finale_veicolo_fuori_sede" */
  sis__posizione_finale_veicolo_fuori_sede: Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch aggregated fields from the table: "sis._posizione_finale_veicolo_fuori_sede" */
  sis__posizione_finale_veicolo_fuori_sede_aggregate: Sis__Posizione_Finale_Veicolo_Fuori_Sede_Aggregate;
  /** fetch data from the table: "sis._posizione_finale_veicolo_fuori_sede" using primary key columns */
  sis__posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch data from the table: "sis._posizione_finale_veicolo_margini" */
  sis__posizione_finale_veicolo_margini: Array<Sis__Posizione_Finale_Veicolo_Margini>;
  /** fetch aggregated fields from the table: "sis._posizione_finale_veicolo_margini" */
  sis__posizione_finale_veicolo_margini_aggregate: Sis__Posizione_Finale_Veicolo_Margini_Aggregate;
  /** fetch data from the table: "sis._posizione_finale_veicolo_margini" using primary key columns */
  sis__posizione_finale_veicolo_margini_by_pk?: Maybe<Sis__Posizione_Finale_Veicolo_Margini>;
  /** fetch data from the table: "sis._punti_rilievi_no_tipologia" */
  sis__punti_rilievi_no_tipologia: Array<Sis__Punti_Rilievi_No_Tipologia>;
  /** fetch aggregated fields from the table: "sis._punti_rilievi_no_tipologia" */
  sis__punti_rilievi_no_tipologia_aggregate: Sis__Punti_Rilievi_No_Tipologia_Aggregate;
  /** fetch data from the table: "sis._punti_rilievi_no_tipologia" using primary key columns */
  sis__punti_rilievi_no_tipologia_by_pk?: Maybe<Sis__Punti_Rilievi_No_Tipologia>;
  /** fetch data from the table: "sis._retrovisore_esterno" */
  sis__retrovisore_esterno: Array<Sis__Retrovisore_Esterno>;
  /** fetch aggregated fields from the table: "sis._retrovisore_esterno" */
  sis__retrovisore_esterno_aggregate: Sis__Retrovisore_Esterno_Aggregate;
  /** fetch data from the table: "sis._retrovisore_esterno" using primary key columns */
  sis__retrovisore_esterno_by_pk?: Maybe<Sis__Retrovisore_Esterno>;
  /** fetch data from the table: "sis._ris_consegnato_a" */
  sis__ris_consegnato_a: Array<Sis__Ris_Consegnato_A>;
  /** fetch aggregated fields from the table: "sis._ris_consegnato_a" */
  sis__ris_consegnato_a_aggregate: Sis__Ris_Consegnato_A_Aggregate;
  /** fetch data from the table: "sis._ris_consegnato_a" using primary key columns */
  sis__ris_consegnato_a_by_pk?: Maybe<Sis__Ris_Consegnato_A>;
  /** fetch data from the table: "sis._stato_ris" */
  sis__stato_ris: Array<Sis__Stato_Ris>;
  /** fetch aggregated fields from the table: "sis._stato_ris" */
  sis__stato_ris_aggregate: Sis__Stato_Ris_Aggregate;
  /** fetch data from the table: "sis._stato_ris" using primary key columns */
  sis__stato_ris_by_pk?: Maybe<Sis__Stato_Ris>;
  /** fetch data from the table: "sis._stato_veicolo" */
  sis__stato_veicolo: Array<Sis__Stato_Veicolo>;
  /** fetch aggregated fields from the table: "sis._stato_veicolo" */
  sis__stato_veicolo_aggregate: Sis__Stato_Veicolo_Aggregate;
  /** fetch data from the table: "sis._stato_veicolo" using primary key columns */
  sis__stato_veicolo_by_pk?: Maybe<Sis__Stato_Veicolo>;
  /** fetch data from the table: "sis._tipologia_ris" */
  sis__tipologia_ris: Array<Sis__Tipologia_Ris>;
  /** fetch aggregated fields from the table: "sis._tipologia_ris" */
  sis__tipologia_ris_aggregate: Sis__Tipologia_Ris_Aggregate;
  /** fetch data from the table: "sis._tipologia_ris" using primary key columns */
  sis__tipologia_ris_by_pk?: Maybe<Sis__Tipologia_Ris>;
  /** fetch data from the table: "sis._tipologia_veicolo" */
  sis__tipologia_veicolo: Array<Sis__Tipologia_Veicolo>;
  /** fetch aggregated fields from the table: "sis._tipologia_veicolo" */
  sis__tipologia_veicolo_aggregate: Sis__Tipologia_Veicolo_Aggregate;
  /** fetch data from the table: "sis._tipologia_veicolo" using primary key columns */
  sis__tipologia_veicolo_by_pk?: Maybe<Sis__Tipologia_Veicolo>;
  /** fetch data from the table: "sis._tipologia_verbale" */
  sis__tipologia_verbale: Array<Sis__Tipologia_Verbale>;
  /** fetch aggregated fields from the table: "sis._tipologia_verbale" */
  sis__tipologia_verbale_aggregate: Sis__Tipologia_Verbale_Aggregate;
  /** fetch data from the table: "sis._tipologia_verbale" using primary key columns */
  sis__tipologia_verbale_by_pk?: Maybe<Sis__Tipologia_Verbale>;
  /** fetch data from the table: "sis._traccia_suolo_frenata_tipologia" */
  sis__traccia_suolo_frenata_tipologia: Array<Sis__Traccia_Suolo_Frenata_Tipologia>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_frenata_tipologia" */
  sis__traccia_suolo_frenata_tipologia_aggregate: Sis__Traccia_Suolo_Frenata_Tipologia_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_frenata_tipologia" using primary key columns */
  sis__traccia_suolo_frenata_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione" */
  sis__traccia_suolo_terminazione: Array<Sis__Traccia_Suolo_Terminazione>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione" */
  sis__traccia_suolo_terminazione_aggregate: Sis__Traccia_Suolo_Terminazione_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_andamento" */
  sis__traccia_suolo_terminazione_andamento: Array<Sis__Traccia_Suolo_Terminazione_Andamento>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_andamento" */
  sis__traccia_suolo_terminazione_andamento_aggregate: Sis__Traccia_Suolo_Terminazione_Andamento_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_andamento" using primary key columns */
  sis__traccia_suolo_terminazione_andamento_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione" using primary key columns */
  sis__traccia_suolo_terminazione_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_forma" */
  sis__traccia_suolo_terminazione_forma: Array<Sis__Traccia_Suolo_Terminazione_Forma>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_forma" */
  sis__traccia_suolo_terminazione_forma_aggregate: Sis__Traccia_Suolo_Terminazione_Forma_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_forma" using primary key columns */
  sis__traccia_suolo_terminazione_forma_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_intensita" */
  sis__traccia_suolo_terminazione_intensita: Array<Sis__Traccia_Suolo_Terminazione_Intensita>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_intensita" */
  sis__traccia_suolo_terminazione_intensita_aggregate: Sis__Traccia_Suolo_Terminazione_Intensita_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_intensita" using primary key columns */
  sis__traccia_suolo_terminazione_intensita_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita>;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_tipologia" */
  sis__traccia_suolo_terminazione_tipologia: Array<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_terminazione_tipologia" */
  sis__traccia_suolo_terminazione_tipologia_aggregate: Sis__Traccia_Suolo_Terminazione_Tipologia_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_terminazione_tipologia" using primary key columns */
  sis__traccia_suolo_terminazione_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia>;
  /** fetch data from the table: "sis._traccia_suolo_tipologia" */
  sis__traccia_suolo_tipologia: Array<Sis__Traccia_Suolo_Tipologia>;
  /** fetch aggregated fields from the table: "sis._traccia_suolo_tipologia" */
  sis__traccia_suolo_tipologia_aggregate: Sis__Traccia_Suolo_Tipologia_Aggregate;
  /** fetch data from the table: "sis._traccia_suolo_tipologia" using primary key columns */
  sis__traccia_suolo_tipologia_by_pk?: Maybe<Sis__Traccia_Suolo_Tipologia>;
  /** fetch data from the table: "sis._trasportato_posizione" */
  sis__trasportato_posizione: Array<Sis__Trasportato_Posizione>;
  /** fetch aggregated fields from the table: "sis._trasportato_posizione" */
  sis__trasportato_posizione_aggregate: Sis__Trasportato_Posizione_Aggregate;
  /** fetch data from the table: "sis._trasportato_posizione" using primary key columns */
  sis__trasportato_posizione_by_pk?: Maybe<Sis__Trasportato_Posizione>;
  /** fetch data from the table: "sis._trasportato_stato" */
  sis__trasportato_stato: Array<Sis__Trasportato_Stato>;
  /** fetch aggregated fields from the table: "sis._trasportato_stato" */
  sis__trasportato_stato_aggregate: Sis__Trasportato_Stato_Aggregate;
  /** fetch data from the table: "sis._trasportato_stato" using primary key columns */
  sis__trasportato_stato_by_pk?: Maybe<Sis__Trasportato_Stato>;
  /** fetch data from the table: "sis._uso_veicolo" */
  sis__uso_veicolo: Array<Sis__Uso_Veicolo>;
  /** fetch aggregated fields from the table: "sis._uso_veicolo" */
  sis__uso_veicolo_aggregate: Sis__Uso_Veicolo_Aggregate;
  /** fetch data from the table: "sis._uso_veicolo" using primary key columns */
  sis__uso_veicolo_by_pk?: Maybe<Sis__Uso_Veicolo>;
  /** fetch data from the table: "sis._visibilita_limitata_tipologia" */
  sis__visibilita_limitata_tipologia: Array<Sis__Visibilita_Limitata_Tipologia>;
  /** fetch aggregated fields from the table: "sis._visibilita_limitata_tipologia" */
  sis__visibilita_limitata_tipologia_aggregate: Sis__Visibilita_Limitata_Tipologia_Aggregate;
  /** fetch data from the table: "sis._visibilita_limitata_tipologia" using primary key columns */
  sis__visibilita_limitata_tipologia_by_pk?: Maybe<Sis__Visibilita_Limitata_Tipologia>;
  /** fetch data from the table: "sis.accertamento" */
  sis_accertamento: Array<Sis_Accertamento>;
  /** fetch aggregated fields from the table: "sis.accertamento" */
  sis_accertamento_aggregate: Sis_Accertamento_Aggregate;
  /** fetch data from the table: "sis.accertamento" using primary key columns */
  sis_accertamento_by_pk?: Maybe<Sis_Accertamento>;
  /** fetch data from the table: "sis.agente_accertatore" */
  sis_agente_accertatore: Array<Sis_Agente_Accertatore>;
  /** fetch aggregated fields from the table: "sis.agente_accertatore" */
  sis_agente_accertatore_aggregate: Sis_Agente_Accertatore_Aggregate;
  /** fetch data from the table: "sis.agente_accertatore" using primary key columns */
  sis_agente_accertatore_by_pk?: Maybe<Sis_Agente_Accertatore>;
  /** fetch data from the table: "sis.altro" */
  sis_altro: Array<Sis_Altro>;
  /** fetch aggregated fields from the table: "sis.altro" */
  sis_altro_aggregate: Sis_Altro_Aggregate;
  /** fetch data from the table: "sis.altro" using primary key columns */
  sis_altro_by_pk?: Maybe<Sis_Altro>;
  /** fetch data from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia: Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch aggregated fields from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" */
  sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_aggregate: Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Aggregate;
  /** fetch data from the table: "sis.assegnazione_condizioni_meteo_visibilita_limitata_tipologia" using primary key columns */
  sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia_by_pk?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia>;
  /** fetch data from the table: "sis.assegnazione_unita_operativa" */
  sis_assegnazione_unita_operativa: Array<Sis_Assegnazione_Unita_Operativa>;
  /** fetch aggregated fields from the table: "sis.assegnazione_unita_operativa" */
  sis_assegnazione_unita_operativa_aggregate: Sis_Assegnazione_Unita_Operativa_Aggregate;
  /** fetch data from the table: "sis.assegnazione_unita_operativa" using primary key columns */
  sis_assegnazione_unita_operativa_by_pk?: Maybe<Sis_Assegnazione_Unita_Operativa>;
  /** fetch data from the table: "sis.associazione_conseguenza_veicolo" */
  sis_associazione_conseguenza_veicolo: Array<Sis_Associazione_Conseguenza_Veicolo>;
  /** fetch aggregated fields from the table: "sis.associazione_conseguenza_veicolo" */
  sis_associazione_conseguenza_veicolo_aggregate: Sis_Associazione_Conseguenza_Veicolo_Aggregate;
  /** fetch data from the table: "sis.associazione_conseguenza_veicolo" using primary key columns */
  sis_associazione_conseguenza_veicolo_by_pk?: Maybe<Sis_Associazione_Conseguenza_Veicolo>;
  /** fetch data from the table: "sis.associazione_decessi_tipologie" */
  sis_associazione_decessi_tipologie: Array<Sis_Associazione_Decessi_Tipologie>;
  /** fetch aggregated fields from the table: "sis.associazione_decessi_tipologie" */
  sis_associazione_decessi_tipologie_aggregate: Sis_Associazione_Decessi_Tipologie_Aggregate;
  /** fetch data from the table: "sis.associazione_decessi_tipologie" using primary key columns */
  sis_associazione_decessi_tipologie_by_pk?: Maybe<Sis_Associazione_Decessi_Tipologie>;
  /** fetch data from the table: "sis.associazione_ente_primo_intervento" */
  sis_associazione_ente_primo_intervento: Array<Sis_Associazione_Ente_Primo_Intervento>;
  /** fetch aggregated fields from the table: "sis.associazione_ente_primo_intervento" */
  sis_associazione_ente_primo_intervento_aggregate: Sis_Associazione_Ente_Primo_Intervento_Aggregate;
  /** fetch data from the table: "sis.associazione_ente_primo_intervento" using primary key columns */
  sis_associazione_ente_primo_intervento_by_pk?: Maybe<Sis_Associazione_Ente_Primo_Intervento>;
  /** fetch data from the table: "sis.associazione_ente_secondario_intervenuti" */
  sis_associazione_ente_secondario_intervenuti: Array<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** fetch aggregated fields from the table: "sis.associazione_ente_secondario_intervenuti" */
  sis_associazione_ente_secondario_intervenuti_aggregate: Sis_Associazione_Ente_Secondario_Intervenuti_Aggregate;
  /** fetch data from the table: "sis.associazione_ente_secondario_intervenuti" using primary key columns */
  sis_associazione_ente_secondario_intervenuti_by_pk?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti>;
  /** fetch data from the table: "sis.associazione_ente_segnalatore" */
  sis_associazione_ente_segnalatore: Array<Sis_Associazione_Ente_Segnalatore>;
  /** fetch aggregated fields from the table: "sis.associazione_ente_segnalatore" */
  sis_associazione_ente_segnalatore_aggregate: Sis_Associazione_Ente_Segnalatore_Aggregate;
  /** fetch data from the table: "sis.associazione_ente_segnalatore" using primary key columns */
  sis_associazione_ente_segnalatore_by_pk?: Maybe<Sis_Associazione_Ente_Segnalatore>;
  /** fetch data from the table: "sis.associazione_impianto_semaforico" */
  sis_associazione_impianto_semaforico: Array<Sis_Associazione_Impianto_Semaforico>;
  /** fetch aggregated fields from the table: "sis.associazione_impianto_semaforico" */
  sis_associazione_impianto_semaforico_aggregate: Sis_Associazione_Impianto_Semaforico_Aggregate;
  /** fetch data from the table: "sis.associazione_impianto_semaforico" using primary key columns */
  sis_associazione_impianto_semaforico_by_pk?: Maybe<Sis_Associazione_Impianto_Semaforico>;
  /** fetch data from the table: "sis.associazione_informazioni_infortunato" */
  sis_associazione_informazioni_infortunato: Array<Sis_Associazione_Informazioni_Infortunato>;
  /** fetch aggregated fields from the table: "sis.associazione_informazioni_infortunato" */
  sis_associazione_informazioni_infortunato_aggregate: Sis_Associazione_Informazioni_Infortunato_Aggregate;
  /** fetch data from the table: "sis.associazione_informazioni_infortunato" using primary key columns */
  sis_associazione_informazioni_infortunato_by_pk?: Maybe<Sis_Associazione_Informazioni_Infortunato>;
  /** fetch data from the table: "sis.associazione_localizzazione_altro" */
  sis_associazione_localizzazione_altro: Array<Sis_Associazione_Localizzazione_Altro>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_altro" */
  sis_associazione_localizzazione_altro_aggregate: Sis_Associazione_Localizzazione_Altro_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_altro" using primary key columns */
  sis_associazione_localizzazione_altro_by_pk?: Maybe<Sis_Associazione_Localizzazione_Altro>;
  /** fetch data from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  sis_associazione_localizzazione_condizioni_atmosferiche: Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" */
  sis_associazione_localizzazione_condizioni_atmosferiche_aggregate: Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_condizioni_atmosferiche" using primary key columns */
  sis_associazione_localizzazione_condizioni_atmosferiche_by_pk?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche>;
  /** fetch data from the table: "sis.associazione_localizzazione_extra_abitato" */
  sis_associazione_localizzazione_extra_abitato: Array<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_extra_abitato" */
  sis_associazione_localizzazione_extra_abitato_aggregate: Sis_Associazione_Localizzazione_Extra_Abitato_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_extra_abitato" using primary key columns */
  sis_associazione_localizzazione_extra_abitato_by_pk?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato>;
  /** fetch data from the table: "sis.associazione_localizzazione_fondo_stradale" */
  sis_associazione_localizzazione_fondo_stradale: Array<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_fondo_stradale" */
  sis_associazione_localizzazione_fondo_stradale_aggregate: Sis_Associazione_Localizzazione_Fondo_Stradale_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_fondo_stradale" using primary key columns */
  sis_associazione_localizzazione_fondo_stradale_by_pk?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale>;
  /** fetch data from the table: "sis.associazione_localizzazione_illuminazione" */
  sis_associazione_localizzazione_illuminazione: Array<Sis_Associazione_Localizzazione_Illuminazione>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_illuminazione" */
  sis_associazione_localizzazione_illuminazione_aggregate: Sis_Associazione_Localizzazione_Illuminazione_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_illuminazione" using primary key columns */
  sis_associazione_localizzazione_illuminazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Illuminazione>;
  /** fetch data from the table: "sis.associazione_localizzazione_particolarita_strada" */
  sis_associazione_localizzazione_particolarita_strada: Array<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_particolarita_strada" */
  sis_associazione_localizzazione_particolarita_strada_aggregate: Sis_Associazione_Localizzazione_Particolarita_Strada_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_particolarita_strada" using primary key columns */
  sis_associazione_localizzazione_particolarita_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada>;
  /** fetch data from the table: "sis.associazione_localizzazione_pavimentazione" */
  sis_associazione_localizzazione_pavimentazione: Array<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_pavimentazione" */
  sis_associazione_localizzazione_pavimentazione_aggregate: Sis_Associazione_Localizzazione_Pavimentazione_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_pavimentazione" using primary key columns */
  sis_associazione_localizzazione_pavimentazione_by_pk?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione>;
  /** fetch data from the table: "sis.associazione_localizzazione_tipo_strada" */
  sis_associazione_localizzazione_tipo_strada: Array<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_tipo_strada" */
  sis_associazione_localizzazione_tipo_strada_aggregate: Sis_Associazione_Localizzazione_Tipo_Strada_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_tipo_strada" using primary key columns */
  sis_associazione_localizzazione_tipo_strada_by_pk?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada>;
  /** fetch data from the table: "sis.associazione_localizzazione_visibilita" */
  sis_associazione_localizzazione_visibilita: Array<Sis_Associazione_Localizzazione_Visibilita>;
  /** fetch aggregated fields from the table: "sis.associazione_localizzazione_visibilita" */
  sis_associazione_localizzazione_visibilita_aggregate: Sis_Associazione_Localizzazione_Visibilita_Aggregate;
  /** fetch data from the table: "sis.associazione_localizzazione_visibilita" using primary key columns */
  sis_associazione_localizzazione_visibilita_by_pk?: Maybe<Sis_Associazione_Localizzazione_Visibilita>;
  /** fetch data from the table: "sis.associazione_natura_incidente" */
  sis_associazione_natura_incidente: Array<Sis_Associazione_Natura_Incidente>;
  /** fetch aggregated fields from the table: "sis.associazione_natura_incidente" */
  sis_associazione_natura_incidente_aggregate: Sis_Associazione_Natura_Incidente_Aggregate;
  /** fetch data from the table: "sis.associazione_natura_incidente" using primary key columns */
  sis_associazione_natura_incidente_by_pk?: Maybe<Sis_Associazione_Natura_Incidente>;
  /** fetch data from the table: "sis.associazione_patente" */
  sis_associazione_patente: Array<Sis_Associazione_Patente>;
  /** fetch aggregated fields from the table: "sis.associazione_patente" */
  sis_associazione_patente_aggregate: Sis_Associazione_Patente_Aggregate;
  /** fetch data from the table: "sis.associazione_patente" using primary key columns */
  sis_associazione_patente_by_pk?: Maybe<Sis_Associazione_Patente>;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  sis_associazione_posizione_finale_veicolo_carreggiata: Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch aggregated fields from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" */
  sis_associazione_posizione_finale_veicolo_carreggiata_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Aggregate;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_carreggiata" using primary key columns */
  sis_associazione_posizione_finale_veicolo_carreggiata_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata>;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  sis_associazione_posizione_finale_veicolo_fuori_sede: Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch aggregated fields from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" */
  sis_associazione_posizione_finale_veicolo_fuori_sede_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Aggregate;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_fuori_sede" using primary key columns */
  sis_associazione_posizione_finale_veicolo_fuori_sede_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede>;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_margini" */
  sis_associazione_posizione_finale_veicolo_margini: Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** fetch aggregated fields from the table: "sis.associazione_posizione_finale_veicolo_margini" */
  sis_associazione_posizione_finale_veicolo_margini_aggregate: Sis_Associazione_Posizione_Finale_Veicolo_Margini_Aggregate;
  /** fetch data from the table: "sis.associazione_posizione_finale_veicolo_margini" using primary key columns */
  sis_associazione_posizione_finale_veicolo_margini_by_pk?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini>;
  /** fetch data from the table: "sis.associazione_tipologia_ris" */
  sis_associazione_tipologia_ris: Array<Sis_Associazione_Tipologia_Ris>;
  /** fetch aggregated fields from the table: "sis.associazione_tipologia_ris" */
  sis_associazione_tipologia_ris_aggregate: Sis_Associazione_Tipologia_Ris_Aggregate;
  /** fetch data from the table: "sis.associazione_tipologia_ris" using primary key columns */
  sis_associazione_tipologia_ris_by_pk?: Maybe<Sis_Associazione_Tipologia_Ris>;
  /** fetch data from the table: "sis.associzione_localizzazione_condizioni_traffico" */
  sis_associzione_localizzazione_condizioni_traffico: Array<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** fetch aggregated fields from the table: "sis.associzione_localizzazione_condizioni_traffico" */
  sis_associzione_localizzazione_condizioni_traffico_aggregate: Sis_Associzione_Localizzazione_Condizioni_Traffico_Aggregate;
  /** fetch data from the table: "sis.associzione_localizzazione_condizioni_traffico" using primary key columns */
  sis_associzione_localizzazione_condizioni_traffico_by_pk?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico>;
  /** fetch data from the table: "sis.conducente" */
  sis_conducente: Array<Sis_Conducente>;
  /** fetch aggregated fields from the table: "sis.conducente" */
  sis_conducente_aggregate: Sis_Conducente_Aggregate;
  /** fetch data from the table: "sis.conducente" using primary key columns */
  sis_conducente_by_pk?: Maybe<Sis_Conducente>;
  /** fetch data from the table: "sis.evento_sis" */
  sis_evento_sis: Array<Sis_Evento_Sis>;
  /** fetch aggregated fields from the table: "sis.evento_sis" */
  sis_evento_sis_aggregate: Sis_Evento_Sis_Aggregate;
  /** fetch data from the table: "sis.evento_sis" using primary key columns */
  sis_evento_sis_by_pk?: Maybe<Sis_Evento_Sis>;
  /** fetch data from the table: "sis.infortunato" */
  sis_infortunato: Array<Sis_Infortunato>;
  /** fetch aggregated fields from the table: "sis.infortunato" */
  sis_infortunato_aggregate: Sis_Infortunato_Aggregate;
  /** fetch data from the table: "sis.infortunato" using primary key columns */
  sis_infortunato_by_pk?: Maybe<Sis_Infortunato>;
  /** fetch data from the table: "sis.infrazione" */
  sis_infrazione: Array<Sis_Infrazione>;
  /** fetch aggregated fields from the table: "sis.infrazione" */
  sis_infrazione_aggregate: Sis_Infrazione_Aggregate;
  /** fetch data from the table: "sis.infrazione" using primary key columns */
  sis_infrazione_by_pk?: Maybe<Sis_Infrazione>;
  /** fetch data from the table: "sis.locatario" */
  sis_locatario: Array<Sis_Locatario>;
  /** fetch aggregated fields from the table: "sis.locatario" */
  sis_locatario_aggregate: Sis_Locatario_Aggregate;
  /** fetch data from the table: "sis.locatario" using primary key columns */
  sis_locatario_by_pk?: Maybe<Sis_Locatario>;
  /** fetch data from the table: "sis.pedone" */
  sis_pedone: Array<Sis_Pedone>;
  /** fetch aggregated fields from the table: "sis.pedone" */
  sis_pedone_aggregate: Sis_Pedone_Aggregate;
  /** fetch data from the table: "sis.pedone" using primary key columns */
  sis_pedone_by_pk?: Maybe<Sis_Pedone>;
  /** fetch data from the table: "sis.proprietario" */
  sis_proprietario: Array<Sis_Proprietario>;
  /** fetch aggregated fields from the table: "sis.proprietario" */
  sis_proprietario_aggregate: Sis_Proprietario_Aggregate;
  /** fetch data from the table: "sis.proprietario" using primary key columns */
  sis_proprietario_by_pk?: Maybe<Sis_Proprietario>;
  /** fetch data from the table: "sis.proprietario_giuridico" */
  sis_proprietario_giuridico: Array<Sis_Proprietario_Giuridico>;
  /** fetch aggregated fields from the table: "sis.proprietario_giuridico" */
  sis_proprietario_giuridico_aggregate: Sis_Proprietario_Giuridico_Aggregate;
  /** fetch data from the table: "sis.proprietario_giuridico" using primary key columns */
  sis_proprietario_giuridico_by_pk?: Maybe<Sis_Proprietario_Giuridico>;
  /** fetch data from the table: "sis.ris" */
  sis_ris: Array<Sis_Ris>;
  /** fetch aggregated fields from the table: "sis.ris" */
  sis_ris_aggregate: Sis_Ris_Aggregate;
  /** fetch data from the table: "sis.ris" using primary key columns */
  sis_ris_by_pk?: Maybe<Sis_Ris>;
  /** fetch data from the table: "sis.testimone" */
  sis_testimone: Array<Sis_Testimone>;
  /** fetch aggregated fields from the table: "sis.testimone" */
  sis_testimone_aggregate: Sis_Testimone_Aggregate;
  /** fetch data from the table: "sis.testimone" using primary key columns */
  sis_testimone_by_pk?: Maybe<Sis_Testimone>;
  /** fetch data from the table: "sis.trasportati_veicolo" */
  sis_trasportati_veicolo: Array<Sis_Trasportati_Veicolo>;
  /** fetch aggregated fields from the table: "sis.trasportati_veicolo" */
  sis_trasportati_veicolo_aggregate: Sis_Trasportati_Veicolo_Aggregate;
  /** fetch data from the table: "sis.trasportati_veicolo" using primary key columns */
  sis_trasportati_veicolo_by_pk?: Maybe<Sis_Trasportati_Veicolo>;
  /** fetch data from the table: "sis.trasportato" */
  sis_trasportato: Array<Sis_Trasportato>;
  /** fetch aggregated fields from the table: "sis.trasportato" */
  sis_trasportato_aggregate: Sis_Trasportato_Aggregate;
  /** fetch data from the table: "sis.trasportato" using primary key columns */
  sis_trasportato_by_pk?: Maybe<Sis_Trasportato>;
  /** fetch data from the table: "sis.unita_operativa" */
  sis_unita_operativa: Array<Sis_Unita_Operativa>;
  /** fetch aggregated fields from the table: "sis.unita_operativa" */
  sis_unita_operativa_aggregate: Sis_Unita_Operativa_Aggregate;
  /** fetch data from the table: "sis.unita_operativa" using primary key columns */
  sis_unita_operativa_by_pk?: Maybe<Sis_Unita_Operativa>;
  /** fetch data from the table: "sis.vecchia_unita_operativa" */
  sis_vecchia_unita_operativa: Array<Sis_Vecchia_Unita_Operativa>;
  /** fetch aggregated fields from the table: "sis.vecchia_unita_operativa" */
  sis_vecchia_unita_operativa_aggregate: Sis_Vecchia_Unita_Operativa_Aggregate;
  /** fetch data from the table: "sis.vecchia_unita_operativa" using primary key columns */
  sis_vecchia_unita_operativa_by_pk?: Maybe<Sis_Vecchia_Unita_Operativa>;
  /** fetch data from the table: "sis.veicolo" */
  sis_veicolo: Array<Sis_Veicolo>;
  /** fetch aggregated fields from the table: "sis.veicolo" */
  sis_veicolo_aggregate: Sis_Veicolo_Aggregate;
  /** fetch data from the table: "sis.veicolo" using primary key columns */
  sis_veicolo_by_pk?: Maybe<Sis_Veicolo>;
  /** fetch data from the table: "sis.verbale" */
  sis_verbale: Array<Sis_Verbale>;
  /** fetch aggregated fields from the table: "sis.verbale" */
  sis_verbale_aggregate: Sis_Verbale_Aggregate;
  /** fetch data from the table: "sis.verbale" using primary key columns */
  sis_verbale_by_pk?: Maybe<Sis_Verbale>;
  /** fetch data from the table: "toponomastica.assegnazione_quartiere" */
  toponomastica_assegnazione_quartiere: Array<Toponomastica_Assegnazione_Quartiere>;
  /** fetch aggregated fields from the table: "toponomastica.assegnazione_quartiere" */
  toponomastica_assegnazione_quartiere_aggregate: Toponomastica_Assegnazione_Quartiere_Aggregate;
  /** fetch data from the table: "toponomastica.assegnazione_quartiere" using primary key columns */
  toponomastica_assegnazione_quartiere_by_pk?: Maybe<Toponomastica_Assegnazione_Quartiere>;
  /** fetch data from the table: "toponomastica.assegnazione_toponimo" */
  toponomastica_assegnazione_toponimo: Array<Toponomastica_Assegnazione_Toponimo>;
  /** fetch aggregated fields from the table: "toponomastica.assegnazione_toponimo" */
  toponomastica_assegnazione_toponimo_aggregate: Toponomastica_Assegnazione_Toponimo_Aggregate;
  /** fetch data from the table: "toponomastica.assegnazione_toponimo" using primary key columns */
  toponomastica_assegnazione_toponimo_by_pk?: Maybe<Toponomastica_Assegnazione_Toponimo>;
  /** fetch data from the table: "toponomastica.dug" */
  toponomastica_dug: Array<Toponomastica_Dug>;
  /** fetch aggregated fields from the table: "toponomastica.dug" */
  toponomastica_dug_aggregate: Toponomastica_Dug_Aggregate;
  /** fetch data from the table: "toponomastica.dug" using primary key columns */
  toponomastica_dug_by_pk?: Maybe<Toponomastica_Dug>;
  /** fetch data from the table: "toponomastica.municipalita" */
  toponomastica_municipalita: Array<Toponomastica_Municipalita>;
  /** fetch aggregated fields from the table: "toponomastica.municipalita" */
  toponomastica_municipalita_aggregate: Toponomastica_Municipalita_Aggregate;
  /** fetch data from the table: "toponomastica.municipalita" using primary key columns */
  toponomastica_municipalita_by_pk?: Maybe<Toponomastica_Municipalita>;
  /** fetch data from the table: "toponomastica.quartiere" */
  toponomastica_quartiere: Array<Toponomastica_Quartiere>;
  /** fetch aggregated fields from the table: "toponomastica.quartiere" */
  toponomastica_quartiere_aggregate: Toponomastica_Quartiere_Aggregate;
  /** fetch data from the table: "toponomastica.quartiere" using primary key columns */
  toponomastica_quartiere_by_pk?: Maybe<Toponomastica_Quartiere>;
  /** fetch data from the table: "toponomastica.tipologia" */
  toponomastica_tipologia: Array<Toponomastica_Tipologia>;
  /** fetch aggregated fields from the table: "toponomastica.tipologia" */
  toponomastica_tipologia_aggregate: Toponomastica_Tipologia_Aggregate;
  /** fetch data from the table: "toponomastica.tipologia" using primary key columns */
  toponomastica_tipologia_by_pk?: Maybe<Toponomastica_Tipologia>;
  /** fetch data from the table: "toponomastica.toponimo" */
  toponomastica_toponimo: Array<Toponomastica_Toponimo>;
  /** fetch aggregated fields from the table: "toponomastica.toponimo" */
  toponomastica_toponimo_aggregate: Toponomastica_Toponimo_Aggregate;
  /** fetch data from the table: "toponomastica.toponimo" using primary key columns */
  toponomastica_toponimo_by_pk?: Maybe<Toponomastica_Toponimo>;
  /** fetch data from the table: "toponomastica.vecchia_municipalita" */
  toponomastica_vecchia_municipalita: Array<Toponomastica_Vecchia_Municipalita>;
  /** fetch aggregated fields from the table: "toponomastica.vecchia_municipalita" */
  toponomastica_vecchia_municipalita_aggregate: Toponomastica_Vecchia_Municipalita_Aggregate;
  /** fetch data from the table: "toponomastica.vecchia_municipalita" using primary key columns */
  toponomastica_vecchia_municipalita_by_pk?: Maybe<Toponomastica_Vecchia_Municipalita>;
  /** fetch data from the table: "toponomastica.vecchio_quartiere" */
  toponomastica_vecchio_quartiere: Array<Toponomastica_Vecchio_Quartiere>;
  /** fetch aggregated fields from the table: "toponomastica.vecchio_quartiere" */
  toponomastica_vecchio_quartiere_aggregate: Toponomastica_Vecchio_Quartiere_Aggregate;
  /** fetch data from the table: "toponomastica.vecchio_quartiere" using primary key columns */
  toponomastica_vecchio_quartiere_by_pk?: Maybe<Toponomastica_Vecchio_Quartiere>;
  /** fetch data from the table: "toponomastica.vecchio_toponimo" */
  toponomastica_vecchio_toponimo: Array<Toponomastica_Vecchio_Toponimo>;
  /** fetch aggregated fields from the table: "toponomastica.vecchio_toponimo" */
  toponomastica_vecchio_toponimo_aggregate: Toponomastica_Vecchio_Toponimo_Aggregate;
  /** fetch data from the table: "toponomastica.vecchio_toponimo" using primary key columns */
  toponomastica_vecchio_toponimo_by_pk?: Maybe<Toponomastica_Vecchio_Toponimo>;
};


export type Subscription_Root_CittaArgs = {
  distinct_on?: Maybe<Array<_Citta_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Citta_Order_By>>;
  where?: Maybe<_Citta_Bool_Exp>;
};


export type Subscription_Root_Citta_AggregateArgs = {
  distinct_on?: Maybe<Array<_Citta_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Citta_Order_By>>;
  where?: Maybe<_Citta_Bool_Exp>;
};


export type Subscription_Root_Citta_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_Root_NazioneArgs = {
  distinct_on?: Maybe<Array<_Nazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Nazione_Order_By>>;
  where?: Maybe<_Nazione_Bool_Exp>;
};


export type Subscription_Root_Nazione_AggregateArgs = {
  distinct_on?: Maybe<Array<_Nazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Nazione_Order_By>>;
  where?: Maybe<_Nazione_Bool_Exp>;
};


export type Subscription_Root_Nazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_Root_SessoArgs = {
  distinct_on?: Maybe<Array<_Sesso_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sesso_Order_By>>;
  where?: Maybe<_Sesso_Bool_Exp>;
};


export type Subscription_Root_Sesso_AggregateArgs = {
  distinct_on?: Maybe<Array<_Sesso_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sesso_Order_By>>;
  where?: Maybe<_Sesso_Bool_Exp>;
};


export type Subscription_Root_Sesso_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_Root_SinoaltroArgs = {
  distinct_on?: Maybe<Array<_Sinoaltro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sinoaltro_Order_By>>;
  where?: Maybe<_Sinoaltro_Bool_Exp>;
};


export type Subscription_Root_Sinoaltro_AggregateArgs = {
  distinct_on?: Maybe<Array<_Sinoaltro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Sinoaltro_Order_By>>;
  where?: Maybe<_Sinoaltro_Bool_Exp>;
};


export type Subscription_Root_Sinoaltro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_Root_TitoloArgs = {
  distinct_on?: Maybe<Array<_Titolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Titolo_Order_By>>;
  where?: Maybe<_Titolo_Bool_Exp>;
};


export type Subscription_Root_Titolo_AggregateArgs = {
  distinct_on?: Maybe<Array<_Titolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<_Titolo_Order_By>>;
  where?: Maybe<_Titolo_Bool_Exp>;
};


export type Subscription_Root_Titolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootAgcos_AgcosArgs = {
  distinct_on?: Maybe<Array<Agcos_Agcos_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Agcos_Order_By>>;
  where?: Maybe<Agcos_Agcos_Bool_Exp>;
};


export type Subscription_RootAgcos_Agcos_AggregateArgs = {
  distinct_on?: Maybe<Array<Agcos_Agcos_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Agcos_Order_By>>;
  where?: Maybe<Agcos_Agcos_Bool_Exp>;
};


export type Subscription_RootAgcos_Agcos_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootAgcos_ImportArgs = {
  distinct_on?: Maybe<Array<Agcos_Import_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Import_Order_By>>;
  where?: Maybe<Agcos_Import_Bool_Exp>;
};


export type Subscription_RootAgcos_Import_AggregateArgs = {
  distinct_on?: Maybe<Array<Agcos_Import_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Agcos_Import_Order_By>>;
  where?: Maybe<Agcos_Import_Bool_Exp>;
};


export type Subscription_RootAgcos_Import_By_PkArgs = {
  updated_at: Scalars['timestamptz'];
};


export type Subscription_RootGis__Specifica_Posizionamento_ToponimoArgs = {
  distinct_on?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>;
};


export type Subscription_RootGis__Specifica_Posizionamento_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Specifica_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Specifica_Posizionamento_Toponimo_Bool_Exp>;
};


export type Subscription_RootGis__Specifica_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootGis__Tipologia_Posizionamento_ToponimoArgs = {
  distinct_on?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>;
};


export type Subscription_RootGis__Tipologia_Posizionamento_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis__Tipologia_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis__Tipologia_Posizionamento_Toponimo_Bool_Exp>;
};


export type Subscription_RootGis__Tipologia_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootGis_CivicoArgs = {
  distinct_on?: Maybe<Array<Gis_Civico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Civico_Order_By>>;
  where?: Maybe<Gis_Civico_Bool_Exp>;
};


export type Subscription_RootGis_Civico_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Civico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Civico_Order_By>>;
  where?: Maybe<Gis_Civico_Bool_Exp>;
};


export type Subscription_RootGis_Civico_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootGis_Connessione_GrafoArgs = {
  distinct_on?: Maybe<Array<Gis_Connessione_Grafo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Connessione_Grafo_Order_By>>;
  where?: Maybe<Gis_Connessione_Grafo_Bool_Exp>;
};


export type Subscription_RootGis_Connessione_Grafo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Connessione_Grafo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Connessione_Grafo_Order_By>>;
  where?: Maybe<Gis_Connessione_Grafo_Bool_Exp>;
};


export type Subscription_RootGis_Connessione_Grafo_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootGis_Posizionamento_ToponimoArgs = {
  distinct_on?: Maybe<Array<Gis_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
};


export type Subscription_RootGis_Posizionamento_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Posizionamento_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Posizionamento_Toponimo_Order_By>>;
  where?: Maybe<Gis_Posizionamento_Toponimo_Bool_Exp>;
};


export type Subscription_RootGis_Posizionamento_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootGis_Sostegno_IpiArgs = {
  distinct_on?: Maybe<Array<Gis_Sostegno_Ipi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Sostegno_Ipi_Order_By>>;
  where?: Maybe<Gis_Sostegno_Ipi_Bool_Exp>;
};


export type Subscription_RootGis_Sostegno_Ipi_AggregateArgs = {
  distinct_on?: Maybe<Array<Gis_Sostegno_Ipi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Gis_Sostegno_Ipi_Order_By>>;
  where?: Maybe<Gis_Sostegno_Ipi_Bool_Exp>;
};


export type Subscription_RootGis_Sostegno_Ipi_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootPis__Condizioni_TrafficoArgs = {
  distinct_on?: Maybe<Array<Pis__Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Condizioni_Traffico_Order_By>>;
  where?: Maybe<Pis__Condizioni_Traffico_Bool_Exp>;
};


export type Subscription_RootPis__Condizioni_Traffico_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Condizioni_Traffico_Order_By>>;
  where?: Maybe<Pis__Condizioni_Traffico_Bool_Exp>;
};


export type Subscription_RootPis__Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis__Forma_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis__Forma_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Forma_Dissesto_Order_By>>;
  where?: Maybe<Pis__Forma_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis__Forma_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Forma_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Forma_Dissesto_Order_By>>;
  where?: Maybe<Pis__Forma_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis__Forma_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis__Giorni_TrascorsiArgs = {
  distinct_on?: Maybe<Array<Pis__Giorni_Trascorsi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Giorni_Trascorsi_Order_By>>;
  where?: Maybe<Pis__Giorni_Trascorsi_Bool_Exp>;
};


export type Subscription_RootPis__Giorni_Trascorsi_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Giorni_Trascorsi_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Giorni_Trascorsi_Order_By>>;
  where?: Maybe<Pis__Giorni_Trascorsi_Bool_Exp>;
};


export type Subscription_RootPis__Giorni_Trascorsi_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis__MaterialeArgs = {
  distinct_on?: Maybe<Array<Pis__Materiale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Materiale_Order_By>>;
  where?: Maybe<Pis__Materiale_Bool_Exp>;
};


export type Subscription_RootPis__Materiale_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Materiale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Materiale_Order_By>>;
  where?: Maybe<Pis__Materiale_Bool_Exp>;
};


export type Subscription_RootPis__Materiale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis__PrioritaArgs = {
  distinct_on?: Maybe<Array<Pis__Priorita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Priorita_Order_By>>;
  where?: Maybe<Pis__Priorita_Bool_Exp>;
};


export type Subscription_RootPis__Priorita_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Priorita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Priorita_Order_By>>;
  where?: Maybe<Pis__Priorita_Bool_Exp>;
};


export type Subscription_RootPis__Priorita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis__Stato_SegnalazioneArgs = {
  distinct_on?: Maybe<Array<Pis__Stato_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Stato_Segnalazione_Order_By>>;
  where?: Maybe<Pis__Stato_Segnalazione_Bool_Exp>;
};


export type Subscription_RootPis__Stato_Segnalazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Stato_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Stato_Segnalazione_Order_By>>;
  where?: Maybe<Pis__Stato_Segnalazione_Bool_Exp>;
};


export type Subscription_RootPis__Stato_Segnalazione_By_PkArgs = {
  text: Scalars['String'];
};


export type Subscription_RootPis__Tipologia_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis__Tipologia_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Tipologia_Dissesto_Order_By>>;
  where?: Maybe<Pis__Tipologia_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis__Tipologia_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis__Tipologia_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis__Tipologia_Dissesto_Order_By>>;
  where?: Maybe<Pis__Tipologia_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis__Tipologia_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Assegnazione_SquadraArgs = {
  distinct_on?: Maybe<Array<Pis_Assegnazione_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Assegnazione_Squadra_Order_By>>;
  where?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
};


export type Subscription_RootPis_Assegnazione_Squadra_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Assegnazione_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Assegnazione_Squadra_Order_By>>;
  where?: Maybe<Pis_Assegnazione_Squadra_Bool_Exp>;
};


export type Subscription_RootPis_Assegnazione_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Attrezzature_ImpiegateArgs = {
  distinct_on?: Maybe<Array<Pis_Attrezzature_Impiegate_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Attrezzature_Impiegate_Order_By>>;
  where?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
};


export type Subscription_RootPis_Attrezzature_Impiegate_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Attrezzature_Impiegate_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Attrezzature_Impiegate_Order_By>>;
  where?: Maybe<Pis_Attrezzature_Impiegate_Bool_Exp>;
};


export type Subscription_RootPis_Attrezzature_Impiegate_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_DiarioArgs = {
  distinct_on?: Maybe<Array<Pis_Diario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Diario_Order_By>>;
  where?: Maybe<Pis_Diario_Bool_Exp>;
};


export type Subscription_RootPis_Diario_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Diario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Diario_Order_By>>;
  where?: Maybe<Pis_Diario_Bool_Exp>;
};


export type Subscription_RootPis_Diario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Dissesto_Order_By>>;
  where?: Maybe<Pis_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Dissesto_Order_By>>;
  where?: Maybe<Pis_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_EventoArgs = {
  distinct_on?: Maybe<Array<Pis_Evento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Evento_Order_By>>;
  where?: Maybe<Pis_Evento_Bool_Exp>;
};


export type Subscription_RootPis_Evento_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Evento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Evento_Order_By>>;
  where?: Maybe<Pis_Evento_Bool_Exp>;
};


export type Subscription_RootPis_Evento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_InterventoArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Order_By>>;
  where?: Maybe<Pis_Intervento_Bool_Exp>;
};


export type Subscription_RootPis_Intervento_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Order_By>>;
  where?: Maybe<Pis_Intervento_Bool_Exp>;
};


export type Subscription_RootPis_Intervento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Intervento_StraordinarioArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Straordinario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Straordinario_Order_By>>;
  where?: Maybe<Pis_Intervento_Straordinario_Bool_Exp>;
};


export type Subscription_RootPis_Intervento_Straordinario_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Intervento_Straordinario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Intervento_Straordinario_Order_By>>;
  where?: Maybe<Pis_Intervento_Straordinario_Bool_Exp>;
};


export type Subscription_RootPis_Intervento_Straordinario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Materiale_DissestoArgs = {
  distinct_on?: Maybe<Array<Pis_Materiale_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Materiale_Dissesto_Order_By>>;
  where?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis_Materiale_Dissesto_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Materiale_Dissesto_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Materiale_Dissesto_Order_By>>;
  where?: Maybe<Pis_Materiale_Dissesto_Bool_Exp>;
};


export type Subscription_RootPis_Materiale_Dissesto_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_SegnalazioneArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


export type Subscription_RootPis_Segnalazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
};


export type Subscription_RootPis_Segnalazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Segnalazione_CollegataArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Collegata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Collegata_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
};


export type Subscription_RootPis_Segnalazione_Collegata_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnalazione_Collegata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnalazione_Collegata_Order_By>>;
  where?: Maybe<Pis_Segnalazione_Collegata_Bool_Exp>;
};


export type Subscription_RootPis_Segnalazione_Collegata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Segnaletica_LasciataArgs = {
  distinct_on?: Maybe<Array<Pis_Segnaletica_Lasciata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnaletica_Lasciata_Order_By>>;
  where?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
};


export type Subscription_RootPis_Segnaletica_Lasciata_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Segnaletica_Lasciata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Segnaletica_Lasciata_Order_By>>;
  where?: Maybe<Pis_Segnaletica_Lasciata_Bool_Exp>;
};


export type Subscription_RootPis_Segnaletica_Lasciata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_SquadraArgs = {
  distinct_on?: Maybe<Array<Pis_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Squadra_Order_By>>;
  where?: Maybe<Pis_Squadra_Bool_Exp>;
};


export type Subscription_RootPis_Squadra_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Squadra_Order_By>>;
  where?: Maybe<Pis_Squadra_Bool_Exp>;
};


export type Subscription_RootPis_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Tecnico_ReferenteArgs = {
  distinct_on?: Maybe<Array<Pis_Tecnico_Referente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Tecnico_Referente_Order_By>>;
  where?: Maybe<Pis_Tecnico_Referente_Bool_Exp>;
};


export type Subscription_RootPis_Tecnico_Referente_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Tecnico_Referente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Tecnico_Referente_Order_By>>;
  where?: Maybe<Pis_Tecnico_Referente_Bool_Exp>;
};


export type Subscription_RootPis_Tecnico_Referente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Vecchia_SquadraArgs = {
  distinct_on?: Maybe<Array<Pis_Vecchia_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Vecchia_Squadra_Order_By>>;
  where?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};


export type Subscription_RootPis_Vecchia_Squadra_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Vecchia_Squadra_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Vecchia_Squadra_Order_By>>;
  where?: Maybe<Pis_Vecchia_Squadra_Bool_Exp>;
};


export type Subscription_RootPis_Vecchia_Squadra_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootPis_Veicoli_ImpiegatiArgs = {
  distinct_on?: Maybe<Array<Pis_Veicoli_Impiegati_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Veicoli_Impiegati_Order_By>>;
  where?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};


export type Subscription_RootPis_Veicoli_Impiegati_AggregateArgs = {
  distinct_on?: Maybe<Array<Pis_Veicoli_Impiegati_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Pis_Veicoli_Impiegati_Order_By>>;
  where?: Maybe<Pis_Veicoli_Impiegati_Bool_Exp>;
};


export type Subscription_RootPis_Veicoli_Impiegati_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootProtocollo__Sezione_ProtocolloArgs = {
  distinct_on?: Maybe<Array<Protocollo__Sezione_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo__Sezione_Protocollo_Order_By>>;
  where?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
};


export type Subscription_RootProtocollo__Sezione_Protocollo_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo__Sezione_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo__Sezione_Protocollo_Order_By>>;
  where?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
};


export type Subscription_RootProtocollo__Sezione_Protocollo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootProtocollo_ProtocolloArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Bool_Exp>;
};


export type Subscription_RootProtocollo_Protocollo_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Bool_Exp>;
};


export type Subscription_RootProtocollo_Protocollo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootProtocollo_Protocollo_DestinatarioArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};


export type Subscription_RootProtocollo_Protocollo_Destinatario_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Bool_Exp>;
};


export type Subscription_RootProtocollo_Protocollo_Destinatario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootProtocollo_Protocollo_Destinatario_EsternoArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>;
};


export type Subscription_RootProtocollo_Protocollo_Destinatario_Esterno_AggregateArgs = {
  distinct_on?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Protocollo_Protocollo_Destinatario_Esterno_Order_By>>;
  where?: Maybe<Protocollo_Protocollo_Destinatario_Esterno_Bool_Exp>;
};


export type Subscription_RootProtocollo_Protocollo_Destinatario_Esterno_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Alimentazione_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Alimentazione_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Alimentazione_Veicolo_Order_By>>;
  where?: Maybe<Sis__Alimentazione_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Alimentazione_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Alimentazione_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Alimentazione_Veicolo_Order_By>>;
  where?: Maybe<Sis__Alimentazione_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Alimentazione_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Conseguenza_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis__Conseguenza_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Conseguenza_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis__Conseguenza_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Conseguenza_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Decessi_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Decessi_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Decessi_Tipologia_Order_By>>;
  where?: Maybe<Sis__Decessi_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Decessi_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Decessi_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Decessi_Tipologia_Order_By>>;
  where?: Maybe<Sis__Decessi_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Decessi_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Destinazione_DecisioneArgs = {
  distinct_on?: Maybe<Array<Sis__Destinazione_Decisione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Destinazione_Decisione_Order_By>>;
  where?: Maybe<Sis__Destinazione_Decisione_Bool_Exp>;
};


export type Subscription_RootSis__Destinazione_Decisione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Destinazione_Decisione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Destinazione_Decisione_Order_By>>;
  where?: Maybe<Sis__Destinazione_Decisione_Bool_Exp>;
};


export type Subscription_RootSis__Destinazione_Decisione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__EnteArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Order_By>>;
  where?: Maybe<Sis__Ente_Bool_Exp>;
};


export type Subscription_RootSis__Ente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Order_By>>;
  where?: Maybe<Sis__Ente_Bool_Exp>;
};


export type Subscription_RootSis__Ente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Ente_SecondarioArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Secondario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Secondario_Order_By>>;
  where?: Maybe<Sis__Ente_Secondario_Bool_Exp>;
};


export type Subscription_RootSis__Ente_Secondario_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Ente_Secondario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ente_Secondario_Order_By>>;
  where?: Maybe<Sis__Ente_Secondario_Bool_Exp>;
};


export type Subscription_RootSis__Ente_Secondario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Impianto_SemaforicoArgs = {
  distinct_on?: Maybe<Array<Sis__Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis__Impianto_Semaforico_Bool_Exp>;
};


export type Subscription_RootSis__Impianto_Semaforico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis__Impianto_Semaforico_Bool_Exp>;
};


export type Subscription_RootSis__Impianto_Semaforico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Infortunato_InformazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Infortunato_Informazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Infortunato_Informazione_Order_By>>;
  where?: Maybe<Sis__Infortunato_Informazione_Bool_Exp>;
};


export type Subscription_RootSis__Infortunato_Informazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Infortunato_Informazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Infortunato_Informazione_Order_By>>;
  where?: Maybe<Sis__Infortunato_Informazione_Bool_Exp>;
};


export type Subscription_RootSis__Infortunato_Informazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Intortunato_TasportatoArgs = {
  distinct_on?: Maybe<Array<Sis__Intortunato_Tasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Intortunato_Tasportato_Order_By>>;
  where?: Maybe<Sis__Intortunato_Tasportato_Bool_Exp>;
};


export type Subscription_RootSis__Intortunato_Tasportato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Intortunato_Tasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Intortunato_Tasportato_Order_By>>;
  where?: Maybe<Sis__Intortunato_Tasportato_Bool_Exp>;
};


export type Subscription_RootSis__Intortunato_Tasportato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_AltroArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Altro_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Altro_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Altro_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_Condizioni_AtmosfericheArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Condizioni_Atmosferiche_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_Condizioni_TrafficoArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Condizioni_Traffico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_Extra_AbitatoArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Extra_Abitato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Extra_Abitato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_Fondo_StradaleArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Fondo_Stradale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Fondo_Stradale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_IlluminazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Illuminazione_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Illuminazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Illuminazione_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Illuminazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_Particolarita_StradaArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Particolarita_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Particolarita_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_PavimentazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Pavimentazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Pavimentazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_Tipo_StradaArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Tipo_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Tipo_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Localizzazione_VisibilitaArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Visibilita_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Visibilita_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis__Localizzazione_Visibilita_Bool_Exp>;
};


export type Subscription_RootSis__Localizzazione_Visibilita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Natura_IncidenteArgs = {
  distinct_on?: Maybe<Array<Sis__Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Natura_Incidente_Order_By>>;
  where?: Maybe<Sis__Natura_Incidente_Bool_Exp>;
};


export type Subscription_RootSis__Natura_Incidente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Natura_Incidente_Order_By>>;
  where?: Maybe<Sis__Natura_Incidente_Bool_Exp>;
};


export type Subscription_RootSis__Natura_Incidente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Patente_CategoriaArgs = {
  distinct_on?: Maybe<Array<Sis__Patente_Categoria_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Patente_Categoria_Order_By>>;
  where?: Maybe<Sis__Patente_Categoria_Bool_Exp>;
};


export type Subscription_RootSis__Patente_Categoria_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Patente_Categoria_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Patente_Categoria_Order_By>>;
  where?: Maybe<Sis__Patente_Categoria_Bool_Exp>;
};


export type Subscription_RootSis__Patente_Categoria_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_CarreggiataArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_Carreggiata_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_Fuori_Sede_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_MarginiArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_Margini_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis__Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Subscription_RootSis__Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Punti_Rilievi_No_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Order_By>>;
  where?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Punti_Rilievi_No_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Punti_Rilievi_No_Tipologia_Order_By>>;
  where?: Maybe<Sis__Punti_Rilievi_No_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Punti_Rilievi_No_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Retrovisore_EsternoArgs = {
  distinct_on?: Maybe<Array<Sis__Retrovisore_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Retrovisore_Esterno_Order_By>>;
  where?: Maybe<Sis__Retrovisore_Esterno_Bool_Exp>;
};


export type Subscription_RootSis__Retrovisore_Esterno_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Retrovisore_Esterno_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Retrovisore_Esterno_Order_By>>;
  where?: Maybe<Sis__Retrovisore_Esterno_Bool_Exp>;
};


export type Subscription_RootSis__Retrovisore_Esterno_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Ris_Consegnato_AArgs = {
  distinct_on?: Maybe<Array<Sis__Ris_Consegnato_A_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ris_Consegnato_A_Order_By>>;
  where?: Maybe<Sis__Ris_Consegnato_A_Bool_Exp>;
};


export type Subscription_RootSis__Ris_Consegnato_A_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Ris_Consegnato_A_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Ris_Consegnato_A_Order_By>>;
  where?: Maybe<Sis__Ris_Consegnato_A_Bool_Exp>;
};


export type Subscription_RootSis__Ris_Consegnato_A_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Stato_RisArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Ris_Order_By>>;
  where?: Maybe<Sis__Stato_Ris_Bool_Exp>;
};


export type Subscription_RootSis__Stato_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Ris_Order_By>>;
  where?: Maybe<Sis__Stato_Ris_Bool_Exp>;
};


export type Subscription_RootSis__Stato_Ris_By_PkArgs = {
  text: Scalars['String'];
};


export type Subscription_RootSis__Stato_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Veicolo_Order_By>>;
  where?: Maybe<Sis__Stato_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Stato_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Stato_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Stato_Veicolo_Order_By>>;
  where?: Maybe<Sis__Stato_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Stato_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Tipologia_RisArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis__Tipologia_Ris_Bool_Exp>;
};


export type Subscription_RootSis__Tipologia_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis__Tipologia_Ris_Bool_Exp>;
};


export type Subscription_RootSis__Tipologia_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Tipologia_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Veicolo_Order_By>>;
  where?: Maybe<Sis__Tipologia_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Tipologia_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Veicolo_Order_By>>;
  where?: Maybe<Sis__Tipologia_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Tipologia_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Tipologia_VerbaleArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Verbale_Order_By>>;
  where?: Maybe<Sis__Tipologia_Verbale_Bool_Exp>;
};


export type Subscription_RootSis__Tipologia_Verbale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Tipologia_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Tipologia_Verbale_Order_By>>;
  where?: Maybe<Sis__Tipologia_Verbale_Bool_Exp>;
};


export type Subscription_RootSis__Tipologia_Verbale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Traccia_Suolo_Frenata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Frenata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Frenata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Frenata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Frenata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Traccia_Suolo_TerminazioneArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_AndamentoArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Andamento_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Andamento_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Andamento_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Andamento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_FormaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Forma_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Forma_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Forma_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Forma_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_IntensitaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Intensita_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Intensita_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Intensita_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Intensita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Terminazione_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Terminazione_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Terminazione_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Traccia_Suolo_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Traccia_Suolo_Tipologia_Order_By>>;
  where?: Maybe<Sis__Traccia_Suolo_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Traccia_Suolo_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Trasportato_PosizioneArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Posizione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Posizione_Order_By>>;
  where?: Maybe<Sis__Trasportato_Posizione_Bool_Exp>;
};


export type Subscription_RootSis__Trasportato_Posizione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Posizione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Posizione_Order_By>>;
  where?: Maybe<Sis__Trasportato_Posizione_Bool_Exp>;
};


export type Subscription_RootSis__Trasportato_Posizione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Trasportato_StatoArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Stato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Stato_Order_By>>;
  where?: Maybe<Sis__Trasportato_Stato_Bool_Exp>;
};


export type Subscription_RootSis__Trasportato_Stato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Trasportato_Stato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Trasportato_Stato_Order_By>>;
  where?: Maybe<Sis__Trasportato_Stato_Bool_Exp>;
};


export type Subscription_RootSis__Trasportato_Stato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Uso_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis__Uso_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Uso_Veicolo_Order_By>>;
  where?: Maybe<Sis__Uso_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Uso_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Uso_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Uso_Veicolo_Order_By>>;
  where?: Maybe<Sis__Uso_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis__Uso_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis__Visibilita_Limitata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Visibilita_Limitata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis__Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis__Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis__Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_AccertamentoArgs = {
  distinct_on?: Maybe<Array<Sis_Accertamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Accertamento_Order_By>>;
  where?: Maybe<Sis_Accertamento_Bool_Exp>;
};


export type Subscription_RootSis_Accertamento_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Accertamento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Accertamento_Order_By>>;
  where?: Maybe<Sis_Accertamento_Bool_Exp>;
};


export type Subscription_RootSis_Accertamento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Agente_AccertatoreArgs = {
  distinct_on?: Maybe<Array<Sis_Agente_Accertatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Agente_Accertatore_Order_By>>;
  where?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
};


export type Subscription_RootSis_Agente_Accertatore_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Agente_Accertatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Agente_Accertatore_Order_By>>;
  where?: Maybe<Sis_Agente_Accertatore_Bool_Exp>;
};


export type Subscription_RootSis_Agente_Accertatore_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_AltroArgs = {
  distinct_on?: Maybe<Array<Sis_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Altro_Order_By>>;
  where?: Maybe<Sis_Altro_Bool_Exp>;
};


export type Subscription_RootSis_Altro_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Altro_Order_By>>;
  where?: Maybe<Sis_Altro_Bool_Exp>;
};


export type Subscription_RootSis_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_TipologiaArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_Bool_Exp>;
};


export type Subscription_RootSis_Assegnazione_Condizioni_Meteo_Visibilita_Limitata_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Assegnazione_Unita_OperativaArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
};


export type Subscription_RootSis_Assegnazione_Unita_Operativa_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Assegnazione_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Assegnazione_Unita_Operativa_Bool_Exp>;
};


export type Subscription_RootSis_Assegnazione_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Conseguenza_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Conseguenza_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Conseguenza_Veicolo_Order_By>>;
  where?: Maybe<Sis_Associazione_Conseguenza_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Conseguenza_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Decessi_TipologieArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Order_By>>;
  where?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Decessi_Tipologie_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Decessi_Tipologie_Order_By>>;
  where?: Maybe<Sis_Associazione_Decessi_Tipologie_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Decessi_Tipologie_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Ente_Primo_InterventoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Ente_Primo_Intervento_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Primo_Intervento_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Primo_Intervento_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Ente_Primo_Intervento_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Ente_Secondario_IntervenutiArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Ente_Secondario_Intervenuti_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Secondario_Intervenuti_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Secondario_Intervenuti_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Ente_Secondario_Intervenuti_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Ente_SegnalatoreArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Ente_Segnalatore_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Ente_Segnalatore_Order_By>>;
  where?: Maybe<Sis_Associazione_Ente_Segnalatore_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Ente_Segnalatore_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Impianto_SemaforicoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Impianto_Semaforico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Impianto_Semaforico_Order_By>>;
  where?: Maybe<Sis_Associazione_Impianto_Semaforico_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Impianto_Semaforico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Informazioni_InfortunatoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Order_By>>;
  where?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Informazioni_Infortunato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Informazioni_Infortunato_Order_By>>;
  where?: Maybe<Sis_Associazione_Informazioni_Infortunato_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Informazioni_Infortunato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_AltroArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Altro_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Altro_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Altro_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Altro_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_Condizioni_AtmosfericheArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Condizioni_Atmosferiche_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Condizioni_Atmosferiche_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Condizioni_Atmosferiche_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_Extra_AbitatoArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Extra_Abitato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Extra_Abitato_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Extra_Abitato_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Extra_Abitato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_Fondo_StradaleArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Fondo_Stradale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Fondo_Stradale_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Fondo_Stradale_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Fondo_Stradale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_IlluminazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Illuminazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Illuminazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Illuminazione_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Illuminazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_Particolarita_StradaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Particolarita_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Particolarita_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Particolarita_Strada_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Particolarita_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_PavimentazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Pavimentazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Pavimentazione_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Pavimentazione_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Pavimentazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_Tipo_StradaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Tipo_Strada_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Tipo_Strada_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Tipo_Strada_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Tipo_Strada_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Localizzazione_VisibilitaArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Visibilita_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Localizzazione_Visibilita_Order_By>>;
  where?: Maybe<Sis_Associazione_Localizzazione_Visibilita_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Localizzazione_Visibilita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Natura_IncidenteArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Natura_Incidente_Order_By>>;
  where?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Natura_Incidente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Natura_Incidente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Natura_Incidente_Order_By>>;
  where?: Maybe<Sis_Associazione_Natura_Incidente_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Natura_Incidente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_PatenteArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Patente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Patente_Order_By>>;
  where?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Patente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Patente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Patente_Order_By>>;
  where?: Maybe<Sis_Associazione_Patente_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Patente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_CarreggiataArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_Carreggiata_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Carreggiata_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_Carreggiata_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_Fuori_SedeArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_Fuori_Sede_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_MarginiArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_Margini_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Order_By>>;
  where?: Maybe<Sis_Associazione_Posizione_Finale_Veicolo_Margini_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Posizione_Finale_Veicolo_Margini_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associazione_Tipologia_RisArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Tipologia_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associazione_Tipologia_Ris_Order_By>>;
  where?: Maybe<Sis_Associazione_Tipologia_Ris_Bool_Exp>;
};


export type Subscription_RootSis_Associazione_Tipologia_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Associzione_Localizzazione_Condizioni_TrafficoArgs = {
  distinct_on?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Subscription_RootSis_Associzione_Localizzazione_Condizioni_Traffico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Associzione_Localizzazione_Condizioni_Traffico_Order_By>>;
  where?: Maybe<Sis_Associzione_Localizzazione_Condizioni_Traffico_Bool_Exp>;
};


export type Subscription_RootSis_Associzione_Localizzazione_Condizioni_Traffico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_ConducenteArgs = {
  distinct_on?: Maybe<Array<Sis_Conducente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Conducente_Order_By>>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
};


export type Subscription_RootSis_Conducente_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Conducente_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Conducente_Order_By>>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
};


export type Subscription_RootSis_Conducente_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Evento_SisArgs = {
  distinct_on?: Maybe<Array<Sis_Evento_Sis_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Evento_Sis_Order_By>>;
  where?: Maybe<Sis_Evento_Sis_Bool_Exp>;
};


export type Subscription_RootSis_Evento_Sis_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Evento_Sis_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Evento_Sis_Order_By>>;
  where?: Maybe<Sis_Evento_Sis_Bool_Exp>;
};


export type Subscription_RootSis_Evento_Sis_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_InfortunatoArgs = {
  distinct_on?: Maybe<Array<Sis_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infortunato_Order_By>>;
  where?: Maybe<Sis_Infortunato_Bool_Exp>;
};


export type Subscription_RootSis_Infortunato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Infortunato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infortunato_Order_By>>;
  where?: Maybe<Sis_Infortunato_Bool_Exp>;
};


export type Subscription_RootSis_Infortunato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_InfrazioneArgs = {
  distinct_on?: Maybe<Array<Sis_Infrazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infrazione_Order_By>>;
  where?: Maybe<Sis_Infrazione_Bool_Exp>;
};


export type Subscription_RootSis_Infrazione_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Infrazione_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Infrazione_Order_By>>;
  where?: Maybe<Sis_Infrazione_Bool_Exp>;
};


export type Subscription_RootSis_Infrazione_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_LocatarioArgs = {
  distinct_on?: Maybe<Array<Sis_Locatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Locatario_Order_By>>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
};


export type Subscription_RootSis_Locatario_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Locatario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Locatario_Order_By>>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
};


export type Subscription_RootSis_Locatario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_PedoneArgs = {
  distinct_on?: Maybe<Array<Sis_Pedone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Pedone_Order_By>>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
};


export type Subscription_RootSis_Pedone_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Pedone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Pedone_Order_By>>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
};


export type Subscription_RootSis_Pedone_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_ProprietarioArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Order_By>>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
};


export type Subscription_RootSis_Proprietario_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Order_By>>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
};


export type Subscription_RootSis_Proprietario_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Proprietario_GiuridicoArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Giuridico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Giuridico_Order_By>>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
};


export type Subscription_RootSis_Proprietario_Giuridico_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Proprietario_Giuridico_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Proprietario_Giuridico_Order_By>>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
};


export type Subscription_RootSis_Proprietario_Giuridico_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_RisArgs = {
  distinct_on?: Maybe<Array<Sis_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Ris_Order_By>>;
  where?: Maybe<Sis_Ris_Bool_Exp>;
};


export type Subscription_RootSis_Ris_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Ris_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Ris_Order_By>>;
  where?: Maybe<Sis_Ris_Bool_Exp>;
};


export type Subscription_RootSis_Ris_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_TestimoneArgs = {
  distinct_on?: Maybe<Array<Sis_Testimone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Testimone_Order_By>>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
};


export type Subscription_RootSis_Testimone_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Testimone_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Testimone_Order_By>>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
};


export type Subscription_RootSis_Testimone_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Trasportati_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportati_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportati_Veicolo_Order_By>>;
  where?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis_Trasportati_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportati_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportati_Veicolo_Order_By>>;
  where?: Maybe<Sis_Trasportati_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis_Trasportati_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_TrasportatoArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportato_Order_By>>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
};


export type Subscription_RootSis_Trasportato_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Trasportato_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Trasportato_Order_By>>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
};


export type Subscription_RootSis_Trasportato_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Unita_OperativaArgs = {
  distinct_on?: Maybe<Array<Sis_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
};


export type Subscription_RootSis_Unita_Operativa_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
};


export type Subscription_RootSis_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_Vecchia_Unita_OperativaArgs = {
  distinct_on?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};


export type Subscription_RootSis_Vecchia_Unita_Operativa_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Vecchia_Unita_Operativa_Order_By>>;
  where?: Maybe<Sis_Vecchia_Unita_Operativa_Bool_Exp>;
};


export type Subscription_RootSis_Vecchia_Unita_Operativa_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_VeicoloArgs = {
  distinct_on?: Maybe<Array<Sis_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Veicolo_Order_By>>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis_Veicolo_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Veicolo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Veicolo_Order_By>>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
};


export type Subscription_RootSis_Veicolo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootSis_VerbaleArgs = {
  distinct_on?: Maybe<Array<Sis_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Verbale_Order_By>>;
  where?: Maybe<Sis_Verbale_Bool_Exp>;
};


export type Subscription_RootSis_Verbale_AggregateArgs = {
  distinct_on?: Maybe<Array<Sis_Verbale_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sis_Verbale_Order_By>>;
  where?: Maybe<Sis_Verbale_Bool_Exp>;
};


export type Subscription_RootSis_Verbale_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_Assegnazione_QuartiereArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


export type Subscription_RootToponomastica_Assegnazione_Quartiere_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


export type Subscription_RootToponomastica_Assegnazione_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_Assegnazione_ToponimoArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


export type Subscription_RootToponomastica_Assegnazione_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


export type Subscription_RootToponomastica_Assegnazione_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_DugArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Dug_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Dug_Order_By>>;
  where?: Maybe<Toponomastica_Dug_Bool_Exp>;
};


export type Subscription_RootToponomastica_Dug_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Dug_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Dug_Order_By>>;
  where?: Maybe<Toponomastica_Dug_Bool_Exp>;
};


export type Subscription_RootToponomastica_Dug_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_MunicipalitaArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
};


export type Subscription_RootToponomastica_Municipalita_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
};


export type Subscription_RootToponomastica_Municipalita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_QuartiereArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
};


export type Subscription_RootToponomastica_Quartiere_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
};


export type Subscription_RootToponomastica_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_TipologiaArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Tipologia_Order_By>>;
  where?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
};


export type Subscription_RootToponomastica_Tipologia_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Tipologia_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Tipologia_Order_By>>;
  where?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
};


export type Subscription_RootToponomastica_Tipologia_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_ToponimoArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
};


export type Subscription_RootToponomastica_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
};


export type Subscription_RootToponomastica_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_Vecchia_MunicipalitaArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};


export type Subscription_RootToponomastica_Vecchia_Municipalita_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};


export type Subscription_RootToponomastica_Vecchia_Municipalita_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_Vecchio_QuartiereArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};


export type Subscription_RootToponomastica_Vecchio_Quartiere_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};


export type Subscription_RootToponomastica_Vecchio_Quartiere_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootToponomastica_Vecchio_ToponimoArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};


export type Subscription_RootToponomastica_Vecchio_Toponimo_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};


export type Subscription_RootToponomastica_Vecchio_Toponimo_By_PkArgs = {
  id: Scalars['Int'];
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type Timestamp_Comparison_Exp = {
  _eq?: Maybe<Scalars['timestamp']>;
  _gt?: Maybe<Scalars['timestamp']>;
  _gte?: Maybe<Scalars['timestamp']>;
  _in?: Maybe<Array<Scalars['timestamp']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['timestamp']>;
  _lte?: Maybe<Scalars['timestamp']>;
  _neq?: Maybe<Scalars['timestamp']>;
  _nin?: Maybe<Array<Scalars['timestamp']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: Maybe<Scalars['timestamptz']>;
  _gt?: Maybe<Scalars['timestamptz']>;
  _gte?: Maybe<Scalars['timestamptz']>;
  _in?: Maybe<Array<Scalars['timestamptz']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['timestamptz']>;
  _lte?: Maybe<Scalars['timestamptz']>;
  _neq?: Maybe<Scalars['timestamptz']>;
  _nin?: Maybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere = {
  __typename?: 'toponomastica_assegnazione_quartiere';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  inizio_validita: Scalars['timestamptz'];
  /** An object relationship */
  municipalita: Toponomastica_Municipalita;
  municipalita_id: Scalars['Int'];
  /** An object relationship */
  quartiere: Toponomastica_Quartiere;
  quartiere_id: Scalars['Int'];
};

/** aggregated selection of "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Aggregate = {
  __typename?: 'toponomastica_assegnazione_quartiere_aggregate';
  aggregate?: Maybe<Toponomastica_Assegnazione_Quartiere_Aggregate_Fields>;
  nodes: Array<Toponomastica_Assegnazione_Quartiere>;
};

/** aggregate fields of "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Aggregate_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_aggregate_fields';
  avg?: Maybe<Toponomastica_Assegnazione_Quartiere_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Assegnazione_Quartiere_Max_Fields>;
  min?: Maybe<Toponomastica_Assegnazione_Quartiere_Min_Fields>;
  stddev?: Maybe<Toponomastica_Assegnazione_Quartiere_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Assegnazione_Quartiere_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Assegnazione_Quartiere_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Assegnazione_Quartiere_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Assegnazione_Quartiere_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Assegnazione_Quartiere_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Assegnazione_Quartiere_Variance_Fields>;
};


/** aggregate fields of "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Aggregate_Order_By = {
  avg?: Maybe<Toponomastica_Assegnazione_Quartiere_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Toponomastica_Assegnazione_Quartiere_Max_Order_By>;
  min?: Maybe<Toponomastica_Assegnazione_Quartiere_Min_Order_By>;
  stddev?: Maybe<Toponomastica_Assegnazione_Quartiere_Stddev_Order_By>;
  stddev_pop?: Maybe<Toponomastica_Assegnazione_Quartiere_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Toponomastica_Assegnazione_Quartiere_Stddev_Samp_Order_By>;
  sum?: Maybe<Toponomastica_Assegnazione_Quartiere_Sum_Order_By>;
  var_pop?: Maybe<Toponomastica_Assegnazione_Quartiere_Var_Pop_Order_By>;
  var_samp?: Maybe<Toponomastica_Assegnazione_Quartiere_Var_Samp_Order_By>;
  variance?: Maybe<Toponomastica_Assegnazione_Quartiere_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Arr_Rel_Insert_Input = {
  data: Array<Toponomastica_Assegnazione_Quartiere_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Assegnazione_Quartiere_On_Conflict>;
};

/** aggregate avg on columns */
export type Toponomastica_Assegnazione_Quartiere_Avg_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_avg_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Avg_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "toponomastica.assegnazione_quartiere". All fields are combined with a logical 'AND'. */
export type Toponomastica_Assegnazione_Quartiere_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Bool_Exp>>;
  fine_validita?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  inizio_validita?: Maybe<Timestamptz_Comparison_Exp>;
  municipalita?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
  municipalita_id?: Maybe<Int_Comparison_Exp>;
  quartiere?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  quartiere_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "toponomastica.assegnazione_quartiere" */
export enum Toponomastica_Assegnazione_Quartiere_Constraint {
  /** unique or primary key constraint */
  AssegnazioneQuartierePkey = 'assegnazione_quartiere_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Insert_Input = {
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita?: Maybe<Toponomastica_Municipalita_Obj_Rel_Insert_Input>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere?: Maybe<Toponomastica_Quartiere_Obj_Rel_Insert_Input>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Toponomastica_Assegnazione_Quartiere_Max_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_max_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Max_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Toponomastica_Assegnazione_Quartiere_Min_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_min_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Min_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Mutation_Response = {
  __typename?: 'toponomastica_assegnazione_quartiere_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Assegnazione_Quartiere>;
};

/** on_conflict condition type for table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_On_Conflict = {
  constraint: Toponomastica_Assegnazione_Quartiere_Constraint;
  update_columns?: Array<Toponomastica_Assegnazione_Quartiere_Update_Column>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.assegnazione_quartiere". */
export type Toponomastica_Assegnazione_Quartiere_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  municipalita?: Maybe<Toponomastica_Municipalita_Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere?: Maybe<Toponomastica_Quartiere_Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** primary key columns input for table: toponomastica_assegnazione_quartiere */
export type Toponomastica_Assegnazione_Quartiere_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.assegnazione_quartiere" */
export enum Toponomastica_Assegnazione_Quartiere_Select_Column {
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  QuartiereId = 'quartiere_id'
}

/** input type for updating data in table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Set_Input = {
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Assegnazione_Quartiere_Stddev_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Assegnazione_Quartiere_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Assegnazione_Quartiere_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Toponomastica_Assegnazione_Quartiere_Sum_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_sum_fields';
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Sum_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** update columns of table "toponomastica.assegnazione_quartiere" */
export enum Toponomastica_Assegnazione_Quartiere_Update_Column {
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  QuartiereId = 'quartiere_id'
}

/** aggregate var_pop on columns */
export type Toponomastica_Assegnazione_Quartiere_Var_Pop_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Assegnazione_Quartiere_Var_Samp_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Toponomastica_Assegnazione_Quartiere_Variance_Fields = {
  __typename?: 'toponomastica_assegnazione_quartiere_variance_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "toponomastica.assegnazione_quartiere" */
export type Toponomastica_Assegnazione_Quartiere_Variance_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** columns and relationships of "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo = {
  __typename?: 'toponomastica_assegnazione_toponimo';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id: Scalars['Int'];
  inizio_validita: Scalars['timestamptz'];
  /** An object relationship */
  municipalita: Toponomastica_Municipalita;
  municipalita_id: Scalars['Int'];
  /** An object relationship */
  quartiere: Toponomastica_Quartiere;
  quartiere_id: Scalars['Int'];
  /** An object relationship */
  toponimo: Toponomastica_Toponimo;
  toponimo_id: Scalars['Int'];
};

/** aggregated selection of "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Aggregate = {
  __typename?: 'toponomastica_assegnazione_toponimo_aggregate';
  aggregate?: Maybe<Toponomastica_Assegnazione_Toponimo_Aggregate_Fields>;
  nodes: Array<Toponomastica_Assegnazione_Toponimo>;
};

/** aggregate fields of "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Aggregate_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_aggregate_fields';
  avg?: Maybe<Toponomastica_Assegnazione_Toponimo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Assegnazione_Toponimo_Max_Fields>;
  min?: Maybe<Toponomastica_Assegnazione_Toponimo_Min_Fields>;
  stddev?: Maybe<Toponomastica_Assegnazione_Toponimo_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Assegnazione_Toponimo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Assegnazione_Toponimo_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Assegnazione_Toponimo_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Assegnazione_Toponimo_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Assegnazione_Toponimo_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Assegnazione_Toponimo_Variance_Fields>;
};


/** aggregate fields of "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Aggregate_Order_By = {
  avg?: Maybe<Toponomastica_Assegnazione_Toponimo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Toponomastica_Assegnazione_Toponimo_Max_Order_By>;
  min?: Maybe<Toponomastica_Assegnazione_Toponimo_Min_Order_By>;
  stddev?: Maybe<Toponomastica_Assegnazione_Toponimo_Stddev_Order_By>;
  stddev_pop?: Maybe<Toponomastica_Assegnazione_Toponimo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Toponomastica_Assegnazione_Toponimo_Stddev_Samp_Order_By>;
  sum?: Maybe<Toponomastica_Assegnazione_Toponimo_Sum_Order_By>;
  var_pop?: Maybe<Toponomastica_Assegnazione_Toponimo_Var_Pop_Order_By>;
  var_samp?: Maybe<Toponomastica_Assegnazione_Toponimo_Var_Samp_Order_By>;
  variance?: Maybe<Toponomastica_Assegnazione_Toponimo_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Arr_Rel_Insert_Input = {
  data: Array<Toponomastica_Assegnazione_Toponimo_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Assegnazione_Toponimo_On_Conflict>;
};

/** aggregate avg on columns */
export type Toponomastica_Assegnazione_Toponimo_Avg_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_avg_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Avg_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "toponomastica.assegnazione_toponimo". All fields are combined with a logical 'AND'. */
export type Toponomastica_Assegnazione_Toponimo_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Bool_Exp>>;
  fine_validita?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  inizio_validita?: Maybe<Timestamptz_Comparison_Exp>;
  municipalita?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
  municipalita_id?: Maybe<Int_Comparison_Exp>;
  quartiere?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  quartiere_id?: Maybe<Int_Comparison_Exp>;
  toponimo?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  toponimo_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "toponomastica.assegnazione_toponimo" */
export enum Toponomastica_Assegnazione_Toponimo_Constraint {
  /** unique or primary key constraint */
  AssegnazioneToponimoPkey = 'assegnazione_toponimo_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Insert_Input = {
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita?: Maybe<Toponomastica_Municipalita_Obj_Rel_Insert_Input>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere?: Maybe<Toponomastica_Quartiere_Obj_Rel_Insert_Input>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo?: Maybe<Toponomastica_Toponimo_Obj_Rel_Insert_Input>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Toponomastica_Assegnazione_Toponimo_Max_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_max_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Max_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Toponomastica_Assegnazione_Toponimo_Min_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_min_fields';
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Min_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Mutation_Response = {
  __typename?: 'toponomastica_assegnazione_toponimo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Assegnazione_Toponimo>;
};

/** on_conflict condition type for table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_On_Conflict = {
  constraint: Toponomastica_Assegnazione_Toponimo_Constraint;
  update_columns?: Array<Toponomastica_Assegnazione_Toponimo_Update_Column>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.assegnazione_toponimo". */
export type Toponomastica_Assegnazione_Toponimo_Order_By = {
  fine_validita?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inizio_validita?: Maybe<Order_By>;
  municipalita?: Maybe<Toponomastica_Municipalita_Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere?: Maybe<Toponomastica_Quartiere_Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo?: Maybe<Toponomastica_Toponimo_Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** primary key columns input for table: toponomastica_assegnazione_toponimo */
export type Toponomastica_Assegnazione_Toponimo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.assegnazione_toponimo" */
export enum Toponomastica_Assegnazione_Toponimo_Select_Column {
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  ToponimoId = 'toponimo_id'
}

/** input type for updating data in table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Set_Input = {
  fine_validita?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  inizio_validita?: Maybe<Scalars['timestamptz']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Assegnazione_Toponimo_Stddev_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Assegnazione_Toponimo_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Assegnazione_Toponimo_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Toponomastica_Assegnazione_Toponimo_Sum_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_sum_fields';
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Sum_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** update columns of table "toponomastica.assegnazione_toponimo" */
export enum Toponomastica_Assegnazione_Toponimo_Update_Column {
  /** column name */
  FineValidita = 'fine_validita',
  /** column name */
  Id = 'id',
  /** column name */
  InizioValidita = 'inizio_validita',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  QuartiereId = 'quartiere_id',
  /** column name */
  ToponimoId = 'toponimo_id'
}

/** aggregate var_pop on columns */
export type Toponomastica_Assegnazione_Toponimo_Var_Pop_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Assegnazione_Toponimo_Var_Samp_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Toponomastica_Assegnazione_Toponimo_Variance_Fields = {
  __typename?: 'toponomastica_assegnazione_toponimo_variance_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "toponomastica.assegnazione_toponimo" */
export type Toponomastica_Assegnazione_Toponimo_Variance_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** columns and relationships of "toponomastica.dug" */
export type Toponomastica_Dug = {
  __typename?: 'toponomastica_dug';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "toponomastica.dug" */
export type Toponomastica_Dug_Aggregate = {
  __typename?: 'toponomastica_dug_aggregate';
  aggregate?: Maybe<Toponomastica_Dug_Aggregate_Fields>;
  nodes: Array<Toponomastica_Dug>;
};

/** aggregate fields of "toponomastica.dug" */
export type Toponomastica_Dug_Aggregate_Fields = {
  __typename?: 'toponomastica_dug_aggregate_fields';
  avg?: Maybe<Toponomastica_Dug_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Dug_Max_Fields>;
  min?: Maybe<Toponomastica_Dug_Min_Fields>;
  stddev?: Maybe<Toponomastica_Dug_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Dug_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Dug_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Dug_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Dug_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Dug_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Dug_Variance_Fields>;
};


/** aggregate fields of "toponomastica.dug" */
export type Toponomastica_Dug_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Dug_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Toponomastica_Dug_Avg_Fields = {
  __typename?: 'toponomastica_dug_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "toponomastica.dug". All fields are combined with a logical 'AND'. */
export type Toponomastica_Dug_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Dug_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Dug_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Dug_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "toponomastica.dug" */
export enum Toponomastica_Dug_Constraint {
  /** unique or primary key constraint */
  DugPkey = 'dug_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.dug" */
export type Toponomastica_Dug_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.dug" */
export type Toponomastica_Dug_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Toponomastica_Dug_Max_Fields = {
  __typename?: 'toponomastica_dug_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Toponomastica_Dug_Min_Fields = {
  __typename?: 'toponomastica_dug_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "toponomastica.dug" */
export type Toponomastica_Dug_Mutation_Response = {
  __typename?: 'toponomastica_dug_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Dug>;
};

/** input type for inserting object relation for remote table "toponomastica.dug" */
export type Toponomastica_Dug_Obj_Rel_Insert_Input = {
  data: Toponomastica_Dug_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Dug_On_Conflict>;
};

/** on_conflict condition type for table "toponomastica.dug" */
export type Toponomastica_Dug_On_Conflict = {
  constraint: Toponomastica_Dug_Constraint;
  update_columns?: Array<Toponomastica_Dug_Update_Column>;
  where?: Maybe<Toponomastica_Dug_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.dug". */
export type Toponomastica_Dug_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: toponomastica_dug */
export type Toponomastica_Dug_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.dug" */
export enum Toponomastica_Dug_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "toponomastica.dug" */
export type Toponomastica_Dug_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Dug_Stddev_Fields = {
  __typename?: 'toponomastica_dug_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Dug_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_dug_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Dug_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_dug_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Toponomastica_Dug_Sum_Fields = {
  __typename?: 'toponomastica_dug_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "toponomastica.dug" */
export enum Toponomastica_Dug_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Toponomastica_Dug_Var_Pop_Fields = {
  __typename?: 'toponomastica_dug_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Dug_Var_Samp_Fields = {
  __typename?: 'toponomastica_dug_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Toponomastica_Dug_Variance_Fields = {
  __typename?: 'toponomastica_dug_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "toponomastica.municipalita" */
export type Toponomastica_Municipalita = {
  __typename?: 'toponomastica_municipalita';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  /** An array relationship */
  quartieri: Array<Toponomastica_Assegnazione_Quartiere>;
  /** An aggregate relationship */
  quartieri_aggregate: Toponomastica_Assegnazione_Quartiere_Aggregate;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  vecchie_denominazioni: Array<Toponomastica_Vecchia_Municipalita>;
  /** An aggregate relationship */
  vecchie_denominazioni_aggregate: Toponomastica_Vecchia_Municipalita_Aggregate;
};


/** columns and relationships of "toponomastica.municipalita" */
export type Toponomastica_MunicipalitaQuartieriArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


/** columns and relationships of "toponomastica.municipalita" */
export type Toponomastica_MunicipalitaQuartieri_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


/** columns and relationships of "toponomastica.municipalita" */
export type Toponomastica_MunicipalitaVecchie_DenominazioniArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};


/** columns and relationships of "toponomastica.municipalita" */
export type Toponomastica_MunicipalitaVecchie_Denominazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Order_By>>;
  where?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};

/** aggregated selection of "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Aggregate = {
  __typename?: 'toponomastica_municipalita_aggregate';
  aggregate?: Maybe<Toponomastica_Municipalita_Aggregate_Fields>;
  nodes: Array<Toponomastica_Municipalita>;
};

/** aggregate fields of "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Aggregate_Fields = {
  __typename?: 'toponomastica_municipalita_aggregate_fields';
  avg?: Maybe<Toponomastica_Municipalita_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Municipalita_Max_Fields>;
  min?: Maybe<Toponomastica_Municipalita_Min_Fields>;
  stddev?: Maybe<Toponomastica_Municipalita_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Municipalita_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Municipalita_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Municipalita_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Municipalita_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Municipalita_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Municipalita_Variance_Fields>;
};


/** aggregate fields of "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Municipalita_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Toponomastica_Municipalita_Avg_Fields = {
  __typename?: 'toponomastica_municipalita_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "toponomastica.municipalita". All fields are combined with a logical 'AND'. */
export type Toponomastica_Municipalita_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Municipalita_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Municipalita_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  quartieri?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
  role1?: Maybe<String_Comparison_Exp>;
  role2?: Maybe<String_Comparison_Exp>;
  role3?: Maybe<String_Comparison_Exp>;
  role4?: Maybe<String_Comparison_Exp>;
  role5?: Maybe<String_Comparison_Exp>;
  role6?: Maybe<String_Comparison_Exp>;
  role7?: Maybe<String_Comparison_Exp>;
  role8?: Maybe<String_Comparison_Exp>;
  role9?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  vecchie_denominazioni?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};

/** unique or primary key constraints on table "toponomastica.municipalita" */
export enum Toponomastica_Municipalita_Constraint {
  /** unique or primary key constraint */
  MunicipalitaPkey = 'municipalita_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quartieri?: Maybe<Toponomastica_Assegnazione_Quartiere_Arr_Rel_Insert_Input>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  vecchie_denominazioni?: Maybe<Toponomastica_Vecchia_Municipalita_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Toponomastica_Municipalita_Max_Fields = {
  __typename?: 'toponomastica_municipalita_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Toponomastica_Municipalita_Min_Fields = {
  __typename?: 'toponomastica_municipalita_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Mutation_Response = {
  __typename?: 'toponomastica_municipalita_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Municipalita>;
};

/** input type for inserting object relation for remote table "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Obj_Rel_Insert_Input = {
  data: Toponomastica_Municipalita_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Municipalita_On_Conflict>;
};

/** on_conflict condition type for table "toponomastica.municipalita" */
export type Toponomastica_Municipalita_On_Conflict = {
  constraint: Toponomastica_Municipalita_Constraint;
  update_columns?: Array<Toponomastica_Municipalita_Update_Column>;
  where?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.municipalita". */
export type Toponomastica_Municipalita_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quartieri_aggregate?: Maybe<Toponomastica_Assegnazione_Quartiere_Aggregate_Order_By>;
  role1?: Maybe<Order_By>;
  role2?: Maybe<Order_By>;
  role3?: Maybe<Order_By>;
  role4?: Maybe<Order_By>;
  role5?: Maybe<Order_By>;
  role6?: Maybe<Order_By>;
  role7?: Maybe<Order_By>;
  role8?: Maybe<Order_By>;
  role9?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  vecchie_denominazioni_aggregate?: Maybe<Toponomastica_Vecchia_Municipalita_Aggregate_Order_By>;
};

/** primary key columns input for table: toponomastica_municipalita */
export type Toponomastica_Municipalita_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.municipalita" */
export enum Toponomastica_Municipalita_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role6 = 'role6',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Role9 = 'role9',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "toponomastica.municipalita" */
export type Toponomastica_Municipalita_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Municipalita_Stddev_Fields = {
  __typename?: 'toponomastica_municipalita_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Municipalita_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_municipalita_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Municipalita_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_municipalita_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Toponomastica_Municipalita_Sum_Fields = {
  __typename?: 'toponomastica_municipalita_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "toponomastica.municipalita" */
export enum Toponomastica_Municipalita_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role6 = 'role6',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Role9 = 'role9',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Toponomastica_Municipalita_Var_Pop_Fields = {
  __typename?: 'toponomastica_municipalita_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Municipalita_Var_Samp_Fields = {
  __typename?: 'toponomastica_municipalita_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Toponomastica_Municipalita_Variance_Fields = {
  __typename?: 'toponomastica_municipalita_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "toponomastica.quartiere" */
export type Toponomastica_Quartiere = {
  __typename?: 'toponomastica_quartiere';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An array relationship */
  municipalita: Array<Toponomastica_Assegnazione_Quartiere>;
  /** An aggregate relationship */
  municipalita_aggregate: Toponomastica_Assegnazione_Quartiere_Aggregate;
  nome: Scalars['String'];
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  /** An array relationship */
  toponimi: Array<Toponomastica_Assegnazione_Toponimo>;
  /** An aggregate relationship */
  toponimi_aggregate: Toponomastica_Assegnazione_Toponimo_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  vecchie_denominazioni: Array<Toponomastica_Vecchio_Quartiere>;
  /** An aggregate relationship */
  vecchie_denominazioni_aggregate: Toponomastica_Vecchio_Quartiere_Aggregate;
};


/** columns and relationships of "toponomastica.quartiere" */
export type Toponomastica_QuartiereMunicipalitaArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


/** columns and relationships of "toponomastica.quartiere" */
export type Toponomastica_QuartiereMunicipalita_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
};


/** columns and relationships of "toponomastica.quartiere" */
export type Toponomastica_QuartiereToponimiArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


/** columns and relationships of "toponomastica.quartiere" */
export type Toponomastica_QuartiereToponimi_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


/** columns and relationships of "toponomastica.quartiere" */
export type Toponomastica_QuartiereVecchie_DenominazioniArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};


/** columns and relationships of "toponomastica.quartiere" */
export type Toponomastica_QuartiereVecchie_Denominazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};

/** aggregated selection of "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Aggregate = {
  __typename?: 'toponomastica_quartiere_aggregate';
  aggregate?: Maybe<Toponomastica_Quartiere_Aggregate_Fields>;
  nodes: Array<Toponomastica_Quartiere>;
};

/** aggregate fields of "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Aggregate_Fields = {
  __typename?: 'toponomastica_quartiere_aggregate_fields';
  avg?: Maybe<Toponomastica_Quartiere_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Quartiere_Max_Fields>;
  min?: Maybe<Toponomastica_Quartiere_Min_Fields>;
  stddev?: Maybe<Toponomastica_Quartiere_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Quartiere_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Quartiere_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Quartiere_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Quartiere_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Quartiere_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Quartiere_Variance_Fields>;
};


/** aggregate fields of "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Quartiere_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Toponomastica_Quartiere_Avg_Fields = {
  __typename?: 'toponomastica_quartiere_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "toponomastica.quartiere". All fields are combined with a logical 'AND'. */
export type Toponomastica_Quartiere_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Quartiere_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Quartiere_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  municipalita?: Maybe<Toponomastica_Assegnazione_Quartiere_Bool_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  role1?: Maybe<String_Comparison_Exp>;
  role2?: Maybe<String_Comparison_Exp>;
  role3?: Maybe<String_Comparison_Exp>;
  role4?: Maybe<String_Comparison_Exp>;
  role5?: Maybe<String_Comparison_Exp>;
  role6?: Maybe<String_Comparison_Exp>;
  role7?: Maybe<String_Comparison_Exp>;
  role8?: Maybe<String_Comparison_Exp>;
  role9?: Maybe<String_Comparison_Exp>;
  toponimi?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  vecchie_denominazioni?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};

/** unique or primary key constraints on table "toponomastica.quartiere" */
export enum Toponomastica_Quartiere_Constraint {
  /** unique or primary key constraint */
  QuartierePkey = 'quartiere_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  municipalita?: Maybe<Toponomastica_Assegnazione_Quartiere_Arr_Rel_Insert_Input>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  toponimi?: Maybe<Toponomastica_Assegnazione_Toponimo_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  vecchie_denominazioni?: Maybe<Toponomastica_Vecchio_Quartiere_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Toponomastica_Quartiere_Max_Fields = {
  __typename?: 'toponomastica_quartiere_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Toponomastica_Quartiere_Min_Fields = {
  __typename?: 'toponomastica_quartiere_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Mutation_Response = {
  __typename?: 'toponomastica_quartiere_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Quartiere>;
};

/** input type for inserting object relation for remote table "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Obj_Rel_Insert_Input = {
  data: Toponomastica_Quartiere_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Quartiere_On_Conflict>;
};

/** on_conflict condition type for table "toponomastica.quartiere" */
export type Toponomastica_Quartiere_On_Conflict = {
  constraint: Toponomastica_Quartiere_Constraint;
  update_columns?: Array<Toponomastica_Quartiere_Update_Column>;
  where?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.quartiere". */
export type Toponomastica_Quartiere_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_aggregate?: Maybe<Toponomastica_Assegnazione_Quartiere_Aggregate_Order_By>;
  nome?: Maybe<Order_By>;
  role1?: Maybe<Order_By>;
  role2?: Maybe<Order_By>;
  role3?: Maybe<Order_By>;
  role4?: Maybe<Order_By>;
  role5?: Maybe<Order_By>;
  role6?: Maybe<Order_By>;
  role7?: Maybe<Order_By>;
  role8?: Maybe<Order_By>;
  role9?: Maybe<Order_By>;
  toponimi_aggregate?: Maybe<Toponomastica_Assegnazione_Toponimo_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  vecchie_denominazioni_aggregate?: Maybe<Toponomastica_Vecchio_Quartiere_Aggregate_Order_By>;
};

/** primary key columns input for table: toponomastica_quartiere */
export type Toponomastica_Quartiere_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.quartiere" */
export enum Toponomastica_Quartiere_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role6 = 'role6',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Role9 = 'role9',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "toponomastica.quartiere" */
export type Toponomastica_Quartiere_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Quartiere_Stddev_Fields = {
  __typename?: 'toponomastica_quartiere_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Quartiere_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_quartiere_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Quartiere_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_quartiere_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Toponomastica_Quartiere_Sum_Fields = {
  __typename?: 'toponomastica_quartiere_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "toponomastica.quartiere" */
export enum Toponomastica_Quartiere_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role6 = 'role6',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Role9 = 'role9',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Toponomastica_Quartiere_Var_Pop_Fields = {
  __typename?: 'toponomastica_quartiere_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Quartiere_Var_Samp_Fields = {
  __typename?: 'toponomastica_quartiere_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Toponomastica_Quartiere_Variance_Fields = {
  __typename?: 'toponomastica_quartiere_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "toponomastica.tipologia" */
export type Toponomastica_Tipologia = {
  __typename?: 'toponomastica_tipologia';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Aggregate = {
  __typename?: 'toponomastica_tipologia_aggregate';
  aggregate?: Maybe<Toponomastica_Tipologia_Aggregate_Fields>;
  nodes: Array<Toponomastica_Tipologia>;
};

/** aggregate fields of "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Aggregate_Fields = {
  __typename?: 'toponomastica_tipologia_aggregate_fields';
  avg?: Maybe<Toponomastica_Tipologia_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Tipologia_Max_Fields>;
  min?: Maybe<Toponomastica_Tipologia_Min_Fields>;
  stddev?: Maybe<Toponomastica_Tipologia_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Tipologia_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Tipologia_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Tipologia_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Tipologia_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Tipologia_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Tipologia_Variance_Fields>;
};


/** aggregate fields of "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Tipologia_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Toponomastica_Tipologia_Avg_Fields = {
  __typename?: 'toponomastica_tipologia_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "toponomastica.tipologia". All fields are combined with a logical 'AND'. */
export type Toponomastica_Tipologia_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Tipologia_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Tipologia_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "toponomastica.tipologia" */
export enum Toponomastica_Tipologia_Constraint {
  /** unique or primary key constraint */
  TipologiaPkey = 'tipologia_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Toponomastica_Tipologia_Max_Fields = {
  __typename?: 'toponomastica_tipologia_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Toponomastica_Tipologia_Min_Fields = {
  __typename?: 'toponomastica_tipologia_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Mutation_Response = {
  __typename?: 'toponomastica_tipologia_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Tipologia>;
};

/** input type for inserting object relation for remote table "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Obj_Rel_Insert_Input = {
  data: Toponomastica_Tipologia_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Tipologia_On_Conflict>;
};

/** on_conflict condition type for table "toponomastica.tipologia" */
export type Toponomastica_Tipologia_On_Conflict = {
  constraint: Toponomastica_Tipologia_Constraint;
  update_columns?: Array<Toponomastica_Tipologia_Update_Column>;
  where?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.tipologia". */
export type Toponomastica_Tipologia_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: toponomastica_tipologia */
export type Toponomastica_Tipologia_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.tipologia" */
export enum Toponomastica_Tipologia_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "toponomastica.tipologia" */
export type Toponomastica_Tipologia_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Tipologia_Stddev_Fields = {
  __typename?: 'toponomastica_tipologia_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Tipologia_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_tipologia_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Tipologia_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_tipologia_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Toponomastica_Tipologia_Sum_Fields = {
  __typename?: 'toponomastica_tipologia_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "toponomastica.tipologia" */
export enum Toponomastica_Tipologia_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Toponomastica_Tipologia_Var_Pop_Fields = {
  __typename?: 'toponomastica_tipologia_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Tipologia_Var_Samp_Fields = {
  __typename?: 'toponomastica_tipologia_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Toponomastica_Tipologia_Variance_Fields = {
  __typename?: 'toponomastica_tipologia_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "toponomastica.toponimo" */
export type Toponomastica_Toponimo = {
  __typename?: 'toponomastica_toponimo';
  /** An array relationship */
  assegnazioni: Array<Toponomastica_Assegnazione_Toponimo>;
  /** An aggregate relationship */
  assegnazioni_aggregate: Toponomastica_Assegnazione_Toponimo_Aggregate;
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  dug?: Maybe<Toponomastica_Dug>;
  dug_id?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  nome: Scalars['String'];
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  /** An object relationship */
  tipologia?: Maybe<Toponomastica_Tipologia>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  vecchie_denominazioni: Array<Toponomastica_Vecchio_Toponimo>;
  /** An aggregate relationship */
  vecchie_denominazioni_aggregate: Toponomastica_Vecchio_Toponimo_Aggregate;
};


/** columns and relationships of "toponomastica.toponimo" */
export type Toponomastica_ToponimoAssegnazioniArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


/** columns and relationships of "toponomastica.toponimo" */
export type Toponomastica_ToponimoAssegnazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Assegnazione_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
};


/** columns and relationships of "toponomastica.toponimo" */
export type Toponomastica_ToponimoVecchie_DenominazioniArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};


/** columns and relationships of "toponomastica.toponimo" */
export type Toponomastica_ToponimoVecchie_Denominazioni_AggregateArgs = {
  distinct_on?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Order_By>>;
  where?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};

/** aggregated selection of "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Aggregate = {
  __typename?: 'toponomastica_toponimo_aggregate';
  aggregate?: Maybe<Toponomastica_Toponimo_Aggregate_Fields>;
  nodes: Array<Toponomastica_Toponimo>;
};

/** aggregate fields of "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Aggregate_Fields = {
  __typename?: 'toponomastica_toponimo_aggregate_fields';
  avg?: Maybe<Toponomastica_Toponimo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Toponimo_Max_Fields>;
  min?: Maybe<Toponomastica_Toponimo_Min_Fields>;
  stddev?: Maybe<Toponomastica_Toponimo_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Toponimo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Toponimo_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Toponimo_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Toponimo_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Toponimo_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Toponimo_Variance_Fields>;
};


/** aggregate fields of "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Toponimo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Toponomastica_Toponimo_Avg_Fields = {
  __typename?: 'toponomastica_toponimo_avg_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "toponomastica.toponimo". All fields are combined with a logical 'AND'. */
export type Toponomastica_Toponimo_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Toponimo_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Toponimo_Bool_Exp>>;
  assegnazioni?: Maybe<Toponomastica_Assegnazione_Toponimo_Bool_Exp>;
  codice?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  dug?: Maybe<Toponomastica_Dug_Bool_Exp>;
  dug_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  role1?: Maybe<String_Comparison_Exp>;
  role2?: Maybe<String_Comparison_Exp>;
  role3?: Maybe<String_Comparison_Exp>;
  role4?: Maybe<String_Comparison_Exp>;
  role5?: Maybe<String_Comparison_Exp>;
  role6?: Maybe<String_Comparison_Exp>;
  role7?: Maybe<String_Comparison_Exp>;
  role8?: Maybe<String_Comparison_Exp>;
  role9?: Maybe<String_Comparison_Exp>;
  tipologia?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
  tipologia_id?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  vecchie_denominazioni?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};

/** unique or primary key constraints on table "toponomastica.toponimo" */
export enum Toponomastica_Toponimo_Constraint {
  /** unique or primary key constraint */
  ToponimoPkey = 'toponimo_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Inc_Input = {
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Insert_Input = {
  assegnazioni?: Maybe<Toponomastica_Assegnazione_Toponimo_Arr_Rel_Insert_Input>;
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug?: Maybe<Toponomastica_Dug_Obj_Rel_Insert_Input>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  tipologia?: Maybe<Toponomastica_Tipologia_Obj_Rel_Insert_Input>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  vecchie_denominazioni?: Maybe<Toponomastica_Vecchio_Toponimo_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Toponomastica_Toponimo_Max_Fields = {
  __typename?: 'toponomastica_toponimo_max_fields';
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Toponomastica_Toponimo_Min_Fields = {
  __typename?: 'toponomastica_toponimo_min_fields';
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Mutation_Response = {
  __typename?: 'toponomastica_toponimo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Toponimo>;
};

/** input type for inserting object relation for remote table "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Obj_Rel_Insert_Input = {
  data: Toponomastica_Toponimo_Insert_Input;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Toponimo_On_Conflict>;
};

/** on_conflict condition type for table "toponomastica.toponimo" */
export type Toponomastica_Toponimo_On_Conflict = {
  constraint: Toponomastica_Toponimo_Constraint;
  update_columns?: Array<Toponomastica_Toponimo_Update_Column>;
  where?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.toponimo". */
export type Toponomastica_Toponimo_Order_By = {
  assegnazioni_aggregate?: Maybe<Toponomastica_Assegnazione_Toponimo_Aggregate_Order_By>;
  codice?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  dug?: Maybe<Toponomastica_Dug_Order_By>;
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  role1?: Maybe<Order_By>;
  role2?: Maybe<Order_By>;
  role3?: Maybe<Order_By>;
  role4?: Maybe<Order_By>;
  role5?: Maybe<Order_By>;
  role6?: Maybe<Order_By>;
  role7?: Maybe<Order_By>;
  role8?: Maybe<Order_By>;
  role9?: Maybe<Order_By>;
  tipologia?: Maybe<Toponomastica_Tipologia_Order_By>;
  tipologia_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  vecchie_denominazioni_aggregate?: Maybe<Toponomastica_Vecchio_Toponimo_Aggregate_Order_By>;
};

/** primary key columns input for table: toponomastica_toponimo */
export type Toponomastica_Toponimo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.toponimo" */
export enum Toponomastica_Toponimo_Select_Column {
  /** column name */
  Codice = 'codice',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DugId = 'dug_id',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role6 = 'role6',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Role9 = 'role9',
  /** column name */
  TipologiaId = 'tipologia_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "toponomastica.toponimo" */
export type Toponomastica_Toponimo_Set_Input = {
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  role1?: Maybe<Scalars['String']>;
  role2?: Maybe<Scalars['String']>;
  role3?: Maybe<Scalars['String']>;
  role4?: Maybe<Scalars['String']>;
  role5?: Maybe<Scalars['String']>;
  role6?: Maybe<Scalars['String']>;
  role7?: Maybe<Scalars['String']>;
  role8?: Maybe<Scalars['String']>;
  role9?: Maybe<Scalars['String']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Toponimo_Stddev_Fields = {
  __typename?: 'toponomastica_toponimo_stddev_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Toponimo_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_toponimo_stddev_pop_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Toponimo_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_toponimo_stddev_samp_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Toponomastica_Toponimo_Sum_Fields = {
  __typename?: 'toponomastica_toponimo_sum_fields';
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
};

/** update columns of table "toponomastica.toponimo" */
export enum Toponomastica_Toponimo_Update_Column {
  /** column name */
  Codice = 'codice',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DugId = 'dug_id',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  Role1 = 'role1',
  /** column name */
  Role2 = 'role2',
  /** column name */
  Role3 = 'role3',
  /** column name */
  Role4 = 'role4',
  /** column name */
  Role5 = 'role5',
  /** column name */
  Role6 = 'role6',
  /** column name */
  Role7 = 'role7',
  /** column name */
  Role8 = 'role8',
  /** column name */
  Role9 = 'role9',
  /** column name */
  TipologiaId = 'tipologia_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Toponomastica_Toponimo_Var_Pop_Fields = {
  __typename?: 'toponomastica_toponimo_var_pop_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Toponimo_Var_Samp_Fields = {
  __typename?: 'toponomastica_toponimo_var_samp_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Toponomastica_Toponimo_Variance_Fields = {
  __typename?: 'toponomastica_toponimo_variance_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita = {
  __typename?: 'toponomastica_vecchia_municipalita';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  municipalita_id: Scalars['Int'];
  nome: Scalars['String'];
};

/** aggregated selection of "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Aggregate = {
  __typename?: 'toponomastica_vecchia_municipalita_aggregate';
  aggregate?: Maybe<Toponomastica_Vecchia_Municipalita_Aggregate_Fields>;
  nodes: Array<Toponomastica_Vecchia_Municipalita>;
};

/** aggregate fields of "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Aggregate_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_aggregate_fields';
  avg?: Maybe<Toponomastica_Vecchia_Municipalita_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Vecchia_Municipalita_Max_Fields>;
  min?: Maybe<Toponomastica_Vecchia_Municipalita_Min_Fields>;
  stddev?: Maybe<Toponomastica_Vecchia_Municipalita_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Vecchia_Municipalita_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Vecchia_Municipalita_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Vecchia_Municipalita_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Vecchia_Municipalita_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Vecchia_Municipalita_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Vecchia_Municipalita_Variance_Fields>;
};


/** aggregate fields of "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Aggregate_Order_By = {
  avg?: Maybe<Toponomastica_Vecchia_Municipalita_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Toponomastica_Vecchia_Municipalita_Max_Order_By>;
  min?: Maybe<Toponomastica_Vecchia_Municipalita_Min_Order_By>;
  stddev?: Maybe<Toponomastica_Vecchia_Municipalita_Stddev_Order_By>;
  stddev_pop?: Maybe<Toponomastica_Vecchia_Municipalita_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Toponomastica_Vecchia_Municipalita_Stddev_Samp_Order_By>;
  sum?: Maybe<Toponomastica_Vecchia_Municipalita_Sum_Order_By>;
  var_pop?: Maybe<Toponomastica_Vecchia_Municipalita_Var_Pop_Order_By>;
  var_samp?: Maybe<Toponomastica_Vecchia_Municipalita_Var_Samp_Order_By>;
  variance?: Maybe<Toponomastica_Vecchia_Municipalita_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Arr_Rel_Insert_Input = {
  data: Array<Toponomastica_Vecchia_Municipalita_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Vecchia_Municipalita_On_Conflict>;
};

/** aggregate avg on columns */
export type Toponomastica_Vecchia_Municipalita_Avg_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_avg_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Avg_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "toponomastica.vecchia_municipalita". All fields are combined with a logical 'AND'. */
export type Toponomastica_Vecchia_Municipalita_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Vecchia_Municipalita_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  municipalita_id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "toponomastica.vecchia_municipalita" */
export enum Toponomastica_Vecchia_Municipalita_Constraint {
  /** unique or primary key constraint */
  VecchieMunicipalitaPkey = 'vecchie_municipalita_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Toponomastica_Vecchia_Municipalita_Max_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Toponomastica_Vecchia_Municipalita_Min_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
};

/** response of any mutation on the table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Mutation_Response = {
  __typename?: 'toponomastica_vecchia_municipalita_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Vecchia_Municipalita>;
};

/** on_conflict condition type for table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_On_Conflict = {
  constraint: Toponomastica_Vecchia_Municipalita_Constraint;
  update_columns?: Array<Toponomastica_Vecchia_Municipalita_Update_Column>;
  where?: Maybe<Toponomastica_Vecchia_Municipalita_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.vecchia_municipalita". */
export type Toponomastica_Vecchia_Municipalita_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
};

/** primary key columns input for table: toponomastica_vecchia_municipalita */
export type Toponomastica_Vecchia_Municipalita_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.vecchia_municipalita" */
export enum Toponomastica_Vecchia_Municipalita_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  Nome = 'nome'
}

/** input type for updating data in table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Vecchia_Municipalita_Stddev_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Vecchia_Municipalita_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Vecchia_Municipalita_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Toponomastica_Vecchia_Municipalita_Sum_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_sum_fields';
  id?: Maybe<Scalars['Int']>;
  municipalita_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Sum_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** update columns of table "toponomastica.vecchia_municipalita" */
export enum Toponomastica_Vecchia_Municipalita_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  MunicipalitaId = 'municipalita_id',
  /** column name */
  Nome = 'nome'
}

/** aggregate var_pop on columns */
export type Toponomastica_Vecchia_Municipalita_Var_Pop_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Vecchia_Municipalita_Var_Samp_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Toponomastica_Vecchia_Municipalita_Variance_Fields = {
  __typename?: 'toponomastica_vecchia_municipalita_variance_fields';
  id?: Maybe<Scalars['Float']>;
  municipalita_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "toponomastica.vecchia_municipalita" */
export type Toponomastica_Vecchia_Municipalita_Variance_Order_By = {
  id?: Maybe<Order_By>;
  municipalita_id?: Maybe<Order_By>;
};

/** columns and relationships of "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere = {
  __typename?: 'toponomastica_vecchio_quartiere';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  nome: Scalars['String'];
  /** An object relationship */
  quartiere: Toponomastica_Quartiere;
  quartiere_id: Scalars['Int'];
};

/** aggregated selection of "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Aggregate = {
  __typename?: 'toponomastica_vecchio_quartiere_aggregate';
  aggregate?: Maybe<Toponomastica_Vecchio_Quartiere_Aggregate_Fields>;
  nodes: Array<Toponomastica_Vecchio_Quartiere>;
};

/** aggregate fields of "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Aggregate_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_aggregate_fields';
  avg?: Maybe<Toponomastica_Vecchio_Quartiere_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Vecchio_Quartiere_Max_Fields>;
  min?: Maybe<Toponomastica_Vecchio_Quartiere_Min_Fields>;
  stddev?: Maybe<Toponomastica_Vecchio_Quartiere_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Vecchio_Quartiere_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Vecchio_Quartiere_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Vecchio_Quartiere_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Vecchio_Quartiere_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Vecchio_Quartiere_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Vecchio_Quartiere_Variance_Fields>;
};


/** aggregate fields of "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Aggregate_Order_By = {
  avg?: Maybe<Toponomastica_Vecchio_Quartiere_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Toponomastica_Vecchio_Quartiere_Max_Order_By>;
  min?: Maybe<Toponomastica_Vecchio_Quartiere_Min_Order_By>;
  stddev?: Maybe<Toponomastica_Vecchio_Quartiere_Stddev_Order_By>;
  stddev_pop?: Maybe<Toponomastica_Vecchio_Quartiere_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Toponomastica_Vecchio_Quartiere_Stddev_Samp_Order_By>;
  sum?: Maybe<Toponomastica_Vecchio_Quartiere_Sum_Order_By>;
  var_pop?: Maybe<Toponomastica_Vecchio_Quartiere_Var_Pop_Order_By>;
  var_samp?: Maybe<Toponomastica_Vecchio_Quartiere_Var_Samp_Order_By>;
  variance?: Maybe<Toponomastica_Vecchio_Quartiere_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Arr_Rel_Insert_Input = {
  data: Array<Toponomastica_Vecchio_Quartiere_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Vecchio_Quartiere_On_Conflict>;
};

/** aggregate avg on columns */
export type Toponomastica_Vecchio_Quartiere_Avg_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_avg_fields';
  id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Avg_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "toponomastica.vecchio_quartiere". All fields are combined with a logical 'AND'. */
export type Toponomastica_Vecchio_Quartiere_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Vecchio_Quartiere_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  quartiere?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  quartiere_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "toponomastica.vecchio_quartiere" */
export enum Toponomastica_Vecchio_Quartiere_Constraint {
  /** unique or primary key constraint */
  VecchiQuartieriPkey = 'vecchi_quartieri_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quartiere?: Maybe<Toponomastica_Quartiere_Obj_Rel_Insert_Input>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Toponomastica_Vecchio_Quartiere_Max_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Toponomastica_Vecchio_Quartiere_Min_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Mutation_Response = {
  __typename?: 'toponomastica_vecchio_quartiere_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Vecchio_Quartiere>;
};

/** on_conflict condition type for table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_On_Conflict = {
  constraint: Toponomastica_Vecchio_Quartiere_Constraint;
  update_columns?: Array<Toponomastica_Vecchio_Quartiere_Update_Column>;
  where?: Maybe<Toponomastica_Vecchio_Quartiere_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.vecchio_quartiere". */
export type Toponomastica_Vecchio_Quartiere_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  quartiere?: Maybe<Toponomastica_Quartiere_Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** primary key columns input for table: toponomastica_vecchio_quartiere */
export type Toponomastica_Vecchio_Quartiere_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.vecchio_quartiere" */
export enum Toponomastica_Vecchio_Quartiere_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  QuartiereId = 'quartiere_id'
}

/** input type for updating data in table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Vecchio_Quartiere_Stddev_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Vecchio_Quartiere_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Vecchio_Quartiere_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Toponomastica_Vecchio_Quartiere_Sum_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_sum_fields';
  id?: Maybe<Scalars['Int']>;
  quartiere_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Sum_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** update columns of table "toponomastica.vecchio_quartiere" */
export enum Toponomastica_Vecchio_Quartiere_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  QuartiereId = 'quartiere_id'
}

/** aggregate var_pop on columns */
export type Toponomastica_Vecchio_Quartiere_Var_Pop_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Vecchio_Quartiere_Var_Samp_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Toponomastica_Vecchio_Quartiere_Variance_Fields = {
  __typename?: 'toponomastica_vecchio_quartiere_variance_fields';
  id?: Maybe<Scalars['Float']>;
  quartiere_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "toponomastica.vecchio_quartiere" */
export type Toponomastica_Vecchio_Quartiere_Variance_Order_By = {
  id?: Maybe<Order_By>;
  quartiere_id?: Maybe<Order_By>;
};

/** columns and relationships of "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo = {
  __typename?: 'toponomastica_vecchio_toponimo';
  codice?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  dug?: Maybe<Toponomastica_Dug>;
  dug_id?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  nome: Scalars['String'];
  /** An object relationship */
  tipologia?: Maybe<Toponomastica_Tipologia>;
  tipologia_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  toponimo: Toponomastica_Toponimo;
  toponimo_id: Scalars['Int'];
};

/** aggregated selection of "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Aggregate = {
  __typename?: 'toponomastica_vecchio_toponimo_aggregate';
  aggregate?: Maybe<Toponomastica_Vecchio_Toponimo_Aggregate_Fields>;
  nodes: Array<Toponomastica_Vecchio_Toponimo>;
};

/** aggregate fields of "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Aggregate_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_aggregate_fields';
  avg?: Maybe<Toponomastica_Vecchio_Toponimo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Toponomastica_Vecchio_Toponimo_Max_Fields>;
  min?: Maybe<Toponomastica_Vecchio_Toponimo_Min_Fields>;
  stddev?: Maybe<Toponomastica_Vecchio_Toponimo_Stddev_Fields>;
  stddev_pop?: Maybe<Toponomastica_Vecchio_Toponimo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Toponomastica_Vecchio_Toponimo_Stddev_Samp_Fields>;
  sum?: Maybe<Toponomastica_Vecchio_Toponimo_Sum_Fields>;
  var_pop?: Maybe<Toponomastica_Vecchio_Toponimo_Var_Pop_Fields>;
  var_samp?: Maybe<Toponomastica_Vecchio_Toponimo_Var_Samp_Fields>;
  variance?: Maybe<Toponomastica_Vecchio_Toponimo_Variance_Fields>;
};


/** aggregate fields of "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Aggregate_Order_By = {
  avg?: Maybe<Toponomastica_Vecchio_Toponimo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Toponomastica_Vecchio_Toponimo_Max_Order_By>;
  min?: Maybe<Toponomastica_Vecchio_Toponimo_Min_Order_By>;
  stddev?: Maybe<Toponomastica_Vecchio_Toponimo_Stddev_Order_By>;
  stddev_pop?: Maybe<Toponomastica_Vecchio_Toponimo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Toponomastica_Vecchio_Toponimo_Stddev_Samp_Order_By>;
  sum?: Maybe<Toponomastica_Vecchio_Toponimo_Sum_Order_By>;
  var_pop?: Maybe<Toponomastica_Vecchio_Toponimo_Var_Pop_Order_By>;
  var_samp?: Maybe<Toponomastica_Vecchio_Toponimo_Var_Samp_Order_By>;
  variance?: Maybe<Toponomastica_Vecchio_Toponimo_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Arr_Rel_Insert_Input = {
  data: Array<Toponomastica_Vecchio_Toponimo_Insert_Input>;
  /** upsert condition */
  on_conflict?: Maybe<Toponomastica_Vecchio_Toponimo_On_Conflict>;
};

/** aggregate avg on columns */
export type Toponomastica_Vecchio_Toponimo_Avg_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_avg_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Avg_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "toponomastica.vecchio_toponimo". All fields are combined with a logical 'AND'. */
export type Toponomastica_Vecchio_Toponimo_Bool_Exp = {
  _and?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Bool_Exp>>;
  _not?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
  _or?: Maybe<Array<Toponomastica_Vecchio_Toponimo_Bool_Exp>>;
  codice?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  dug?: Maybe<Toponomastica_Dug_Bool_Exp>;
  dug_id?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  nome?: Maybe<String_Comparison_Exp>;
  tipologia?: Maybe<Toponomastica_Tipologia_Bool_Exp>;
  tipologia_id?: Maybe<Int_Comparison_Exp>;
  toponimo?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  toponimo_id?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "toponomastica.vecchio_toponimo" */
export enum Toponomastica_Vecchio_Toponimo_Constraint {
  /** unique or primary key constraint */
  VecchioToponimoPkey = 'vecchio_toponimo_pkey'
}

/** input type for incrementing numeric columns in table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Inc_Input = {
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Insert_Input = {
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug?: Maybe<Toponomastica_Dug_Obj_Rel_Insert_Input>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  tipologia?: Maybe<Toponomastica_Tipologia_Obj_Rel_Insert_Input>;
  tipologia_id?: Maybe<Scalars['Int']>;
  toponimo?: Maybe<Toponomastica_Toponimo_Obj_Rel_Insert_Input>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Toponomastica_Vecchio_Toponimo_Max_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_max_fields';
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Max_Order_By = {
  codice?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Toponomastica_Vecchio_Toponimo_Min_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_min_fields';
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Min_Order_By = {
  codice?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Mutation_Response = {
  __typename?: 'toponomastica_vecchio_toponimo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Toponomastica_Vecchio_Toponimo>;
};

/** on_conflict condition type for table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_On_Conflict = {
  constraint: Toponomastica_Vecchio_Toponimo_Constraint;
  update_columns?: Array<Toponomastica_Vecchio_Toponimo_Update_Column>;
  where?: Maybe<Toponomastica_Vecchio_Toponimo_Bool_Exp>;
};

/** Ordering options when selecting data from "toponomastica.vecchio_toponimo". */
export type Toponomastica_Vecchio_Toponimo_Order_By = {
  codice?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  dug?: Maybe<Toponomastica_Dug_Order_By>;
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  nome?: Maybe<Order_By>;
  tipologia?: Maybe<Toponomastica_Tipologia_Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo?: Maybe<Toponomastica_Toponimo_Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** primary key columns input for table: toponomastica_vecchio_toponimo */
export type Toponomastica_Vecchio_Toponimo_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "toponomastica.vecchio_toponimo" */
export enum Toponomastica_Vecchio_Toponimo_Select_Column {
  /** column name */
  Codice = 'codice',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DugId = 'dug_id',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  TipologiaId = 'tipologia_id',
  /** column name */
  ToponimoId = 'toponimo_id'
}

/** input type for updating data in table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Set_Input = {
  codice?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  nome?: Maybe<Scalars['String']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Toponomastica_Vecchio_Toponimo_Stddev_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_stddev_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Stddev_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Toponomastica_Vecchio_Toponimo_Stddev_Pop_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_stddev_pop_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Stddev_Pop_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Toponomastica_Vecchio_Toponimo_Stddev_Samp_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_stddev_samp_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Stddev_Samp_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Toponomastica_Vecchio_Toponimo_Sum_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_sum_fields';
  dug_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  tipologia_id?: Maybe<Scalars['Int']>;
  toponimo_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Sum_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** update columns of table "toponomastica.vecchio_toponimo" */
export enum Toponomastica_Vecchio_Toponimo_Update_Column {
  /** column name */
  Codice = 'codice',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DugId = 'dug_id',
  /** column name */
  Id = 'id',
  /** column name */
  Nome = 'nome',
  /** column name */
  TipologiaId = 'tipologia_id',
  /** column name */
  ToponimoId = 'toponimo_id'
}

/** aggregate var_pop on columns */
export type Toponomastica_Vecchio_Toponimo_Var_Pop_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_var_pop_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Var_Pop_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Toponomastica_Vecchio_Toponimo_Var_Samp_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_var_samp_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Var_Samp_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Toponomastica_Vecchio_Toponimo_Variance_Fields = {
  __typename?: 'toponomastica_vecchio_toponimo_variance_fields';
  dug_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  tipologia_id?: Maybe<Scalars['Float']>;
  toponimo_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "toponomastica.vecchio_toponimo" */
export type Toponomastica_Vecchio_Toponimo_Variance_Order_By = {
  dug_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tipologia_id?: Maybe<Order_By>;
  toponimo_id?: Maybe<Order_By>;
};

export type AgcosImportSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type AgcosImportSubscription = { __typename?: 'subscription_root', agcos_import: Array<{ __typename?: 'agcos_import', updated_at: any }> };

export type AgcosSubscriptionVariables = Exact<{ [key: string]: never; }>;


export type AgcosSubscription = { __typename?: 'subscription_root', agcos_agcos: Array<{ __typename?: 'agcos_agcos', civico?: string | null | undefined, costi_sostenuti?: string | null | undefined, created_at: any, data_sinistro?: any | null | undefined, esiste_citazione?: boolean | null | undefined, esiste_risarcimento?: boolean | null | undefined, esito_sentenza?: string | null | undefined, esiste_sentenza?: boolean | null | undefined, id: number, indicazione_approssimativa?: string | null | undefined, latitudine?: any | null | undefined, longitudine?: any | null | undefined, altro?: string | null | undefined, causa?: string | null | undefined, danno_cose?: boolean | null | undefined, danno_persone?: boolean | null | undefined, elemento?: string | null | undefined, presenza_acqua?: boolean | null | undefined, presenza_foglie?: boolean | null | undefined, scarsa_illuminazione_naturale?: boolean | null | undefined, scarsa_illuminazione_pubblica?: boolean | null | undefined, toponimo?: { __typename?: 'toponomastica_toponimo', id: number, nome: string, codice?: string | null | undefined, dug?: { __typename?: 'toponomastica_dug', id: number, nome: string } | null | undefined, tipologia?: { __typename?: 'toponomastica_tipologia', id: number, nome: string } | null | undefined, assegnazioni: Array<{ __typename?: 'toponomastica_assegnazione_toponimo', municipalita: { __typename?: 'toponomastica_municipalita', id: number, nome: string }, quartiere: { __typename?: 'toponomastica_quartiere', id: number, nome: string } }> } | null | undefined }> };

export type CiviciSelectQueryVariables = Exact<{
  fk_t_code?: Maybe<String_Comparison_Exp>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  civico1?: Maybe<String_Comparison_Exp>;
}>;


export type CiviciSelectQuery = { __typename?: 'query_root', gis_civico: Array<{ __typename?: 'gis_civico', id: any, civico1?: string | null | undefined, geom?: any | null | undefined }> };

export type SostegniIpiSelectQueryVariables = Exact<{
  fk_t_code?: Maybe<String_Comparison_Exp>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  matricola?: Maybe<String_Comparison_Exp>;
}>;


export type SostegniIpiSelectQuery = { __typename?: 'query_root', gis_sostegno_ipi: Array<{ __typename?: 'gis_sostegno_ipi', id: any, matricola?: string | null | undefined, geom?: any | null | undefined }> };

export type ConnessioniGrafoSelectQueryVariables = Exact<{
  fk_t_code?: Maybe<String_Comparison_Exp>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
}>;


export type ConnessioniGrafoSelectQuery = { __typename?: 'query_root', gis_connessione_grafo: Array<{ __typename?: 'gis_connessione_grafo', id: any, fk_t_code?: string | null | undefined, geom?: any | null | undefined }> };

export type SpecificaPosizionamentoToponimoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type SpecificaPosizionamentoToponimoSelectQuery = { __typename?: 'query_root', gis__specifica_posizionamento_toponimo: Array<{ __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string }> };

export type TipologiaPosizionamentoToponimoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TipologiaPosizionamentoToponimoSelectQuery = { __typename?: 'query_root', gis__tipologia_posizionamento_toponimo: Array<{ __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string }> };

export type DiarioSubscriptionVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DiarioSubscription = { __typename?: 'subscription_root', pis_diario: Array<{ __typename?: 'pis_diario', created_at: any, messaggio?: string | null | undefined, allegato?: string | null | undefined, utente: any }> };

export type InsertDiarioMutationVariables = Exact<{
  objects?: Maybe<Array<Pis_Diario_Insert_Input> | Pis_Diario_Insert_Input>;
}>;


export type InsertDiarioMutation = { __typename?: 'mutation_root', insert_pis_diario?: { __typename?: 'pis_diario_mutation_response', affected_rows: number } | null | undefined };

export type InsertAllegatoDiarioMutationVariables = Exact<{
  objects: Scalars['json'];
}>;


export type InsertAllegatoDiarioMutation = { __typename?: 'mutation_root', insert_allegato_diario?: { __typename?: 'insert_allegato_diario_output', affected_rows?: number | null | undefined } | null | undefined };

export type InterventiStraordinariSubscriptionVariables = Exact<{
  where?: Maybe<Pis_Intervento_Straordinario_Bool_Exp>;
}>;


export type InterventiStraordinariSubscription = { __typename?: 'subscription_root', pis_intervento_straordinario: Array<{ __typename?: 'pis_intervento_straordinario', id: number, municipalita_storica?: any | null | undefined, quartiere_storico?: any | null | undefined, toponimo_storico?: any | null | undefined, data_inserimento?: any | null | undefined, data_inizio_lavori?: any | null | undefined, data_fine_lavori?: any | null | undefined, tipologia_intervento?: string | null | undefined, lavori_effettuati?: string | null | undefined, stato?: Pis__Stato_Segnalazione_Enum | null | undefined, posizionamento_toponimo_punto_iniziale?: { __typename?: 'gis_posizionamento_toponimo', id: number, civico?: string | null | undefined, ipi?: string | null | undefined, km?: string | null | undefined, connessione?: string | null | undefined, note?: string | null | undefined, geoloc?: any | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, posizionamento_toponimo_punto_finale?: { __typename?: 'gis_posizionamento_toponimo', id: number, civico?: string | null | undefined, ipi?: string | null | undefined, km?: string | null | undefined, connessione?: string | null | undefined, note?: string | null | undefined, geoloc?: any | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, priorita?: { __typename?: 'pis__priorita', id: number, nome: string } | null | undefined }> };

export type InterventoStraordinarioQueryVariables = Exact<{
  where: Pis_Intervento_Straordinario_Bool_Exp;
}>;


export type InterventoStraordinarioQuery = { __typename?: 'query_root', pis_intervento_straordinario: Array<{ __typename?: 'pis_intervento_straordinario', id: number, municipalita_storica?: any | null | undefined, quartiere_storico?: any | null | undefined, toponimo_storico?: any | null | undefined, data_inserimento?: any | null | undefined, data_inizio_lavori?: any | null | undefined, data_fine_lavori?: any | null | undefined, tipologia_intervento?: string | null | undefined, lavori_effettuati?: string | null | undefined, stato?: Pis__Stato_Segnalazione_Enum | null | undefined, municipalita?: { __typename?: 'toponomastica_municipalita', id: number, nome: string } | null | undefined, quartiere?: { __typename?: 'toponomastica_quartiere', id: number, nome: string, municipalita: Array<{ __typename?: 'toponomastica_assegnazione_quartiere', municipalita_id: number }> } | null | undefined, toponimo?: { __typename?: 'toponomastica_toponimo', id: number, nome: string, codice?: string | null | undefined, dug?: { __typename?: 'toponomastica_dug', id: number, nome: string } | null | undefined, assegnazioni: Array<{ __typename?: 'toponomastica_assegnazione_toponimo', quartiere_id: number }> } | null | undefined, posizionamento_toponimo_punto_iniziale?: { __typename?: 'gis_posizionamento_toponimo', id: number, civico?: string | null | undefined, ipi?: string | null | undefined, km?: string | null | undefined, connessione?: string | null | undefined, note?: string | null | undefined, geoloc?: any | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, posizionamento_toponimo_punto_finale?: { __typename?: 'gis_posizionamento_toponimo', id: number, civico?: string | null | undefined, ipi?: string | null | undefined, km?: string | null | undefined, connessione?: string | null | undefined, note?: string | null | undefined, geoloc?: any | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, priorita?: { __typename?: 'pis__priorita', id: number, nome: string } | null | undefined }> };

export type UpdateInterventoStraordinarioMutationVariables = Exact<{
  on_conflict: Scalars['json'];
  intervento_straordinario: Scalars['json'];
}>;


export type UpdateInterventoStraordinarioMutation = { __typename?: 'mutation_root', custom_insert_intervento_straordinario?: { __typename?: 'custom_insert_intervento_straordinario_output', intervento_straordinario: { __typename?: 'pis_intervento_straordinario', id: number } } | null | undefined };

export type DeleteInterventoStraordinarioMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteInterventoStraordinarioMutation = { __typename?: 'mutation_root', delete_pis_intervento_straordinario?: { __typename?: 'pis_intervento_straordinario_mutation_response', affected_rows: number } | null | undefined };

export type SegnalazioniSubscriptionVariables = Exact<{
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
}>;


export type SegnalazioniSubscription = { __typename?: 'subscription_root', pis_segnalazione: Array<{ __typename?: 'pis_segnalazione', id: number, municipalita_id?: number | null | undefined, quartiere_id?: number | null | undefined, toponimo_id?: number | null | undefined, municipalita_storica?: any | null | undefined, quartiere_storico?: any | null | undefined, toponimo_storico?: any | null | undefined, data?: any | null | undefined, stato?: Pis__Stato_Segnalazione_Enum | null | undefined, richiesta_protezione_civile?: boolean | null | undefined, tecnico_referente?: { __typename?: 'pis_tecnico_referente', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined } | null | undefined, priorita?: { __typename?: 'pis__priorita', id: number, nome: string } | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', note?: string | null | undefined, numero?: string | null | undefined, id: number, data?: any | null | undefined, mittente?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatari: Array<{ __typename?: 'protocollo_protocollo_destinatario', id: number, e_esterno: boolean, destinatario_interno?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatario_esterno?: { __typename?: 'protocollo_protocollo_destinatario_esterno', id: number, cognome?: string | null | undefined, email?: string | null | undefined, codice_fiscale?: string | null | undefined, nome?: string | null | undefined } | null | undefined }> } | null | undefined, dissesto?: { __typename?: 'pis_dissesto', id: number, note?: string | null | undefined, peso?: any | null | undefined, prima_dimensione?: any | null | undefined, profondita?: any | null | undefined, seconda_dimensione?: any | null | undefined, terza_dimensione?: any | null | undefined, tipologia?: { __typename?: 'pis__tipologia_dissesto', id: number, nome: string, intervento?: string | null | undefined } | null | undefined, forma?: { __typename?: 'pis__forma_dissesto', id: number, nome: string } | null | undefined } | null | undefined, posizionamento_toponimo_punto_iniziale?: { __typename?: 'gis_posizionamento_toponimo', civico?: string | null | undefined, connessione?: string | null | undefined, geoloc?: any | null | undefined, id: number, ipi?: string | null | undefined, km?: string | null | undefined, note?: string | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, diario: Array<{ __typename?: 'pis_diario', id: number, messaggio?: string | null | undefined, allegato?: string | null | undefined, utente: any }>, segnalazioni_collegate: Array<{ __typename?: 'pis_segnalazione_collegata', segnalazione?: { __typename?: 'pis_segnalazione', id: number, created_at?: any | null | undefined, stato?: Pis__Stato_Segnalazione_Enum | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', data?: any | null | undefined, numero?: string | null | undefined } | null | undefined } | null | undefined }>, eventi: Array<{ __typename?: 'pis_evento', stato: Pis__Stato_Segnalazione_Enum, note?: string | null | undefined, created_at: any, squadra?: { __typename?: 'pis_squadra', nome?: string | null | undefined } | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', numero?: string | null | undefined, data?: any | null | undefined, note?: string | null | undefined } | null | undefined, risolutore?: { __typename?: 'pis_segnalazione', protocollo?: { __typename?: 'protocollo_protocollo', numero?: string | null | undefined, data?: any | null | undefined } | null | undefined } | null | undefined }>, intervento?: { __typename?: 'pis_intervento', id: number, assistenza_pm?: boolean | null | undefined, data_fine_lavori?: any | null | undefined, data_inizio_lavori?: any | null | undefined, difformita?: string | null | undefined, dissesto_difforme?: boolean | null | undefined, note?: string | null | undefined, condizioni_traffico?: { __typename?: 'pis__condizioni_traffico', nome: string, id: number } | null | undefined, attrezzature_impiegate: Array<{ __typename?: 'pis_attrezzature_impiegate', id: number, nome?: string | null | undefined, quantita?: any | null | undefined }>, giorni_trascorsi?: { __typename?: 'pis__giorni_trascorsi', id: number, nome: string } | null | undefined, materiali_dissesto: Array<{ __typename?: 'pis_materiale_dissesto', id: number, quantita?: any | null | undefined, altro?: string | null | undefined, materiale?: { __typename?: 'pis__materiale', id: number, nome: string } | null | undefined }>, segnaletica_lasciata: Array<{ __typename?: 'pis_segnaletica_lasciata', id: number, nome?: string | null | undefined, quantita?: any | null | undefined }>, veicoli_impiegati: Array<{ __typename?: 'pis_veicoli_impiegati', id: number, targa?: string | null | undefined }> } | null | undefined }> };

export type SegnalazioneQueryVariables = Exact<{
  where: Pis_Segnalazione_Bool_Exp;
}>;


export type SegnalazioneQuery = { __typename?: 'query_root', pis_segnalazione: Array<{ __typename?: 'pis_segnalazione', id: number, municipalita_storica?: any | null | undefined, quartiere_storico?: any | null | undefined, toponimo_storico?: any | null | undefined, data?: any | null | undefined, stato?: Pis__Stato_Segnalazione_Enum | null | undefined, richiesta_protezione_civile?: boolean | null | undefined, municipalita?: { __typename?: 'toponomastica_municipalita', id: number, nome: string } | null | undefined, quartiere?: { __typename?: 'toponomastica_quartiere', id: number, nome: string, municipalita: Array<{ __typename?: 'toponomastica_assegnazione_quartiere', municipalita_id: number }> } | null | undefined, toponimo?: { __typename?: 'toponomastica_toponimo', id: number, nome: string, codice?: string | null | undefined, dug?: { __typename?: 'toponomastica_dug', id: number, nome: string } | null | undefined, assegnazioni: Array<{ __typename?: 'toponomastica_assegnazione_toponimo', quartiere_id: number }> } | null | undefined, tecnico_referente?: { __typename?: 'pis_tecnico_referente', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined } | null | undefined, priorita?: { __typename?: 'pis__priorita', id: number, nome: string } | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', note?: string | null | undefined, numero?: string | null | undefined, id: number, data?: any | null | undefined, mittente?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatari: Array<{ __typename?: 'protocollo_protocollo_destinatario', id: number, e_esterno: boolean, destinatario_interno?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatario_esterno?: { __typename?: 'protocollo_protocollo_destinatario_esterno', id: number, cognome?: string | null | undefined, email?: string | null | undefined, codice_fiscale?: string | null | undefined, nome?: string | null | undefined } | null | undefined }> } | null | undefined, dissesto?: { __typename?: 'pis_dissesto', id: number, note?: string | null | undefined, peso?: any | null | undefined, prima_dimensione?: any | null | undefined, profondita?: any | null | undefined, seconda_dimensione?: any | null | undefined, terza_dimensione?: any | null | undefined, tipologia?: { __typename?: 'pis__tipologia_dissesto', id: number, nome: string, intervento?: string | null | undefined } | null | undefined, forma?: { __typename?: 'pis__forma_dissesto', id: number, nome: string } | null | undefined } | null | undefined, posizionamento_toponimo_punto_iniziale?: { __typename?: 'gis_posizionamento_toponimo', civico?: string | null | undefined, connessione?: string | null | undefined, geoloc?: any | null | undefined, id: number, ipi?: string | null | undefined, km?: string | null | undefined, note?: string | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, diario: Array<{ __typename?: 'pis_diario', id: number, messaggio?: string | null | undefined, allegato?: string | null | undefined, utente: any }>, segnalazioni_collegate: Array<{ __typename?: 'pis_segnalazione_collegata', segnalazione?: { __typename?: 'pis_segnalazione', id: number, created_at?: any | null | undefined, stato?: Pis__Stato_Segnalazione_Enum | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', data?: any | null | undefined, numero?: string | null | undefined } | null | undefined } | null | undefined }>, eventi: Array<{ __typename?: 'pis_evento', stato: Pis__Stato_Segnalazione_Enum, note?: string | null | undefined, created_at: any, squadra?: { __typename?: 'pis_squadra', nome?: string | null | undefined } | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', numero?: string | null | undefined, data?: any | null | undefined, note?: string | null | undefined } | null | undefined, risolutore?: { __typename?: 'pis_segnalazione', protocollo?: { __typename?: 'protocollo_protocollo', numero?: string | null | undefined, data?: any | null | undefined } | null | undefined } | null | undefined }>, intervento?: { __typename?: 'pis_intervento', id: number, assistenza_pm?: boolean | null | undefined, data_fine_lavori?: any | null | undefined, data_inizio_lavori?: any | null | undefined, difformita?: string | null | undefined, dissesto_difforme?: boolean | null | undefined, note?: string | null | undefined, condizioni_traffico?: { __typename?: 'pis__condizioni_traffico', nome: string, id: number } | null | undefined, attrezzature_impiegate: Array<{ __typename?: 'pis_attrezzature_impiegate', id: number, nome?: string | null | undefined, quantita?: any | null | undefined }>, giorni_trascorsi?: { __typename?: 'pis__giorni_trascorsi', id: number, nome: string } | null | undefined, materiali_dissesto: Array<{ __typename?: 'pis_materiale_dissesto', id: number, quantita?: any | null | undefined, altro?: string | null | undefined, materiale?: { __typename?: 'pis__materiale', id: number, nome: string } | null | undefined }>, segnaletica_lasciata: Array<{ __typename?: 'pis_segnaletica_lasciata', id: number, nome?: string | null | undefined, quantita?: any | null | undefined }>, veicoli_impiegati: Array<{ __typename?: 'pis_veicoli_impiegati', id: number, targa?: string | null | undefined }> } | null | undefined }> };

export type UpdateSegnalazioneMutationVariables = Exact<{
  on_conflict: Scalars['json'];
  segnalazione: Scalars['json'];
}>;


export type UpdateSegnalazioneMutation = { __typename?: 'mutation_root', custom_insert_segnalazione?: { __typename?: 'custom_insert_segnalazione_output', segnalazione: { __typename?: 'pis_segnalazione', id: number, protocollo?: { __typename?: 'protocollo_protocollo', destinatari: Array<{ __typename?: 'protocollo_protocollo_destinatario', id: number, destinatario_esterno?: { __typename?: 'protocollo_protocollo_destinatario_esterno', id: number } | null | undefined }> } | null | undefined, segnalazioni_collegate: Array<{ __typename?: 'pis_segnalazione_collegata', segnalazione?: { __typename?: 'pis_segnalazione', id: number } | null | undefined }>, intervento?: { __typename?: 'pis_intervento', attrezzature_impiegate: Array<{ __typename?: 'pis_attrezzature_impiegate', id: number }>, materiali_dissesto: Array<{ __typename?: 'pis_materiale_dissesto', id: number }>, segnaletica_lasciata: Array<{ __typename?: 'pis_segnaletica_lasciata', id: number }>, veicoli_impiegati: Array<{ __typename?: 'pis_veicoli_impiegati', id: number }> } | null | undefined } } | null | undefined };

export type DeleteSegnalazioneMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteSegnalazioneMutation = { __typename?: 'mutation_root', delete_pis_segnalazione?: { __typename?: 'pis_segnalazione_mutation_response', affected_rows: number } | null | undefined };

export type StatoSegnalazioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Pis__Stato_Segnalazione_Bool_Exp>;
}>;


export type StatoSegnalazioneSelectQuery = { __typename?: 'query_root', pis__stato_segnalazione: Array<{ __typename?: 'pis__stato_segnalazione', text: string }> };

export type PrioritaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type PrioritaSelectQuery = { __typename?: 'query_root', pis__priorita: Array<{ __typename?: 'pis__priorita', id: number, nome: string }> };

export type FormaDissesoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type FormaDissesoSelectQuery = { __typename?: 'query_root', pis__forma_dissesto: Array<{ __typename?: 'pis__forma_dissesto', id: number, nome: string }> };

export type TipologiaDissesoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TipologiaDissesoSelectQuery = { __typename?: 'query_root', pis__tipologia_dissesto: Array<{ __typename?: 'pis__tipologia_dissesto', id: number, nome: string, intervento?: string | null | undefined }> };

export type SegnalazioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Pis_Segnalazione_Bool_Exp>;
}>;


export type SegnalazioneSelectQuery = { __typename?: 'query_root', pis_segnalazione: Array<{ __typename?: 'pis_segnalazione', id: number, created_at?: any | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', numero?: string | null | undefined, data?: any | null | undefined } | null | undefined }> };

export type SquadrePisSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Pis_Squadra_Bool_Exp>;
}>;


export type SquadrePisSelectQuery = { __typename?: 'query_root', pis_squadra: Array<{ __typename?: 'pis_squadra', id: number, nome?: string | null | undefined, protezione_civile?: boolean | null | undefined, membri: Array<{ __typename?: 'pis_assegnazione_squadra', membro: any }> }> };

export type CondizioniTrafficoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type CondizioniTrafficoSelectQuery = { __typename?: 'query_root', pis__condizioni_traffico: Array<{ __typename?: 'pis__condizioni_traffico', id: number, nome: string }> };

export type GiorniTrascorsiSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type GiorniTrascorsiSelectQuery = { __typename?: 'query_root', pis__giorni_trascorsi: Array<{ __typename?: 'pis__giorni_trascorsi', id: number, nome: string }> };

export type MaterialeSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type MaterialeSelectQuery = { __typename?: 'query_root', pis__materiale: Array<{ __typename?: 'pis__materiale', id: number, nome: string }> };

export type SquadrePisSubscriptionVariables = Exact<{
  where?: Maybe<Pis_Squadra_Bool_Exp>;
}>;


export type SquadrePisSubscription = { __typename?: 'subscription_root', pis_squadra: Array<{ __typename?: 'pis_squadra', id: number, nome?: string | null | undefined, protezione_civile?: boolean | null | undefined, updated_at: any, vecchie_denominazioni: Array<{ __typename?: 'pis_vecchia_squadra', nome?: string | null | undefined, created_at: any }>, membri: Array<{ __typename?: 'pis_assegnazione_squadra', id: number, caposquadra: boolean, inizio_validita: any, fine_validita?: any | null | undefined, membro: any }> }> };

export type UpdateSquadraPisMutationVariables = Exact<{
  squadra?: Maybe<Array<Pis_Squadra_Insert_Input> | Pis_Squadra_Insert_Input>;
}>;


export type UpdateSquadraPisMutation = { __typename?: 'mutation_root', insert_pis_squadra?: { __typename?: 'pis_squadra_mutation_response', affected_rows: number } | null | undefined };

export type DeleteSquadraPisMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteSquadraPisMutation = { __typename?: 'mutation_root', delete_pis_squadra?: { __typename?: 'pis_squadra_mutation_response', affected_rows: number } | null | undefined };

export type GeneraProtocolloMutationVariables = Exact<{
  data?: Maybe<ProtocolloInput>;
}>;


export type GeneraProtocolloMutation = { __typename?: 'mutation_root', genera_protocollo: { __typename?: 'ProtocolloOutput', message?: string | null | undefined, number?: string | null | undefined, error: boolean, datetime?: any | null | undefined } };

export type SezioneProtocolloSelectQueryVariables = Exact<{
  where?: Maybe<Protocollo__Sezione_Protocollo_Bool_Exp>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
}>;


export type SezioneProtocolloSelectQuery = { __typename?: 'query_root', protocollo__sezione_protocollo: Array<{ __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string }> };

export type CittaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  citta?: Maybe<String_Comparison_Exp>;
}>;


export type CittaSelectQuery = { __typename?: 'query_root', _citta: Array<{ __typename?: '_citta', id: number, citta?: string | null | undefined, regione?: string | null | undefined, provincia?: string | null | undefined, p_abbreviazione?: string | null | undefined, codice?: string | null | undefined }> };

export type NazioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type NazioneSelectQuery = { __typename?: 'query_root', _nazione: Array<{ __typename?: '_nazione', id: number, nome?: string | null | undefined }> };

export type TitoloSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TitoloSelectQuery = { __typename?: 'query_root', _titolo: Array<{ __typename?: '_titolo', id: number, nome: string }> };

export type SiNoAltroSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type SiNoAltroSelectQuery = { __typename?: 'query_root', _sinoaltro: Array<{ __typename?: '_sinoaltro', id: number, nome: string }> };

export type SessoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type SessoSelectQuery = { __typename?: 'query_root', _sesso: Array<{ __typename?: '_sesso', id: number, nome: string }> };

export type RissSubscriptionVariables = Exact<{
  where?: Maybe<Sis_Ris_Bool_Exp>;
}>;


export type RissSubscription = { __typename?: 'subscription_root', sis_ris: Array<{ __typename?: 'sis_ris', id: number, municipalita_id?: number | null | undefined, toponimo_id?: number | null | undefined, quartiere_id?: number | null | undefined, municipalita_storica?: any | null | undefined, quartiere_storico?: any | null | undefined, toponimo_storico?: any | null | undefined, altro?: string | null | undefined, conseguenza_veicolo_note?: string | null | undefined, data?: any | null | undefined, data_intervento?: any | null | undefined, data_presunta?: any | null | undefined, data_segnalazione?: any | null | undefined, decessi_certificato?: boolean | null | undefined, decessi_certificato_redattore?: string | null | undefined, decessi_certificato_redattore_in_servizio?: string | null | undefined, decessi_certificato_redattore_recapito?: string | null | undefined, decessi_intervento_polizia_mortuaria?: boolean | null | undefined, decessi_note?: string | null | undefined, decessi_notiziato_pm?: boolean | null | undefined, decessi_numero?: number | null | undefined, decessi_oggetti_rinvenuti?: boolean | null | undefined, decessi_successivo_data?: any | null | undefined, decessi_trasporto_salme_data?: any | null | undefined, decessi_trasporto_salme_presso?: string | null | undefined, decessi_verbale_riconoscimento_salma?: boolean | null | undefined, dinamica?: string | null | undefined, ente_primo_intervento_note?: string | null | undefined, ente_secondario_intervenuti_altro?: string | null | undefined, ente_secondario_intervenuti_motivazione?: string | null | undefined, ente_secondario_intervenuti_vvff_capo_pattuglia?: string | null | undefined, ente_secondario_intervenuti_vvff_comando?: string | null | undefined, ente_secondario_intervenuti_vvff_gia_intervenuti?: boolean | null | undefined, ente_segnalatore_note?: string | null | undefined, impianto_semaforico_note?: string | null | undefined, localizzazione_altro_note?: string | null | undefined, localizzazione_condizioni_atmosferiche_note?: string | null | undefined, localizzazione_condizioni_traffico_note?: string | null | undefined, localizzazione_extra_abitato_note?: string | null | undefined, localizzazione_fondo_stradale_note?: string | null | undefined, localizzazione_illuminazione_note?: string | null | undefined, localizzazione_note?: string | null | undefined, localizzazione_particolarita_strada_note?: string | null | undefined, localizzazione_pavimentazione_note?: string | null | undefined, localizzazione_tipo_strada_note?: string | null | undefined, localizzazione_visibilita_note?: string | null | undefined, natura_incidente_note?: string | null | undefined, note_intervento?: string | null | undefined, operazione_terminate_data?: any | null | undefined, posizione_finale_veicolo_carreggiata_note?: string | null | undefined, posizione_finale_veicolo_fuori_sede_note?: string | null | undefined, posizione_finale_veicolo_margini_note?: string | null | undefined, posizione_statica_descrizione_analitica?: string | null | undefined, posizione_statica_rilievi?: boolean | null | undefined, posizione_statica_rilievi_veicoli_rimossi?: boolean | null | undefined, punti_descrizione_analitica?: string | null | undefined, punti_investimento?: boolean | null | undefined, punti_investimento_multiplo?: boolean | null | undefined, punti_rilievi?: boolean | null | undefined, punti_urto?: boolean | null | undefined, punti_urto_accorda?: string | null | undefined, punti_urto_multiplo?: boolean | null | undefined, punti_urto_note?: string | null | undefined, ris_consegnato_a_altro?: string | null | undefined, ris_consegnato_data?: any | null | undefined, stato: Sis__Stato_Ris_Enum, unita_operativa?: { __typename?: 'sis_unita_operativa', id: number, nome?: string | null | undefined } | null | undefined, agenti_accertatori: Array<{ __typename?: 'sis_agente_accertatore', id: number, username: string, agente: any }>, infortunati: Array<{ __typename?: 'sis_infortunato', cognome?: string | null | undefined, cura_da_parte?: string | null | undefined, danni_lamentati?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, telefono?: string | null | undefined, ospedale_altro?: string | null | undefined, ospedale_diagnosi?: string | null | undefined, ospedale_prognosi?: string | null | undefined, ospedale_referto?: string | null | undefined, ospedale_referto_rilasciato_da?: string | null | undefined, ospedale_ricoverato?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, rifiuta_cure_immediate?: boolean | null | undefined, scheda_118?: number | null | undefined, trasportato_richiesta?: string | null | undefined, trasportato_targa_auto?: string | null | undefined, conducente?: { __typename?: 'sis_conducente', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, informazioni: Array<{ __typename?: 'sis_associazione_informazioni_infortunato', id: number, informazione: { __typename?: 'sis__infortunato_informazione', id: number, nome?: string | null | undefined } }>, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, id: number, codice?: string | null | undefined, provincia?: string | null | undefined, p_abbreviazione?: string | null | undefined, regione?: string | null | undefined } | null | undefined, pedone?: { __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, trasportato?: { __typename?: 'sis_trasportato', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, trasportato_ambulanza?: { __typename?: 'sis__intortunato_tasportato', id: number, nome: string } | null | undefined, veicolo?: { __typename?: 'sis_veicolo', id: number, marca?: string | null | undefined, modello?: string | null | undefined, targa?: string | null | undefined } | null | undefined }>, accertamenti: Array<{ __typename?: 'sis_accertamento', centro_abitato?: boolean | null | undefined, condizioni_meteo_illuminazione?: string | null | undefined, condizioni_meteo_tempo?: string | null | undefined, condizioni_meteo_visibilita_limitata?: string | null | undefined, condizioni_meteo_visibilita_limitata_tipologia_metri?: string | null | undefined, data?: any | null | undefined, descrizione_piano_note?: string | null | undefined, descrizione_piano_pavimentazione?: string | null | undefined, descrizione_piano_stato_fondo?: string | null | undefined, direzione_a?: string | null | undefined, direzione_da?: string | null | undefined, id: number, segnaletica?: string | null | undefined, tipologia_strada_carreggiate?: string | null | undefined, tipologia_strada_carreggiate_n?: string | null | undefined, tipologia_strada_conformazione?: string | null | undefined, traffico?: string | null | undefined, condizioni_meteo_visibilita_limitata_tipologia: Array<{ __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia', id: number, condizioni_meteo_visibilita_limitata_tipologia: { __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia', id: number, nome: string } }> }>, altri: Array<{ __typename?: 'sis_altro', id: number, note?: string | null | undefined }>, conducenti: Array<{ __typename?: 'sis_conducente', cap_numero?: string | null | undefined, cap_rilasciata_da_ddt?: string | null | undefined, cap_rilasciata_da_ddt_data?: any | null | undefined, cap_tipo?: string | null | undefined, cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, osservazioni_note?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, professione?: string | null | undefined, prova_etilometro?: boolean | null | undefined, prova_etilometro_esito?: string | null | undefined, prova_narcotest?: boolean | null | undefined, prova_narcotest_esito?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, richiesta_esami?: boolean | null | undefined, richiesta_esami_effettuati_presso?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> }>, conseguenze_veicolo: Array<{ __typename?: 'sis_associazione_conseguenza_veicolo', id: number, conseguenza_veicolo: { __typename?: 'sis__conseguenza_veicolo', nome?: string | null | undefined, id: number } }>, decessi_tipologie: Array<{ __typename?: 'sis_associazione_decessi_tipologie', id: number, decessi_tipologia: { __typename?: 'sis__decessi_tipologia', id: number, nome: string } }>, enti_primo_intervento: Array<{ __typename?: 'sis_associazione_ente_primo_intervento', id: number, targa_auto?: string | null | undefined, tipo?: string | null | undefined, ente: { __typename?: 'sis__ente', label_tipo?: string | null | undefined, nome?: string | null | undefined, id: number } }>, enti_secondario_intervenuti: Array<{ __typename?: 'sis_associazione_ente_secondario_intervenuti', id: number, ente_secondario: { __typename?: 'sis__ente_secondario', id: number, nome?: string | null | undefined } }>, enti_segnalatori: Array<{ __typename?: 'sis_associazione_ente_segnalatore', id: number, ente: { __typename?: 'sis__ente', id: number, label_tipo?: string | null | undefined, nome?: string | null | undefined, abbreviazione?: string | null | undefined } }>, eventi: Array<{ __typename?: 'sis_evento_sis', stato: Sis__Stato_Ris_Enum, note?: string | null | undefined, motivazione_cancellazione?: string | null | undefined, created_at: any, cancellatore?: any | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', numero?: string | null | undefined, data?: any | null | undefined, note?: string | null | undefined } | null | undefined }>, impianti_semaforici: Array<{ __typename?: 'sis_associazione_impianto_semaforico', id: number, impianto_semaforico: { __typename?: 'sis__impianto_semaforico', id: number, nome?: string | null | undefined } }>, infrazioni: Array<{ __typename?: 'sis_infrazione', verbale_n?: string | null | undefined, verbale_data?: any | null | undefined, art_80_data?: any | null | undefined, art_80_dtt?: string | null | undefined, articolo?: string | null | undefined, data_trasmissione_rapporto?: any | null | undefined, id: number, note?: string | null | undefined, uffici_provinciale?: string | null | undefined, utg_prefettura?: string | null | undefined, conducente?: { __typename?: 'sis_conducente', cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> } | null | undefined, pedone?: { __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, veicolo?: { __typename?: 'sis_veicolo', id: number, colore_carrozzeria?: string | null | undefined, marca?: string | null | undefined, modello?: string | null | undefined, targa?: string | null | undefined, telaio?: string | null | undefined, nazione?: { __typename?: '_nazione', nome?: string | null | undefined } | null | undefined } | null | undefined }>, localizzazioni_altro: Array<{ __typename?: 'sis_associazione_localizzazione_altro', id: number, localizzazione_altro: { __typename?: 'sis__localizzazione_altro', id: number, nome?: string | null | undefined } }>, localizzazioni_condizioni_atmosferiche: Array<{ __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche', id: number, localizzazione_condizioni_atmosferiche: { __typename?: 'sis__localizzazione_condizioni_atmosferiche', id: number, nome?: string | null | undefined } }>, localizzazioni_condizioni_traffico: Array<{ __typename?: 'sis_associzione_localizzazione_condizioni_traffico', id: number, localizzazione_condizioni_traffico: { __typename?: 'sis__localizzazione_condizioni_traffico', id: number, nome?: string | null | undefined } }>, localizzazioni_extra_abitato: Array<{ __typename?: 'sis_associazione_localizzazione_extra_abitato', id: number, localizzazione_extra_abitato: { __typename?: 'sis__localizzazione_extra_abitato', id: number, nome?: string | null | undefined } }>, localizzazioni_fondo_stradale: Array<{ __typename?: 'sis_associazione_localizzazione_fondo_stradale', id: number, localizzazione_fondo_stradale: { __typename?: 'sis__localizzazione_fondo_stradale', id: number, nome?: string | null | undefined } }>, localizzazioni_illuminazione: Array<{ __typename?: 'sis_associazione_localizzazione_illuminazione', id: number, localizzazione_illuminazione: { __typename?: 'sis__localizzazione_illuminazione', id: number, nome?: string | null | undefined } }>, localizzazioni_particolarita_strada: Array<{ __typename?: 'sis_associazione_localizzazione_particolarita_strada', id: number, localizzazione_particolarita_strada: { __typename?: 'sis__localizzazione_particolarita_strada', id: number, nome?: string | null | undefined } }>, localizzazioni_pavimentazione: Array<{ __typename?: 'sis_associazione_localizzazione_pavimentazione', id: number, localizzazione_pavimentazione: { __typename?: 'sis__localizzazione_pavimentazione', id: number, nome?: string | null | undefined } }>, localizzazioni_tipo_strade: Array<{ __typename?: 'sis_associazione_localizzazione_tipo_strada', id: number, localizzazione_tipo_strada: { __typename?: 'sis__localizzazione_tipo_strada', id: number, nome?: string | null | undefined } }>, localizzazioni_visibilita: Array<{ __typename?: 'sis_associazione_localizzazione_visibilita', id: number, localizzazione_visibilita: { __typename?: 'sis__localizzazione_visibilita', nome?: string | null | undefined, id: number } }>, locatari: Array<{ __typename?: 'sis_locatario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, telefono?: string | null | undefined, residente_indirizzo?: string | null | undefined, residente_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined }>, nature_incidente: Array<{ __typename?: 'sis_associazione_natura_incidente', id: number, natura_incidente: { __typename?: 'sis__natura_incidente', id: number, nome?: string | null | undefined } }>, pedoni: Array<{ __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string, id: number } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined, codice?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined, id: number } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined }>, posizionamento_toponimo?: { __typename?: 'gis_posizionamento_toponimo', civico?: string | null | undefined, connessione?: string | null | undefined, geoloc?: any | null | undefined, id: number, ipi?: string | null | undefined, km?: string | null | undefined, note?: string | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, posizione_statica_rilievi_no_tipologia?: { __typename?: 'sis__punti_rilievi_no_tipologia', id: number, nome: string } | null | undefined, posizioni_finali_veicolo_carreggiata: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata', id: number, posizione_finale_veicolo_carreggiata: { __typename?: 'sis__posizione_finale_veicolo_carreggiata', id: number, nome?: string | null | undefined } }>, posizioni_finali_veicolo_fuori_sede: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede', id: number, posizione_finale_veicolo_fuori_sede: { __typename?: 'sis__posizione_finale_veicolo_fuori_sede', id: number, nome?: string | null | undefined } }>, posizioni_finali_veicolo_margini: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_margini', id: number, posizione_finale_veicolo_margini: { __typename?: 'sis__posizione_finale_veicolo_margini', id: number, nome?: string | null | undefined } }>, proprietari: Array<{ __typename?: 'sis_proprietario', cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }>, proprietari_giuridico: Array<{ __typename?: 'sis_proprietario_giuridico', citta_altro?: string | null | undefined, codice_fiscale?: string | null | undefined, id: number, indirizzo?: string | null | undefined, partita_iva?: string | null | undefined, ragione_sociale?: string | null | undefined, telefono?: string | null | undefined, citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined }>, protocollo?: { __typename?: 'protocollo_protocollo', note?: string | null | undefined, numero?: string | null | undefined, id: number, data?: any | null | undefined, mittente?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatari: Array<{ __typename?: 'protocollo_protocollo_destinatario', id: number, e_esterno: boolean, destinatario_interno?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatario_esterno?: { __typename?: 'protocollo_protocollo_destinatario_esterno', id: number, cognome?: string | null | undefined, email?: string | null | undefined, codice_fiscale?: string | null | undefined, nome?: string | null | undefined } | null | undefined }> } | null | undefined, punti_rilievi_no_tipologia?: { __typename?: 'sis__punti_rilievi_no_tipologia', id: number, nome: string } | null | undefined, ris_consegnato_a?: { __typename?: 'sis__ris_consegnato_a', id: number, nome: string } | null | undefined, testimoni: Array<{ __typename?: 'sis_testimone', cognome?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, regione?: string | null | undefined, provincia?: string | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, ordine?: number | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }>, tipologie_ris: Array<{ __typename?: 'sis_associazione_tipologia_ris', id: number, tipologia: { __typename?: 'sis__tipologia_ris', id: number, nome?: string | null | undefined } }>, trasportati: Array<{ __typename?: 'sis_trasportato', accertamento_attivazione_airbag?: boolean | null | undefined, accertamento_uso_casco?: boolean | null | undefined, accertamento_uso_cintura?: boolean | null | undefined, accertamento_uso_sistema_bambini?: boolean | null | undefined, cognome?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_citta_id?: number | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', codice?: string | null | undefined, citta?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, posizione?: { __typename?: 'sis__trasportato_posizione', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, stato?: { __typename?: 'sis__trasportato_stato', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }>, veicoli: Array<{ __typename?: 'sis_veicolo', accertamenti_abs?: boolean | null | undefined, accertamenti_attivazione?: boolean | null | undefined, accertamenti_uso_casco_altro_note?: string | null | undefined, accertamenti_uso_cintura_altro_note?: string | null | undefined, accertamento_uso_antiabbandono_altro_note?: string | null | undefined, accertamento_uso_sistema_bambini_altro_note?: string | null | undefined, alimentazione_note?: string | null | undefined, anno_prima_immatricolazione?: string | null | undefined, assicurazione_agenzia?: string | null | undefined, assicurazione_altro_note?: string | null | undefined, assicurazione_data_fine?: any | null | undefined, assicurazione_data_inizio?: any | null | undefined, assicurazione_polizza?: string | null | undefined, assicurazione_societa?: string | null | undefined, carta_circolazione?: string | null | undefined, carta_circolazione_altro_note?: string | null | undefined, carta_circolazione_data?: any | null | undefined, carta_circolazione_ddt?: string | null | undefined, carta_circolazione_ril?: string | null | undefined, cilindrata?: string | null | undefined, codice_merce_pericolasa?: string | null | undefined, codice_pericolo?: string | null | undefined, colore_carrozzeria?: string | null | undefined, danni_del_veicolo_a_cose?: string | null | undefined, danni_del_veicolo_a_cose_rilievo?: boolean | null | undefined, danni_del_veicolo_a_cose_rilievo_data_fine?: string | null | undefined, danni_del_veicolo_a_cose_rilievo_data_inizio?: string | null | undefined, danni_del_veicolo_a_cose_rilievo_difensore?: boolean | null | undefined, danni_del_veicolo_a_cose_rilievo_presente?: boolean | null | undefined, danni_su_veicolo_constatati?: string | null | undefined, data_ultima_revisione?: any | null | undefined, destinazione_data?: any | null | undefined, destinazione_decisione_altro?: string | null | undefined, destinazione_decisione_id?: number | null | undefined, destinazione_persona_affidataria?: string | null | undefined, destinazione_ritirato?: boolean | null | undefined, destinazione_sequestrato?: boolean | null | undefined, destinazione_trasportato_presso?: string | null | undefined, dispositivi_acustici?: string | null | undefined, dotazione_airbag?: boolean | null | undefined, dotazione_cinture?: boolean | null | undefined, generale?: string | null | undefined, id: number, impianto_illuminazione?: string | null | undefined, indicatori_direzione?: string | null | undefined, km_percorsi?: string | null | undefined, luci_arresto?: string | null | undefined, marca?: string | null | undefined, marcia_inserita?: string | null | undefined, modello?: string | null | undefined, p_c?: string | null | undefined, p_u?: string | null | undefined, peso?: string | null | undefined, posti?: string | null | undefined, stato_pneumatici?: string | null | undefined, tara?: string | null | undefined, targa?: string | null | undefined, telaio?: string | null | undefined, tipologia_veicolo_note?: string | null | undefined, traccia_suolo?: boolean | null | undefined, traccia_suolo_abs?: boolean | null | undefined, traccia_suolo_metri?: string | null | undefined, traccia_suolo_terminazione_metri?: string | null | undefined, velocita_presunta?: string | null | undefined, accertamenti_uso_casco_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, accertamenti_uso_cintura_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, accertamento_uso_antiabbandono_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, accertamento_uso_sistema_bambini_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, alimentazione?: { __typename?: 'sis__alimentazione_veicolo', id: number, nome: string } | null | undefined, assicurazione_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, carta_circolazione_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, conducente?: { __typename?: 'sis_conducente', cap_numero?: string | null | undefined, cap_rilasciata_da_ddt?: string | null | undefined, cap_rilasciata_da_ddt_data?: any | null | undefined, cap_tipo?: string | null | undefined, cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, osservazioni_note?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, professione?: string | null | undefined, prova_etilometro?: boolean | null | undefined, prova_etilometro_esito?: string | null | undefined, prova_narcotest?: boolean | null | undefined, prova_narcotest_esito?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, richiesta_esami?: boolean | null | undefined, richiesta_esami_effettuati_presso?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> } | null | undefined, destinazione_decisione?: { __typename?: 'sis__destinazione_decisione', id: number, nome: string } | null | undefined, locatario?: { __typename?: 'sis_locatario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, nazione?: { __typename?: '_nazione', id: number, nome?: string | null | undefined } | null | undefined, proprietario?: { __typename?: 'sis_proprietario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, proprietario_giuridico?: { __typename?: 'sis_proprietario_giuridico', id: number, ragione_sociale?: string | null | undefined, partita_iva?: string | null | undefined, codice_fiscale?: string | null | undefined, citta_altro?: string | null | undefined, citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, retrovisore_esterno?: { __typename?: 'sis__retrovisore_esterno', id: number, nome: string } | null | undefined, stato?: { __typename?: 'sis__stato_veicolo', id: number, nome: string } | null | undefined, tipologia_veicolo?: { __typename?: 'sis__tipologia_veicolo', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_frenata_tipologia?: { __typename?: 'sis__traccia_suolo_frenata_tipologia', nome: string, id: number } | null | undefined, traccia_suolo_terminazione?: { __typename?: 'sis__traccia_suolo_terminazione', id: number, nome: string } | null | undefined, traccia_suolo_terminazione_andamento?: { __typename?: 'sis__traccia_suolo_terminazione_andamento', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_terminazione_forma?: { __typename?: 'sis__traccia_suolo_terminazione_forma', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_terminazione_intensita?: { __typename?: 'sis__traccia_suolo_terminazione_intensita', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_terminazione_tipologia?: { __typename?: 'sis__traccia_suolo_terminazione_tipologia', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_tipologia?: { __typename?: 'sis__traccia_suolo_tipologia', id: number, nome: string } | null | undefined, trasportati: Array<{ __typename?: 'sis_trasportati_veicolo', id: number, trasportato: { __typename?: 'sis_trasportato', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, accertamento_uso_cintura?: boolean | null | undefined, accertamento_uso_casco?: boolean | null | undefined, accertamento_attivazione_airbag?: boolean | null | undefined, accertamento_uso_sistema_bambini?: boolean | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, posizione?: { __typename?: 'sis__trasportato_posizione', id: number, nome: string } | null | undefined, stato?: { __typename?: 'sis__trasportato_stato', id: number, nome: string } | null | undefined } }>, uso_veicolo?: { __typename?: 'sis__uso_veicolo', id: number, nome: string } | null | undefined }>, verbali: Array<{ __typename?: 'sis_verbale', cellulare?: string | null | undefined, cognome?: string | null | undefined, coniugato?: number | null | undefined, data?: any | null | undefined, dichiarazione?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, id: number, motivazione_no_sottoscrizione?: string | null | undefined, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, professione?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, veicolo?: { __typename?: 'sis_veicolo', id: number, marca?: string | null | undefined, modello?: string | null | undefined, targa?: string | null | undefined } | null | undefined, conducente?: { __typename?: 'sis_conducente', cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, locatario?: { __typename?: 'sis_locatario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, telefono?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, pedone?: { __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, proprietario?: { __typename?: 'sis_proprietario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, telefono?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, trasportato?: { __typename?: 'sis_trasportato', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, testimone?: { __typename?: 'sis_testimone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, tipologia_verbale?: { __typename?: 'sis__tipologia_verbale', id: number, nome?: string | null | undefined } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }> }> };

export type RisQueryVariables = Exact<{
  where?: Maybe<Sis_Ris_Bool_Exp>;
}>;


export type RisQuery = { __typename?: 'query_root', sis_ris: Array<{ __typename?: 'sis_ris', id: number, municipalita_storica?: any | null | undefined, quartiere_storico?: any | null | undefined, toponimo_storico?: any | null | undefined, altro?: string | null | undefined, conseguenza_veicolo_note?: string | null | undefined, data?: any | null | undefined, data_intervento?: any | null | undefined, data_presunta?: any | null | undefined, data_segnalazione?: any | null | undefined, decessi_certificato?: boolean | null | undefined, decessi_certificato_redattore?: string | null | undefined, decessi_certificato_redattore_in_servizio?: string | null | undefined, decessi_certificato_redattore_recapito?: string | null | undefined, decessi_intervento_polizia_mortuaria?: boolean | null | undefined, decessi_note?: string | null | undefined, decessi_notiziato_pm?: boolean | null | undefined, decessi_numero?: number | null | undefined, decessi_oggetti_rinvenuti?: boolean | null | undefined, decessi_successivo_data?: any | null | undefined, decessi_trasporto_salme_data?: any | null | undefined, decessi_trasporto_salme_presso?: string | null | undefined, decessi_verbale_riconoscimento_salma?: boolean | null | undefined, dinamica?: string | null | undefined, ente_primo_intervento_note?: string | null | undefined, ente_secondario_intervenuti_altro?: string | null | undefined, ente_secondario_intervenuti_motivazione?: string | null | undefined, ente_secondario_intervenuti_vvff_capo_pattuglia?: string | null | undefined, ente_secondario_intervenuti_vvff_comando?: string | null | undefined, ente_secondario_intervenuti_vvff_gia_intervenuti?: boolean | null | undefined, ente_segnalatore_note?: string | null | undefined, impianto_semaforico_note?: string | null | undefined, localizzazione_altro_note?: string | null | undefined, localizzazione_condizioni_atmosferiche_note?: string | null | undefined, localizzazione_condizioni_traffico_note?: string | null | undefined, localizzazione_extra_abitato_note?: string | null | undefined, localizzazione_fondo_stradale_note?: string | null | undefined, localizzazione_illuminazione_note?: string | null | undefined, localizzazione_note?: string | null | undefined, localizzazione_particolarita_strada_note?: string | null | undefined, localizzazione_pavimentazione_note?: string | null | undefined, localizzazione_tipo_strada_note?: string | null | undefined, localizzazione_visibilita_note?: string | null | undefined, natura_incidente_note?: string | null | undefined, note_intervento?: string | null | undefined, operazione_terminate_data?: any | null | undefined, posizione_finale_veicolo_carreggiata_note?: string | null | undefined, posizione_finale_veicolo_fuori_sede_note?: string | null | undefined, posizione_finale_veicolo_margini_note?: string | null | undefined, posizione_statica_descrizione_analitica?: string | null | undefined, posizione_statica_rilievi?: boolean | null | undefined, posizione_statica_rilievi_veicoli_rimossi?: boolean | null | undefined, punti_descrizione_analitica?: string | null | undefined, punti_investimento?: boolean | null | undefined, punti_investimento_multiplo?: boolean | null | undefined, punti_rilievi?: boolean | null | undefined, punti_urto?: boolean | null | undefined, punti_urto_accorda?: string | null | undefined, punti_urto_multiplo?: boolean | null | undefined, punti_urto_note?: string | null | undefined, ris_consegnato_a_altro?: string | null | undefined, ris_consegnato_data?: any | null | undefined, stato: Sis__Stato_Ris_Enum, unita_operativa?: { __typename?: 'sis_unita_operativa', id: number, nome?: string | null | undefined } | null | undefined, agenti_accertatori: Array<{ __typename?: 'sis_agente_accertatore', id: number, username: string, agente: any }>, infortunati: Array<{ __typename?: 'sis_infortunato', cognome?: string | null | undefined, cura_da_parte?: string | null | undefined, danni_lamentati?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, telefono?: string | null | undefined, ospedale_altro?: string | null | undefined, ospedale_diagnosi?: string | null | undefined, ospedale_prognosi?: string | null | undefined, ospedale_referto?: string | null | undefined, ospedale_referto_rilasciato_da?: string | null | undefined, ospedale_ricoverato?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, rifiuta_cure_immediate?: boolean | null | undefined, scheda_118?: number | null | undefined, trasportato_richiesta?: string | null | undefined, trasportato_targa_auto?: string | null | undefined, conducente?: { __typename?: 'sis_conducente', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, informazioni: Array<{ __typename?: 'sis_associazione_informazioni_infortunato', id: number, informazione: { __typename?: 'sis__infortunato_informazione', id: number, nome?: string | null | undefined } }>, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, id: number, codice?: string | null | undefined, provincia?: string | null | undefined, p_abbreviazione?: string | null | undefined, regione?: string | null | undefined } | null | undefined, pedone?: { __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, trasportato?: { __typename?: 'sis_trasportato', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, trasportato_ambulanza?: { __typename?: 'sis__intortunato_tasportato', id: number, nome: string } | null | undefined, veicolo?: { __typename?: 'sis_veicolo', id: number, marca?: string | null | undefined, modello?: string | null | undefined, targa?: string | null | undefined } | null | undefined }>, municipalita?: { __typename?: 'toponomastica_municipalita', id: number, nome: string } | null | undefined, quartiere?: { __typename?: 'toponomastica_quartiere', id: number, nome: string, municipalita: Array<{ __typename?: 'toponomastica_assegnazione_quartiere', municipalita_id: number }> } | null | undefined, toponimo?: { __typename?: 'toponomastica_toponimo', id: number, nome: string, codice?: string | null | undefined, dug?: { __typename?: 'toponomastica_dug', id: number, nome: string } | null | undefined, assegnazioni: Array<{ __typename?: 'toponomastica_assegnazione_toponimo', quartiere_id: number }> } | null | undefined, accertamenti: Array<{ __typename?: 'sis_accertamento', centro_abitato?: boolean | null | undefined, condizioni_meteo_illuminazione?: string | null | undefined, condizioni_meteo_tempo?: string | null | undefined, condizioni_meteo_visibilita_limitata?: string | null | undefined, condizioni_meteo_visibilita_limitata_tipologia_metri?: string | null | undefined, data?: any | null | undefined, descrizione_piano_note?: string | null | undefined, descrizione_piano_pavimentazione?: string | null | undefined, descrizione_piano_stato_fondo?: string | null | undefined, direzione_a?: string | null | undefined, direzione_da?: string | null | undefined, id: number, segnaletica?: string | null | undefined, tipologia_strada_carreggiate?: string | null | undefined, tipologia_strada_carreggiate_n?: string | null | undefined, tipologia_strada_conformazione?: string | null | undefined, traffico?: string | null | undefined, condizioni_meteo_visibilita_limitata_tipologia: Array<{ __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia', id: number, condizioni_meteo_visibilita_limitata_tipologia: { __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia', id: number, nome: string } }> }>, altri: Array<{ __typename?: 'sis_altro', id: number, note?: string | null | undefined }>, conducenti: Array<{ __typename?: 'sis_conducente', cap_numero?: string | null | undefined, cap_rilasciata_da_ddt?: string | null | undefined, cap_rilasciata_da_ddt_data?: any | null | undefined, cap_tipo?: string | null | undefined, cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, osservazioni_note?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, professione?: string | null | undefined, prova_etilometro?: boolean | null | undefined, prova_etilometro_esito?: string | null | undefined, prova_narcotest?: boolean | null | undefined, prova_narcotest_esito?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, richiesta_esami?: boolean | null | undefined, richiesta_esami_effettuati_presso?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> }>, conseguenze_veicolo: Array<{ __typename?: 'sis_associazione_conseguenza_veicolo', id: number, conseguenza_veicolo: { __typename?: 'sis__conseguenza_veicolo', nome?: string | null | undefined, id: number } }>, decessi_tipologie: Array<{ __typename?: 'sis_associazione_decessi_tipologie', id: number, decessi_tipologia: { __typename?: 'sis__decessi_tipologia', id: number, nome: string } }>, enti_primo_intervento: Array<{ __typename?: 'sis_associazione_ente_primo_intervento', id: number, targa_auto?: string | null | undefined, tipo?: string | null | undefined, ente: { __typename?: 'sis__ente', label_tipo?: string | null | undefined, nome?: string | null | undefined, id: number } }>, enti_secondario_intervenuti: Array<{ __typename?: 'sis_associazione_ente_secondario_intervenuti', id: number, ente_secondario: { __typename?: 'sis__ente_secondario', id: number, nome?: string | null | undefined } }>, enti_segnalatori: Array<{ __typename?: 'sis_associazione_ente_segnalatore', id: number, ente: { __typename?: 'sis__ente', id: number, label_tipo?: string | null | undefined, nome?: string | null | undefined, abbreviazione?: string | null | undefined } }>, eventi: Array<{ __typename?: 'sis_evento_sis', stato: Sis__Stato_Ris_Enum, note?: string | null | undefined, motivazione_cancellazione?: string | null | undefined, created_at: any, cancellatore?: any | null | undefined, protocollo?: { __typename?: 'protocollo_protocollo', numero?: string | null | undefined, data?: any | null | undefined, note?: string | null | undefined } | null | undefined }>, impianti_semaforici: Array<{ __typename?: 'sis_associazione_impianto_semaforico', id: number, impianto_semaforico: { __typename?: 'sis__impianto_semaforico', id: number, nome?: string | null | undefined } }>, infrazioni: Array<{ __typename?: 'sis_infrazione', verbale_n?: string | null | undefined, verbale_data?: any | null | undefined, art_80_data?: any | null | undefined, art_80_dtt?: string | null | undefined, articolo?: string | null | undefined, data_trasmissione_rapporto?: any | null | undefined, id: number, note?: string | null | undefined, uffici_provinciale?: string | null | undefined, utg_prefettura?: string | null | undefined, conducente?: { __typename?: 'sis_conducente', cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> } | null | undefined, pedone?: { __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, veicolo?: { __typename?: 'sis_veicolo', id: number, colore_carrozzeria?: string | null | undefined, marca?: string | null | undefined, modello?: string | null | undefined, targa?: string | null | undefined, telaio?: string | null | undefined, nazione?: { __typename?: '_nazione', nome?: string | null | undefined } | null | undefined } | null | undefined }>, localizzazioni_altro: Array<{ __typename?: 'sis_associazione_localizzazione_altro', id: number, localizzazione_altro: { __typename?: 'sis__localizzazione_altro', id: number, nome?: string | null | undefined } }>, localizzazioni_condizioni_atmosferiche: Array<{ __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche', id: number, localizzazione_condizioni_atmosferiche: { __typename?: 'sis__localizzazione_condizioni_atmosferiche', id: number, nome?: string | null | undefined } }>, localizzazioni_condizioni_traffico: Array<{ __typename?: 'sis_associzione_localizzazione_condizioni_traffico', id: number, localizzazione_condizioni_traffico: { __typename?: 'sis__localizzazione_condizioni_traffico', id: number, nome?: string | null | undefined } }>, localizzazioni_extra_abitato: Array<{ __typename?: 'sis_associazione_localizzazione_extra_abitato', id: number, localizzazione_extra_abitato: { __typename?: 'sis__localizzazione_extra_abitato', id: number, nome?: string | null | undefined } }>, localizzazioni_fondo_stradale: Array<{ __typename?: 'sis_associazione_localizzazione_fondo_stradale', id: number, localizzazione_fondo_stradale: { __typename?: 'sis__localizzazione_fondo_stradale', id: number, nome?: string | null | undefined } }>, localizzazioni_illuminazione: Array<{ __typename?: 'sis_associazione_localizzazione_illuminazione', id: number, localizzazione_illuminazione: { __typename?: 'sis__localizzazione_illuminazione', id: number, nome?: string | null | undefined } }>, localizzazioni_particolarita_strada: Array<{ __typename?: 'sis_associazione_localizzazione_particolarita_strada', id: number, localizzazione_particolarita_strada: { __typename?: 'sis__localizzazione_particolarita_strada', id: number, nome?: string | null | undefined } }>, localizzazioni_pavimentazione: Array<{ __typename?: 'sis_associazione_localizzazione_pavimentazione', id: number, localizzazione_pavimentazione: { __typename?: 'sis__localizzazione_pavimentazione', id: number, nome?: string | null | undefined } }>, localizzazioni_tipo_strade: Array<{ __typename?: 'sis_associazione_localizzazione_tipo_strada', id: number, localizzazione_tipo_strada: { __typename?: 'sis__localizzazione_tipo_strada', id: number, nome?: string | null | undefined } }>, localizzazioni_visibilita: Array<{ __typename?: 'sis_associazione_localizzazione_visibilita', id: number, localizzazione_visibilita: { __typename?: 'sis__localizzazione_visibilita', nome?: string | null | undefined, id: number } }>, locatari: Array<{ __typename?: 'sis_locatario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, telefono?: string | null | undefined, residente_indirizzo?: string | null | undefined, residente_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined }>, nature_incidente: Array<{ __typename?: 'sis_associazione_natura_incidente', id: number, natura_incidente: { __typename?: 'sis__natura_incidente', id: number, nome?: string | null | undefined } }>, pedoni: Array<{ __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string, id: number } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined, codice?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined, id: number } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined }>, posizionamento_toponimo?: { __typename?: 'gis_posizionamento_toponimo', civico?: string | null | undefined, connessione?: string | null | undefined, geoloc?: any | null | undefined, id: number, ipi?: string | null | undefined, km?: string | null | undefined, note?: string | null | undefined, specifica?: { __typename?: 'gis__specifica_posizionamento_toponimo', id: number, nome: string } | null | undefined, tipologia?: { __typename?: 'gis__tipologia_posizionamento_toponimo', id: number, nome: string } | null | undefined } | null | undefined, posizione_statica_rilievi_no_tipologia?: { __typename?: 'sis__punti_rilievi_no_tipologia', id: number, nome: string } | null | undefined, posizioni_finali_veicolo_carreggiata: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata', id: number, posizione_finale_veicolo_carreggiata: { __typename?: 'sis__posizione_finale_veicolo_carreggiata', id: number, nome?: string | null | undefined } }>, posizioni_finali_veicolo_fuori_sede: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede', id: number, posizione_finale_veicolo_fuori_sede: { __typename?: 'sis__posizione_finale_veicolo_fuori_sede', id: number, nome?: string | null | undefined } }>, posizioni_finali_veicolo_margini: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_margini', id: number, posizione_finale_veicolo_margini: { __typename?: 'sis__posizione_finale_veicolo_margini', id: number, nome?: string | null | undefined } }>, proprietari: Array<{ __typename?: 'sis_proprietario', cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }>, proprietari_giuridico: Array<{ __typename?: 'sis_proprietario_giuridico', citta_altro?: string | null | undefined, codice_fiscale?: string | null | undefined, id: number, indirizzo?: string | null | undefined, partita_iva?: string | null | undefined, ragione_sociale?: string | null | undefined, telefono?: string | null | undefined, citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined }>, protocollo?: { __typename?: 'protocollo_protocollo', note?: string | null | undefined, numero?: string | null | undefined, id: number, data?: any | null | undefined, mittente?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatari: Array<{ __typename?: 'protocollo_protocollo_destinatario', id: number, e_esterno: boolean, destinatario_interno?: { __typename?: 'protocollo__sezione_protocollo', id: number, codice: string, settore: string, servizio: string, uoc: string, uos: string, postazione: string, nome: string } | null | undefined, destinatario_esterno?: { __typename?: 'protocollo_protocollo_destinatario_esterno', id: number, cognome?: string | null | undefined, email?: string | null | undefined, codice_fiscale?: string | null | undefined, nome?: string | null | undefined } | null | undefined }> } | null | undefined, punti_rilievi_no_tipologia?: { __typename?: 'sis__punti_rilievi_no_tipologia', id: number, nome: string } | null | undefined, ris_consegnato_a?: { __typename?: 'sis__ris_consegnato_a', id: number, nome: string } | null | undefined, testimoni: Array<{ __typename?: 'sis_testimone', cognome?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, regione?: string | null | undefined, provincia?: string | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, ordine?: number | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }>, tipologie_ris: Array<{ __typename?: 'sis_associazione_tipologia_ris', id: number, tipologia: { __typename?: 'sis__tipologia_ris', id: number, nome?: string | null | undefined } }>, trasportati: Array<{ __typename?: 'sis_trasportato', accertamento_attivazione_airbag?: boolean | null | undefined, accertamento_uso_casco?: boolean | null | undefined, accertamento_uso_cintura?: boolean | null | undefined, accertamento_uso_sistema_bambini?: boolean | null | undefined, cognome?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_citta_id?: number | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', codice?: string | null | undefined, citta?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, posizione?: { __typename?: 'sis__trasportato_posizione', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, stato?: { __typename?: 'sis__trasportato_stato', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }>, veicoli: Array<{ __typename?: 'sis_veicolo', accertamenti_abs?: boolean | null | undefined, accertamenti_attivazione?: boolean | null | undefined, accertamenti_uso_casco_altro_note?: string | null | undefined, accertamenti_uso_cintura_altro_note?: string | null | undefined, accertamento_uso_antiabbandono_altro_note?: string | null | undefined, accertamento_uso_sistema_bambini_altro_note?: string | null | undefined, alimentazione_note?: string | null | undefined, anno_prima_immatricolazione?: string | null | undefined, assicurazione_agenzia?: string | null | undefined, assicurazione_altro_note?: string | null | undefined, assicurazione_data_fine?: any | null | undefined, assicurazione_data_inizio?: any | null | undefined, assicurazione_polizza?: string | null | undefined, assicurazione_societa?: string | null | undefined, carta_circolazione?: string | null | undefined, carta_circolazione_altro_note?: string | null | undefined, carta_circolazione_data?: any | null | undefined, carta_circolazione_ddt?: string | null | undefined, carta_circolazione_ril?: string | null | undefined, cilindrata?: string | null | undefined, codice_merce_pericolasa?: string | null | undefined, codice_pericolo?: string | null | undefined, colore_carrozzeria?: string | null | undefined, danni_del_veicolo_a_cose?: string | null | undefined, danni_del_veicolo_a_cose_rilievo?: boolean | null | undefined, danni_del_veicolo_a_cose_rilievo_data_fine?: string | null | undefined, danni_del_veicolo_a_cose_rilievo_data_inizio?: string | null | undefined, danni_del_veicolo_a_cose_rilievo_difensore?: boolean | null | undefined, danni_del_veicolo_a_cose_rilievo_presente?: boolean | null | undefined, danni_su_veicolo_constatati?: string | null | undefined, data_ultima_revisione?: any | null | undefined, destinazione_data?: any | null | undefined, destinazione_decisione_altro?: string | null | undefined, destinazione_decisione_id?: number | null | undefined, destinazione_persona_affidataria?: string | null | undefined, destinazione_ritirato?: boolean | null | undefined, destinazione_sequestrato?: boolean | null | undefined, destinazione_trasportato_presso?: string | null | undefined, dispositivi_acustici?: string | null | undefined, dotazione_airbag?: boolean | null | undefined, dotazione_cinture?: boolean | null | undefined, generale?: string | null | undefined, id: number, impianto_illuminazione?: string | null | undefined, indicatori_direzione?: string | null | undefined, km_percorsi?: string | null | undefined, luci_arresto?: string | null | undefined, marca?: string | null | undefined, marcia_inserita?: string | null | undefined, modello?: string | null | undefined, p_c?: string | null | undefined, p_u?: string | null | undefined, peso?: string | null | undefined, posti?: string | null | undefined, stato_pneumatici?: string | null | undefined, tara?: string | null | undefined, targa?: string | null | undefined, telaio?: string | null | undefined, tipologia_veicolo_note?: string | null | undefined, traccia_suolo?: boolean | null | undefined, traccia_suolo_abs?: boolean | null | undefined, traccia_suolo_metri?: string | null | undefined, traccia_suolo_terminazione_metri?: string | null | undefined, velocita_presunta?: string | null | undefined, accertamenti_uso_casco_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, accertamenti_uso_cintura_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, accertamento_uso_antiabbandono_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, accertamento_uso_sistema_bambini_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, alimentazione?: { __typename?: 'sis__alimentazione_veicolo', id: number, nome: string } | null | undefined, assicurazione_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, carta_circolazione_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, conducente?: { __typename?: 'sis_conducente', cap_numero?: string | null | undefined, cap_rilasciata_da_ddt?: string | null | undefined, cap_rilasciata_da_ddt_data?: any | null | undefined, cap_tipo?: string | null | undefined, cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, osservazioni_note?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, professione?: string | null | undefined, prova_etilometro?: boolean | null | undefined, prova_etilometro_esito?: string | null | undefined, prova_narcotest?: boolean | null | undefined, prova_narcotest_esito?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, richiesta_esami?: boolean | null | undefined, richiesta_esami_effettuati_presso?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> } | null | undefined, destinazione_decisione?: { __typename?: 'sis__destinazione_decisione', id: number, nome: string } | null | undefined, locatario?: { __typename?: 'sis_locatario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, nazione?: { __typename?: '_nazione', id: number, nome?: string | null | undefined } | null | undefined, proprietario?: { __typename?: 'sis_proprietario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, proprietario_giuridico?: { __typename?: 'sis_proprietario_giuridico', id: number, ragione_sociale?: string | null | undefined, partita_iva?: string | null | undefined, codice_fiscale?: string | null | undefined, citta_altro?: string | null | undefined, citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined } | null | undefined, retrovisore_esterno?: { __typename?: 'sis__retrovisore_esterno', id: number, nome: string } | null | undefined, stato?: { __typename?: 'sis__stato_veicolo', id: number, nome: string } | null | undefined, tipologia_veicolo?: { __typename?: 'sis__tipologia_veicolo', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_frenata_tipologia?: { __typename?: 'sis__traccia_suolo_frenata_tipologia', nome: string, id: number } | null | undefined, traccia_suolo_terminazione?: { __typename?: 'sis__traccia_suolo_terminazione', id: number, nome: string } | null | undefined, traccia_suolo_terminazione_andamento?: { __typename?: 'sis__traccia_suolo_terminazione_andamento', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_terminazione_forma?: { __typename?: 'sis__traccia_suolo_terminazione_forma', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_terminazione_intensita?: { __typename?: 'sis__traccia_suolo_terminazione_intensita', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_terminazione_tipologia?: { __typename?: 'sis__traccia_suolo_terminazione_tipologia', id: number, nome?: string | null | undefined } | null | undefined, traccia_suolo_tipologia?: { __typename?: 'sis__traccia_suolo_tipologia', id: number, nome: string } | null | undefined, trasportati: Array<{ __typename?: 'sis_trasportati_veicolo', id: number, trasportato: { __typename?: 'sis_trasportato', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, accertamento_uso_cintura?: boolean | null | undefined, accertamento_uso_casco?: boolean | null | undefined, accertamento_attivazione_airbag?: boolean | null | undefined, accertamento_uso_sistema_bambini?: boolean | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, posizione?: { __typename?: 'sis__trasportato_posizione', id: number, nome: string } | null | undefined, stato?: { __typename?: 'sis__trasportato_stato', id: number, nome: string } | null | undefined } }>, uso_veicolo?: { __typename?: 'sis__uso_veicolo', id: number, nome: string } | null | undefined }>, verbali: Array<{ __typename?: 'sis_verbale', cellulare?: string | null | undefined, cognome?: string | null | undefined, coniugato?: number | null | undefined, data?: any | null | undefined, dichiarazione?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, id: number, motivazione_no_sottoscrizione?: string | null | undefined, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, professione?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, veicolo?: { __typename?: 'sis_veicolo', id: number, marca?: string | null | undefined, modello?: string | null | undefined, targa?: string | null | undefined } | null | undefined, conducente?: { __typename?: 'sis_conducente', cognome?: string | null | undefined, id: number, nascita_citta_altro?: string | null | undefined, nascita_data?: any | null | undefined, nome?: string | null | undefined, patente_altro_note?: string | null | undefined, patente_categoria_altro?: string | null | undefined, patente_numero?: string | null | undefined, patente_prescrizioni?: string | null | undefined, patente_rilasciata_da?: string | null | undefined, patente_rilasciata_data?: any | null | undefined, patente_rilasciata_valida_data?: any | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, telefono?: string | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, id: number, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_rilasciata_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, patente_sinoaltro?: { __typename?: '_sinoaltro', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, locatario?: { __typename?: 'sis_locatario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, telefono?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, pedone?: { __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, proprietario?: { __typename?: 'sis_proprietario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, telefono?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, trasportato?: { __typename?: 'sis_trasportato', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, testimone?: { __typename?: 'sis_testimone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, telefono?: string | null | undefined, nascita_citta_altro?: string | null | undefined, residente_citta_altro?: string | null | undefined, residente_indirizzo?: string | null | undefined, documento_numero?: string | null | undefined, documento_rilasciato_da?: string | null | undefined, documento_rilasciato_data?: any | null | undefined, documento_tipo?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined, sesso?: { __typename?: '_sesso', id: number, nome: string } | null | undefined, residente_citta?: { __typename?: '_citta', citta?: string | null | undefined, codice?: string | null | undefined, id: number, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined, documento_rilasciato_da_citta?: { __typename?: '_citta', id: number, citta?: string | null | undefined, codice?: string | null | undefined, p_abbreviazione?: string | null | undefined, provincia?: string | null | undefined, regione?: string | null | undefined } | null | undefined } | null | undefined, tipologia_verbale?: { __typename?: 'sis__tipologia_verbale', id: number, nome?: string | null | undefined } | null | undefined, titolo?: { __typename?: '_titolo', id: number, nome: string } | null | undefined }> }> };

export type UpdateRisMutationVariables = Exact<{
  on_conflict: Scalars['json'];
  ris: Scalars['json'];
}>;


export type UpdateRisMutation = { __typename?: 'mutation_root', custom_insert_ris?: { __typename?: 'custom_insert_ris_output', ris: { __typename?: 'sis_ris', id: number, agenti_accertatori: Array<{ __typename?: 'sis_agente_accertatore', id: number, username: string, agente: any }>, protocollo?: { __typename?: 'protocollo_protocollo', destinatari: Array<{ __typename?: 'protocollo_protocollo_destinatario', id: number, destinatario_esterno?: { __typename?: 'protocollo_protocollo_destinatario_esterno', id: number } | null | undefined }> } | null | undefined, accertamenti: Array<{ __typename?: 'sis_accertamento', id: number, condizioni_meteo_visibilita_limitata_tipologia: Array<{ __typename?: 'sis_assegnazione_condizioni_meteo_visibilita_limitata_tipologia', id: number, condizioni_meteo_visibilita_limitata_tipologia: { __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia', id: number, nome: string } }> }>, altri: Array<{ __typename?: 'sis_altro', id: number }>, conseguenze_veicolo: Array<{ __typename?: 'sis_associazione_conseguenza_veicolo', id: number, conseguenza_veicolo: { __typename?: 'sis__conseguenza_veicolo', id: number, nome?: string | null | undefined } }>, decessi_tipologie: Array<{ __typename?: 'sis_associazione_decessi_tipologie', id: number, decessi_tipologia: { __typename?: 'sis__decessi_tipologia', id: number, nome: string } }>, enti_primo_intervento: Array<{ __typename?: 'sis_associazione_ente_primo_intervento', id: number }>, enti_secondario_intervenuti: Array<{ __typename?: 'sis_associazione_ente_secondario_intervenuti', id: number, ente_secondario: { __typename?: 'sis__ente_secondario', id: number, nome?: string | null | undefined } }>, enti_segnalatori: Array<{ __typename?: 'sis_associazione_ente_segnalatore', id: number, ente: { __typename?: 'sis__ente', id: number, nome?: string | null | undefined } }>, impianti_semaforici: Array<{ __typename?: 'sis_associazione_impianto_semaforico', id: number, impianto_semaforico: { __typename?: 'sis__impianto_semaforico', id: number, nome?: string | null | undefined } }>, infrazioni: Array<{ __typename?: 'sis_infrazione', id: number }>, localizzazioni_altro: Array<{ __typename?: 'sis_associazione_localizzazione_altro', id: number, localizzazione_altro: { __typename?: 'sis__localizzazione_altro', id: number, nome?: string | null | undefined } }>, localizzazioni_condizioni_atmosferiche: Array<{ __typename?: 'sis_associazione_localizzazione_condizioni_atmosferiche', id: number, localizzazione_condizioni_atmosferiche: { __typename?: 'sis__localizzazione_condizioni_atmosferiche', id: number, nome?: string | null | undefined } }>, localizzazioni_condizioni_traffico: Array<{ __typename?: 'sis_associzione_localizzazione_condizioni_traffico', id: number, localizzazione_condizioni_traffico: { __typename?: 'sis__localizzazione_condizioni_traffico', id: number, nome?: string | null | undefined } }>, localizzazioni_extra_abitato: Array<{ __typename?: 'sis_associazione_localizzazione_extra_abitato', id: number, localizzazione_extra_abitato: { __typename?: 'sis__localizzazione_extra_abitato', id: number, nome?: string | null | undefined } }>, localizzazioni_fondo_stradale: Array<{ __typename?: 'sis_associazione_localizzazione_fondo_stradale', id: number, localizzazione_fondo_stradale: { __typename?: 'sis__localizzazione_fondo_stradale', id: number, nome?: string | null | undefined } }>, localizzazioni_illuminazione: Array<{ __typename?: 'sis_associazione_localizzazione_illuminazione', id: number, localizzazione_illuminazione: { __typename?: 'sis__localizzazione_illuminazione', id: number, nome?: string | null | undefined } }>, localizzazioni_particolarita_strada: Array<{ __typename?: 'sis_associazione_localizzazione_particolarita_strada', id: number, localizzazione_particolarita_strada: { __typename?: 'sis__localizzazione_particolarita_strada', id: number, nome?: string | null | undefined } }>, localizzazioni_pavimentazione: Array<{ __typename?: 'sis_associazione_localizzazione_pavimentazione', id: number, localizzazione_pavimentazione: { __typename?: 'sis__localizzazione_pavimentazione', id: number, nome?: string | null | undefined } }>, localizzazioni_tipo_strade: Array<{ __typename?: 'sis_associazione_localizzazione_tipo_strada', id: number, localizzazione_tipo_strada: { __typename?: 'sis__localizzazione_tipo_strada', id: number, nome?: string | null | undefined } }>, localizzazioni_visibilita: Array<{ __typename?: 'sis_associazione_localizzazione_visibilita', id: number, localizzazione_visibilita: { __typename?: 'sis__localizzazione_visibilita', id: number, nome?: string | null | undefined } }>, locatari: Array<{ __typename?: 'sis_locatario', id: number }>, nature_incidente: Array<{ __typename?: 'sis_associazione_natura_incidente', id: number, natura_incidente: { __typename?: 'sis__natura_incidente', id: number, nome?: string | null | undefined } }>, pedoni: Array<{ __typename?: 'sis_pedone', id: number }>, posizioni_finali_veicolo_carreggiata: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_carreggiata', id: number, posizione_finale_veicolo_carreggiata: { __typename?: 'sis__posizione_finale_veicolo_carreggiata', id: number, nome?: string | null | undefined } }>, posizioni_finali_veicolo_fuori_sede: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_fuori_sede', id: number, posizione_finale_veicolo_fuori_sede: { __typename?: 'sis__posizione_finale_veicolo_fuori_sede', id: number, nome?: string | null | undefined } }>, posizioni_finali_veicolo_margini: Array<{ __typename?: 'sis_associazione_posizione_finale_veicolo_margini', id: number, posizione_finale_veicolo_margini: { __typename?: 'sis__posizione_finale_veicolo_margini', id: number, nome?: string | null | undefined } }>, proprietari: Array<{ __typename?: 'sis_proprietario', id: number }>, proprietari_giuridico: Array<{ __typename?: 'sis_proprietario_giuridico', id: number }>, conducenti: Array<{ __typename?: 'sis_conducente', id: number, patente: Array<{ __typename?: 'sis_associazione_patente', id: number, patente_categoria: { __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined } }> }>, testimoni: Array<{ __typename?: 'sis_testimone', id: number }>, tipologie_ris: Array<{ __typename?: 'sis_associazione_tipologia_ris', id: number, tipologia: { __typename?: 'sis__tipologia_ris', id: number, nome?: string | null | undefined } }>, trasportati: Array<{ __typename?: 'sis_trasportato', id: number }>, infortunati: Array<{ __typename?: 'sis_infortunato', id: number, informazioni: Array<{ __typename?: 'sis_associazione_informazioni_infortunato', id: number, informazione: { __typename?: 'sis__infortunato_informazione', id: number, nome?: string | null | undefined } }> }>, veicoli: Array<{ __typename?: 'sis_veicolo', id: number, trasportati: Array<{ __typename?: 'sis_trasportati_veicolo', id: number, trasportato: { __typename?: 'sis_trasportato', id: number } }> }>, verbali: Array<{ __typename?: 'sis_verbale', id: number }> } } | null | undefined };

export type DeleteRisMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteRisMutation = { __typename?: 'mutation_root', delete_sis_ris?: { __typename?: 'sis_ris_mutation_response', affected_rows: number } | null | undefined };

export type AlimentazioneVeicoloSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type AlimentazioneVeicoloSelectQuery = { __typename?: 'query_root', sis__alimentazione_veicolo: Array<{ __typename?: 'sis__alimentazione_veicolo', id: number, nome: string }> };

export type CondizioniMeteoVisibilitaLimitataTipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type CondizioniMeteoVisibilitaLimitataTipologiaSelectQuery = { __typename?: 'query_root', sis__condizioni_meteo_visibilita_limitata_tipologia: Array<{ __typename?: 'sis__condizioni_meteo_visibilita_limitata_tipologia', id: number, nome: string }> };

export type ConseguenzaVeicoloSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type ConseguenzaVeicoloSelectQuery = { __typename?: 'query_root', sis__conseguenza_veicolo: Array<{ __typename?: 'sis__conseguenza_veicolo', id: number, nome?: string | null | undefined }> };

export type DecessiTipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type DecessiTipologiaSelectQuery = { __typename?: 'query_root', sis__decessi_tipologia: Array<{ __typename?: 'sis__decessi_tipologia', id: number, nome: string }> };

export type DestinazioneDecisioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type DestinazioneDecisioneSelectQuery = { __typename?: 'query_root', sis__destinazione_decisione: Array<{ __typename?: 'sis__destinazione_decisione', id: number, nome: string }> };

export type EnteSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type EnteSelectQuery = { __typename?: 'query_root', sis__ente: Array<{ __typename?: 'sis__ente', id: number, nome?: string | null | undefined, abbreviazione?: string | null | undefined, label_tipo?: string | null | undefined }> };

export type TrasportatoPosizioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TrasportatoPosizioneSelectQuery = { __typename?: 'query_root', sis__trasportato_posizione: Array<{ __typename?: 'sis__trasportato_posizione', id: number, nome: string }> };

export type InfortunatoTrasportatoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type InfortunatoTrasportatoSelectQuery = { __typename?: 'query_root', sis__intortunato_tasportato: Array<{ __typename?: 'sis__intortunato_tasportato', id: number, nome: string }> };

export type TrasportatoStatoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TrasportatoStatoSelectQuery = { __typename?: 'query_root', sis__trasportato_stato: Array<{ __typename?: 'sis__trasportato_stato', id: number, nome: string }> };

export type EnteSecondarioSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type EnteSecondarioSelectQuery = { __typename?: 'query_root', sis__ente_secondario: Array<{ __typename?: 'sis__ente_secondario', id: number, nome?: string | null | undefined }> };

export type ImpiantoSemaforicoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type ImpiantoSemaforicoSelectQuery = { __typename?: 'query_root', sis__impianto_semaforico: Array<{ __typename?: 'sis__impianto_semaforico', id: number, nome?: string | null | undefined }> };

export type InfortunatoInformazioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type InfortunatoInformazioneSelectQuery = { __typename?: 'query_root', sis__infortunato_informazione: Array<{ __typename?: 'sis__infortunato_informazione', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneAltroSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneAltroSelectQuery = { __typename?: 'query_root', sis__localizzazione_altro: Array<{ __typename?: 'sis__localizzazione_altro', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneCondizioniAtmosfericheSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneCondizioniAtmosfericheSelectQuery = { __typename?: 'query_root', sis__localizzazione_condizioni_atmosferiche: Array<{ __typename?: 'sis__localizzazione_condizioni_atmosferiche', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneCondizioniTrafficoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneCondizioniTrafficoSelectQuery = { __typename?: 'query_root', sis__localizzazione_condizioni_traffico: Array<{ __typename?: 'sis__localizzazione_condizioni_traffico', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneExtraAbitatoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneExtraAbitatoSelectQuery = { __typename?: 'query_root', sis__localizzazione_extra_abitato: Array<{ __typename?: 'sis__localizzazione_extra_abitato', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneFondoStradaleSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneFondoStradaleSelectQuery = { __typename?: 'query_root', sis__localizzazione_fondo_stradale: Array<{ __typename?: 'sis__localizzazione_fondo_stradale', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneIlluminazioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneIlluminazioneSelectQuery = { __typename?: 'query_root', sis__localizzazione_illuminazione: Array<{ __typename?: 'sis__localizzazione_illuminazione', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneParticolaritaStradaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneParticolaritaStradaSelectQuery = { __typename?: 'query_root', sis__localizzazione_particolarita_strada: Array<{ __typename?: 'sis__localizzazione_particolarita_strada', id: number, nome?: string | null | undefined }> };

export type LocalizzazionePavimentazioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazionePavimentazioneSelectQuery = { __typename?: 'query_root', sis__localizzazione_pavimentazione: Array<{ __typename?: 'sis__localizzazione_pavimentazione', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneTipoStradaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneTipoStradaSelectQuery = { __typename?: 'query_root', sis__localizzazione_tipo_strada: Array<{ __typename?: 'sis__localizzazione_tipo_strada', id: number, nome?: string | null | undefined }> };

export type LocalizzazioneVisibilitaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type LocalizzazioneVisibilitaSelectQuery = { __typename?: 'query_root', sis__localizzazione_visibilita: Array<{ __typename?: 'sis__localizzazione_visibilita', id: number, nome?: string | null | undefined }> };

export type NaturaIncidenteSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type NaturaIncidenteSelectQuery = { __typename?: 'query_root', sis__natura_incidente: Array<{ __typename?: 'sis__natura_incidente', id: number, nome?: string | null | undefined }> };

export type PatenteCategoriaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type PatenteCategoriaSelectQuery = { __typename?: 'query_root', sis__patente_categoria: Array<{ __typename?: 'sis__patente_categoria', id: number, nome?: string | null | undefined }> };

export type PosizioneFinaleVeicoloCarreggiataSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type PosizioneFinaleVeicoloCarreggiataSelectQuery = { __typename?: 'query_root', sis__posizione_finale_veicolo_carreggiata: Array<{ __typename?: 'sis__posizione_finale_veicolo_carreggiata', id: number, nome?: string | null | undefined }> };

export type PosizioneFinaleVeicoloFuoriSedeSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type PosizioneFinaleVeicoloFuoriSedeSelectQuery = { __typename?: 'query_root', sis__posizione_finale_veicolo_fuori_sede: Array<{ __typename?: 'sis__posizione_finale_veicolo_fuori_sede', id: number, nome?: string | null | undefined }> };

export type PosizioneFinaleVeicoloMarginiSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type PosizioneFinaleVeicoloMarginiSelectQuery = { __typename?: 'query_root', sis__posizione_finale_veicolo_margini: Array<{ __typename?: 'sis__posizione_finale_veicolo_margini', id: number, nome?: string | null | undefined }> };

export type PuntiRilieviNoTipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type PuntiRilieviNoTipologiaSelectQuery = { __typename?: 'query_root', sis__punti_rilievi_no_tipologia: Array<{ __typename?: 'sis__punti_rilievi_no_tipologia', id: number, nome: string }> };

export type RetrovisoreEsternoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type RetrovisoreEsternoSelectQuery = { __typename?: 'query_root', sis__retrovisore_esterno: Array<{ __typename?: 'sis__retrovisore_esterno', id: number, nome: string }> };

export type RisConsegnatoASelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type RisConsegnatoASelectQuery = { __typename?: 'query_root', sis__ris_consegnato_a: Array<{ __typename?: 'sis__ris_consegnato_a', id: number, nome: string }> };

export type StatoVeicoloSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type StatoVeicoloSelectQuery = { __typename?: 'query_root', sis__stato_veicolo: Array<{ __typename?: 'sis__stato_veicolo', id: number, nome: string }> };

export type TipologiaRisSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TipologiaRisSelectQuery = { __typename?: 'query_root', sis__tipologia_ris: Array<{ __typename?: 'sis__tipologia_ris', id: number, nome?: string | null | undefined }> };

export type TipologiaVeicoloSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TipologiaVeicoloSelectQuery = { __typename?: 'query_root', sis__tipologia_veicolo: Array<{ __typename?: 'sis__tipologia_veicolo', id: number, nome?: string | null | undefined }> };

export type TipologiaVerbaleSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TipologiaVerbaleSelectQuery = { __typename?: 'query_root', sis__tipologia_verbale: Array<{ __typename?: 'sis__tipologia_verbale', id: number, nome?: string | null | undefined }> };

export type TracciaSuoloFrenataTipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TracciaSuoloFrenataTipologiaSelectQuery = { __typename?: 'query_root', sis__traccia_suolo_frenata_tipologia: Array<{ __typename?: 'sis__traccia_suolo_frenata_tipologia', id: number, nome: string }> };

export type TracciaSuoloTerminazioneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TracciaSuoloTerminazioneSelectQuery = { __typename?: 'query_root', sis__traccia_suolo_terminazione: Array<{ __typename?: 'sis__traccia_suolo_terminazione', id: number, nome: string }> };

export type TracciaSuoloTerminazioneAndamentoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TracciaSuoloTerminazioneAndamentoSelectQuery = { __typename?: 'query_root', sis__traccia_suolo_terminazione_andamento: Array<{ __typename?: 'sis__traccia_suolo_terminazione_andamento', id: number, nome?: string | null | undefined }> };

export type TracciaSuoloTerminazioneFormaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TracciaSuoloTerminazioneFormaSelectQuery = { __typename?: 'query_root', sis__traccia_suolo_terminazione_forma: Array<{ __typename?: 'sis__traccia_suolo_terminazione_forma', id: number, nome?: string | null | undefined }> };

export type TracciaSuoloTerminazioneIntensitaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TracciaSuoloTerminazioneIntensitaSelectQuery = { __typename?: 'query_root', sis__traccia_suolo_terminazione_intensita: Array<{ __typename?: 'sis__traccia_suolo_terminazione_intensita', id: number, nome?: string | null | undefined }> };

export type TracciaSuoloTerminazioneTipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TracciaSuoloTerminazioneTipologiaSelectQuery = { __typename?: 'query_root', sis__traccia_suolo_terminazione_tipologia: Array<{ __typename?: 'sis__traccia_suolo_terminazione_tipologia', id: number, nome?: string | null | undefined }> };

export type TracciaSuoloTipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TracciaSuoloTipologiaSelectQuery = { __typename?: 'query_root', sis__traccia_suolo_tipologia: Array<{ __typename?: 'sis__traccia_suolo_tipologia', id: number, nome: string }> };

export type UnitaOperativaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type UnitaOperativaSelectQuery = { __typename?: 'query_root', sis_unita_operativa: Array<{ __typename?: 'sis_unita_operativa', id: number, nome?: string | null | undefined, note?: string | null | undefined, civico?: string | null | undefined, toponimo?: any | null | undefined, membri: Array<{ __typename?: 'sis_assegnazione_unita_operativa', membro: any }> }> };

export type UsoVeicoloSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type UsoVeicoloSelectQuery = { __typename?: 'query_root', sis__uso_veicolo: Array<{ __typename?: 'sis__uso_veicolo', id: number, nome: string }> };

export type VisibilitaLimitataTipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type VisibilitaLimitataTipologiaSelectQuery = { __typename?: 'query_root', sis__visibilita_limitata_tipologia: Array<{ __typename?: 'sis__visibilita_limitata_tipologia', id: number, nome?: string | null | undefined }> };

export type ConducenteSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Conducente_Bool_Exp>;
}>;


export type ConducenteSelectQuery = { __typename?: 'query_root', sis_conducente: Array<{ __typename?: 'sis_conducente', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined }> };

export type LocatarioSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Locatario_Bool_Exp>;
}>;


export type LocatarioSelectQuery = { __typename?: 'query_root', sis_locatario: Array<{ __typename?: 'sis_locatario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined }> };

export type PedoneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Pedone_Bool_Exp>;
}>;


export type PedoneSelectQuery = { __typename?: 'query_root', sis_pedone: Array<{ __typename?: 'sis_pedone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined }> };

export type ProprietarioSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Proprietario_Bool_Exp>;
}>;


export type ProprietarioSelectQuery = { __typename?: 'query_root', sis_proprietario: Array<{ __typename?: 'sis_proprietario', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined }> };

export type ProprietarioGiuridicoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Proprietario_Giuridico_Bool_Exp>;
}>;


export type ProprietarioGiuridicoSelectQuery = { __typename?: 'query_root', sis_proprietario_giuridico: Array<{ __typename?: 'sis_proprietario_giuridico', id: number, ragione_sociale?: string | null | undefined, partita_iva?: string | null | undefined, codice_fiscale?: string | null | undefined, citta_altro?: string | null | undefined, citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined }> };

export type TestimoneSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Testimone_Bool_Exp>;
}>;


export type TestimoneSelectQuery = { __typename?: 'query_root', sis_testimone: Array<{ __typename?: 'sis_testimone', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined }> };

export type TrasportatoSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Trasportato_Bool_Exp>;
}>;


export type TrasportatoSelectQuery = { __typename?: 'query_root', sis_trasportato: Array<{ __typename?: 'sis_trasportato', id: number, nome?: string | null | undefined, cognome?: string | null | undefined, nascita_data?: any | null | undefined, nascita_citta_altro?: string | null | undefined, titolo?: { __typename?: '_titolo', nome: string } | null | undefined, nascita_citta?: { __typename?: '_citta', citta?: string | null | undefined, p_abbreviazione?: string | null | undefined } | null | undefined }> };

export type VeicoloSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  where?: Maybe<Sis_Veicolo_Bool_Exp>;
}>;


export type VeicoloSelectQuery = { __typename?: 'query_root', sis_veicolo: Array<{ __typename?: 'sis_veicolo', id: number, colore_carrozzeria?: string | null | undefined, marca?: string | null | undefined, modello?: string | null | undefined, targa?: string | null | undefined, telaio?: string | null | undefined, nazione?: { __typename?: '_nazione', nome?: string | null | undefined } | null | undefined }> };

export type UnitaOperativeSubscriptionVariables = Exact<{
  where?: Maybe<Sis_Unita_Operativa_Bool_Exp>;
}>;


export type UnitaOperativeSubscription = { __typename?: 'subscription_root', sis_unita_operativa: Array<{ __typename?: 'sis_unita_operativa', id: number, nome?: string | null | undefined, note?: string | null | undefined, toponimo?: any | null | undefined, civico?: string | null | undefined, updated_at: any, vecchie_denominazioni: Array<{ __typename?: 'sis_vecchia_unita_operativa', nome?: string | null | undefined, created_at: any }>, membri: Array<{ __typename?: 'sis_assegnazione_unita_operativa', id: number, caposquadra: boolean, inizio_validita: any, fine_validita?: any | null | undefined, membro: any }> }> };

export type UpdateUnitaOperativaMutationVariables = Exact<{
  objects?: Maybe<Array<Sis_Unita_Operativa_Insert_Input> | Sis_Unita_Operativa_Insert_Input>;
}>;


export type UpdateUnitaOperativaMutation = { __typename?: 'mutation_root', insert_sis_unita_operativa?: { __typename?: 'sis_unita_operativa_mutation_response', affected_rows: number } | null | undefined };

export type DeleteUnitaOperativaMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteUnitaOperativaMutation = { __typename?: 'mutation_root', delete_sis_unita_operativa?: { __typename?: 'sis_unita_operativa_mutation_response', affected_rows: number } | null | undefined };

export type MunicipalitaSubscriptionVariables = Exact<{
  where?: Maybe<Toponomastica_Municipalita_Bool_Exp>;
}>;


export type MunicipalitaSubscription = { __typename?: 'subscription_root', toponomastica_municipalita: Array<{ __typename?: 'toponomastica_municipalita', id: number, nome: string, updated_at: any, vecchie_denominazioni: Array<{ __typename?: 'toponomastica_vecchia_municipalita', nome: string, created_at: any }>, quartieri: Array<{ __typename?: 'toponomastica_assegnazione_quartiere', id: number, inizio_validita: any, fine_validita?: any | null | undefined, quartiere: { __typename?: 'toponomastica_quartiere', id: number, nome: string } }> }> };

export type UpdateMunicipalitaMutationVariables = Exact<{
  municipalita?: Maybe<Array<Toponomastica_Municipalita_Insert_Input> | Toponomastica_Municipalita_Insert_Input>;
}>;


export type UpdateMunicipalitaMutation = { __typename?: 'mutation_root', insert_toponomastica_municipalita?: { __typename?: 'toponomastica_municipalita_mutation_response', affected_rows: number } | null | undefined };

export type DeleteMunicipalitaMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteMunicipalitaMutation = { __typename?: 'mutation_root', delete_toponomastica_municipalita?: { __typename?: 'toponomastica_municipalita_mutation_response', affected_rows: number } | null | undefined };

export type QuartieriSubscriptionVariables = Exact<{
  where?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
}>;


export type QuartieriSubscription = { __typename?: 'subscription_root', toponomastica_quartiere: Array<{ __typename?: 'toponomastica_quartiere', id: number, nome: string, updated_at: any, vecchie_denominazioni: Array<{ __typename?: 'toponomastica_vecchio_quartiere', nome: string, created_at: any }>, municipalita: Array<{ __typename?: 'toponomastica_assegnazione_quartiere', id: number, inizio_validita: any, fine_validita?: any | null | undefined, municipalita: { __typename?: 'toponomastica_municipalita', id: number, nome: string } }> }> };

export type UpdateQuartiereMutationVariables = Exact<{
  quartiere?: Maybe<Array<Toponomastica_Quartiere_Insert_Input> | Toponomastica_Quartiere_Insert_Input>;
}>;


export type UpdateQuartiereMutation = { __typename?: 'mutation_root', insert_toponomastica_quartiere?: { __typename?: 'toponomastica_quartiere_mutation_response', affected_rows: number } | null | undefined };

export type DeleteQuartiereMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteQuartiereMutation = { __typename?: 'mutation_root', delete_toponomastica_quartiere?: { __typename?: 'toponomastica_quartiere_mutation_response', affected_rows: number } | null | undefined };

export type MunicipalitaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type MunicipalitaSelectQuery = { __typename?: 'query_root', toponomastica_municipalita: Array<{ __typename?: 'toponomastica_municipalita', id: number, nome: string }> };

export type QuartiereSelectQueryVariables = Exact<{
  where?: Maybe<Toponomastica_Quartiere_Bool_Exp>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
}>;


export type QuartiereSelectQuery = { __typename?: 'query_root', toponomastica_quartiere: Array<{ __typename?: 'toponomastica_quartiere', id: number, nome: string, municipalita: Array<{ __typename?: 'toponomastica_assegnazione_quartiere', municipalita_id: number }> }> };

export type ToponimoSelectQueryVariables = Exact<{
  where?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
}>;


export type ToponimoSelectQuery = { __typename?: 'query_root', toponomastica_toponimo: Array<{ __typename?: 'toponomastica_toponimo', id: number, nome: string, codice?: string | null | undefined, dug?: { __typename?: 'toponomastica_dug', id: number, nome: string } | null | undefined, assegnazioni: Array<{ __typename?: 'toponomastica_assegnazione_toponimo', quartiere_id: number }> }> };

export type DugSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type DugSelectQuery = { __typename?: 'query_root', toponomastica_dug: Array<{ __typename?: 'toponomastica_dug', id: number, nome: string }> };

export type ToponimoNomeSelectQueryVariables = Exact<{
  _in: Array<Scalars['String']> | Scalars['String'];
}>;


export type ToponimoNomeSelectQuery = { __typename?: 'query_root', toponomastica_toponimo: Array<{ __typename?: 'toponomastica_toponimo', nome: string, dug?: { __typename?: 'toponomastica_dug', id: number, nome: string } | null | undefined }> };

export type TipologiaSelectQueryVariables = Exact<{
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  nome?: Maybe<String_Comparison_Exp>;
}>;


export type TipologiaSelectQuery = { __typename?: 'query_root', toponomastica_tipologia: Array<{ __typename?: 'toponomastica_tipologia', id: number, nome: string }> };

export type ToponimiSubscriptionVariables = Exact<{
  where?: Maybe<Toponomastica_Toponimo_Bool_Exp>;
}>;


export type ToponimiSubscription = { __typename?: 'subscription_root', toponomastica_toponimo: Array<{ __typename?: 'toponomastica_toponimo', id: number, nome: string, codice?: string | null | undefined, updated_at?: any | null | undefined, dug?: { __typename?: 'toponomastica_dug', id: number, nome: string } | null | undefined, tipologia?: { __typename?: 'toponomastica_tipologia', id: number, nome: string } | null | undefined, vecchie_denominazioni: Array<{ __typename?: 'toponomastica_vecchio_toponimo', nome: string, codice?: string | null | undefined, created_at: any, dug?: { __typename?: 'toponomastica_dug', nome: string } | null | undefined, tipologia?: { __typename?: 'toponomastica_tipologia', nome: string } | null | undefined }>, assegnazioni: Array<{ __typename?: 'toponomastica_assegnazione_toponimo', id: number, inizio_validita: any, fine_validita?: any | null | undefined, municipalita: { __typename?: 'toponomastica_municipalita', id: number, nome: string }, quartiere: { __typename?: 'toponomastica_quartiere', id: number, nome: string } }> }> };

export type UpdateToponimoMutationVariables = Exact<{
  toponimo?: Maybe<Array<Toponomastica_Toponimo_Insert_Input> | Toponomastica_Toponimo_Insert_Input>;
}>;


export type UpdateToponimoMutation = { __typename?: 'mutation_root', insert_toponomastica_toponimo?: { __typename?: 'toponomastica_toponimo_mutation_response', affected_rows: number } | null | undefined };

export type DeleteToponimoMutationVariables = Exact<{
  id: Scalars['Int'];
}>;


export type DeleteToponimoMutation = { __typename?: 'mutation_root', delete_toponomastica_toponimo?: { __typename?: 'toponomastica_toponimo_mutation_response', affected_rows: number } | null | undefined };

export const AgcosImportDocument = gql`
    subscription AgcosImport {
  agcos_import(limit: 1) {
    updated_at
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class AgcosImportGQL extends Apollo.Subscription<AgcosImportSubscription, AgcosImportSubscriptionVariables> {
    document = AgcosImportDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const AgcosDocument = gql`
    subscription Agcos {
  agcos_agcos {
    civico
    costi_sostenuti
    created_at
    data_sinistro
    esiste_citazione
    esiste_risarcimento
    esito_sentenza
    esiste_sentenza
    id
    indicazione_approssimativa
    latitudine
    longitudine
    altro
    causa
    danno_cose
    danno_persone
    elemento
    presenza_acqua
    presenza_foglie
    scarsa_illuminazione_naturale
    scarsa_illuminazione_pubblica
    toponimo {
      id
      nome
      codice
      dug {
        id
        nome
      }
      tipologia {
        id
        nome
      }
      assegnazioni(where: {fine_validita: {_is_null: true}}) {
        municipalita {
          id
          nome
        }
        quartiere {
          id
          nome
        }
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class AgcosGQL extends Apollo.Subscription<AgcosSubscription, AgcosSubscriptionVariables> {
    document = AgcosDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const CiviciSelectDocument = gql`
    query CiviciSelect($fk_t_code: String_comparison_exp = {}, $limit: Int = 10, $offset: Int = 0, $civico1: String_comparison_exp = {}) {
  gis_civico(
    where: {fk_t_code: $fk_t_code, civico1: $civico1}
    limit: $limit
    offset: $offset
  ) {
    id
    civico1
    geom
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class CiviciSelectGQL extends Apollo.Query<CiviciSelectQuery, CiviciSelectQueryVariables> {
    document = CiviciSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SostegniIpiSelectDocument = gql`
    query SostegniIpiSelect($fk_t_code: String_comparison_exp = {}, $limit: Int = 10, $offset: Int = 0, $matricola: String_comparison_exp = {}) {
  gis_sostegno_ipi(
    where: {fk_t_code: $fk_t_code, matricola: $matricola}
    limit: $limit
    offset: $offset
  ) {
    id
    matricola
    geom
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SostegniIpiSelectGQL extends Apollo.Query<SostegniIpiSelectQuery, SostegniIpiSelectQueryVariables> {
    document = SostegniIpiSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ConnessioniGrafoSelectDocument = gql`
    query ConnessioniGrafoSelect($fk_t_code: String_comparison_exp = {}, $limit: Int = 10, $offset: Int = 0) {
  gis_connessione_grafo(
    where: {fk_t_code: $fk_t_code}
    limit: $limit
    offset: $offset
  ) {
    id
    fk_t_code
    geom
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ConnessioniGrafoSelectGQL extends Apollo.Query<ConnessioniGrafoSelectQuery, ConnessioniGrafoSelectQueryVariables> {
    document = ConnessioniGrafoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SpecificaPosizionamentoToponimoSelectDocument = gql`
    query SpecificaPosizionamentoToponimoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  gis__specifica_posizionamento_toponimo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SpecificaPosizionamentoToponimoSelectGQL extends Apollo.Query<SpecificaPosizionamentoToponimoSelectQuery, SpecificaPosizionamentoToponimoSelectQueryVariables> {
    document = SpecificaPosizionamentoToponimoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TipologiaPosizionamentoToponimoSelectDocument = gql`
    query TipologiaPosizionamentoToponimoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  gis__tipologia_posizionamento_toponimo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TipologiaPosizionamentoToponimoSelectGQL extends Apollo.Query<TipologiaPosizionamentoToponimoSelectQuery, TipologiaPosizionamentoToponimoSelectQueryVariables> {
    document = TipologiaPosizionamentoToponimoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DiarioDocument = gql`
    subscription Diario($id: Int!) {
  pis_diario(where: {segnalazione_id: {_eq: $id}}, order_by: {created_at: desc}) {
    created_at
    messaggio
    allegato
    utente
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DiarioGQL extends Apollo.Subscription<DiarioSubscription, DiarioSubscriptionVariables> {
    document = DiarioDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const InsertDiarioDocument = gql`
    mutation InsertDiario($objects: [pis_diario_insert_input!] = {}) {
  insert_pis_diario(objects: $objects) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class InsertDiarioGQL extends Apollo.Mutation<InsertDiarioMutation, InsertDiarioMutationVariables> {
    document = InsertDiarioDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const InsertAllegatoDiarioDocument = gql`
    mutation InsertAllegatoDiario($objects: json!) {
  insert_allegato_diario(objects: $objects) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class InsertAllegatoDiarioGQL extends Apollo.Mutation<InsertAllegatoDiarioMutation, InsertAllegatoDiarioMutationVariables> {
    document = InsertAllegatoDiarioDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const InterventiStraordinariDocument = gql`
    subscription InterventiStraordinari($where: pis_intervento_straordinario_bool_exp = {}) {
  pis_intervento_straordinario(where: $where) {
    id
    municipalita_storica
    quartiere_storico
    toponimo_storico
    posizionamento_toponimo_punto_iniziale {
      id
      tipologia {
        id
        nome
      }
      specifica {
        id
        nome
      }
      civico
      ipi
      km
      connessione
      note
      geoloc
    }
    posizionamento_toponimo_punto_finale {
      id
      tipologia {
        id
        nome
      }
      specifica {
        id
        nome
      }
      civico
      ipi
      km
      connessione
      note
      geoloc
    }
    data_inserimento
    priorita {
      id
      nome
    }
    data_inizio_lavori
    data_fine_lavori
    tipologia_intervento
    lavori_effettuati
    stato
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class InterventiStraordinariGQL extends Apollo.Subscription<InterventiStraordinariSubscription, InterventiStraordinariSubscriptionVariables> {
    document = InterventiStraordinariDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const InterventoStraordinarioDocument = gql`
    query InterventoStraordinario($where: pis_intervento_straordinario_bool_exp!) {
  pis_intervento_straordinario(where: $where) {
    id
    municipalita {
      id
      nome
    }
    quartiere {
      id
      nome
      municipalita {
        municipalita_id
      }
    }
    toponimo {
      id
      nome
      dug {
        id
        nome
      }
      codice
      assegnazioni {
        quartiere_id
      }
    }
    municipalita_storica
    quartiere_storico
    toponimo_storico
    posizionamento_toponimo_punto_iniziale {
      id
      tipologia {
        id
        nome
      }
      specifica {
        id
        nome
      }
      civico
      ipi
      km
      connessione
      note
      geoloc
    }
    posizionamento_toponimo_punto_finale {
      id
      tipologia {
        id
        nome
      }
      specifica {
        id
        nome
      }
      civico
      ipi
      km
      connessione
      note
      geoloc
    }
    data_inserimento
    priorita {
      id
      nome
    }
    data_inizio_lavori
    data_fine_lavori
    tipologia_intervento
    lavori_effettuati
    stato
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class InterventoStraordinarioGQL extends Apollo.Query<InterventoStraordinarioQuery, InterventoStraordinarioQueryVariables> {
    document = InterventoStraordinarioDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateInterventoStraordinarioDocument = gql`
    mutation UpdateInterventoStraordinario($on_conflict: json!, $intervento_straordinario: json!) {
  custom_insert_intervento_straordinario(
    intervento_straordinario: $intervento_straordinario
    on_conflict: $on_conflict
  ) {
    intervento_straordinario {
      id
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateInterventoStraordinarioGQL extends Apollo.Mutation<UpdateInterventoStraordinarioMutation, UpdateInterventoStraordinarioMutationVariables> {
    document = UpdateInterventoStraordinarioDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteInterventoStraordinarioDocument = gql`
    mutation DeleteInterventoStraordinario($id: Int!) {
  delete_pis_intervento_straordinario(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteInterventoStraordinarioGQL extends Apollo.Mutation<DeleteInterventoStraordinarioMutation, DeleteInterventoStraordinarioMutationVariables> {
    document = DeleteInterventoStraordinarioDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SegnalazioniDocument = gql`
    subscription Segnalazioni($where: pis_segnalazione_bool_exp = {}) {
  pis_segnalazione(where: $where) {
    id
    municipalita_id
    quartiere_id
    toponimo_id
    municipalita_storica
    quartiere_storico
    toponimo_storico
    data
    tecnico_referente {
      id
      nome
      cognome
      titolo {
        id
        nome
      }
    }
    priorita {
      id
      nome
    }
    protocollo {
      note
      numero
      mittente {
        id
        codice
        settore
        servizio
        uoc
        uos
        postazione
        nome
      }
      id
      destinatari {
        id
        e_esterno
        destinatario_interno {
          id
          codice
          settore
          servizio
          uoc
          uos
          postazione
          nome
        }
        destinatario_esterno {
          id
          cognome
          email
          codice_fiscale
          nome
        }
      }
      data
    }
    stato
    richiesta_protezione_civile
    dissesto {
      id
      note
      peso
      prima_dimensione
      profondita
      seconda_dimensione
      terza_dimensione
      tipologia {
        id
        nome
        intervento
      }
      forma {
        id
        nome
      }
    }
    posizionamento_toponimo_punto_iniziale {
      civico
      connessione
      geoloc
      id
      ipi
      km
      note
      specifica {
        id
        nome
      }
      tipologia {
        id
        nome
      }
    }
    diario {
      id
      messaggio
      allegato
      utente
    }
    segnalazioni_collegate {
      segnalazione {
        id
        created_at
        protocollo {
          data
          numero
        }
        stato
      }
    }
    eventi {
      stato
      note
      squadra {
        nome
      }
      protocollo {
        numero
        data
        note
      }
      created_at
      risolutore {
        protocollo {
          numero
          data
        }
      }
    }
    intervento {
      id
      assistenza_pm
      condizioni_traffico {
        nome
        id
      }
      attrezzature_impiegate {
        id
        nome
        quantita
      }
      data_fine_lavori
      data_inizio_lavori
      difformita
      dissesto_difforme
      giorni_trascorsi {
        id
        nome
      }
      materiali_dissesto {
        id
        materiale {
          id
          nome
        }
        quantita
        altro
      }
      segnaletica_lasciata {
        id
        nome
        quantita
      }
      note
      veicoli_impiegati {
        id
        targa
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SegnalazioniGQL extends Apollo.Subscription<SegnalazioniSubscription, SegnalazioniSubscriptionVariables> {
    document = SegnalazioniDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SegnalazioneDocument = gql`
    query Segnalazione($where: pis_segnalazione_bool_exp!) {
  pis_segnalazione(where: $where) {
    id
    municipalita {
      id
      nome
    }
    quartiere {
      id
      nome
      municipalita {
        municipalita_id
      }
    }
    toponimo {
      id
      nome
      dug {
        id
        nome
      }
      codice
      assegnazioni {
        quartiere_id
      }
    }
    municipalita_storica
    quartiere_storico
    toponimo_storico
    data
    tecnico_referente {
      id
      nome
      cognome
      titolo {
        id
        nome
      }
    }
    priorita {
      id
      nome
    }
    protocollo {
      note
      numero
      mittente {
        id
        codice
        settore
        servizio
        uoc
        uos
        postazione
        nome
      }
      id
      destinatari {
        id
        e_esterno
        destinatario_interno {
          id
          codice
          settore
          servizio
          uoc
          uos
          postazione
          nome
        }
        destinatario_esterno {
          id
          cognome
          email
          codice_fiscale
          nome
        }
      }
      data
    }
    stato
    richiesta_protezione_civile
    dissesto {
      id
      note
      peso
      prima_dimensione
      profondita
      seconda_dimensione
      terza_dimensione
      tipologia {
        id
        nome
        intervento
      }
      forma {
        id
        nome
      }
    }
    posizionamento_toponimo_punto_iniziale {
      civico
      connessione
      geoloc
      id
      ipi
      km
      note
      specifica {
        id
        nome
      }
      tipologia {
        id
        nome
      }
    }
    diario {
      id
      messaggio
      allegato
      utente
    }
    segnalazioni_collegate {
      segnalazione {
        id
        created_at
        protocollo {
          data
          numero
        }
        stato
      }
    }
    eventi {
      stato
      note
      squadra {
        nome
      }
      protocollo {
        numero
        data
        note
      }
      created_at
      risolutore {
        protocollo {
          numero
          data
        }
      }
    }
    intervento {
      id
      assistenza_pm
      condizioni_traffico {
        nome
        id
      }
      attrezzature_impiegate {
        id
        nome
        quantita
      }
      data_fine_lavori
      data_inizio_lavori
      difformita
      dissesto_difforme
      giorni_trascorsi {
        id
        nome
      }
      materiali_dissesto {
        id
        materiale {
          id
          nome
        }
        quantita
        altro
      }
      segnaletica_lasciata {
        id
        nome
        quantita
      }
      note
      veicoli_impiegati {
        id
        targa
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SegnalazioneGQL extends Apollo.Query<SegnalazioneQuery, SegnalazioneQueryVariables> {
    document = SegnalazioneDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateSegnalazioneDocument = gql`
    mutation UpdateSegnalazione($on_conflict: json!, $segnalazione: json!) {
  custom_insert_segnalazione(
    on_conflict: $on_conflict
    segnalazione: $segnalazione
  ) {
    segnalazione {
      id
      protocollo {
        destinatari {
          id
          destinatario_esterno {
            id
          }
        }
      }
      segnalazioni_collegate {
        segnalazione {
          id
        }
      }
      intervento {
        attrezzature_impiegate {
          id
        }
        materiali_dissesto {
          id
        }
        segnaletica_lasciata {
          id
        }
        veicoli_impiegati {
          id
        }
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateSegnalazioneGQL extends Apollo.Mutation<UpdateSegnalazioneMutation, UpdateSegnalazioneMutationVariables> {
    document = UpdateSegnalazioneDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteSegnalazioneDocument = gql`
    mutation DeleteSegnalazione($id: Int!) {
  delete_pis_segnalazione(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteSegnalazioneGQL extends Apollo.Mutation<DeleteSegnalazioneMutation, DeleteSegnalazioneMutationVariables> {
    document = DeleteSegnalazioneDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const StatoSegnalazioneSelectDocument = gql`
    query StatoSegnalazioneSelect($limit: Int = 10, $offset: Int = 0, $where: pis__stato_segnalazione_bool_exp = {}) {
  pis__stato_segnalazione(
    order_by: {text: asc}
    limit: $limit
    offset: $offset
    where: $where
  ) {
    text
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class StatoSegnalazioneSelectGQL extends Apollo.Query<StatoSegnalazioneSelectQuery, StatoSegnalazioneSelectQueryVariables> {
    document = StatoSegnalazioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const PrioritaSelectDocument = gql`
    query PrioritaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  pis__priorita(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class PrioritaSelectGQL extends Apollo.Query<PrioritaSelectQuery, PrioritaSelectQueryVariables> {
    document = PrioritaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const FormaDissesoSelectDocument = gql`
    query FormaDissesoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  pis__forma_dissesto(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class FormaDissesoSelectGQL extends Apollo.Query<FormaDissesoSelectQuery, FormaDissesoSelectQueryVariables> {
    document = FormaDissesoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TipologiaDissesoSelectDocument = gql`
    query TipologiaDissesoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  pis__tipologia_dissesto(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
    intervento
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TipologiaDissesoSelectGQL extends Apollo.Query<TipologiaDissesoSelectQuery, TipologiaDissesoSelectQueryVariables> {
    document = TipologiaDissesoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SegnalazioneSelectDocument = gql`
    query SegnalazioneSelect($limit: Int = 10, $offset: Int = 0, $where: pis_segnalazione_bool_exp = {}) {
  pis_segnalazione(
    order_by: {protocollo: {numero: asc}}
    limit: $limit
    offset: $offset
    where: $where
  ) {
    id
    created_at
    protocollo {
      numero
      data
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SegnalazioneSelectGQL extends Apollo.Query<SegnalazioneSelectQuery, SegnalazioneSelectQueryVariables> {
    document = SegnalazioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SquadrePisSelectDocument = gql`
    query SquadrePisSelect($limit: Int = 10, $offset: Int = 0, $where: pis_squadra_bool_exp = {}) {
  pis_squadra(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: $where
  ) {
    id
    nome
    protezione_civile
    membri(
      where: {_and: {caposquadra: {_eq: true}, fine_validita: {_is_null: true}}}
    ) {
      membro
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SquadrePisSelectGQL extends Apollo.Query<SquadrePisSelectQuery, SquadrePisSelectQueryVariables> {
    document = SquadrePisSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const CondizioniTrafficoSelectDocument = gql`
    query CondizioniTrafficoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  pis__condizioni_traffico(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class CondizioniTrafficoSelectGQL extends Apollo.Query<CondizioniTrafficoSelectQuery, CondizioniTrafficoSelectQueryVariables> {
    document = CondizioniTrafficoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const GiorniTrascorsiSelectDocument = gql`
    query GiorniTrascorsiSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  pis__giorni_trascorsi(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class GiorniTrascorsiSelectGQL extends Apollo.Query<GiorniTrascorsiSelectQuery, GiorniTrascorsiSelectQueryVariables> {
    document = GiorniTrascorsiSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const MaterialeSelectDocument = gql`
    query MaterialeSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  pis__materiale(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class MaterialeSelectGQL extends Apollo.Query<MaterialeSelectQuery, MaterialeSelectQueryVariables> {
    document = MaterialeSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SquadrePisDocument = gql`
    subscription SquadrePis($where: pis_squadra_bool_exp = {}) {
  pis_squadra(where: $where) {
    id
    nome
    protezione_civile
    updated_at
    vecchie_denominazioni(order_by: {created_at: desc}) {
      nome
      created_at
    }
    membri(order_by: {fine_validita: desc_nulls_first}) {
      id
      caposquadra
      inizio_validita
      fine_validita
      membro
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SquadrePisGQL extends Apollo.Subscription<SquadrePisSubscription, SquadrePisSubscriptionVariables> {
    document = SquadrePisDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateSquadraPisDocument = gql`
    mutation UpdateSquadraPis($squadra: [pis_squadra_insert_input!] = {}) {
  insert_pis_squadra(
    on_conflict: {constraint: squadra_pkey, update_columns: [nome, protezione_civile]}
    objects: $squadra
  ) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateSquadraPisGQL extends Apollo.Mutation<UpdateSquadraPisMutation, UpdateSquadraPisMutationVariables> {
    document = UpdateSquadraPisDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteSquadraPisDocument = gql`
    mutation DeleteSquadraPis($id: Int!) {
  delete_pis_squadra(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteSquadraPisGQL extends Apollo.Mutation<DeleteSquadraPisMutation, DeleteSquadraPisMutationVariables> {
    document = DeleteSquadraPisDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const GeneraProtocolloDocument = gql`
    mutation GeneraProtocollo($data: ProtocolloInput = {destinatariEsterni: {}, destinatariInterni: {}, note: "", oggetto: ""}) {
  genera_protocollo(data: $data) {
    message
    number
    error
    datetime
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class GeneraProtocolloGQL extends Apollo.Mutation<GeneraProtocolloMutation, GeneraProtocolloMutationVariables> {
    document = GeneraProtocolloDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SezioneProtocolloSelectDocument = gql`
    query SezioneProtocolloSelect($where: protocollo__sezione_protocollo_bool_exp = {}, $limit: Int = 10, $offset: Int = 0) {
  protocollo__sezione_protocollo(
    order_by: {nome: asc}
    where: $where
    limit: $limit
    offset: $offset
  ) {
    id
    codice
    settore
    servizio
    uoc
    uos
    postazione
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SezioneProtocolloSelectGQL extends Apollo.Query<SezioneProtocolloSelectQuery, SezioneProtocolloSelectQueryVariables> {
    document = SezioneProtocolloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const CittaSelectDocument = gql`
    query CittaSelect($limit: Int = 10, $offset: Int = 0, $citta: String_comparison_exp = {}) {
  _citta(
    order_by: {ordine: asc}
    limit: $limit
    offset: $offset
    where: {citta: $citta}
  ) {
    id
    citta
    regione
    provincia
    p_abbreviazione
    codice
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class CittaSelectGQL extends Apollo.Query<CittaSelectQuery, CittaSelectQueryVariables> {
    document = CittaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const NazioneSelectDocument = gql`
    query NazioneSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  _nazione(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class NazioneSelectGQL extends Apollo.Query<NazioneSelectQuery, NazioneSelectQueryVariables> {
    document = NazioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TitoloSelectDocument = gql`
    query TitoloSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  _titolo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TitoloSelectGQL extends Apollo.Query<TitoloSelectQuery, TitoloSelectQueryVariables> {
    document = TitoloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SiNoAltroSelectDocument = gql`
    query SiNoAltroSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  _sinoaltro(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SiNoAltroSelectGQL extends Apollo.Query<SiNoAltroSelectQuery, SiNoAltroSelectQueryVariables> {
    document = SiNoAltroSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const SessoSelectDocument = gql`
    query SessoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  _sesso(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class SessoSelectGQL extends Apollo.Query<SessoSelectQuery, SessoSelectQueryVariables> {
    document = SessoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const RissDocument = gql`
    subscription Riss($where: sis_ris_bool_exp = {}) {
  sis_ris(where: $where) {
    id
    unita_operativa {
      id
      nome
    }
    agenti_accertatori {
      id
      username
      agente
    }
    infortunati {
      cognome
      conducente {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
      }
      cura_da_parte
      danni_lamentati
      id
      informazioni {
        id
        informazione {
          id
          nome
        }
      }
      nascita_citta_altro
      nascita_citta {
        citta
        id
        codice
        provincia
        p_abbreviazione
        regione
      }
      nascita_data
      nome
      telefono
      ospedale_altro
      ospedale_diagnosi
      ospedale_prognosi
      ospedale_referto
      ospedale_referto_rilasciato_da
      ospedale_ricoverato
      pedone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
      }
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      rifiuta_cure_immediate
      scheda_118
      sesso {
        id
        nome
      }
      titolo {
        id
        nome
      }
      trasportato {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
      }
      trasportato_ambulanza {
        id
        nome
      }
      trasportato_richiesta
      trasportato_targa_auto
      veicolo {
        id
        marca
        modello
        targa
      }
    }
    municipalita_id
    toponimo_id
    quartiere_id
    municipalita_storica
    quartiere_storico
    toponimo_storico
    accertamenti {
      centro_abitato
      condizioni_meteo_illuminazione
      condizioni_meteo_tempo
      condizioni_meteo_visibilita_limitata
      condizioni_meteo_visibilita_limitata_tipologia {
        id
        condizioni_meteo_visibilita_limitata_tipologia {
          id
          nome
        }
      }
      condizioni_meteo_visibilita_limitata_tipologia_metri
      data
      descrizione_piano_note
      descrizione_piano_pavimentazione
      descrizione_piano_stato_fondo
      direzione_a
      direzione_da
      id
      segnaletica
      tipologia_strada_carreggiate
      tipologia_strada_carreggiate_n
      tipologia_strada_conformazione
      traffico
    }
    altri {
      id
      note
    }
    altro
    conducenti {
      cap_numero
      cap_rilasciata_da_ddt
      cap_rilasciata_da_ddt_data
      cap_tipo
      cognome
      id
      nascita_citta {
        citta
        codice
        p_abbreviazione
        id
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      osservazioni_note
      patente_altro_note
      patente_categoria_altro
      patente_numero
      patente_prescrizioni
      patente_rilasciata_da
      patente_rilasciata_da_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      patente_rilasciata_data
      patente_rilasciata_valida_data
      patente_sinoaltro {
        id
        nome
      }
      professione
      prova_etilometro
      prova_etilometro_esito
      prova_narcotest
      prova_narcotest_esito
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      richiesta_esami
      richiesta_esami_effettuati_presso
      sesso {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
      patente {
        id
        patente_categoria {
          id
          nome
        }
      }
    }
    conseguenza_veicolo_note
    conseguenze_veicolo {
      id
      conseguenza_veicolo {
        nome
        id
      }
    }
    data
    data_intervento
    data_presunta
    data_segnalazione
    decessi_certificato
    decessi_certificato_redattore
    decessi_certificato_redattore_in_servizio
    decessi_certificato_redattore_recapito
    decessi_intervento_polizia_mortuaria
    decessi_note
    decessi_notiziato_pm
    decessi_numero
    decessi_oggetti_rinvenuti
    decessi_successivo_data
    decessi_tipologie {
      id
      decessi_tipologia {
        id
        nome
      }
    }
    decessi_trasporto_salme_data
    decessi_trasporto_salme_presso
    decessi_verbale_riconoscimento_salma
    dinamica
    ente_primo_intervento_note
    ente_secondario_intervenuti_altro
    ente_secondario_intervenuti_motivazione
    ente_secondario_intervenuti_vvff_capo_pattuglia
    ente_secondario_intervenuti_vvff_comando
    ente_secondario_intervenuti_vvff_gia_intervenuti
    ente_segnalatore_note
    enti_primo_intervento {
      id
      targa_auto
      tipo
      ente {
        label_tipo
        nome
        id
      }
    }
    enti_secondario_intervenuti {
      id
      ente_secondario {
        id
        nome
      }
    }
    enti_segnalatori {
      id
      ente {
        id
        label_tipo
        nome
        abbreviazione
      }
    }
    eventi {
      stato
      note
      motivazione_cancellazione
      protocollo {
        numero
        data
        note
      }
      created_at
      cancellatore
    }
    impianti_semaforici {
      id
      impianto_semaforico {
        id
        nome
      }
    }
    impianto_semaforico_note
    infrazioni {
      verbale_n
      verbale_data
      art_80_data
      art_80_dtt
      articolo
      conducente {
        cognome
        id
        nascita_citta {
          citta
          codice
          p_abbreviazione
          id
          provincia
          regione
        }
        nascita_citta_altro
        nascita_data
        nome
        patente_altro_note
        patente_categoria_altro
        patente_numero
        patente_prescrizioni
        patente_rilasciata_da
        patente_rilasciata_da_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        patente_rilasciata_data
        patente_rilasciata_valida_data
        patente_sinoaltro {
          id
          nome
        }
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        sesso {
          id
          nome
        }
        telefono
        titolo {
          id
          nome
        }
        patente {
          id
          patente_categoria {
            id
            nome
          }
        }
      }
      data_trasmissione_rapporto
      id
      note
      pedone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      uffici_provinciale
      utg_prefettura
      veicolo {
        id
        colore_carrozzeria
        marca
        modello
        nazione {
          nome
        }
        targa
        telaio
      }
    }
    localizzazione_altro_note
    localizzazione_condizioni_atmosferiche_note
    localizzazione_condizioni_traffico_note
    localizzazione_extra_abitato_note
    localizzazione_fondo_stradale_note
    localizzazione_illuminazione_note
    localizzazione_note
    localizzazione_particolarita_strada_note
    localizzazione_pavimentazione_note
    localizzazione_tipo_strada_note
    localizzazione_visibilita_note
    localizzazioni_altro {
      id
      localizzazione_altro {
        id
        nome
      }
    }
    localizzazioni_condizioni_atmosferiche {
      id
      localizzazione_condizioni_atmosferiche {
        id
        nome
      }
    }
    localizzazioni_condizioni_traffico {
      id
      localizzazione_condizioni_traffico {
        id
        nome
      }
    }
    localizzazioni_extra_abitato {
      id
      localizzazione_extra_abitato {
        id
        nome
      }
    }
    localizzazioni_fondo_stradale {
      id
      localizzazione_fondo_stradale {
        id
        nome
      }
    }
    localizzazioni_illuminazione {
      id
      localizzazione_illuminazione {
        id
        nome
      }
    }
    localizzazioni_particolarita_strada {
      id
      localizzazione_particolarita_strada {
        id
        nome
      }
    }
    localizzazioni_pavimentazione {
      id
      localizzazione_pavimentazione {
        id
        nome
      }
    }
    localizzazioni_tipo_strade {
      id
      localizzazione_tipo_strada {
        id
        nome
      }
    }
    localizzazioni_visibilita {
      id
      localizzazione_visibilita {
        nome
        id
      }
    }
    locatari {
      id
      nome
      cognome
      titolo {
        id
        nome
      }
      sesso {
        id
        nome
      }
      telefono
      residente_indirizzo
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      nascita_data
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
    }
    natura_incidente_note
    nature_incidente {
      id
      natura_incidente {
        id
        nome
      }
    }
    note_intervento
    operazione_terminate_data
    pedoni {
      id
      nome
      cognome
      titolo {
        nome
        id
      }
      nascita_data
      nascita_citta {
        citta
        p_abbreviazione
        codice
        provincia
        regione
        id
      }
      nascita_citta_altro
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        id
        citta
        codice
        p_abbreviazione
        provincia
        regione
      }
      documento_rilasciato_data
      documento_tipo
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
    }
    posizionamento_toponimo {
      civico
      connessione
      geoloc
      id
      ipi
      km
      note
      specifica {
        id
        nome
      }
      tipologia {
        id
        nome
      }
    }
    posizione_finale_veicolo_carreggiata_note
    posizione_finale_veicolo_fuori_sede_note
    posizione_finale_veicolo_margini_note
    posizione_statica_descrizione_analitica
    posizione_statica_rilievi
    posizione_statica_rilievi_no_tipologia {
      id
      nome
    }
    posizione_statica_rilievi_veicoli_rimossi
    posizioni_finali_veicolo_carreggiata {
      id
      posizione_finale_veicolo_carreggiata {
        id
        nome
      }
    }
    posizioni_finali_veicolo_fuori_sede {
      id
      posizione_finale_veicolo_fuori_sede {
        id
        nome
      }
    }
    posizioni_finali_veicolo_margini {
      id
      posizione_finale_veicolo_margini {
        id
        nome
      }
    }
    proprietari {
      cognome
      id
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
    }
    proprietari_giuridico {
      citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      citta_altro
      codice_fiscale
      id
      indirizzo
      partita_iva
      ragione_sociale
      telefono
    }
    protocollo {
      note
      numero
      mittente {
        id
        codice
        settore
        servizio
        uoc
        uos
        postazione
        nome
      }
      id
      destinatari {
        id
        e_esterno
        destinatario_interno {
          id
          codice
          settore
          servizio
          uoc
          uos
          postazione
          nome
        }
        destinatario_esterno {
          id
          cognome
          email
          codice_fiscale
          nome
        }
      }
      data
    }
    punti_descrizione_analitica
    punti_investimento
    punti_investimento_multiplo
    punti_rilievi
    punti_rilievi_no_tipologia {
      id
      nome
    }
    punti_urto
    punti_urto_accorda
    punti_urto_multiplo
    punti_urto_note
    ris_consegnato_a {
      id
      nome
    }
    ris_consegnato_a_altro
    ris_consegnato_data
    stato
    testimoni {
      cognome
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        citta
        codice
        id
        p_abbreviazione
        regione
        provincia
      }
      documento_rilasciato_data
      documento_tipo
      id
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      residente_citta {
        citta
        codice
        ordine
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
    }
    tipologie_ris {
      id
      tipologia {
        id
        nome
      }
    }
    trasportati {
      accertamento_attivazione_airbag
      accertamento_uso_casco
      accertamento_uso_cintura
      accertamento_uso_sistema_bambini
      cognome
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      documento_rilasciato_data
      documento_tipo
      id
      nascita_citta {
        codice
        citta
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      posizione {
        id
        nome
      }
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_citta_id
      residente_indirizzo
      sesso {
        id
        nome
      }
      stato {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
    }
    veicoli {
      accertamenti_abs
      accertamenti_attivazione
      accertamenti_uso_casco_altro_note
      accertamenti_uso_casco_sinoaltro {
        id
        nome
      }
      accertamenti_uso_cintura_altro_note
      accertamenti_uso_cintura_sinoaltro {
        id
        nome
      }
      accertamento_uso_antiabbandono_sinoaltro {
        id
        nome
      }
      accertamento_uso_antiabbandono_altro_note
      accertamento_uso_sistema_bambini_altro_note
      accertamento_uso_sistema_bambini_sinoaltro {
        id
        nome
      }
      alimentazione {
        id
        nome
      }
      alimentazione_note
      anno_prima_immatricolazione
      assicurazione_agenzia
      assicurazione_altro_note
      assicurazione_data_fine
      assicurazione_data_inizio
      assicurazione_polizza
      assicurazione_sinoaltro {
        id
        nome
      }
      assicurazione_societa
      carta_circolazione
      carta_circolazione_altro_note
      carta_circolazione_data
      carta_circolazione_ddt
      carta_circolazione_ril
      carta_circolazione_sinoaltro {
        id
        nome
      }
      cilindrata
      codice_merce_pericolasa
      codice_pericolo
      colore_carrozzeria
      conducente {
        cap_numero
        cap_rilasciata_da_ddt
        cap_rilasciata_da_ddt_data
        cap_tipo
        cognome
        id
        nascita_citta {
          citta
          codice
          p_abbreviazione
          id
          provincia
          regione
        }
        nascita_citta_altro
        nascita_data
        nome
        osservazioni_note
        patente_altro_note
        patente_categoria_altro
        patente_numero
        patente_prescrizioni
        patente_rilasciata_da
        patente_rilasciata_da_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        patente_rilasciata_data
        patente_rilasciata_valida_data
        patente_sinoaltro {
          id
          nome
        }
        professione
        prova_etilometro
        prova_etilometro_esito
        prova_narcotest
        prova_narcotest_esito
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        richiesta_esami
        richiesta_esami_effettuati_presso
        sesso {
          id
          nome
        }
        telefono
        titolo {
          id
          nome
        }
        patente {
          id
          patente_categoria {
            id
            nome
          }
        }
      }
      danni_del_veicolo_a_cose
      danni_del_veicolo_a_cose_rilievo
      danni_del_veicolo_a_cose_rilievo_data_fine
      danni_del_veicolo_a_cose_rilievo_data_inizio
      danni_del_veicolo_a_cose_rilievo_difensore
      danni_del_veicolo_a_cose_rilievo_presente
      danni_su_veicolo_constatati
      data_ultima_revisione
      destinazione_data
      destinazione_decisione {
        id
        nome
      }
      destinazione_decisione_altro
      destinazione_decisione_id
      destinazione_persona_affidataria
      destinazione_ritirato
      destinazione_sequestrato
      destinazione_trasportato_presso
      dispositivi_acustici
      dotazione_airbag
      dotazione_cinture
      generale
      id
      impianto_illuminazione
      indicatori_direzione
      km_percorsi
      locatario {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      luci_arresto
      marca
      marcia_inserita
      modello
      nazione {
        id
        nome
      }
      p_c
      p_u
      peso
      posti
      proprietario {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      proprietario_giuridico {
        id
        ragione_sociale
        partita_iva
        codice_fiscale
        citta {
          citta
          p_abbreviazione
        }
        citta_altro
      }
      retrovisore_esterno {
        id
        nome
      }
      stato {
        id
        nome
      }
      stato_pneumatici
      tara
      targa
      telaio
      tipologia_veicolo {
        id
        nome
      }
      tipologia_veicolo_note
      traccia_suolo
      traccia_suolo_abs
      traccia_suolo_frenata_tipologia {
        nome
        id
      }
      traccia_suolo_metri
      traccia_suolo_terminazione {
        id
        nome
      }
      traccia_suolo_terminazione_andamento {
        id
        nome
      }
      traccia_suolo_terminazione_forma {
        id
        nome
      }
      traccia_suolo_terminazione_intensita {
        id
        nome
      }
      traccia_suolo_terminazione_metri
      traccia_suolo_terminazione_tipologia {
        id
        nome
      }
      traccia_suolo_tipologia {
        id
        nome
      }
      trasportati {
        id
        trasportato {
          id
          nome
          cognome
          titolo {
            nome
          }
          nascita_data
          nascita_citta {
            citta
            p_abbreviazione
          }
          nascita_citta_altro
          residente_citta {
            citta
            codice
            id
            p_abbreviazione
            provincia
            regione
          }
          residente_citta_altro
          residente_indirizzo
          documento_numero
          documento_rilasciato_da
          documento_rilasciato_da_citta {
            id
            citta
            codice
            p_abbreviazione
            provincia
            regione
          }
          documento_rilasciato_data
          documento_tipo
          posizione {
            id
            nome
          }
          stato {
            id
            nome
          }
          accertamento_uso_cintura
          accertamento_uso_casco
          accertamento_attivazione_airbag
          accertamento_uso_sistema_bambini
        }
      }
      uso_veicolo {
        id
        nome
      }
      velocita_presunta
    }
    verbali {
      cellulare
      cognome
      veicolo {
        id
        marca
        modello
        targa
      }
      conducente {
        cognome
        id
        nascita_citta {
          citta
          codice
          p_abbreviazione
          id
          provincia
          regione
        }
        nascita_citta_altro
        nascita_data
        nome
        patente_altro_note
        patente_categoria_altro
        patente_numero
        patente_prescrizioni
        patente_rilasciata_da
        patente_rilasciata_da_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        patente_rilasciata_data
        patente_rilasciata_valida_data
        patente_sinoaltro {
          id
          nome
        }
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        sesso {
          id
          nome
        }
        telefono
        titolo {
          id
          nome
        }
        patente {
          id
          patente_categoria {
            id
            nome
          }
        }
      }
      coniugato
      data
      dichiarazione
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      documento_rilasciato_data
      documento_tipo
      id
      locatario {
        id
        nome
        cognome
        titolo {
          nome
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      motivazione_no_sottoscrizione
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      pedone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      professione
      proprietario {
        id
        nome
        cognome
        titolo {
          nome
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
      trasportato {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      testimone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      tipologia_verbale {
        id
        nome
      }
      titolo {
        id
        nome
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class RissGQL extends Apollo.Subscription<RissSubscription, RissSubscriptionVariables> {
    document = RissDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const RisDocument = gql`
    query Ris($where: sis_ris_bool_exp = {}) {
  sis_ris(where: $where) {
    id
    unita_operativa {
      id
      nome
    }
    agenti_accertatori {
      id
      username
      agente
    }
    infortunati {
      cognome
      conducente {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
      }
      cura_da_parte
      danni_lamentati
      id
      informazioni {
        id
        informazione {
          id
          nome
        }
      }
      nascita_citta_altro
      nascita_citta {
        citta
        id
        codice
        provincia
        p_abbreviazione
        regione
      }
      nascita_data
      nome
      telefono
      ospedale_altro
      ospedale_diagnosi
      ospedale_prognosi
      ospedale_referto
      ospedale_referto_rilasciato_da
      ospedale_ricoverato
      pedone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
      }
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      rifiuta_cure_immediate
      scheda_118
      sesso {
        id
        nome
      }
      titolo {
        id
        nome
      }
      trasportato {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
      }
      trasportato_ambulanza {
        id
        nome
      }
      trasportato_richiesta
      trasportato_targa_auto
      veicolo {
        id
        marca
        modello
        targa
      }
    }
    municipalita {
      id
      nome
    }
    quartiere {
      id
      nome
      municipalita {
        municipalita_id
      }
    }
    toponimo {
      id
      nome
      dug {
        id
        nome
      }
      codice
      assegnazioni {
        quartiere_id
      }
    }
    municipalita_storica
    quartiere_storico
    toponimo_storico
    accertamenti {
      centro_abitato
      condizioni_meteo_illuminazione
      condizioni_meteo_tempo
      condizioni_meteo_visibilita_limitata
      condizioni_meteo_visibilita_limitata_tipologia {
        id
        condizioni_meteo_visibilita_limitata_tipologia {
          id
          nome
        }
      }
      condizioni_meteo_visibilita_limitata_tipologia_metri
      data
      descrizione_piano_note
      descrizione_piano_pavimentazione
      descrizione_piano_stato_fondo
      direzione_a
      direzione_da
      id
      segnaletica
      tipologia_strada_carreggiate
      tipologia_strada_carreggiate_n
      tipologia_strada_conformazione
      traffico
    }
    altri {
      id
      note
    }
    altro
    conducenti {
      cap_numero
      cap_rilasciata_da_ddt
      cap_rilasciata_da_ddt_data
      cap_tipo
      cognome
      id
      nascita_citta {
        citta
        codice
        p_abbreviazione
        id
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      osservazioni_note
      patente_altro_note
      patente_categoria_altro
      patente_numero
      patente_prescrizioni
      patente_rilasciata_da
      patente_rilasciata_da_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      patente_rilasciata_data
      patente_rilasciata_valida_data
      patente_sinoaltro {
        id
        nome
      }
      professione
      prova_etilometro
      prova_etilometro_esito
      prova_narcotest
      prova_narcotest_esito
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      richiesta_esami
      richiesta_esami_effettuati_presso
      sesso {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
      patente {
        id
        patente_categoria {
          id
          nome
        }
      }
    }
    conseguenza_veicolo_note
    conseguenze_veicolo {
      id
      conseguenza_veicolo {
        nome
        id
      }
    }
    data
    data_intervento
    data_presunta
    data_segnalazione
    decessi_certificato
    decessi_certificato_redattore
    decessi_certificato_redattore_in_servizio
    decessi_certificato_redattore_recapito
    decessi_intervento_polizia_mortuaria
    decessi_note
    decessi_notiziato_pm
    decessi_numero
    decessi_oggetti_rinvenuti
    decessi_successivo_data
    decessi_tipologie {
      id
      decessi_tipologia {
        id
        nome
      }
    }
    decessi_trasporto_salme_data
    decessi_trasporto_salme_presso
    decessi_verbale_riconoscimento_salma
    dinamica
    ente_primo_intervento_note
    ente_secondario_intervenuti_altro
    ente_secondario_intervenuti_motivazione
    ente_secondario_intervenuti_vvff_capo_pattuglia
    ente_secondario_intervenuti_vvff_comando
    ente_secondario_intervenuti_vvff_gia_intervenuti
    ente_segnalatore_note
    enti_primo_intervento {
      id
      targa_auto
      tipo
      ente {
        label_tipo
        nome
        id
      }
    }
    enti_secondario_intervenuti {
      id
      ente_secondario {
        id
        nome
      }
    }
    enti_segnalatori {
      id
      ente {
        id
        label_tipo
        nome
        abbreviazione
      }
    }
    eventi {
      stato
      note
      motivazione_cancellazione
      protocollo {
        numero
        data
        note
      }
      created_at
      cancellatore
    }
    impianti_semaforici {
      id
      impianto_semaforico {
        id
        nome
      }
    }
    impianto_semaforico_note
    infrazioni {
      verbale_n
      verbale_data
      art_80_data
      art_80_dtt
      articolo
      conducente {
        cognome
        id
        nascita_citta {
          citta
          codice
          p_abbreviazione
          id
          provincia
          regione
        }
        nascita_citta_altro
        nascita_data
        nome
        patente_altro_note
        patente_categoria_altro
        patente_numero
        patente_prescrizioni
        patente_rilasciata_da
        patente_rilasciata_da_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        patente_rilasciata_data
        patente_rilasciata_valida_data
        patente_sinoaltro {
          id
          nome
        }
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        sesso {
          id
          nome
        }
        telefono
        titolo {
          id
          nome
        }
        patente {
          id
          patente_categoria {
            id
            nome
          }
        }
      }
      data_trasmissione_rapporto
      id
      note
      pedone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      uffici_provinciale
      utg_prefettura
      veicolo {
        id
        colore_carrozzeria
        marca
        modello
        nazione {
          nome
        }
        targa
        telaio
      }
    }
    localizzazione_altro_note
    localizzazione_condizioni_atmosferiche_note
    localizzazione_condizioni_traffico_note
    localizzazione_extra_abitato_note
    localizzazione_fondo_stradale_note
    localizzazione_illuminazione_note
    localizzazione_note
    localizzazione_particolarita_strada_note
    localizzazione_pavimentazione_note
    localizzazione_tipo_strada_note
    localizzazione_visibilita_note
    localizzazioni_altro {
      id
      localizzazione_altro {
        id
        nome
      }
    }
    localizzazioni_condizioni_atmosferiche {
      id
      localizzazione_condizioni_atmosferiche {
        id
        nome
      }
    }
    localizzazioni_condizioni_traffico {
      id
      localizzazione_condizioni_traffico {
        id
        nome
      }
    }
    localizzazioni_extra_abitato {
      id
      localizzazione_extra_abitato {
        id
        nome
      }
    }
    localizzazioni_fondo_stradale {
      id
      localizzazione_fondo_stradale {
        id
        nome
      }
    }
    localizzazioni_illuminazione {
      id
      localizzazione_illuminazione {
        id
        nome
      }
    }
    localizzazioni_particolarita_strada {
      id
      localizzazione_particolarita_strada {
        id
        nome
      }
    }
    localizzazioni_pavimentazione {
      id
      localizzazione_pavimentazione {
        id
        nome
      }
    }
    localizzazioni_tipo_strade {
      id
      localizzazione_tipo_strada {
        id
        nome
      }
    }
    localizzazioni_visibilita {
      id
      localizzazione_visibilita {
        nome
        id
      }
    }
    locatari {
      id
      nome
      cognome
      titolo {
        id
        nome
      }
      sesso {
        id
        nome
      }
      telefono
      residente_indirizzo
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      nascita_data
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
    }
    natura_incidente_note
    nature_incidente {
      id
      natura_incidente {
        id
        nome
      }
    }
    note_intervento
    operazione_terminate_data
    pedoni {
      id
      nome
      cognome
      titolo {
        nome
        id
      }
      nascita_data
      nascita_citta {
        citta
        p_abbreviazione
        codice
        provincia
        regione
        id
      }
      nascita_citta_altro
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        id
        citta
        codice
        p_abbreviazione
        provincia
        regione
      }
      documento_rilasciato_data
      documento_tipo
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
    }
    posizionamento_toponimo {
      civico
      connessione
      geoloc
      id
      ipi
      km
      note
      specifica {
        id
        nome
      }
      tipologia {
        id
        nome
      }
    }
    posizione_finale_veicolo_carreggiata_note
    posizione_finale_veicolo_fuori_sede_note
    posizione_finale_veicolo_margini_note
    posizione_statica_descrizione_analitica
    posizione_statica_rilievi
    posizione_statica_rilievi_no_tipologia {
      id
      nome
    }
    posizione_statica_rilievi_veicoli_rimossi
    posizioni_finali_veicolo_carreggiata {
      id
      posizione_finale_veicolo_carreggiata {
        id
        nome
      }
    }
    posizioni_finali_veicolo_fuori_sede {
      id
      posizione_finale_veicolo_fuori_sede {
        id
        nome
      }
    }
    posizioni_finali_veicolo_margini {
      id
      posizione_finale_veicolo_margini {
        id
        nome
      }
    }
    proprietari {
      cognome
      id
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
    }
    proprietari_giuridico {
      citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      citta_altro
      codice_fiscale
      id
      indirizzo
      partita_iva
      ragione_sociale
      telefono
    }
    protocollo {
      note
      numero
      mittente {
        id
        codice
        settore
        servizio
        uoc
        uos
        postazione
        nome
      }
      id
      destinatari {
        id
        e_esterno
        destinatario_interno {
          id
          codice
          settore
          servizio
          uoc
          uos
          postazione
          nome
        }
        destinatario_esterno {
          id
          cognome
          email
          codice_fiscale
          nome
        }
      }
      data
    }
    punti_descrizione_analitica
    punti_investimento
    punti_investimento_multiplo
    punti_rilievi
    punti_rilievi_no_tipologia {
      id
      nome
    }
    punti_urto
    punti_urto_accorda
    punti_urto_multiplo
    punti_urto_note
    ris_consegnato_a {
      id
      nome
    }
    ris_consegnato_a_altro
    ris_consegnato_data
    stato
    testimoni {
      cognome
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        citta
        codice
        id
        p_abbreviazione
        regione
        provincia
      }
      documento_rilasciato_data
      documento_tipo
      id
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      residente_citta {
        citta
        codice
        ordine
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
    }
    tipologie_ris {
      id
      tipologia {
        id
        nome
      }
    }
    trasportati {
      accertamento_attivazione_airbag
      accertamento_uso_casco
      accertamento_uso_cintura
      accertamento_uso_sistema_bambini
      cognome
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      documento_rilasciato_data
      documento_tipo
      id
      nascita_citta {
        codice
        citta
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      posizione {
        id
        nome
      }
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_citta_id
      residente_indirizzo
      sesso {
        id
        nome
      }
      stato {
        id
        nome
      }
      telefono
      titolo {
        id
        nome
      }
    }
    veicoli {
      accertamenti_abs
      accertamenti_attivazione
      accertamenti_uso_casco_altro_note
      accertamenti_uso_casco_sinoaltro {
        id
        nome
      }
      accertamenti_uso_cintura_altro_note
      accertamenti_uso_cintura_sinoaltro {
        id
        nome
      }
      accertamento_uso_antiabbandono_sinoaltro {
        id
        nome
      }
      accertamento_uso_antiabbandono_altro_note
      accertamento_uso_sistema_bambini_altro_note
      accertamento_uso_sistema_bambini_sinoaltro {
        id
        nome
      }
      alimentazione {
        id
        nome
      }
      alimentazione_note
      anno_prima_immatricolazione
      assicurazione_agenzia
      assicurazione_altro_note
      assicurazione_data_fine
      assicurazione_data_inizio
      assicurazione_polizza
      assicurazione_sinoaltro {
        id
        nome
      }
      assicurazione_societa
      carta_circolazione
      carta_circolazione_altro_note
      carta_circolazione_data
      carta_circolazione_ddt
      carta_circolazione_ril
      carta_circolazione_sinoaltro {
        id
        nome
      }
      cilindrata
      codice_merce_pericolasa
      codice_pericolo
      colore_carrozzeria
      conducente {
        cap_numero
        cap_rilasciata_da_ddt
        cap_rilasciata_da_ddt_data
        cap_tipo
        cognome
        id
        nascita_citta {
          citta
          codice
          p_abbreviazione
          id
          provincia
          regione
        }
        nascita_citta_altro
        nascita_data
        nome
        osservazioni_note
        patente_altro_note
        patente_categoria_altro
        patente_numero
        patente_prescrizioni
        patente_rilasciata_da
        patente_rilasciata_da_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        patente_rilasciata_data
        patente_rilasciata_valida_data
        patente_sinoaltro {
          id
          nome
        }
        professione
        prova_etilometro
        prova_etilometro_esito
        prova_narcotest
        prova_narcotest_esito
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        richiesta_esami
        richiesta_esami_effettuati_presso
        sesso {
          id
          nome
        }
        telefono
        titolo {
          id
          nome
        }
        patente {
          id
          patente_categoria {
            id
            nome
          }
        }
      }
      danni_del_veicolo_a_cose
      danni_del_veicolo_a_cose_rilievo
      danni_del_veicolo_a_cose_rilievo_data_fine
      danni_del_veicolo_a_cose_rilievo_data_inizio
      danni_del_veicolo_a_cose_rilievo_difensore
      danni_del_veicolo_a_cose_rilievo_presente
      danni_su_veicolo_constatati
      data_ultima_revisione
      destinazione_data
      destinazione_decisione {
        id
        nome
      }
      destinazione_decisione_altro
      destinazione_decisione_id
      destinazione_persona_affidataria
      destinazione_ritirato
      destinazione_sequestrato
      destinazione_trasportato_presso
      dispositivi_acustici
      dotazione_airbag
      dotazione_cinture
      generale
      id
      impianto_illuminazione
      indicatori_direzione
      km_percorsi
      locatario {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      luci_arresto
      marca
      marcia_inserita
      modello
      nazione {
        id
        nome
      }
      p_c
      p_u
      peso
      posti
      proprietario {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      proprietario_giuridico {
        id
        ragione_sociale
        partita_iva
        codice_fiscale
        citta {
          citta
          p_abbreviazione
        }
        citta_altro
      }
      retrovisore_esterno {
        id
        nome
      }
      stato {
        id
        nome
      }
      stato_pneumatici
      tara
      targa
      telaio
      tipologia_veicolo {
        id
        nome
      }
      tipologia_veicolo_note
      traccia_suolo
      traccia_suolo_abs
      traccia_suolo_frenata_tipologia {
        nome
        id
      }
      traccia_suolo_metri
      traccia_suolo_terminazione {
        id
        nome
      }
      traccia_suolo_terminazione_andamento {
        id
        nome
      }
      traccia_suolo_terminazione_forma {
        id
        nome
      }
      traccia_suolo_terminazione_intensita {
        id
        nome
      }
      traccia_suolo_terminazione_metri
      traccia_suolo_terminazione_tipologia {
        id
        nome
      }
      traccia_suolo_tipologia {
        id
        nome
      }
      trasportati {
        id
        trasportato {
          id
          nome
          cognome
          titolo {
            nome
          }
          nascita_data
          nascita_citta {
            citta
            p_abbreviazione
          }
          nascita_citta_altro
          residente_citta {
            citta
            codice
            id
            p_abbreviazione
            provincia
            regione
          }
          residente_citta_altro
          residente_indirizzo
          documento_numero
          documento_rilasciato_da
          documento_rilasciato_da_citta {
            id
            citta
            codice
            p_abbreviazione
            provincia
            regione
          }
          documento_rilasciato_data
          documento_tipo
          posizione {
            id
            nome
          }
          stato {
            id
            nome
          }
          accertamento_uso_cintura
          accertamento_uso_casco
          accertamento_attivazione_airbag
          accertamento_uso_sistema_bambini
        }
      }
      uso_veicolo {
        id
        nome
      }
      velocita_presunta
    }
    verbali {
      cellulare
      cognome
      veicolo {
        id
        marca
        modello
        targa
      }
      conducente {
        cognome
        id
        nascita_citta {
          citta
          codice
          p_abbreviazione
          id
          provincia
          regione
        }
        nascita_citta_altro
        nascita_data
        nome
        patente_altro_note
        patente_categoria_altro
        patente_numero
        patente_prescrizioni
        patente_rilasciata_da
        patente_rilasciata_da_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        patente_rilasciata_data
        patente_rilasciata_valida_data
        patente_sinoaltro {
          id
          nome
        }
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        sesso {
          id
          nome
        }
        telefono
        titolo {
          id
          nome
        }
        patente {
          id
          patente_categoria {
            id
            nome
          }
        }
      }
      coniugato
      data
      dichiarazione
      documento_numero
      documento_rilasciato_da
      documento_rilasciato_da_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      documento_rilasciato_data
      documento_tipo
      id
      locatario {
        id
        nome
        cognome
        titolo {
          nome
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      motivazione_no_sottoscrizione
      nascita_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      nascita_citta_altro
      nascita_data
      nome
      pedone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      professione
      proprietario {
        id
        nome
        cognome
        titolo {
          nome
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
      }
      residente_citta {
        citta
        codice
        id
        p_abbreviazione
        provincia
        regione
      }
      residente_citta_altro
      residente_indirizzo
      sesso {
        id
        nome
      }
      telefono
      trasportato {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      testimone {
        id
        nome
        cognome
        titolo {
          nome
        }
        nascita_data
        nascita_citta {
          citta
          p_abbreviazione
        }
        sesso {
          id
          nome
        }
        telefono
        nascita_citta_altro
        residente_citta {
          citta
          codice
          id
          p_abbreviazione
          provincia
          regione
        }
        residente_citta_altro
        residente_indirizzo
        documento_numero
        documento_rilasciato_da
        documento_rilasciato_da_citta {
          id
          citta
          codice
          p_abbreviazione
          provincia
          regione
        }
        documento_rilasciato_data
        documento_tipo
      }
      tipologia_verbale {
        id
        nome
      }
      titolo {
        id
        nome
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class RisGQL extends Apollo.Query<RisQuery, RisQueryVariables> {
    document = RisDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateRisDocument = gql`
    mutation UpdateRis($on_conflict: json!, $ris: json!) {
  custom_insert_ris(on_conflict: $on_conflict, ris: $ris) {
    ris {
      id
      agenti_accertatori {
        id
        username
        agente
      }
      protocollo {
        destinatari {
          id
          destinatario_esterno {
            id
          }
        }
      }
      accertamenti {
        id
        condizioni_meteo_visibilita_limitata_tipologia {
          id
          condizioni_meteo_visibilita_limitata_tipologia {
            id
            nome
          }
        }
      }
      altri {
        id
      }
      conseguenze_veicolo {
        id
        conseguenza_veicolo {
          id
          nome
        }
      }
      decessi_tipologie {
        id
        decessi_tipologia {
          id
          nome
        }
      }
      enti_primo_intervento {
        id
      }
      enti_secondario_intervenuti {
        id
        ente_secondario {
          id
          nome
        }
      }
      enti_segnalatori {
        id
        ente {
          id
          nome
        }
      }
      impianti_semaforici {
        id
        impianto_semaforico {
          id
          nome
        }
      }
      infrazioni {
        id
      }
      localizzazioni_altro {
        id
        localizzazione_altro {
          id
          nome
        }
      }
      localizzazioni_condizioni_atmosferiche {
        id
        localizzazione_condizioni_atmosferiche {
          id
          nome
        }
      }
      localizzazioni_condizioni_traffico {
        id
        localizzazione_condizioni_traffico {
          id
          nome
        }
      }
      localizzazioni_extra_abitato {
        id
        localizzazione_extra_abitato {
          id
          nome
        }
      }
      localizzazioni_fondo_stradale {
        id
        localizzazione_fondo_stradale {
          id
          nome
        }
      }
      localizzazioni_illuminazione {
        id
        localizzazione_illuminazione {
          id
          nome
        }
      }
      localizzazioni_particolarita_strada {
        id
        localizzazione_particolarita_strada {
          id
          nome
        }
      }
      localizzazioni_pavimentazione {
        id
        localizzazione_pavimentazione {
          id
          nome
        }
      }
      localizzazioni_tipo_strade {
        id
        localizzazione_tipo_strada {
          id
          nome
        }
      }
      localizzazioni_visibilita {
        id
        localizzazione_visibilita {
          id
          nome
        }
      }
      locatari {
        id
      }
      nature_incidente {
        id
        natura_incidente {
          id
          nome
        }
      }
      pedoni {
        id
      }
      posizioni_finali_veicolo_carreggiata {
        id
        posizione_finale_veicolo_carreggiata {
          id
          nome
        }
      }
      posizioni_finali_veicolo_fuori_sede {
        id
        posizione_finale_veicolo_fuori_sede {
          id
          nome
        }
      }
      posizioni_finali_veicolo_margini {
        id
        posizione_finale_veicolo_margini {
          id
          nome
        }
      }
      proprietari {
        id
      }
      proprietari_giuridico {
        id
      }
      conducenti {
        id
        patente {
          id
          patente_categoria {
            id
            nome
          }
        }
      }
      testimoni {
        id
      }
      tipologie_ris {
        id
        tipologia {
          id
          nome
        }
      }
      trasportati {
        id
      }
      infortunati {
        id
        informazioni {
          id
          informazione {
            id
            nome
          }
        }
      }
      veicoli {
        id
        trasportati {
          id
          trasportato {
            id
          }
        }
      }
      verbali {
        id
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateRisGQL extends Apollo.Mutation<UpdateRisMutation, UpdateRisMutationVariables> {
    document = UpdateRisDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteRisDocument = gql`
    mutation DeleteRis($id: Int!) {
  delete_sis_ris(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteRisGQL extends Apollo.Mutation<DeleteRisMutation, DeleteRisMutationVariables> {
    document = DeleteRisDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const AlimentazioneVeicoloSelectDocument = gql`
    query AlimentazioneVeicoloSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__alimentazione_veicolo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class AlimentazioneVeicoloSelectGQL extends Apollo.Query<AlimentazioneVeicoloSelectQuery, AlimentazioneVeicoloSelectQueryVariables> {
    document = AlimentazioneVeicoloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const CondizioniMeteoVisibilitaLimitataTipologiaSelectDocument = gql`
    query CondizioniMeteoVisibilitaLimitataTipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__condizioni_meteo_visibilita_limitata_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class CondizioniMeteoVisibilitaLimitataTipologiaSelectGQL extends Apollo.Query<CondizioniMeteoVisibilitaLimitataTipologiaSelectQuery, CondizioniMeteoVisibilitaLimitataTipologiaSelectQueryVariables> {
    document = CondizioniMeteoVisibilitaLimitataTipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ConseguenzaVeicoloSelectDocument = gql`
    query ConseguenzaVeicoloSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__conseguenza_veicolo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ConseguenzaVeicoloSelectGQL extends Apollo.Query<ConseguenzaVeicoloSelectQuery, ConseguenzaVeicoloSelectQueryVariables> {
    document = ConseguenzaVeicoloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DecessiTipologiaSelectDocument = gql`
    query DecessiTipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__decessi_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DecessiTipologiaSelectGQL extends Apollo.Query<DecessiTipologiaSelectQuery, DecessiTipologiaSelectQueryVariables> {
    document = DecessiTipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DestinazioneDecisioneSelectDocument = gql`
    query DestinazioneDecisioneSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__destinazione_decisione(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DestinazioneDecisioneSelectGQL extends Apollo.Query<DestinazioneDecisioneSelectQuery, DestinazioneDecisioneSelectQueryVariables> {
    document = DestinazioneDecisioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const EnteSelectDocument = gql`
    query EnteSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__ente(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
    abbreviazione
    label_tipo
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class EnteSelectGQL extends Apollo.Query<EnteSelectQuery, EnteSelectQueryVariables> {
    document = EnteSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TrasportatoPosizioneSelectDocument = gql`
    query TrasportatoPosizioneSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__trasportato_posizione(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TrasportatoPosizioneSelectGQL extends Apollo.Query<TrasportatoPosizioneSelectQuery, TrasportatoPosizioneSelectQueryVariables> {
    document = TrasportatoPosizioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const InfortunatoTrasportatoSelectDocument = gql`
    query InfortunatoTrasportatoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__intortunato_tasportato(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class InfortunatoTrasportatoSelectGQL extends Apollo.Query<InfortunatoTrasportatoSelectQuery, InfortunatoTrasportatoSelectQueryVariables> {
    document = InfortunatoTrasportatoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TrasportatoStatoSelectDocument = gql`
    query TrasportatoStatoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__trasportato_stato(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TrasportatoStatoSelectGQL extends Apollo.Query<TrasportatoStatoSelectQuery, TrasportatoStatoSelectQueryVariables> {
    document = TrasportatoStatoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const EnteSecondarioSelectDocument = gql`
    query EnteSecondarioSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__ente_secondario(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class EnteSecondarioSelectGQL extends Apollo.Query<EnteSecondarioSelectQuery, EnteSecondarioSelectQueryVariables> {
    document = EnteSecondarioSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ImpiantoSemaforicoSelectDocument = gql`
    query ImpiantoSemaforicoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__impianto_semaforico(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ImpiantoSemaforicoSelectGQL extends Apollo.Query<ImpiantoSemaforicoSelectQuery, ImpiantoSemaforicoSelectQueryVariables> {
    document = ImpiantoSemaforicoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const InfortunatoInformazioneSelectDocument = gql`
    query InfortunatoInformazioneSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__infortunato_informazione(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class InfortunatoInformazioneSelectGQL extends Apollo.Query<InfortunatoInformazioneSelectQuery, InfortunatoInformazioneSelectQueryVariables> {
    document = InfortunatoInformazioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneAltroSelectDocument = gql`
    query LocalizzazioneAltroSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_altro(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneAltroSelectGQL extends Apollo.Query<LocalizzazioneAltroSelectQuery, LocalizzazioneAltroSelectQueryVariables> {
    document = LocalizzazioneAltroSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneCondizioniAtmosfericheSelectDocument = gql`
    query LocalizzazioneCondizioniAtmosfericheSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_condizioni_atmosferiche(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneCondizioniAtmosfericheSelectGQL extends Apollo.Query<LocalizzazioneCondizioniAtmosfericheSelectQuery, LocalizzazioneCondizioniAtmosfericheSelectQueryVariables> {
    document = LocalizzazioneCondizioniAtmosfericheSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneCondizioniTrafficoSelectDocument = gql`
    query LocalizzazioneCondizioniTrafficoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_condizioni_traffico(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneCondizioniTrafficoSelectGQL extends Apollo.Query<LocalizzazioneCondizioniTrafficoSelectQuery, LocalizzazioneCondizioniTrafficoSelectQueryVariables> {
    document = LocalizzazioneCondizioniTrafficoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneExtraAbitatoSelectDocument = gql`
    query LocalizzazioneExtraAbitatoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_extra_abitato(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneExtraAbitatoSelectGQL extends Apollo.Query<LocalizzazioneExtraAbitatoSelectQuery, LocalizzazioneExtraAbitatoSelectQueryVariables> {
    document = LocalizzazioneExtraAbitatoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneFondoStradaleSelectDocument = gql`
    query LocalizzazioneFondoStradaleSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_fondo_stradale(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneFondoStradaleSelectGQL extends Apollo.Query<LocalizzazioneFondoStradaleSelectQuery, LocalizzazioneFondoStradaleSelectQueryVariables> {
    document = LocalizzazioneFondoStradaleSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneIlluminazioneSelectDocument = gql`
    query LocalizzazioneIlluminazioneSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_illuminazione(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneIlluminazioneSelectGQL extends Apollo.Query<LocalizzazioneIlluminazioneSelectQuery, LocalizzazioneIlluminazioneSelectQueryVariables> {
    document = LocalizzazioneIlluminazioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneParticolaritaStradaSelectDocument = gql`
    query LocalizzazioneParticolaritaStradaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_particolarita_strada(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneParticolaritaStradaSelectGQL extends Apollo.Query<LocalizzazioneParticolaritaStradaSelectQuery, LocalizzazioneParticolaritaStradaSelectQueryVariables> {
    document = LocalizzazioneParticolaritaStradaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazionePavimentazioneSelectDocument = gql`
    query LocalizzazionePavimentazioneSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_pavimentazione(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazionePavimentazioneSelectGQL extends Apollo.Query<LocalizzazionePavimentazioneSelectQuery, LocalizzazionePavimentazioneSelectQueryVariables> {
    document = LocalizzazionePavimentazioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneTipoStradaSelectDocument = gql`
    query LocalizzazioneTipoStradaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_tipo_strada(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneTipoStradaSelectGQL extends Apollo.Query<LocalizzazioneTipoStradaSelectQuery, LocalizzazioneTipoStradaSelectQueryVariables> {
    document = LocalizzazioneTipoStradaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocalizzazioneVisibilitaSelectDocument = gql`
    query LocalizzazioneVisibilitaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__localizzazione_visibilita(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocalizzazioneVisibilitaSelectGQL extends Apollo.Query<LocalizzazioneVisibilitaSelectQuery, LocalizzazioneVisibilitaSelectQueryVariables> {
    document = LocalizzazioneVisibilitaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const NaturaIncidenteSelectDocument = gql`
    query NaturaIncidenteSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__natura_incidente(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class NaturaIncidenteSelectGQL extends Apollo.Query<NaturaIncidenteSelectQuery, NaturaIncidenteSelectQueryVariables> {
    document = NaturaIncidenteSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const PatenteCategoriaSelectDocument = gql`
    query PatenteCategoriaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__patente_categoria(
    order_by: {ordine: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class PatenteCategoriaSelectGQL extends Apollo.Query<PatenteCategoriaSelectQuery, PatenteCategoriaSelectQueryVariables> {
    document = PatenteCategoriaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const PosizioneFinaleVeicoloCarreggiataSelectDocument = gql`
    query PosizioneFinaleVeicoloCarreggiataSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__posizione_finale_veicolo_carreggiata(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class PosizioneFinaleVeicoloCarreggiataSelectGQL extends Apollo.Query<PosizioneFinaleVeicoloCarreggiataSelectQuery, PosizioneFinaleVeicoloCarreggiataSelectQueryVariables> {
    document = PosizioneFinaleVeicoloCarreggiataSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const PosizioneFinaleVeicoloFuoriSedeSelectDocument = gql`
    query PosizioneFinaleVeicoloFuoriSedeSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__posizione_finale_veicolo_fuori_sede(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class PosizioneFinaleVeicoloFuoriSedeSelectGQL extends Apollo.Query<PosizioneFinaleVeicoloFuoriSedeSelectQuery, PosizioneFinaleVeicoloFuoriSedeSelectQueryVariables> {
    document = PosizioneFinaleVeicoloFuoriSedeSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const PosizioneFinaleVeicoloMarginiSelectDocument = gql`
    query PosizioneFinaleVeicoloMarginiSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__posizione_finale_veicolo_margini(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class PosizioneFinaleVeicoloMarginiSelectGQL extends Apollo.Query<PosizioneFinaleVeicoloMarginiSelectQuery, PosizioneFinaleVeicoloMarginiSelectQueryVariables> {
    document = PosizioneFinaleVeicoloMarginiSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const PuntiRilieviNoTipologiaSelectDocument = gql`
    query PuntiRilieviNoTipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__punti_rilievi_no_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class PuntiRilieviNoTipologiaSelectGQL extends Apollo.Query<PuntiRilieviNoTipologiaSelectQuery, PuntiRilieviNoTipologiaSelectQueryVariables> {
    document = PuntiRilieviNoTipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const RetrovisoreEsternoSelectDocument = gql`
    query RetrovisoreEsternoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__retrovisore_esterno(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class RetrovisoreEsternoSelectGQL extends Apollo.Query<RetrovisoreEsternoSelectQuery, RetrovisoreEsternoSelectQueryVariables> {
    document = RetrovisoreEsternoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const RisConsegnatoASelectDocument = gql`
    query RisConsegnatoASelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__ris_consegnato_a(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class RisConsegnatoASelectGQL extends Apollo.Query<RisConsegnatoASelectQuery, RisConsegnatoASelectQueryVariables> {
    document = RisConsegnatoASelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const StatoVeicoloSelectDocument = gql`
    query StatoVeicoloSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__stato_veicolo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class StatoVeicoloSelectGQL extends Apollo.Query<StatoVeicoloSelectQuery, StatoVeicoloSelectQueryVariables> {
    document = StatoVeicoloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TipologiaRisSelectDocument = gql`
    query TipologiaRisSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__tipologia_ris(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TipologiaRisSelectGQL extends Apollo.Query<TipologiaRisSelectQuery, TipologiaRisSelectQueryVariables> {
    document = TipologiaRisSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TipologiaVeicoloSelectDocument = gql`
    query TipologiaVeicoloSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__tipologia_veicolo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TipologiaVeicoloSelectGQL extends Apollo.Query<TipologiaVeicoloSelectQuery, TipologiaVeicoloSelectQueryVariables> {
    document = TipologiaVeicoloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TipologiaVerbaleSelectDocument = gql`
    query TipologiaVerbaleSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__tipologia_verbale(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TipologiaVerbaleSelectGQL extends Apollo.Query<TipologiaVerbaleSelectQuery, TipologiaVerbaleSelectQueryVariables> {
    document = TipologiaVerbaleSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TracciaSuoloFrenataTipologiaSelectDocument = gql`
    query TracciaSuoloFrenataTipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__traccia_suolo_frenata_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TracciaSuoloFrenataTipologiaSelectGQL extends Apollo.Query<TracciaSuoloFrenataTipologiaSelectQuery, TracciaSuoloFrenataTipologiaSelectQueryVariables> {
    document = TracciaSuoloFrenataTipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TracciaSuoloTerminazioneSelectDocument = gql`
    query TracciaSuoloTerminazioneSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__traccia_suolo_terminazione(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TracciaSuoloTerminazioneSelectGQL extends Apollo.Query<TracciaSuoloTerminazioneSelectQuery, TracciaSuoloTerminazioneSelectQueryVariables> {
    document = TracciaSuoloTerminazioneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TracciaSuoloTerminazioneAndamentoSelectDocument = gql`
    query TracciaSuoloTerminazioneAndamentoSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__traccia_suolo_terminazione_andamento(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TracciaSuoloTerminazioneAndamentoSelectGQL extends Apollo.Query<TracciaSuoloTerminazioneAndamentoSelectQuery, TracciaSuoloTerminazioneAndamentoSelectQueryVariables> {
    document = TracciaSuoloTerminazioneAndamentoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TracciaSuoloTerminazioneFormaSelectDocument = gql`
    query TracciaSuoloTerminazioneFormaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__traccia_suolo_terminazione_forma(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TracciaSuoloTerminazioneFormaSelectGQL extends Apollo.Query<TracciaSuoloTerminazioneFormaSelectQuery, TracciaSuoloTerminazioneFormaSelectQueryVariables> {
    document = TracciaSuoloTerminazioneFormaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TracciaSuoloTerminazioneIntensitaSelectDocument = gql`
    query TracciaSuoloTerminazioneIntensitaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__traccia_suolo_terminazione_intensita(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TracciaSuoloTerminazioneIntensitaSelectGQL extends Apollo.Query<TracciaSuoloTerminazioneIntensitaSelectQuery, TracciaSuoloTerminazioneIntensitaSelectQueryVariables> {
    document = TracciaSuoloTerminazioneIntensitaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TracciaSuoloTerminazioneTipologiaSelectDocument = gql`
    query TracciaSuoloTerminazioneTipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__traccia_suolo_terminazione_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TracciaSuoloTerminazioneTipologiaSelectGQL extends Apollo.Query<TracciaSuoloTerminazioneTipologiaSelectQuery, TracciaSuoloTerminazioneTipologiaSelectQueryVariables> {
    document = TracciaSuoloTerminazioneTipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TracciaSuoloTipologiaSelectDocument = gql`
    query TracciaSuoloTipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__traccia_suolo_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TracciaSuoloTipologiaSelectGQL extends Apollo.Query<TracciaSuoloTipologiaSelectQuery, TracciaSuoloTipologiaSelectQueryVariables> {
    document = TracciaSuoloTipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UnitaOperativaSelectDocument = gql`
    query UnitaOperativaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis_unita_operativa(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
    note
    civico
    toponimo
    membri(
      where: {_and: {caposquadra: {_eq: true}, fine_validita: {_is_null: true}}}
    ) {
      membro
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UnitaOperativaSelectGQL extends Apollo.Query<UnitaOperativaSelectQuery, UnitaOperativaSelectQueryVariables> {
    document = UnitaOperativaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UsoVeicoloSelectDocument = gql`
    query UsoVeicoloSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__uso_veicolo(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UsoVeicoloSelectGQL extends Apollo.Query<UsoVeicoloSelectQuery, UsoVeicoloSelectQueryVariables> {
    document = UsoVeicoloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const VisibilitaLimitataTipologiaSelectDocument = gql`
    query VisibilitaLimitataTipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  sis__visibilita_limitata_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class VisibilitaLimitataTipologiaSelectGQL extends Apollo.Query<VisibilitaLimitataTipologiaSelectQuery, VisibilitaLimitataTipologiaSelectQueryVariables> {
    document = VisibilitaLimitataTipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ConducenteSelectDocument = gql`
    query ConducenteSelect($limit: Int = 10, $offset: Int = 0, $where: sis_conducente_bool_exp = {}) {
  sis_conducente(limit: $limit, offset: $offset, where: $where) {
    id
    nome
    cognome
    titolo {
      nome
    }
    nascita_data
    nascita_citta {
      citta
      p_abbreviazione
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ConducenteSelectGQL extends Apollo.Query<ConducenteSelectQuery, ConducenteSelectQueryVariables> {
    document = ConducenteSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const LocatarioSelectDocument = gql`
    query LocatarioSelect($limit: Int = 10, $offset: Int = 0, $where: sis_locatario_bool_exp = {}) {
  sis_locatario(limit: $limit, offset: $offset, where: $where) {
    id
    nome
    cognome
    titolo {
      nome
    }
    nascita_data
    nascita_citta {
      citta
      p_abbreviazione
    }
    nascita_citta_altro
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class LocatarioSelectGQL extends Apollo.Query<LocatarioSelectQuery, LocatarioSelectQueryVariables> {
    document = LocatarioSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const PedoneSelectDocument = gql`
    query PedoneSelect($limit: Int = 10, $offset: Int = 0, $where: sis_pedone_bool_exp = {}) {
  sis_pedone(limit: $limit, offset: $offset, where: $where) {
    id
    nome
    cognome
    titolo {
      nome
    }
    nascita_data
    nascita_citta {
      citta
      p_abbreviazione
    }
    nascita_citta_altro
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class PedoneSelectGQL extends Apollo.Query<PedoneSelectQuery, PedoneSelectQueryVariables> {
    document = PedoneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ProprietarioSelectDocument = gql`
    query ProprietarioSelect($limit: Int = 10, $offset: Int = 0, $where: sis_proprietario_bool_exp = {}) {
  sis_proprietario(limit: $limit, offset: $offset, where: $where) {
    id
    nome
    cognome
    titolo {
      nome
    }
    nascita_data
    nascita_citta {
      citta
      p_abbreviazione
    }
    nascita_citta_altro
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ProprietarioSelectGQL extends Apollo.Query<ProprietarioSelectQuery, ProprietarioSelectQueryVariables> {
    document = ProprietarioSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ProprietarioGiuridicoSelectDocument = gql`
    query ProprietarioGiuridicoSelect($limit: Int = 10, $offset: Int = 0, $where: sis_proprietario_giuridico_bool_exp = {}) {
  sis_proprietario_giuridico(limit: $limit, offset: $offset, where: $where) {
    id
    ragione_sociale
    partita_iva
    codice_fiscale
    citta {
      citta
      p_abbreviazione
    }
    citta_altro
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ProprietarioGiuridicoSelectGQL extends Apollo.Query<ProprietarioGiuridicoSelectQuery, ProprietarioGiuridicoSelectQueryVariables> {
    document = ProprietarioGiuridicoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TestimoneSelectDocument = gql`
    query TestimoneSelect($limit: Int = 10, $offset: Int = 0, $where: sis_testimone_bool_exp = {}) {
  sis_testimone(limit: $limit, offset: $offset, where: $where) {
    id
    nome
    cognome
    titolo {
      nome
    }
    nascita_data
    nascita_citta {
      citta
      p_abbreviazione
    }
    nascita_citta_altro
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TestimoneSelectGQL extends Apollo.Query<TestimoneSelectQuery, TestimoneSelectQueryVariables> {
    document = TestimoneSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TrasportatoSelectDocument = gql`
    query TrasportatoSelect($limit: Int = 10, $offset: Int = 0, $where: sis_trasportato_bool_exp = {}) {
  sis_trasportato(limit: $limit, offset: $offset, where: $where) {
    id
    nome
    cognome
    titolo {
      nome
    }
    nascita_data
    nascita_citta {
      citta
      p_abbreviazione
    }
    nascita_citta_altro
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TrasportatoSelectGQL extends Apollo.Query<TrasportatoSelectQuery, TrasportatoSelectQueryVariables> {
    document = TrasportatoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const VeicoloSelectDocument = gql`
    query VeicoloSelect($limit: Int = 10, $offset: Int = 0, $where: sis_veicolo_bool_exp = {}) {
  sis_veicolo(limit: $limit, offset: $offset, where: $where) {
    id
    colore_carrozzeria
    marca
    modello
    nazione {
      nome
    }
    targa
    telaio
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class VeicoloSelectGQL extends Apollo.Query<VeicoloSelectQuery, VeicoloSelectQueryVariables> {
    document = VeicoloSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UnitaOperativeDocument = gql`
    subscription UnitaOperative($where: sis_unita_operativa_bool_exp = {}) {
  sis_unita_operativa(where: $where) {
    id
    nome
    note
    toponimo
    civico
    updated_at
    vecchie_denominazioni(order_by: {created_at: desc}) {
      nome
      created_at
    }
    membri(order_by: {fine_validita: desc_nulls_first}) {
      id
      caposquadra
      inizio_validita
      fine_validita
      membro
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UnitaOperativeGQL extends Apollo.Subscription<UnitaOperativeSubscription, UnitaOperativeSubscriptionVariables> {
    document = UnitaOperativeDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateUnitaOperativaDocument = gql`
    mutation UpdateUnitaOperativa($objects: [sis_unita_operativa_insert_input!] = {}) {
  insert_sis_unita_operativa(
    on_conflict: {constraint: unita_operativa_pkey, update_columns: [nome, toponimo, civico, note]}
    objects: $objects
  ) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateUnitaOperativaGQL extends Apollo.Mutation<UpdateUnitaOperativaMutation, UpdateUnitaOperativaMutationVariables> {
    document = UpdateUnitaOperativaDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteUnitaOperativaDocument = gql`
    mutation DeleteUnitaOperativa($id: Int!) {
  delete_sis_unita_operativa(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteUnitaOperativaGQL extends Apollo.Mutation<DeleteUnitaOperativaMutation, DeleteUnitaOperativaMutationVariables> {
    document = DeleteUnitaOperativaDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const MunicipalitaDocument = gql`
    subscription Municipalita($where: toponomastica_municipalita_bool_exp = {}) {
  toponomastica_municipalita(where: $where) {
    id
    nome
    updated_at
    vecchie_denominazioni(order_by: {created_at: desc}) {
      nome
      created_at
    }
    quartieri(order_by: {fine_validita: desc_nulls_first}) {
      id
      inizio_validita
      fine_validita
      quartiere {
        id
        nome
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class MunicipalitaGQL extends Apollo.Subscription<MunicipalitaSubscription, MunicipalitaSubscriptionVariables> {
    document = MunicipalitaDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateMunicipalitaDocument = gql`
    mutation UpdateMunicipalita($municipalita: [toponomastica_municipalita_insert_input!] = {}) {
  insert_toponomastica_municipalita(
    on_conflict: {constraint: municipalita_pkey, update_columns: nome}
    objects: $municipalita
  ) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateMunicipalitaGQL extends Apollo.Mutation<UpdateMunicipalitaMutation, UpdateMunicipalitaMutationVariables> {
    document = UpdateMunicipalitaDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteMunicipalitaDocument = gql`
    mutation DeleteMunicipalita($id: Int!) {
  delete_toponomastica_municipalita(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteMunicipalitaGQL extends Apollo.Mutation<DeleteMunicipalitaMutation, DeleteMunicipalitaMutationVariables> {
    document = DeleteMunicipalitaDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const QuartieriDocument = gql`
    subscription Quartieri($where: toponomastica_quartiere_bool_exp = {}) {
  toponomastica_quartiere(where: $where) {
    id
    nome
    updated_at
    vecchie_denominazioni(order_by: {created_at: desc}) {
      nome
      created_at
    }
    municipalita(order_by: {fine_validita: desc_nulls_first}) {
      id
      inizio_validita
      fine_validita
      municipalita {
        id
        nome
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class QuartieriGQL extends Apollo.Subscription<QuartieriSubscription, QuartieriSubscriptionVariables> {
    document = QuartieriDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateQuartiereDocument = gql`
    mutation UpdateQuartiere($quartiere: [toponomastica_quartiere_insert_input!] = {}) {
  insert_toponomastica_quartiere(
    on_conflict: {constraint: quartiere_pkey, update_columns: nome}
    objects: $quartiere
  ) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateQuartiereGQL extends Apollo.Mutation<UpdateQuartiereMutation, UpdateQuartiereMutationVariables> {
    document = UpdateQuartiereDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteQuartiereDocument = gql`
    mutation DeleteQuartiere($id: Int!) {
  delete_toponomastica_quartiere(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteQuartiereGQL extends Apollo.Mutation<DeleteQuartiereMutation, DeleteQuartiereMutationVariables> {
    document = DeleteQuartiereDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const MunicipalitaSelectDocument = gql`
    query MunicipalitaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  toponomastica_municipalita(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class MunicipalitaSelectGQL extends Apollo.Query<MunicipalitaSelectQuery, MunicipalitaSelectQueryVariables> {
    document = MunicipalitaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const QuartiereSelectDocument = gql`
    query QuartiereSelect($where: toponomastica_quartiere_bool_exp = {}, $limit: Int = 10, $offset: Int = 0) {
  toponomastica_quartiere(
    order_by: {nome: asc}
    where: $where
    limit: $limit
    offset: $offset
  ) {
    id
    nome
    municipalita {
      municipalita_id
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class QuartiereSelectGQL extends Apollo.Query<QuartiereSelectQuery, QuartiereSelectQueryVariables> {
    document = QuartiereSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ToponimoSelectDocument = gql`
    query ToponimoSelect($where: toponomastica_toponimo_bool_exp = {}, $limit: Int = 10, $offset: Int = 0) {
  toponomastica_toponimo(
    order_by: {nome: asc}
    where: $where
    limit: $limit
    offset: $offset
  ) {
    id
    nome
    dug {
      id
      nome
    }
    codice
    assegnazioni {
      quartiere_id
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ToponimoSelectGQL extends Apollo.Query<ToponimoSelectQuery, ToponimoSelectQueryVariables> {
    document = ToponimoSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DugSelectDocument = gql`
    query DugSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  toponomastica_dug(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DugSelectGQL extends Apollo.Query<DugSelectQuery, DugSelectQueryVariables> {
    document = DugSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ToponimoNomeSelectDocument = gql`
    query ToponimoNomeSelect($_in: [String!]!) {
  toponomastica_toponimo(order_by: {nome: asc}, where: {codice: {_in: $_in}}) {
    nome
    dug {
      id
      nome
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ToponimoNomeSelectGQL extends Apollo.Query<ToponimoNomeSelectQuery, ToponimoNomeSelectQueryVariables> {
    document = ToponimoNomeSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const TipologiaSelectDocument = gql`
    query TipologiaSelect($limit: Int = 10, $offset: Int = 0, $nome: String_comparison_exp = {}) {
  toponomastica_tipologia(
    order_by: {nome: asc}
    limit: $limit
    offset: $offset
    where: {nome: $nome}
  ) {
    id
    nome
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class TipologiaSelectGQL extends Apollo.Query<TipologiaSelectQuery, TipologiaSelectQueryVariables> {
    document = TipologiaSelectDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const ToponimiDocument = gql`
    subscription Toponimi($where: toponomastica_toponimo_bool_exp = {}) {
  toponomastica_toponimo(where: $where) {
    id
    dug {
      id
      nome
    }
    nome
    tipologia {
      id
      nome
    }
    codice
    updated_at
    vecchie_denominazioni(order_by: {created_at: desc}) {
      dug {
        nome
      }
      nome
      tipologia {
        nome
      }
      codice
      created_at
    }
    assegnazioni(order_by: {fine_validita: desc_nulls_first}) {
      id
      inizio_validita
      fine_validita
      municipalita {
        id
        nome
      }
      quartiere {
        id
        nome
      }
    }
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class ToponimiGQL extends Apollo.Subscription<ToponimiSubscription, ToponimiSubscriptionVariables> {
    document = ToponimiDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const UpdateToponimoDocument = gql`
    mutation UpdateToponimo($toponimo: [toponomastica_toponimo_insert_input!] = {}) {
  insert_toponomastica_toponimo(
    on_conflict: {constraint: toponimo_pkey, update_columns: [nome, dug_id, tipologia_id]}
    objects: $toponimo
  ) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class UpdateToponimoGQL extends Apollo.Mutation<UpdateToponimoMutation, UpdateToponimoMutationVariables> {
    document = UpdateToponimoDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }
export const DeleteToponimoDocument = gql`
    mutation DeleteToponimo($id: Int!) {
  delete_toponomastica_toponimo(where: {id: {_eq: $id}}) {
    affected_rows
  }
}
    `;

  @Injectable({
    providedIn: 'root'
  })
  export class DeleteToponimoGQL extends Apollo.Mutation<DeleteToponimoMutation, DeleteToponimoMutationVariables> {
    document = DeleteToponimoDocument;
    
    constructor(apollo: Apollo.Apollo) {
      super(apollo);
    }
  }